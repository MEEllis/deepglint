!
function(i) {
    var r = {};
    function n(e) {
        if (r[e]) return r[e].exports;
        var t = r[e] = {
            i: e,
            l: !1,
            exports: {}
        };
        return i[e].call(t.exports, t, t.exports, n),
        t.l = !0,
        t.exports
    }
    n.m = i,
    n.c = r,
    n.d = function(e, t, i) {
        n.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: i
        })
    },
    n.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    },
    n.t = function(t, e) {
        if (1 & e && (t = n(t)), 8 & e) return t;
        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
        var i = Object.create(null);
        if (n.r(i), Object.defineProperty(i, "default", {
            enumerable: !0,
            value: t
        }), 2 & e && "string" != typeof t) for (var r in t) n.d(i, r,
        function(e) {
            return t[e]
        }.bind(null, r));
        return i
    },
    n.n = function(e) {
        var t = e && e.__esModule ?
        function() {
            return e.
        default
        }:
        function() {
            return e
        };
        return n.d(t, "a", t),
        t
    },
    n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    },
    n.p = "./",
    n(n.s = 0)
} ([function(e, t, i) {
    i(1),
    e.exports = i(332)
},
function(e, t, i) {
    "use strict"; (function(e) {
        if (i(3), i(328), i(329), e._babelPolyfill) throw new Error("only one instance of babel-polyfill is allowed");
        e._babelPolyfill = !0;
        function t(e, t, i) {
            e[t] || Object.defineProperty(e, t, {
                writable: !0,
                configurable: !0,
                value: i
            })
        }
        t(String.prototype, "padLeft", "".padStart),
        t(String.prototype, "padRight", "".padEnd),
        "pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function(e) { [][e] && t(Array, e, Function.call.bind([][e]))
        })
    }).call(this, i(2))
},
function(e, t) {
    var i;
    i = function() {
        return this
    } ();
    try {
        i = i || new Function("return this")()
    } catch(e) {
        "object" == typeof window && (i = window)
    }
    e.exports = i
},
function(e, t, i) {
    i(4),
    i(52),
    i(53),
    i(54),
    i(55),
    i(57),
    i(60),
    i(61),
    i(62),
    i(63),
    i(64),
    i(65),
    i(66),
    i(67),
    i(68),
    i(70),
    i(72),
    i(74),
    i(76),
    i(79),
    i(80),
    i(81),
    i(85),
    i(87),
    i(89),
    i(92),
    i(93),
    i(94),
    i(95),
    i(97),
    i(98),
    i(99),
    i(100),
    i(101),
    i(102),
    i(103),
    i(105),
    i(106),
    i(107),
    i(109),
    i(110),
    i(111),
    i(113),
    i(115),
    i(116),
    i(117),
    i(118),
    i(119),
    i(120),
    i(121),
    i(122),
    i(123),
    i(124),
    i(125),
    i(126),
    i(127),
    i(132),
    i(133),
    i(137),
    i(138),
    i(139),
    i(140),
    i(142),
    i(143),
    i(144),
    i(145),
    i(146),
    i(147),
    i(148),
    i(149),
    i(150),
    i(151),
    i(152),
    i(153),
    i(154),
    i(155),
    i(156),
    i(158),
    i(159),
    i(161),
    i(162),
    i(168),
    i(169),
    i(171),
    i(172),
    i(173),
    i(177),
    i(178),
    i(179),
    i(180),
    i(181),
    i(183),
    i(184),
    i(185),
    i(186),
    i(189),
    i(191),
    i(192),
    i(193),
    i(195),
    i(197),
    i(199),
    i(201),
    i(202),
    i(203),
    i(207),
    i(208),
    i(209),
    i(211),
    i(221),
    i(225),
    i(226),
    i(228),
    i(229),
    i(233),
    i(234),
    i(236),
    i(237),
    i(238),
    i(239),
    i(240),
    i(241),
    i(242),
    i(243),
    i(244),
    i(245),
    i(246),
    i(247),
    i(248),
    i(249),
    i(250),
    i(251),
    i(252),
    i(253),
    i(254),
    i(256),
    i(257),
    i(258),
    i(259),
    i(260),
    i(262),
    i(263),
    i(264),
    i(266),
    i(267),
    i(268),
    i(269),
    i(270),
    i(271),
    i(272),
    i(273),
    i(275),
    i(276),
    i(278),
    i(279),
    i(280),
    i(281),
    i(284),
    i(285),
    i(287),
    i(288),
    i(289),
    i(290),
    i(292),
    i(293),
    i(294),
    i(295),
    i(296),
    i(297),
    i(298),
    i(299),
    i(300),
    i(301),
    i(303),
    i(304),
    i(305),
    i(306),
    i(307),
    i(308),
    i(309),
    i(310),
    i(311),
    i(312),
    i(313),
    i(315),
    i(316),
    i(317),
    i(318),
    i(319),
    i(320),
    i(321),
    i(322),
    i(323),
    i(324),
    i(325),
    i(326),
    i(327),
    e.exports = i(10)
},
function(e, t, i) {
    "use strict";
    function r(e) {
        var t = H[e] = x(N[j]);
        return t._k = e,
        t
    }
    function n(e, t) {
        w(e);
        for (var i, r = E(t = A(t)), n = 0, s = r.length; n < s;) Q(e, i = r[n++], t[i]);
        return e
    }
    function s(e) {
        var t = V.call(this, e = R(e, !0));
        return ! (this === q && h(H, e) && !h(K, e)) && (!(t || !h(this, e) || !h(H, e) || h(this, z) && this[z][e]) || t)
    }
    function a(e, t) {
        if (e = A(e), t = R(t, !0), e !== q || !h(H, t) || h(K, t)) {
            var i = P(e, t);
            return ! i || !h(H, t) || h(e, z) && e[z][t] || (i.enumerable = !0),
            i
        }
    }
    function o(e) {
        for (var t, i = F(A(e)), r = [], n = 0; i.length > n;) h(H, t = i[n++]) || t == z || t == p || r.push(t);
        return r
    }
    function l(e) {
        for (var t, i = e === q,
        r = F(i ? K: A(e)), n = [], s = 0; r.length > s;) ! h(H, t = r[s++]) || i && !h(q, t) || n.push(H[t]);
        return n
    }
    var u = i(5),
    h = i(6),
    d = i(7),
    c = i(9),
    f = i(19),
    p = i(23).KEY,
    v = i(8),
    m = i(24),
    _ = i(26),
    g = i(20),
    y = i(27),
    b = i(28),
    S = i(29),
    E = i(30),
    k = i(45),
    w = i(13),
    T = i(14),
    A = i(33),
    R = i(17),
    I = i(18),
    x = i(46),
    O = i(49),
    C = i(51),
    L = i(12),
    D = i(31),
    P = C.f,
    M = L.f,
    F = O.f,
    N = u.Symbol,
    B = u.JSON,
    U = B && B.stringify,
    j = "prototype",
    z = y("_hidden"),
    G = y("toPrimitive"),
    V = {}.propertyIsEnumerable,
    W = m("symbol-registry"),
    H = m("symbols"),
    K = m("op-symbols"),
    q = Object[j],
    Y = "function" == typeof N,
    Z = u.QObject,
    X = !Z || !Z[j] || !Z[j].findChild,
    J = d && v(function() {
        return 7 != x(M({},
        "a", {
            get: function() {
                return M(this, "a", {
                    value: 7
                }).a
            }
        })).a
    }) ?
    function(e, t, i) {
        var r = P(q, t);
        r && delete q[t],
        M(e, t, i),
        r && e !== q && M(q, t, r)
    }: M,
    $ = Y && "symbol" == typeof N.iterator ?
    function(e) {
        return "symbol" == typeof e
    }: function(e) {
        return e instanceof N
    },
    Q = function(e, t, i) {
        return e === q && Q(K, t, i),
        w(e),
        t = R(t, !0),
        w(i),
        h(H, t) ? (i.enumerable ? (h(e, z) && e[z][t] && (e[z][t] = !1), i = x(i, {
            enumerable: I(0, !1)
        })) : (h(e, z) || M(e, z, I(1, {})), e[z][t] = !0), J(e, t, i)) : M(e, t, i)
    };
    Y || (f((N = function(e) {
        if (this instanceof N) throw TypeError("Symbol is not a constructor!");
        var t = g(0 < arguments.length ? e: void 0),
        i = function(e) {
            this === q && i.call(K, e),
            h(this, z) && h(this[z], t) && (this[z][t] = !1),
            J(this, t, I(1, e))
        };
        return d && X && J(q, t, {
            configurable: !0,
            set: i
        }),
        r(t)
    })[j], "toString",
    function() {
        return this._k
    }), C.f = a, L.f = Q, i(50).f = O.f = o, i(44).f = s, i(43).f = l, d && !i(25) && f(q, "propertyIsEnumerable", s, !0), b.f = function(e) {
        return r(y(e))
    }),
    c(c.G + c.W + c.F * !Y, {
        Symbol: N
    });
    for (var ee = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), te = 0; ee.length > te;) y(ee[te++]);
    for (var ie = D(y.store), re = 0; ie.length > re;) S(ie[re++]);
    c(c.S + c.F * !Y, "Symbol", {
        for: function(e) {
            return h(W, e += "") ? W[e] : W[e] = N(e)
        },
        keyFor: function(e) {
            if (!$(e)) throw TypeError(e + " is not a symbol!");
            for (var t in W) if (W[t] === e) return t
        },
        useSetter: function() {
            X = !0
        },
        useSimple: function() {
            X = !1
        }
    }),
    c(c.S + c.F * !Y, "Object", {
        create: function(e, t) {
            return void 0 === t ? x(e) : n(x(e), t)
        },
        defineProperty: Q,
        defineProperties: n,
        getOwnPropertyDescriptor: a,
        getOwnPropertyNames: o,
        getOwnPropertySymbols: l
    }),
    B && c(c.S + c.F * (!Y || v(function() {
        var e = N();
        return "[null]" != U([e]) || "{}" != U({
            a: e
        }) || "{}" != U(Object(e))
    })), "JSON", {
        stringify: function(e) {
            for (var t, i, r = [e], n = 1; n < arguments.length;) r.push(arguments[n++]);
            if (i = t = r[1], (T(t) || void 0 !== e) && !$(e)) return k(t) || (t = function(e, t) {
                if ("function" == typeof i && (t = i.call(this, e, t)), !$(t)) return t
            }),
            r[1] = t,
            U.apply(B, r)
        }
    }),
    N[j][G] || i(11)(N[j], G, N[j].valueOf),
    _(N, "Symbol"),
    _(Math, "Math", !0),
    _(u.JSON, "JSON", !0)
},
function(e, t) {
    var i = e.exports = "undefined" != typeof window && window.Math == Math ? window: "undefined" != typeof self && self.Math == Math ? self: Function("return this")();
    "number" == typeof __g && (__g = i)
},
function(e, t) {
    var i = {}.hasOwnProperty;
    e.exports = function(e, t) {
        return i.call(e, t)
    }
},
function(e, t, i) {
    e.exports = !i(8)(function() {
        return 7 != Object.defineProperty({},
        "a", {
            get: function() {
                return 7
            }
        }).a
    })
},
function(e, t) {
    e.exports = function(e) {
        try {
            return !! e()
        } catch(e) {
            return ! 0
        }
    }
},
function(e, t, i) {
    var v = i(5),
    m = i(10),
    _ = i(11),
    g = i(19),
    y = i(21),
    b = "prototype",
    S = function(e, t, i) {
        var r, n, s, a, o = e & S.F,
        l = e & S.G,
        u = e & S.S,
        h = e & S.P,
        d = e & S.B,
        c = l ? v: u ? v[t] || (v[t] = {}) : (v[t] || {})[b],
        f = l ? m: m[t] || (m[t] = {}),
        p = f[b] || (f[b] = {});
        for (r in l && (i = t), i) s = ((n = !o && c && void 0 !== c[r]) ? c: i)[r],
        a = d && n ? y(s, v) : h && "function" == typeof s ? y(Function.call, s) : s,
        c && g(c, r, s, e & S.U),
        f[r] != s && _(f, r, a),
        h && p[r] != s && (p[r] = s)
    };
    v.core = m,
    S.F = 1,
    S.G = 2,
    S.S = 4,
    S.P = 8,
    S.B = 16,
    S.W = 32,
    S.U = 64,
    S.R = 128,
    e.exports = S
},
function(e, t) {
    var i = e.exports = {
        version: "2.6.1"
    };
    "number" == typeof __e && (__e = i)
},
function(e, t, i) {
    var r = i(12),
    n = i(18);
    e.exports = i(7) ?
    function(e, t, i) {
        return r.f(e, t, n(1, i))
    }: function(e, t, i) {
        return e[t] = i,
        e
    }
},
function(e, t, i) {
    var r = i(13),
    n = i(15),
    s = i(17),
    a = Object.defineProperty;
    t.f = i(7) ? Object.defineProperty: function(e, t, i) {
        if (r(e), t = s(t, !0), r(i), n) try {
            return a(e, t, i)
        } catch(e) {}
        if ("get" in i || "set" in i) throw TypeError("Accessors not supported!");
        return "value" in i && (e[t] = i.value),
        e
    }
},
function(e, t, i) {
    var r = i(14);
    e.exports = function(e) {
        if (!r(e)) throw TypeError(e + " is not an object!");
        return e
    }
},
function(e, t) {
    e.exports = function(e) {
        return "object" == typeof e ? null !== e: "function" == typeof e
    }
},
function(e, t, i) {
    e.exports = !i(7) && !i(8)(function() {
        return 7 != Object.defineProperty(i(16)("div"), "a", {
            get: function() {
                return 7
            }
        }).a
    })
},
function(e, t, i) {
    var r = i(14),
    n = i(5).document,
    s = r(n) && r(n.createElement);
    e.exports = function(e) {
        return s ? n.createElement(e) : {}
    }
},
function(e, t, i) {
    var n = i(14);
    e.exports = function(e, t) {
        if (!n(e)) return e;
        var i, r;
        if (t && "function" == typeof(i = e.toString) && !n(r = i.call(e))) return r;
        if ("function" == typeof(i = e.valueOf) && !n(r = i.call(e))) return r;
        if (!t && "function" == typeof(i = e.toString) && !n(r = i.call(e))) return r;
        throw TypeError("Can't convert object to primitive value")
    }
},
function(e, t) {
    e.exports = function(e, t) {
        return {
            enumerable: !(1 & e),
            configurable: !(2 & e),
            writable: !(4 & e),
            value: t
        }
    }
},
function(e, t, i) {
    var s = i(5),
    a = i(11),
    o = i(6),
    l = i(20)("src"),
    r = "toString",
    n = Function[r],
    u = ("" + n).split(r);
    i(10).inspectSource = function(e) {
        return n.call(e)
    },
    (e.exports = function(e, t, i, r) {
        var n = "function" == typeof i;
        n && (o(i, "name") || a(i, "name", t)),
        e[t] !== i && (n && (o(i, l) || a(i, l, e[t] ? "" + e[t] : u.join(String(t)))), e === s ? e[t] = i: r ? e[t] ? e[t] = i: a(e, t, i) : (delete e[t], a(e, t, i)))
    })(Function.prototype, r,
    function() {
        return "function" == typeof this && this[l] || n.call(this)
    })
},
function(e, t) {
    var i = 0,
    r = Math.random();
    e.exports = function(e) {
        return "Symbol(".concat(void 0 === e ? "": e, ")_", (++i + r).toString(36))
    }
},
function(e, t, i) {
    var s = i(22);
    e.exports = function(r, n, e) {
        if (s(r), void 0 === n) return r;
        switch (e) {
        case 1:
            return function(e) {
                return r.call(n, e)
            };
        case 2:
            return function(e, t) {
                return r.call(n, e, t)
            };
        case 3:
            return function(e, t, i) {
                return r.call(n, e, t, i)
            }
        }
        return function() {
            return r.apply(n, arguments)
        }
    }
},
function(e, t) {
    e.exports = function(e) {
        if ("function" != typeof e) throw TypeError(e + " is not a function!");
        return e
    }
},
function(e, t, i) {
    function r(e) {
        o(e, n, {
            value: {
                i: "O" + ++l,
                w: {}
            }
        })
    }
    var n = i(20)("meta"),
    s = i(14),
    a = i(6),
    o = i(12).f,
    l = 0,
    u = Object.isExtensible ||
    function() {
        return ! 0
    },
    h = !i(8)(function() {
        return u(Object.preventExtensions({}))
    }),
    d = e.exports = {
        KEY: n,
        NEED: !1,
        fastKey: function(e, t) {
            if (!s(e)) return "symbol" == typeof e ? e: ("string" == typeof e ? "S": "P") + e;
            if (!a(e, n)) {
                if (!u(e)) return "F";
                if (!t) return "E";
                r(e)
            }
            return e[n].i
        },
        getWeak: function(e, t) {
            if (!a(e, n)) {
                if (!u(e)) return ! 0;
                if (!t) return ! 1;
                r(e)
            }
            return e[n].w
        },
        onFreeze: function(e) {
            return h && d.NEED && u(e) && !a(e, n) && r(e),
            e
        }
    }
},
function(e, t, i) {
    var r = i(10),
    n = i(5),
    s = "__core-js_shared__",
    a = n[s] || (n[s] = {}); (e.exports = function(e, t) {
        return a[e] || (a[e] = void 0 !== t ? t: {})
    })("versions", []).push({
        version: r.version,
        mode: i(25) ? "pure": "global",
        copyright: "© 2018 Denis Pushkarev (zloirock.ru)"
    })
},
function(e, t) {
    e.exports = !1
},
function(e, t, i) {
    var r = i(12).f,
    n = i(6),
    s = i(27)("toStringTag");
    e.exports = function(e, t, i) {
        e && !n(e = i ? e: e.prototype, s) && r(e, s, {
            configurable: !0,
            value: t
        })
    }
},
function(e, t, i) {
    var r = i(24)("wks"),
    n = i(20),
    s = i(5).Symbol,
    a = "function" == typeof s; (e.exports = function(e) {
        return r[e] || (r[e] = a && s[e] || (a ? s: n)("Symbol." + e))
    }).store = r
},
function(e, t, i) {
    t.f = i(27)
},
function(e, t, i) {
    var r = i(5),
    n = i(10),
    s = i(25),
    a = i(28),
    o = i(12).f;
    e.exports = function(e) {
        var t = n.Symbol || (n.Symbol = s ? {}: r.Symbol || {});
        "_" == e.charAt(0) || e in t || o(t, e, {
            value: a.f(e)
        })
    }
},
function(e, t, i) {
    var o = i(31),
    l = i(43),
    u = i(44);
    e.exports = function(e) {
        var t = o(e),
        i = l.f;
        if (i) for (var r, n = i(e), s = u.f, a = 0; n.length > a;) s.call(e, r = n[a++]) && t.push(r);
        return t
    }
},
function(e, t, i) {
    var r = i(32),
    n = i(42);
    e.exports = Object.keys ||
    function(e) {
        return r(e, n)
    }
},
function(e, t, i) {
    var a = i(6),
    o = i(33),
    l = i(37)(!1),
    u = i(41)("IE_PROTO");
    e.exports = function(e, t) {
        var i, r = o(e),
        n = 0,
        s = [];
        for (i in r) i != u && a(r, i) && s.push(i);
        for (; t.length > n;) a(r, i = t[n++]) && (~l(s, i) || s.push(i));
        return s
    }
},
function(e, t, i) {
    var r = i(34),
    n = i(36);
    e.exports = function(e) {
        return r(n(e))
    }
},
function(e, t, i) {
    var r = i(35);
    e.exports = Object("z").propertyIsEnumerable(0) ? Object: function(e) {
        return "String" == r(e) ? e.split("") : Object(e)
    }
},
function(e, t) {
    var i = {}.toString;
    e.exports = function(e) {
        return i.call(e).slice(8, -1)
    }
},
function(e, t) {
    e.exports = function(e) {
        if (null == e) throw TypeError("Can't call method on  " + e);
        return e
    }
},
function(e, t, i) {
    var l = i(33),
    u = i(38),
    h = i(40);
    e.exports = function(o) {
        return function(e, t, i) {
            var r, n = l(e),
            s = u(n.length),
            a = h(i, s);
            if (o && t != t) {
                for (; a < s;) if ((r = n[a++]) != r) return ! 0
            } else for (; a < s; a++) if ((o || a in n) && n[a] === t) return o || a || 0;
            return ! o && -1
        }
    }
},
function(e, t, i) {
    var r = i(39),
    n = Math.min;
    e.exports = function(e) {
        return 0 < e ? n(r(e), 9007199254740991) : 0
    }
},
function(e, t) {
    var i = Math.ceil,
    r = Math.floor;
    e.exports = function(e) {
        return isNaN(e = +e) ? 0 : (0 < e ? r: i)(e)
    }
},
function(e, t, i) {
    var r = i(39),
    n = Math.max,
    s = Math.min;
    e.exports = function(e, t) {
        return (e = r(e)) < 0 ? n(e + t, 0) : s(e, t)
    }
},
function(e, t, i) {
    var r = i(24)("keys"),
    n = i(20);
    e.exports = function(e) {
        return r[e] || (r[e] = n(e))
    }
},
function(e, t) {
    e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
},
function(e, t) {
    t.f = Object.getOwnPropertySymbols
},
function(e, t) {
    t.f = {}.propertyIsEnumerable
},
function(e, t, i) {
    var r = i(35);
    e.exports = Array.isArray ||
    function(e) {
        return "Array" == r(e)
    }
},
function(e, t, r) {
    function n() {}
    var s = r(13),
    a = r(47),
    o = r(42),
    l = r(41)("IE_PROTO"),
    u = "prototype",
    h = function() {
        var e, t = r(16)("iframe"),
        i = o.length;
        for (t.style.display = "none", r(48).appendChild(t), t.src = "javascript:", (e = t.contentWindow.document).open(), e.write("<script>document.F=Object<\/script>"), e.close(), h = e.F; i--;) delete h[u][o[i]];
        return h()
    };
    e.exports = Object.create ||
    function(e, t) {
        var i;
        return null !== e ? (n[u] = s(e), i = new n, n[u] = null, i[l] = e) : i = h(),
        void 0 === t ? i: a(i, t)
    }
},
function(e, t, i) {
    var a = i(12),
    o = i(13),
    l = i(31);
    e.exports = i(7) ? Object.defineProperties: function(e, t) {
        o(e);
        for (var i, r = l(t), n = r.length, s = 0; s < n;) a.f(e, i = r[s++], t[i]);
        return e
    }
},
function(e, t, i) {
    var r = i(5).document;
    e.exports = r && r.documentElement
},
function(e, t, i) {
    var r = i(33),
    n = i(50).f,
    s = {}.toString,
    a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
    e.exports.f = function(e) {
        return a && "[object Window]" == s.call(e) ?
        function(e) {
            try {
                return n(e)
            } catch(e) {
                return a.slice()
            }
        } (e) : n(r(e))
    }
},
function(e, t, i) {
    var r = i(32),
    n = i(42).concat("length", "prototype");
    t.f = Object.getOwnPropertyNames ||
    function(e) {
        return r(e, n)
    }
},
function(e, t, i) {
    var r = i(44),
    n = i(18),
    s = i(33),
    a = i(17),
    o = i(6),
    l = i(15),
    u = Object.getOwnPropertyDescriptor;
    t.f = i(7) ? u: function(e, t) {
        if (e = s(e), t = a(t, !0), l) try {
            return u(e, t)
        } catch(e) {}
        if (o(e, t)) return n(!r.f.call(e, t), e[t])
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Object", {
        create: i(46)
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S + r.F * !i(7), "Object", {
        defineProperty: i(12).f
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S + r.F * !i(7), "Object", {
        defineProperties: i(47)
    })
},
function(e, t, i) {
    var r = i(33),
    n = i(51).f;
    i(56)("getOwnPropertyDescriptor",
    function() {
        return function(e, t) {
            return n(r(e), t)
        }
    })
},
function(e, t, i) {
    var n = i(9),
    s = i(10),
    a = i(8);
    e.exports = function(e, t) {
        var i = (s.Object || {})[e] || Object[e],
        r = {};
        r[e] = t(i),
        n(n.S + n.F * a(function() {
            i(1)
        }), "Object", r)
    }
},
function(e, t, i) {
    var r = i(58),
    n = i(59);
    i(56)("getPrototypeOf",
    function() {
        return function(e) {
            return n(r(e))
        }
    })
},
function(e, t, i) {
    var r = i(36);
    e.exports = function(e) {
        return Object(r(e))
    }
},
function(e, t, i) {
    var r = i(6),
    n = i(58),
    s = i(41)("IE_PROTO"),
    a = Object.prototype;
    e.exports = Object.getPrototypeOf ||
    function(e) {
        return e = n(e),
        r(e, s) ? e[s] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype: e instanceof Object ? a: null
    }
},
function(e, t, i) {
    var r = i(58),
    n = i(31);
    i(56)("keys",
    function() {
        return function(e) {
            return n(r(e))
        }
    })
},
function(e, t, i) {
    i(56)("getOwnPropertyNames",
    function() {
        return i(49).f
    })
},
function(e, t, i) {
    var r = i(14),
    n = i(23).onFreeze;
    i(56)("freeze",
    function(t) {
        return function(e) {
            return t && r(e) ? t(n(e)) : e
        }
    })
},
function(e, t, i) {
    var r = i(14),
    n = i(23).onFreeze;
    i(56)("seal",
    function(t) {
        return function(e) {
            return t && r(e) ? t(n(e)) : e
        }
    })
},
function(e, t, i) {
    var r = i(14),
    n = i(23).onFreeze;
    i(56)("preventExtensions",
    function(t) {
        return function(e) {
            return t && r(e) ? t(n(e)) : e
        }
    })
},
function(e, t, i) {
    var r = i(14);
    i(56)("isFrozen",
    function(t) {
        return function(e) {
            return ! r(e) || !!t && t(e)
        }
    })
},
function(e, t, i) {
    var r = i(14);
    i(56)("isSealed",
    function(t) {
        return function(e) {
            return ! r(e) || !!t && t(e)
        }
    })
},
function(e, t, i) {
    var r = i(14);
    i(56)("isExtensible",
    function(t) {
        return function(e) {
            return !! r(e) && (!t || t(e))
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S + r.F, "Object", {
        assign: i(69)
    })
},
function(e, t, i) {
    "use strict";
    var c = i(31),
    f = i(43),
    p = i(44),
    v = i(58),
    m = i(34),
    n = Object.assign;
    e.exports = !n || i(8)(function() {
        var e = {},
        t = {},
        i = Symbol(),
        r = "abcdefghijklmnopqrst";
        return e[i] = 7,
        r.split("").forEach(function(e) {
            t[e] = e
        }),
        7 != n({},
        e)[i] || Object.keys(n({},
        t)).join("") != r
    }) ?
    function(e, t) {
        for (var i = v(e), r = arguments.length, n = 1, s = f.f, a = p.f; n < r;) for (var o, l = m(arguments[n++]), u = s ? c(l).concat(s(l)) : c(l), h = u.length, d = 0; d < h;) a.call(l, o = u[d++]) && (i[o] = l[o]);
        return i
    }: n
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Object", {
        is: i(71)
    })
},
function(e, t) {
    e.exports = Object.is ||
    function(e, t) {
        return e === t ? 0 !== e || 1 / e == 1 / t: e != e && t != t
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Object", {
        setPrototypeOf: i(73).set
    })
},
function(e, t, n) {
    function s(e, t) {
        if (r(e), !i(t) && null !== t) throw TypeError(t + ": can't set as prototype!")
    }
    var i = n(14),
    r = n(13);
    e.exports = {
        set: Object.setPrototypeOf || ("__proto__" in {} ?
        function(e, i, r) {
            try { (r = n(21)(Function.call, n(51).f(Object.prototype, "__proto__").set, 2))(e, []),
                i = !(e instanceof Array)
            } catch(e) {
                i = !0
            }
            return function(e, t) {
                return s(e, t),
                i ? e.__proto__ = t: r(e, t),
                e
            }
        } ({},
        !1) : void 0),
        check: s
    }
},
function(e, t, i) {
    "use strict";
    var r = i(75),
    n = {};
    n[i(27)("toStringTag")] = "z",
    n + "" != "[object z]" && i(19)(Object.prototype, "toString",
    function() {
        return "[object " + r(this) + "]"
    },
    !0)
},
function(e, t, i) {
    var n = i(35),
    s = i(27)("toStringTag"),
    a = "Arguments" == n(function() {
        return arguments
    } ());
    e.exports = function(e) {
        var t, i, r;
        return void 0 === e ? "Undefined": null === e ? "Null": "string" == typeof(i = function(e, t) {
            try {
                return e[t]
            } catch(e) {}
        } (t = Object(e), s)) ? i: a ? n(t) : "Object" == (r = n(t)) && "function" == typeof t.callee ? "Arguments": r
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.P, "Function", {
        bind: i(77)
    })
},
function(e, t, i) {
    "use strict";
    var s = i(22),
    a = i(14),
    o = i(78),
    l = [].slice,
    u = {};
    e.exports = Function.bind ||
    function(t) {
        var i = s(this),
        r = l.call(arguments, 1),
        n = function() {
            var e = r.concat(l.call(arguments));
            return this instanceof n ?
            function(e, t, i) {
                if (! (t in u)) {
                    for (var r = [], n = 0; n < t; n++) r[n] = "a[" + n + "]";
                    u[t] = Function("F,a", "return new F(" + r.join(",") + ")")
                }
                return u[t](e, i)
            } (i, e.length, e) : o(i, e, t)
        };
        return a(i.prototype) && (n.prototype = i.prototype),
        n
    }
},
function(e, t) {
    e.exports = function(e, t, i) {
        var r = void 0 === i;
        switch (t.length) {
        case 0:
            return r ? e() : e.call(i);
        case 1:
            return r ? e(t[0]) : e.call(i, t[0]);
        case 2:
            return r ? e(t[0], t[1]) : e.call(i, t[0], t[1]);
        case 3:
            return r ? e(t[0], t[1], t[2]) : e.call(i, t[0], t[1], t[2]);
        case 4:
            return r ? e(t[0], t[1], t[2], t[3]) : e.call(i, t[0], t[1], t[2], t[3])
        }
        return e.apply(i, t)
    }
},
function(e, t, i) {
    var r = i(12).f,
    n = Function.prototype,
    s = /^\s*function ([^ (]*)/;
    "name" in n || i(7) && r(n, "name", {
        configurable: !0,
        get: function() {
            try {
                return ("" + this).match(s)[1]
            } catch(e) {
                return ""
            }
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(14),
    n = i(59),
    s = i(27)("hasInstance"),
    a = Function.prototype;
    s in a || i(12).f(a, s, {
        value: function(e) {
            if ("function" != typeof this || !r(e)) return ! 1;
            if (!r(this.prototype)) return e instanceof this;
            for (; e = n(e);) if (this.prototype === e) return ! 0;
            return ! 1
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(82);
    r(r.G + r.F * (parseInt != n), {
        parseInt: n
    })
},
function(e, t, i) {
    var r = i(5).parseInt,
    n = i(83).trim,
    s = i(84),
    a = /^[-+]?0[xX]/;
    e.exports = 8 !== r(s + "08") || 22 !== r(s + "0x16") ?
    function(e, t) {
        var i = n(String(e), 3);
        return r(i, t >>> 0 || (a.test(i) ? 16 : 10))
    }: r
},
function(e, t, i) {
    function r(e, t, i) {
        var r = {},
        n = o(function() {
            return !! l[e]() || "​" != "​" [e]()
        }),
        s = r[e] = n ? t(d) : l[e];
        i && (r[i] = s),
        a(a.P + a.F * n, "String", r)
    }
    var a = i(9),
    n = i(36),
    o = i(8),
    l = i(84),
    s = "[" + l + "]",
    u = RegExp("^" + s + s + "*"),
    h = RegExp(s + s + "*$"),
    d = r.trim = function(e, t) {
        return e = String(n(e)),
        1 & t && (e = e.replace(u, "")),
        2 & t && (e = e.replace(h, "")),
        e
    };
    e.exports = r
},
function(e, t) {
    e.exports = "\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"
},
function(e, t, i) {
    var r = i(9),
    n = i(86);
    r(r.G + r.F * (parseFloat != n), {
        parseFloat: n
    })
},
function(e, t, i) {
    var r = i(5).parseFloat,
    n = i(83).trim;
    e.exports = 1 / r(i(84) + "-0") != -1 / 0 ?
    function(e) {
        var t = n(String(e), 3),
        i = r(t);
        return 0 === i && "-" == t.charAt(0) ? -0 : i
    }: r
},
function(e, t, i) {
    "use strict";
    function r(e) {
        var t = h(e, !1);
        if ("string" == typeof t && 2 < t.length) {
            var i, r, n, s = (t = y ? t.trim() : f(t, 3)).charCodeAt(0);
            if (43 === s || 45 === s) {
                if (88 === (i = t.charCodeAt(2)) || 120 === i) return NaN
            } else if (48 === s) {
                switch (t.charCodeAt(1)) {
                case 66:
                case 98:
                    r = 2,
                    n = 49;
                    break;
                case 79:
                case 111:
                    r = 8,
                    n = 55;
                    break;
                default:
                    return + t
                }
                for (var a, o = t.slice(2), l = 0, u = o.length; l < u; l++) if ((a = o.charCodeAt(l)) < 48 || n < a) return NaN;
                return parseInt(o, r)
            }
        }
        return + t
    }
    var n = i(5),
    s = i(6),
    a = i(35),
    o = i(88),
    h = i(17),
    l = i(8),
    u = i(50).f,
    d = i(51).f,
    c = i(12).f,
    f = i(83).trim,
    p = "Number",
    v = n[p],
    m = v,
    _ = v.prototype,
    g = a(i(46)(_)) == p,
    y = "trim" in String.prototype;
    if (!v(" 0o1") || !v("0b1") || v("+0x1")) {
        v = function(e) {
            var t = arguments.length < 1 ? 0 : e,
            i = this;
            return i instanceof v && (g ? l(function() {
                _.valueOf.call(i)
            }) : a(i) != p) ? o(new m(r(t)), i, v) : r(t)
        };
        for (var b, S = i(7) ? u(m) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), E = 0; S.length > E; E++) s(m, b = S[E]) && !s(v, b) && c(v, b, d(m, b)); (v.prototype = _).constructor = v,
        i(19)(n, p, v)
    }
},
function(e, t, i) {
    var s = i(14),
    a = i(73).set;
    e.exports = function(e, t, i) {
        var r, n = t.constructor;
        return n !== i && "function" == typeof n && (r = n.prototype) !== i.prototype && s(r) && a && a(e, r),
        e
    }
},
function(e, t, i) {
    "use strict";
    function u(e, t) {
        for (var i = -1,
        r = t; ++i < 6;) r += e * a[i],
        a[i] = r % 1e7,
        r = s(r / 1e7)
    }
    function h(e) {
        for (var t = 6,
        i = 0; 0 <= --t;) i += a[t],
        a[t] = s(i / e),
        i = i % e * 1e7
    }
    function d() {
        for (var e = 6,
        t = ""; 0 <= --e;) if ("" !== t || 0 === e || 0 !== a[e]) {
            var i = String(a[e]);
            t = "" === t ? i: t + p.call("0", 7 - i.length) + i
        }
        return t
    }
    var r = i(9),
    c = i(39),
    f = i(90),
    p = i(91),
    n = 1..toFixed,
    s = Math.floor,
    a = [0, 0, 0, 0, 0, 0],
    v = "Number.toFixed: incorrect invocation!",
    m = function(e, t, i) {
        return 0 === t ? i: t % 2 == 1 ? m(e, t - 1, i * e) : m(e * e, t / 2, i)
    };
    r(r.P + r.F * ( !! n && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0)) || !i(8)(function() {
        n.call({})
    })), "Number", {
        toFixed: function(e) {
            var t, i, r, n, s = f(this, v),
            a = c(e),
            o = "",
            l = "0";
            if (a < 0 || 20 < a) throw RangeError(v);
            if (s != s) return "NaN";
            if (s <= -1e21 || 1e21 <= s) return String(s);
            if (s < 0 && (o = "-", s = -s), 1e-21 < s) if (i = (t = function(e) {
                for (var t = 0,
                i = e; 4096 <= i;) t += 12,
                i /= 4096;
                for (; 2 <= i;) t += 1,
                i /= 2;
                return t
            } (s * m(2, 69, 1)) - 69) < 0 ? s * m(2, -t, 1) : s / m(2, t, 1), i *= 4503599627370496, 0 < (t = 52 - t)) {
                for (u(0, i), r = a; 7 <= r;) u(1e7, 0),
                r -= 7;
                for (u(m(10, r, 1), 0), r = t - 1; 23 <= r;) h(1 << 23),
                r -= 23;
                h(1 << r),
                u(1, 1),
                h(2),
                l = d()
            } else u(0, i),
            u(1 << -t, 0),
            l = d() + p.call("0", a);
            return l = 0 < a ? o + ((n = l.length) <= a ? "0." + p.call("0", a - n) + l: l.slice(0, n - a) + "." + l.slice(n - a)) : o + l
        }
    })
},
function(e, t, i) {
    var r = i(35);
    e.exports = function(e, t) {
        if ("number" != typeof e && "Number" != r(e)) throw TypeError(t);
        return + e
    }
},
function(e, t, i) {
    "use strict";
    var n = i(39),
    s = i(36);
    e.exports = function(e) {
        var t = String(s(this)),
        i = "",
        r = n(e);
        if (r < 0 || r == 1 / 0) throw RangeError("Count can't be negative");
        for (; 0 < r; (r >>>= 1) && (t += t)) 1 & r && (i += t);
        return i
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(8),
    s = i(90),
    a = 1..toPrecision;
    r(r.P + r.F * (n(function() {
        return "1" !== a.call(1, void 0)
    }) || !n(function() {
        a.call({})
    })), "Number", {
        toPrecision: function(e) {
            var t = s(this, "Number#toPrecision: incorrect invocation!");
            return void 0 === e ? a.call(t) : a.call(t, e)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Number", {
        EPSILON: Math.pow(2, -52)
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(5).isFinite;
    r(r.S, "Number", {
        isFinite: function(e) {
            return "number" == typeof e && n(e)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Number", {
        isInteger: i(96)
    })
},
function(e, t, i) {
    var r = i(14),
    n = Math.floor;
    e.exports = function(e) {
        return ! r(e) && isFinite(e) && n(e) === e
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Number", {
        isNaN: function(e) {
            return e != e
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(96),
    s = Math.abs;
    r(r.S, "Number", {
        isSafeInteger: function(e) {
            return n(e) && s(e) <= 9007199254740991
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Number", {
        MAX_SAFE_INTEGER: 9007199254740991
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Number", {
        MIN_SAFE_INTEGER: -9007199254740991
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(86);
    r(r.S + r.F * (Number.parseFloat != n), "Number", {
        parseFloat: n
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(82);
    r(r.S + r.F * (Number.parseInt != n), "Number", {
        parseInt: n
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(104),
    s = Math.sqrt,
    a = Math.acosh;
    r(r.S + r.F * !(a && 710 == Math.floor(a(Number.MAX_VALUE)) && a(1 / 0) == 1 / 0), "Math", {
        acosh: function(e) {
            return (e = +e) < 1 ? NaN: 94906265.62425156 < e ? Math.log(e) + Math.LN2: n(e - 1 + s(e - 1) * s(e + 1))
        }
    })
},
function(e, t) {
    e.exports = Math.log1p ||
    function(e) {
        return - 1e-8 < (e = +e) && e < 1e-8 ? e - e * e / 2 : Math.log(1 + e)
    }
},
function(e, t, i) {
    var r = i(9),
    n = Math.asinh;
    r(r.S + r.F * !(n && 0 < 1 / n(0)), "Math", {
        asinh: function e(t) {
            return isFinite(t = +t) && 0 != t ? t < 0 ? -e( - t) : Math.log(t + Math.sqrt(t * t + 1)) : t
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = Math.atanh;
    r(r.S + r.F * !(n && 1 / n( - 0) < 0), "Math", {
        atanh: function(e) {
            return 0 == (e = +e) ? e: Math.log((1 + e) / (1 - e)) / 2
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(108);
    r(r.S, "Math", {
        cbrt: function(e) {
            return n(e = +e) * Math.pow(Math.abs(e), 1 / 3)
        }
    })
},
function(e, t) {
    e.exports = Math.sign ||
    function(e) {
        return 0 == (e = +e) || e != e ? e: e < 0 ? -1 : 1
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        clz32: function(e) {
            return (e >>>= 0) ? 31 - Math.floor(Math.log(e + .5) * Math.LOG2E) : 32
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = Math.exp;
    r(r.S, "Math", {
        cosh: function(e) {
            return (n(e = +e) + n( - e)) / 2
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(112);
    r(r.S + r.F * (n != Math.expm1), "Math", {
        expm1: n
    })
},
function(e, t) {
    var i = Math.expm1;
    e.exports = !i || 22025.465794806718 < i(10) || i(10) < 22025.465794806718 || -2e-17 != i( - 2e-17) ?
    function(e) {
        return 0 == (e = +e) ? e: -1e-6 < e && e < 1e-6 ? e + e * e / 2 : Math.exp(e) - 1
    }: i
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        fround: i(114)
    })
},
function(e, t, i) {
    var s = i(108),
    r = Math.pow,
    a = r(2, -52),
    o = r(2, -23),
    l = r(2, 127) * (2 - o),
    u = r(2, -126);
    e.exports = Math.fround ||
    function(e) {
        var t, i, r = Math.abs(e),
        n = s(e);
        return r < u ? n *
        function(e) {
            return e + 1 / a - 1 / a
        } (r / u / o) * u * o: l < (i = (t = (1 + o / a) * r) - (t - r)) || i != i ? n * (1 / 0) : n * i
    }
},
function(e, t, i) {
    var r = i(9),
    l = Math.abs;
    r(r.S, "Math", {
        hypot: function(e, t) {
            for (var i, r, n = 0,
            s = 0,
            a = arguments.length,
            o = 0; s < a;) o < (i = l(arguments[s++])) ? (n = n * (r = o / i) * r + 1, o = i) : n += 0 < i ? (r = i / o) * r: i;
            return o === 1 / 0 ? 1 / 0 : o * Math.sqrt(n)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = Math.imul;
    r(r.S + r.F * i(8)(function() {
        return - 5 != n(4294967295, 5) || 2 != n.length
    }), "Math", {
        imul: function(e, t) {
            var i = 65535,
            r = +e,
            n = +t,
            s = i & r,
            a = i & n;
            return 0 | s * a + ((i & r >>> 16) * a + s * (i & n >>> 16) << 16 >>> 0)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        log10: function(e) {
            return Math.log(e) * Math.LOG10E
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        log1p: i(104)
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        log2: function(e) {
            return Math.log(e) / Math.LN2
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        sign: i(108)
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(112),
    s = Math.exp;
    r(r.S + r.F * i(8)(function() {
        return - 2e-17 != !Math.sinh( - 2e-17)
    }), "Math", {
        sinh: function(e) {
            return Math.abs(e = +e) < 1 ? (n(e) - n( - e)) / 2 : (s(e - 1) - s( - e - 1)) * (Math.E / 2)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(112),
    s = Math.exp;
    r(r.S, "Math", {
        tanh: function(e) {
            var t = n(e = +e),
            i = n( - e);
            return t == 1 / 0 ? 1 : i == 1 / 0 ? -1 : (t - i) / (s(e) + s( - e))
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        trunc: function(e) {
            return (0 < e ? Math.floor: Math.ceil)(e)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    s = i(40),
    a = String.fromCharCode,
    n = String.fromCodePoint;
    r(r.S + r.F * ( !! n && 1 != n.length), "String", {
        fromCodePoint: function(e) {
            for (var t, i = [], r = arguments.length, n = 0; n < r;) {
                if (t = +arguments[n++], s(t, 1114111) !== t) throw RangeError(t + " is not a valid code point");
                i.push(t < 65536 ? a(t) : a(55296 + ((t -= 65536) >> 10), t % 1024 + 56320))
            }
            return i.join("")
        }
    })
},
function(e, t, i) {
    var r = i(9),
    a = i(33),
    o = i(38);
    r(r.S, "String", {
        raw: function(e) {
            for (var t = a(e.raw), i = o(t.length), r = arguments.length, n = [], s = 0; s < i;) n.push(String(t[s++])),
            s < r && n.push(String(arguments[s]));
            return n.join("")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(83)("trim",
    function(e) {
        return function() {
            return e(this, 3)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(128)(!0);
    i(129)(String, "String",
    function(e) {
        this._t = String(e),
        this._i = 0
    },
    function() {
        var e, t = this._t,
        i = this._i;
        return i >= t.length ? {
            value: void 0,
            done: !0
        }: (e = r(t, i), this._i += e.length, {
            value: e,
            done: !1
        })
    })
},
function(e, t, i) {
    var l = i(39),
    u = i(36);
    e.exports = function(o) {
        return function(e, t) {
            var i, r, n = String(u(e)),
            s = l(t),
            a = n.length;
            return s < 0 || a <= s ? o ? "": void 0 : (i = n.charCodeAt(s)) < 55296 || 56319 < i || s + 1 === a || (r = n.charCodeAt(s + 1)) < 56320 || 57343 < r ? o ? n.charAt(s) : i: o ? n.slice(s, s + 2) : r - 56320 + (i - 55296 << 10) + 65536
        }
    }
},
function(e, t, i) {
    "use strict";
    function y() {
        return this
    }
    var b = i(25),
    S = i(9),
    E = i(19),
    k = i(11),
    w = i(130),
    T = i(131),
    A = i(26),
    R = i(59),
    I = i(27)("iterator"),
    x = !([].keys && "next" in [].keys()),
    O = "values";
    e.exports = function(e, t, i, r, n, s, a) {
        T(i, t, r);
        function o(e) {
            if (!x && e in p) return p[e];
            switch (e) {
            case "keys":
            case O:
                return function() {
                    return new i(this, e)
                }
            }
            return function() {
                return new i(this, e)
            }
        }
        var l, u, h, d = t + " Iterator",
        c = n == O,
        f = !1,
        p = e.prototype,
        v = p[I] || p["@@iterator"] || n && p[n],
        m = v || o(n),
        _ = n ? c ? o("entries") : m: void 0,
        g = "Array" == t && p.entries || v;
        if (g && (h = R(g.call(new e))) !== Object.prototype && h.next && (A(h, d, !0), b || "function" == typeof h[I] || k(h, I, y)), c && v && v.name !== O && (f = !0, m = function() {
            return v.call(this)
        }), b && !a || !x && !f && p[I] || k(p, I, m), w[t] = m, w[d] = y, n) if (l = {
            values: c ? m: o(O),
            keys: s ? m: o("keys"),
            entries: _
        },
        a) for (u in l) u in p || E(p, u, l[u]);
        else S(S.P + S.F * (x || f), t, l);
        return l
    }
},
function(e, t) {
    e.exports = {}
},
function(e, t, i) {
    "use strict";
    var r = i(46),
    n = i(18),
    s = i(26),
    a = {};
    i(11)(a, i(27)("iterator"),
    function() {
        return this
    }),
    e.exports = function(e, t, i) {
        e.prototype = r(a, {
            next: n(1, i)
        }),
        s(e, t + " Iterator")
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(128)(!1);
    r(r.P, "String", {
        codePointAt: function(e) {
            return n(this, e)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    o = i(38),
    l = i(134),
    u = "endsWith",
    h = "" [u];
    r(r.P + r.F * i(136)(u), "String", {
        endsWith: function(e, t) {
            var i = l(this, e, u),
            r = 1 < arguments.length ? t: void 0,
            n = o(i.length),
            s = void 0 === r ? n: Math.min(o(r), n),
            a = String(e);
            return h ? h.call(i, a, s) : i.slice(s - a.length, s) === a
        }
    })
},
function(e, t, i) {
    var r = i(135),
    n = i(36);
    e.exports = function(e, t, i) {
        if (r(t)) throw TypeError("String#" + i + " doesn't accept regex!");
        return String(n(e))
    }
},
function(e, t, i) {
    var r = i(14),
    n = i(35),
    s = i(27)("match");
    e.exports = function(e) {
        var t;
        return r(e) && (void 0 !== (t = e[s]) ? !!t: "RegExp" == n(e))
    }
},
function(e, t, i) {
    var r = i(27)("match");
    e.exports = function(t) {
        var i = /./;
        try {
            "/./" [t](i)
        } catch(e) {
            try {
                return i[r] = !1,
                !"/./" [t](i)
            } catch(e) {}
        }
        return ! 0
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(134),
    s = "includes";
    r(r.P + r.F * i(136)(s), "String", {
        includes: function(e, t) {
            return !! ~n(this, e, s).indexOf(e, 1 < arguments.length ? t: void 0)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.P, "String", {
        repeat: i(91)
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    s = i(38),
    a = i(134),
    o = "startsWith",
    l = "" [o];
    r(r.P + r.F * i(136)(o), "String", {
        startsWith: function(e, t) {
            var i = a(this, e, o),
            r = s(Math.min(1 < arguments.length ? t: void 0, i.length)),
            n = String(e);
            return l ? l.call(i, n, r) : i.slice(r, r + n.length) === n
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("anchor",
    function(t) {
        return function(e) {
            return t(this, "a", "name", e)
        }
    })
},
function(e, t, i) {
    function r(e, t, i, r) {
        var n = String(a(e)),
        s = "<" + t;
        return "" !== i && (s += " " + i + '="' + String(r).replace(o, "&quot;") + '"'),
        s + ">" + n + "</" + t + ">"
    }
    var n = i(9),
    s = i(8),
    a = i(36),
    o = /"/g;
    e.exports = function(t, e) {
        var i = {};
        i[t] = e(r),
        n(n.P + n.F * s(function() {
            var e = "" [t]('"');
            return e !== e.toLowerCase() || 3 < e.split('"').length
        }), "String", i)
    }
},
function(e, t, i) {
    "use strict";
    i(141)("big",
    function(e) {
        return function() {
            return e(this, "big", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("blink",
    function(e) {
        return function() {
            return e(this, "blink", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("bold",
    function(e) {
        return function() {
            return e(this, "b", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("fixed",
    function(e) {
        return function() {
            return e(this, "tt", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("fontcolor",
    function(t) {
        return function(e) {
            return t(this, "font", "color", e)
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("fontsize",
    function(t) {
        return function(e) {
            return t(this, "font", "size", e)
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("italics",
    function(e) {
        return function() {
            return e(this, "i", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("link",
    function(t) {
        return function(e) {
            return t(this, "a", "href", e)
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("small",
    function(e) {
        return function() {
            return e(this, "small", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("strike",
    function(e) {
        return function() {
            return e(this, "strike", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("sub",
    function(e) {
        return function() {
            return e(this, "sub", "", "")
        }
    })
},
function(e, t, i) {
    "use strict";
    i(141)("sup",
    function(e) {
        return function() {
            return e(this, "sup", "", "")
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Date", {
        now: function() {
            return (new Date).getTime()
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(58),
    s = i(17);
    r(r.P + r.F * i(8)(function() {
        return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
            toISOString: function() {
                return 1
            }
        })
    }), "Date", {
        toJSON: function(e) {
            var t = n(this),
            i = s(t);
            return "number" != typeof i || isFinite(i) ? t.toISOString() : null
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(157);
    r(r.P + r.F * (Date.prototype.toISOString !== n), "Date", {
        toISOString: n
    })
},
function(e, t, i) {
    "use strict";
    function n(e) {
        return 9 < e ? e: "0" + e
    }
    var r = i(8),
    s = Date.prototype.getTime,
    a = Date.prototype.toISOString;
    e.exports = r(function() {
        return "0385-07-25T07:06:39.999Z" != a.call(new Date( - 5e13 - 1))
    }) || !r(function() {
        a.call(new Date(NaN))
    }) ?
    function() {
        if (!isFinite(s.call(this))) throw RangeError("Invalid time value");
        var e = this,
        t = e.getUTCFullYear(),
        i = e.getUTCMilliseconds(),
        r = t < 0 ? "-": 9999 < t ? "+": "";
        return r + ("00000" + Math.abs(t)).slice(r ? -6 : -4) + "-" + n(e.getUTCMonth() + 1) + "-" + n(e.getUTCDate()) + "T" + n(e.getUTCHours()) + ":" + n(e.getUTCMinutes()) + ":" + n(e.getUTCSeconds()) + "." + (99 < i ? i: "0" + n(i)) + "Z"
    }: a
},
function(e, t, i) {
    var r = Date.prototype,
    n = "Invalid Date",
    s = "toString",
    a = r[s],
    o = r.getTime;
    new Date(NaN) + "" != n && i(19)(r, s,
    function() {
        var e = o.call(this);
        return e == e ? a.call(this) : n
    })
},
function(e, t, i) {
    var r = i(27)("toPrimitive"),
    n = Date.prototype;
    r in n || i(11)(n, r, i(160))
},
function(e, t, i) {
    "use strict";
    var r = i(13),
    n = i(17);
    e.exports = function(e) {
        if ("string" !== e && "number" !== e && "default" !== e) throw TypeError("Incorrect hint");
        return n(r(this), "number" != e)
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Array", {
        isArray: i(45)
    })
},
function(e, t, i) {
    "use strict";
    var p = i(21),
    r = i(9),
    v = i(58),
    m = i(163),
    _ = i(164),
    g = i(38),
    y = i(165),
    b = i(166);
    r(r.S + r.F * !i(167)(function(e) {
        Array.from(e)
    }), "Array", {
        from: function(e, t, i) {
            var r, n, s, a, o = v(e),
            l = "function" == typeof this ? this: Array,
            u = arguments.length,
            h = 1 < u ? t: void 0,
            d = void 0 !== h,
            c = 0,
            f = b(o);
            if (d && (h = p(h, 2 < u ? i: void 0, 2)), null == f || l == Array && _(f)) for (n = new l(r = g(o.length)); c < r; c++) y(n, c, d ? h(o[c], c) : o[c]);
            else for (a = f.call(o), n = new l; ! (s = a.next()).done; c++) y(n, c, d ? m(a, h, [s.value, c], !0) : s.value);
            return n.length = c,
            n
        }
    })
},
function(e, t, i) {
    var s = i(13);
    e.exports = function(t, e, i, r) {
        try {
            return r ? e(s(i)[0], i[1]) : e(i)
        } catch(e) {
            var n = t.
            return;
            throw void 0 !== n && s(n.call(t)),
            e
        }
    }
},
function(e, t, i) {
    var r = i(130),
    n = i(27)("iterator"),
    s = Array.prototype;
    e.exports = function(e) {
        return void 0 !== e && (r.Array === e || s[n] === e)
    }
},
function(e, t, i) {
    "use strict";
    var r = i(12),
    n = i(18);
    e.exports = function(e, t, i) {
        t in e ? r.f(e, t, n(0, i)) : e[t] = i
    }
},
function(e, t, i) {
    var r = i(75),
    n = i(27)("iterator"),
    s = i(130);
    e.exports = i(10).getIteratorMethod = function(e) {
        if (null != e) return e[n] || e["@@iterator"] || s[r(e)]
    }
},
function(e, t, i) {
    var s = i(27)("iterator"),
    a = !1;
    try {
        var r = [7][s]();
        r.
        return = function() {
            a = !0
        },
        Array.from(r,
        function() {
            throw 2
        })
    } catch(e) {}
    e.exports = function(e, t) {
        if (!t && !a) return ! 1;
        var i = !1;
        try {
            var r = [7],
            n = r[s]();
            n.next = function() {
                return {
                    done: i = !0
                }
            },
            r[s] = function() {
                return n
            },
            e(r)
        } catch(e) {}
        return i
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(165);
    r(r.S + r.F * i(8)(function() {
        function e() {}
        return ! (Array.of.call(e) instanceof e)
    }), "Array", {
        of: function() {
            for (var e = 0,
            t = arguments.length,
            i = new("function" == typeof this ? this: Array)(t); e < t;) n(i, e, arguments[e++]);
            return i.length = t,
            i
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(33),
    s = [].join;
    r(r.P + r.F * (i(34) != Object || !i(170)(s)), "Array", {
        join: function(e) {
            return s.call(n(this), void 0 === e ? ",": e)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(8);
    e.exports = function(e, t) {
        return !! e && r(function() {
            t ? e.call(null,
            function() {},
            1) : e.call(null)
        })
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(48),
    u = i(35),
    h = i(40),
    d = i(38),
    c = [].slice;
    r(r.P + r.F * i(8)(function() {
        n && c.call(n)
    }), "Array", {
        slice: function(e, t) {
            var i = d(this.length),
            r = u(this);
            if (t = void 0 === t ? i: t, "Array" == r) return c.call(this, e, t);
            for (var n = h(e, i), s = h(t, i), a = d(s - n), o = new Array(a), l = 0; l < a; l++) o[l] = "String" == r ? this.charAt(n + l) : this[n + l];
            return o
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(22),
    s = i(58),
    a = i(8),
    o = [].sort,
    l = [1, 2, 3];
    r(r.P + r.F * (a(function() {
        l.sort(void 0)
    }) || !a(function() {
        l.sort(null)
    }) || !i(170)(o)), "Array", {
        sort: function(e) {
            return void 0 === e ? o.call(s(this)) : o.call(s(this), n(e))
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(0),
    s = i(170)([].forEach, !0);
    r(r.P + r.F * !s, "Array", {
        forEach: function(e, t) {
            return n(this, e, t)
        }
    })
},
function(e, t, i) {
    var y = i(21),
    b = i(34),
    S = i(58),
    E = i(38),
    r = i(175);
    e.exports = function(d, e) {
        var c = 1 == d,
        f = 2 == d,
        p = 3 == d,
        v = 4 == d,
        m = 6 == d,
        _ = 5 == d || m,
        g = e || r;
        return function(e, t, i) {
            for (var r, n, s = S(e), a = b(s), o = y(t, i, 3), l = E(a.length), u = 0, h = c ? g(e, l) : f ? g(e, 0) : void 0; u < l; u++) if ((_ || u in a) && (n = o(r = a[u], u, s), d)) if (c) h[u] = n;
            else if (n) switch (d) {
            case 3:
                return ! 0;
            case 5:
                return r;
            case 6:
                return u;
            case 2:
                h.push(r)
            } else if (v) return ! 1;
            return m ? -1 : p || v ? v: h
        }
    }
},
function(e, t, i) {
    var r = i(176);
    e.exports = function(e, t) {
        return new(r(e))(t)
    }
},
function(e, t, i) {
    var r = i(14),
    n = i(45),
    s = i(27)("species");
    e.exports = function(e) {
        var t;
        return n(e) && ("function" != typeof(t = e.constructor) || t !== Array && !n(t.prototype) || (t = void 0), r(t) && null === (t = t[s]) && (t = void 0)),
        void 0 === t ? Array: t
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(1);
    r(r.P + r.F * !i(170)([].map, !0), "Array", {
        map: function(e, t) {
            return n(this, e, t)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(2);
    r(r.P + r.F * !i(170)([].filter, !0), "Array", {
        filter: function(e, t) {
            return n(this, e, t)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(3);
    r(r.P + r.F * !i(170)([].some, !0), "Array", {
        some: function(e, t) {
            return n(this, e, t)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(4);
    r(r.P + r.F * !i(170)([].every, !0), "Array", {
        every: function(e, t) {
            return n(this, e, t)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(182);
    r(r.P + r.F * !i(170)([].reduce, !0), "Array", {
        reduce: function(e, t) {
            return n(this, e, arguments.length, t, !1)
        }
    })
},
function(e, t, i) {
    var h = i(22),
    d = i(58),
    c = i(34),
    f = i(38);
    e.exports = function(e, t, i, r, n) {
        h(t);
        var s = d(e),
        a = c(s),
        o = f(s.length),
        l = n ? o - 1 : 0,
        u = n ? -1 : 1;
        if (i < 2) for (;;) {
            if (l in a) {
                r = a[l],
                l += u;
                break
            }
            if (l += u, n ? l < 0 : o <= l) throw TypeError("Reduce of empty array with no initial value")
        }
        for (; n ? 0 <= l: l < o; l += u) l in a && (r = t(r, a[l], l, s));
        return r
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(182);
    r(r.P + r.F * !i(170)([].reduceRight, !0), "Array", {
        reduceRight: function(e, t) {
            return n(this, e, arguments.length, t, !0)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(37)(!1),
    s = [].indexOf,
    a = !!s && 1 / [1].indexOf(1, -0) < 0;
    r(r.P + r.F * (a || !i(170)(s)), "Array", {
        indexOf: function(e, t) {
            return a ? s.apply(this, arguments) || 0 : n(this, e, t)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    s = i(33),
    a = i(39),
    o = i(38),
    l = [].lastIndexOf,
    u = !!l && 1 / [1].lastIndexOf(1, -0) < 0;
    r(r.P + r.F * (u || !i(170)(l)), "Array", {
        lastIndexOf: function(e, t) {
            if (u) return l.apply(this, arguments) || 0;
            var i = s(this),
            r = o(i.length),
            n = r - 1;
            for (1 < arguments.length && (n = Math.min(n, a(t))), n < 0 && (n = r + n); 0 <= n; n--) if (n in i && i[n] === e) return n || 0;
            return - 1
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.P, "Array", {
        copyWithin: i(187)
    }),
    i(188)("copyWithin")
},
function(e, t, i) {
    "use strict";
    var h = i(58),
    d = i(40),
    c = i(38);
    e.exports = [].copyWithin ||
    function(e, t, i) {
        var r = h(this),
        n = c(r.length),
        s = d(e, n),
        a = d(t, n),
        o = 2 < arguments.length ? i: void 0,
        l = Math.min((void 0 === o ? n: d(o, n)) - a, n - s),
        u = 1;
        for (a < s && s < a + l && (u = -1, a += l - 1, s += l - 1); 0 < l--;) a in r ? r[s] = r[a] : delete r[s],
        s += u,
        a += u;
        return r
    }
},
function(e, t, i) {
    var r = i(27)("unscopables"),
    n = Array.prototype;
    null == n[r] && i(11)(n, r, {}),
    e.exports = function(e) {
        n[r][e] = !0
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.P, "Array", {
        fill: i(190)
    }),
    i(188)("fill")
},
function(e, t, i) {
    "use strict";
    var u = i(58),
    h = i(40),
    d = i(38);
    e.exports = function(e, t, i) {
        for (var r = u(this), n = d(r.length), s = arguments.length, a = h(1 < s ? t: void 0, n), o = 2 < s ? i: void 0, l = void 0 === o ? n: h(o, n); a < l;) r[a++] = e;
        return r
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(5),
    s = "find",
    a = !0;
    s in [] && Array(1)[s](function() {
        a = !1
    }),
    r(r.P + r.F * a, "Array", {
        find: function(e, t) {
            return n(this, e, 1 < arguments.length ? t: void 0)
        }
    }),
    i(188)(s)
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(174)(6),
    s = "findIndex",
    a = !0;
    s in [] && Array(1)[s](function() {
        a = !1
    }),
    r(r.P + r.F * a, "Array", {
        findIndex: function(e, t) {
            return n(this, e, 1 < arguments.length ? t: void 0)
        }
    }),
    i(188)(s)
},
function(e, t, i) {
    i(194)("Array")
},
function(e, t, i) {
    "use strict";
    var r = i(5),
    n = i(12),
    s = i(7),
    a = i(27)("species");
    e.exports = function(e) {
        var t = r[e];
        s && t && !t[a] && n.f(t, a, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }
},
function(e, t, i) {
    "use strict";
    var r = i(188),
    n = i(196),
    s = i(130),
    a = i(33);
    e.exports = i(129)(Array, "Array",
    function(e, t) {
        this._t = a(e),
        this._i = 0,
        this._k = t
    },
    function() {
        var e = this._t,
        t = this._k,
        i = this._i++;
        return ! e || i >= e.length ? (this._t = void 0, n(1)) : n(0, "keys" == t ? i: "values" == t ? e[i] : [i, e[i]])
    },
    "values"),
    s.Arguments = s.Array,
    r("keys"),
    r("values"),
    r("entries")
},
function(e, t) {
    e.exports = function(e, t) {
        return {
            value: t,
            done: !!e
        }
    }
},
function(e, t, i) {
    var r = i(5),
    s = i(88),
    n = i(12).f,
    a = i(50).f,
    o = i(135),
    l = i(198),
    u = r.RegExp,
    h = u,
    d = u.prototype,
    c = /a/g,
    f = /a/g,
    p = new u(c) !== c;
    if (i(7) && (!p || i(8)(function() {
        return f[i(27)("match")] = !1,
        u(c) != c || u(f) == f || "/a/i" != u(c, "i")
    }))) {
        u = function(e, t) {
            var i = this instanceof u,
            r = o(e),
            n = void 0 === t;
            return ! i && r && e.constructor === u && n ? e: s(p ? new h(r && !n ? e.source: e, t) : h((r = e instanceof u) ? e.source: e, r && n ? l.call(e) : t), i ? this: d, u)
        };
        function v(t) {
            t in u || n(u, t, {
                configurable: !0,
                get: function() {
                    return h[t]
                },
                set: function(e) {
                    h[t] = e
                }
            })
        }
        for (var m = a(h), _ = 0; m.length > _;) v(m[_++]); (d.constructor = u).prototype = d,
        i(19)(r, "RegExp", u)
    }
    i(194)("RegExp")
},
function(e, t, i) {
    "use strict";
    var r = i(13);
    e.exports = function() {
        var e = r(this),
        t = "";
        return e.global && (t += "g"),
        e.ignoreCase && (t += "i"),
        e.multiline && (t += "m"),
        e.unicode && (t += "u"),
        e.sticky && (t += "y"),
        t
    }
},
function(e, t, i) {
    "use strict";
    var r = i(200);
    i(9)({
        target: "RegExp",
        proto: !0,
        forced: r !== /./.exec
    },
    {
        exec: r
    })
},
function(e, t, i) {
    "use strict";
    var r, n, a = i(198),
    o = RegExp.prototype.exec,
    l = String.prototype.replace,
    s = o,
    u = "lastIndex",
    h = (r = /a/, n = /b*/g, o.call(r, "a"), o.call(n, "a"), 0 !== r[u] || 0 !== n[u]),
    d = void 0 !== /()??/.exec("")[1]; (h || d) && (s = function(e) {
        var t, i, r, n, s = this;
        return d && (i = new RegExp("^" + s.source + "$(?!\\s)", a.call(s))),
        h && (t = s[u]),
        r = o.call(s, e),
        h && r && (s[u] = s.global ? r.index + r[0].length: t),
        d && r && 1 < r.length && l.call(r[0], i,
        function() {
            for (n = 1; n < arguments.length - 2; n++) void 0 === arguments[n] && (r[n] = void 0)
        }),
        r
    }),
    e.exports = s
},
function(e, t, i) {
    "use strict";
    i(202);
    function r(e) {
        i(19)(RegExp.prototype, o, e, !0)
    }
    var n = i(13),
    s = i(198),
    a = i(7),
    o = "toString",
    l = /./ [o];
    i(8)(function() {
        return "/a/b" != l.call({
            source: "a",
            flags: "b"
        })
    }) ? r(function() {
        var e = n(this);
        return "/".concat(e.source, "/", "flags" in e ? e.flags: !a && e instanceof RegExp ? s.call(e) : void 0)
    }) : l.name != o && r(function() {
        return l.call(this)
    })
},
function(e, t, i) {
    i(7) && "g" != /./g.flags && i(12).f(RegExp.prototype, "flags", {
        configurable: !0,
        get: i(198)
    })
},
function(e, t, i) {
    "use strict";
    var d = i(13),
    c = i(38),
    f = i(204),
    p = i(205);
    i(206)("match", 1,
    function(r, n, u, h) {
        return [function(e) {
            var t = r(this),
            i = null == e ? void 0 : e[n];
            return void 0 !== i ? i.call(e, t) : new RegExp(e)[n](String(t))
        },
        function(e) {
            var t = h(u, e, this);
            if (t.done) return t.value;
            var i = d(e),
            r = String(this);
            if (!i.global) return p(i, r);
            for (var n, s = i.unicode,
            a = [], o = i.lastIndex = 0; null !== (n = p(i, r));) {
                var l = String(n[0]);
                "" === (a[o] = l) && (i.lastIndex = f(r, c(i.lastIndex), s)),
                o++
            }
            return 0 === o ? null: a
        }]
    })
},
function(e, t, i) {
    "use strict";
    var r = i(128)(!0);
    e.exports = function(e, t, i) {
        return t + (i ? r(e, t).length: 1)
    }
},
function(e, t, i) {
    "use strict";
    var n = i(75),
    s = RegExp.prototype.exec;
    e.exports = function(e, t) {
        var i = e.exec;
        if ("function" == typeof i) {
            var r = i.call(e, t);
            if ("object" != typeof r) throw new TypeError("RegExp exec method returned something other than an Object or null");
            return r
        }
        if ("RegExp" !== n(e)) throw new TypeError("RegExp#exec called on incompatible receiver");
        return s.call(e, t)
    }
},
function(e, t, i) {
    "use strict";
    i(199);
    var h = i(19),
    d = i(11),
    c = i(8),
    f = i(36),
    p = i(27),
    v = i(200),
    m = p("species"),
    _ = !c(function() {
        var e = /./;
        return e.exec = function() {
            var e = [];
            return e.groups = {
                a: "7"
            },
            e
        },
        "7" !== "".replace(e, "$<a>")
    }),
    g = function() {
        var e = /(?:)/,
        t = e.exec;
        e.exec = function() {
            return t.apply(this, arguments)
        };
        var i = "ab".split(e);
        return 2 === i.length && "a" === i[0] && "b" === i[1]
    } ();
    e.exports = function(i, e, t) {
        var r = p(i),
        s = !c(function() {
            var e = {};
            return e[r] = function() {
                return 7
            },
            7 != "" [i](e)
        }),
        n = s ? !c(function() {
            var e = !1,
            t = /a/;
            return t.exec = function() {
                return e = !0,
                null
            },
            "split" === i && (t.constructor = {},
            t.constructor[m] = function() {
                return t
            }),
            t[r](""),
            !e
        }) : void 0;
        if (!s || !n || "replace" === i && !_ || "split" === i && !g) {
            var a = /./ [r],
            o = t(f, r, "" [i],
            function(e, t, i, r, n) {
                return t.exec === v ? s && !n ? {
                    done: !0,
                    value: a.call(t, i, r)
                }: {
                    done: !0,
                    value: e.call(i, t, r)
                }: {
                    done: !1
                }
            }),
            l = o[0],
            u = o[1];
            h(String.prototype, i, l),
            d(RegExp.prototype, r, 2 == e ?
            function(e, t) {
                return u.call(e, this, t)
            }: function(e) {
                return u.call(e, this)
            })
        }
    }
},
function(e, t, i) {
    "use strict";
    var w = i(13),
    r = i(58),
    T = i(38),
    A = i(39),
    R = i(204),
    I = i(205),
    x = Math.max,
    O = Math.min,
    c = Math.floor,
    f = /\$([$&`']|\d\d?|<[^>]*>)/g,
    p = /\$([$&`']|\d\d?)/g;
    i(206)("replace", 2,
    function(n, s, S, E) {
        return [function(e, t) {
            var i = n(this),
            r = null == e ? void 0 : e[s];
            return void 0 !== r ? r.call(e, i, t) : S.call(String(i), e, t)
        },
        function(e, t) {
            var i = E(S, e, this, t);
            if (i.done) return i.value;
            var r = w(e),
            n = String(this),
            s = "function" == typeof t;
            s || (t = String(t));
            var a = r.global;
            if (a) {
                var o = r.unicode;
                r.lastIndex = 0
            }
            for (var l = [];;) {
                var u = I(r, n);
                if (null === u) break;
                if (l.push(u), !a) break;
                "" === String(u[0]) && (r.lastIndex = R(n, T(r.lastIndex), o))
            }
            for (var h, d = "",
            c = 0,
            f = 0; f < l.length; f++) {
                u = l[f];
                for (var p = String(u[0]), v = x(O(A(u.index), n.length), 0), m = [], _ = 1; _ < u.length; _++) m.push(void 0 === (h = u[_]) ? h: String(h));
                var g = u.groups;
                if (s) {
                    var y = [p].concat(m, v, n);
                    void 0 !== g && y.push(g);
                    var b = String(t.apply(void 0, y))
                } else b = k(p, n, v, m, g, t);
                c <= v && (d += n.slice(c, v) + b, c = v + p.length)
            }
            return d + n.slice(c)
        }];
        function k(s, a, o, l, u, e) {
            var h = o + s.length,
            d = l.length,
            t = p;
            return void 0 !== u && (u = r(u), t = f),
            S.call(e, t,
            function(e, t) {
                var i;
                switch (t.charAt(0)) {
                case "$":
                    return "$";
                case "&":
                    return s;
                case "`":
                    return a.slice(0, o);
                case "'":
                    return a.slice(h);
                case "<":
                    i = u[t.slice(1, -1)];
                    break;
                default:
                    var r = +t;
                    if (0 == r) return t;
                    if (d < r) {
                        var n = c(r / 10);
                        return 0 === n ? t: n <= d ? void 0 === l[n - 1] ? t.charAt(1) : l[n - 1] + t.charAt(1) : t
                    }
                    i = l[r - 1]
                }
                return void 0 === i ? "": i
            })
        }
    })
},
function(e, t, i) {
    "use strict";
    var l = i(13),
    u = i(71),
    h = i(205);
    i(206)("search", 1,
    function(r, n, a, o) {
        return [function(e) {
            var t = r(this),
            i = null == e ? void 0 : e[n];
            return void 0 !== i ? i.call(e, t) : new RegExp(e)[n](String(t))
        },
        function(e) {
            var t = o(a, e, this);
            if (t.done) return t.value;
            var i = l(e),
            r = String(this),
            n = i.lastIndex;
            u(n, 0) || (i.lastIndex = 0);
            var s = h(i, r);
            return u(i.lastIndex, n) || (i.lastIndex = n),
            null === s ? -1 : s.index
        }]
    })
},
function(e, t, i) {
    "use strict";
    var d = i(135),
    y = i(13),
    b = i(210),
    S = i(204),
    E = i(38),
    k = i(205),
    c = i(200),
    w = Math.min,
    f = [].push,
    r = "split",
    p = "length",
    v = "lastIndex",
    T = !!
    function() {
        try {
            return new RegExp("x", "y")
        } catch(e) {}
    } ();
    i(206)("split", 2,
    function(n, s, m, _) {
        var g;
        return g = "c" == "abbc" [r](/(b)*/)[1] || 4 != "test" [r](/(?:)/, -1)[p] || 2 != "ab" [r](/(?:ab)*/)[p] || 4 != "." [r](/(.?)(.?)/)[p] || 1 < "." [r](/()()/)[p] || "" [r](/.?/)[p] ?
        function(e, t) {
            var i = String(this);
            if (void 0 === e && 0 === t) return [];
            if (!d(e)) return m.call(i, e, t);
            for (var r, n, s, a = [], o = (e.ignoreCase ? "i": "") + (e.multiline ? "m": "") + (e.unicode ? "u": "") + (e.sticky ? "y": ""), l = 0, u = void 0 === t ? 4294967295 : t >>> 0, h = new RegExp(e.source, o + "g"); (r = c.call(h, i)) && !(l < (n = h[v]) && (a.push(i.slice(l, r.index)), 1 < r[p] && r.index < i[p] && f.apply(a, r.slice(1)), s = r[0][p], l = n, a[p] >= u));) h[v] === r.index && h[v]++;
            return l === i[p] ? !s && h.test("") || a.push("") : a.push(i.slice(l)),
            a[p] > u ? a.slice(0, u) : a
        }: "0" [r](void 0, 0)[p] ?
        function(e, t) {
            return void 0 === e && 0 === t ? [] : m.call(this, e, t)
        }: m,
        [function(e, t) {
            var i = n(this),
            r = null == e ? void 0 : e[s];
            return void 0 !== r ? r.call(e, i, t) : g.call(String(i), e, t)
        },
        function(e, t) {
            var i = _(g, e, this, t, g !== m);
            if (i.done) return i.value;
            var r = y(e),
            n = String(this),
            s = b(r, RegExp),
            a = r.unicode,
            o = (r.ignoreCase ? "i": "") + (r.multiline ? "m": "") + (r.unicode ? "u": "") + (T ? "y": "g"),
            l = new s(T ? r: "^(?:" + r.source + ")", o),
            u = void 0 === t ? 4294967295 : t >>> 0;
            if (0 == u) return [];
            if (0 === n.length) return null === k(l, n) ? [n] : [];
            for (var h = 0,
            d = 0,
            c = []; d < n.length;) {
                l.lastIndex = T ? d: 0;
                var f, p = k(l, T ? n: n.slice(d));
                if (null === p || (f = w(E(l.lastIndex + (T ? 0 : d)), n.length)) === h) d = S(n, d, a);
                else {
                    if (c.push(n.slice(h, d)), c.length === u) return c;
                    for (var v = 1; v <= p.length - 1; v++) if (c.push(p[v]), c.length === u) return c;
                    d = h = f
                }
            }
            return c.push(n.slice(h)),
            c
        }]
    })
},
function(e, t, i) {
    var n = i(13),
    s = i(22),
    a = i(27)("species");
    e.exports = function(e, t) {
        var i, r = n(e).constructor;
        return void 0 === r || null == (i = n(r)[a]) ? t: s(i)
    }
},
function(e, t, i) {
    "use strict";
    function r() {}
    function d(e) {
        var t;
        return ! (!m(e) || "function" != typeof(t = e.then)) && t
    }
    function n(h, i) {
        if (!h._n) {
            h._n = !0;
            var r = h._c;
            E(function() {
                for (var l = h._v,
                u = 1 == h._s,
                e = 0,
                t = function(e) {
                    var t, i, r, n = u ? e.ok: e.fail,
                    s = e.resolve,
                    a = e.reject,
                    o = e.domain;
                    try {
                        n ? (u || (2 == h._h && B(h), h._h = 1), !0 === n ? t = l: (o && o.enter(), t = n(l), o && (o.exit(), r = !0)), t === e.promise ? a(I("Promise-chain cycle")) : (i = d(t)) ? i.call(t, s, a) : s(t)) : a(l)
                    } catch(e) {
                        o && !r && o.exit(),
                        a(e)
                    }
                }; r.length > e;) t(r[e++]);
                h._c = [],
                h._n = !1,
                i && !h._h && F(h)
            })
        }
    }
    function s(e) {
        var t = this;
        t._d || (t._d = !0, (t = t._w || t)._v = e, t._s = 2, t._a || (t._a = t._c.slice()), n(t, !0))
    }
    var a, o, l, u, h = i(25),
    c = i(5),
    f = i(21),
    p = i(75),
    v = i(9),
    m = i(14),
    _ = i(22),
    g = i(212),
    y = i(213),
    b = i(210),
    S = i(214).set,
    E = i(215)(),
    k = i(216),
    w = i(217),
    T = i(218),
    A = i(219),
    R = "Promise",
    I = c.TypeError,
    x = c.process,
    O = x && x.versions,
    C = O && O.v8 || "",
    L = c[R],
    D = "process" == p(x),
    P = o = k.f,
    M = !!
    function() {
        try {
            var e = L.resolve(1),
            t = (e.constructor = {})[i(27)("species")] = function(e) {
                e(r, r)
            };
            return (D || "function" == typeof PromiseRejectionEvent) && e.then(r) instanceof t && 0 !== C.indexOf("6.6") && -1 === T.indexOf("Chrome/66")
        } catch(e) {}
    } (),
    F = function(s) {
        S.call(c,
        function() {
            var e, t, i, r = s._v,
            n = N(s);
            if (n && (e = w(function() {
                D ? x.emit("unhandledRejection", r, s) : (t = c.onunhandledrejection) ? t({
                    promise: s,
                    reason: r
                }) : (i = c.console) && i.error && i.error("Unhandled promise rejection", r)
            }), s._h = D || N(s) ? 2 : 1), s._a = void 0, n && e.e) throw e.v
        })
    },
    N = function(e) {
        return 1 !== e._h && 0 === (e._a || e._c).length
    },
    B = function(t) {
        S.call(c,
        function() {
            var e;
            D ? x.emit("rejectionHandled", t) : (e = c.onrejectionhandled) && e({
                promise: t,
                reason: t._v
            })
        })
    },
    U = function(e) {
        var i, r = this;
        if (!r._d) {
            r._d = !0,
            r = r._w || r;
            try {
                if (r === e) throw I("Promise can't be resolved itself"); (i = d(e)) ? E(function() {
                    var t = {
                        _w: r,
                        _d: !1
                    };
                    try {
                        i.call(e, f(U, t, 1), f(s, t, 1))
                    } catch(e) {
                        s.call(t, e)
                    }
                }) : (r._v = e, r._s = 1, n(r, !1))
            } catch(e) {
                s.call({
                    _w: r,
                    _d: !1
                },
                e)
            }
        }
    };
    M || (L = function(e) {
        g(this, L, R, "_h"),
        _(e),
        a.call(this);
        try {
            e(f(U, this, 1), f(s, this, 1))
        } catch(e) {
            s.call(this, e)
        }
    },
    (a = function(e) {
        this._c = [],
        this._a = void 0,
        this._s = 0,
        this._d = !1,
        this._v = void 0,
        this._h = 0,
        this._n = !1
    }).prototype = i(220)(L.prototype, {
        then: function(e, t) {
            var i = P(b(this, L));
            return i.ok = "function" != typeof e || e,
            i.fail = "function" == typeof t && t,
            i.domain = D ? x.domain: void 0,
            this._c.push(i),
            this._a && this._a.push(i),
            this._s && n(this, !1),
            i.promise
        },
        catch: function(e) {
            return this.then(void 0, e)
        }
    }), l = function() {
        var e = new a;
        this.promise = e,
        this.resolve = f(U, e, 1),
        this.reject = f(s, e, 1)
    },
    k.f = P = function(e) {
        return e === L || e === u ? new l(e) : o(e)
    }),
    v(v.G + v.W + v.F * !M, {
        Promise: L
    }),
    i(26)(L, R),
    i(194)(R),
    u = i(10)[R],
    v(v.S + v.F * !M, R, {
        reject: function(e) {
            var t = P(this);
            return (0, t.reject)(e),
            t.promise
        }
    }),
    v(v.S + v.F * (h || !M), R, {
        resolve: function(e) {
            return A(h && this === u ? L: this, e)
        }
    }),
    v(v.S + v.F * !(M && i(167)(function(e) {
        L.all(e).
        catch(r)
    })), R, {
        all: function(e) {
            var a = this,
            t = P(a),
            o = t.resolve,
            l = t.reject,
            i = w(function() {
                var r = [],
                n = 0,
                s = 1;
                y(e, !1,
                function(e) {
                    var t = n++,
                    i = !1;
                    r.push(void 0),
                    s++,
                    a.resolve(e).then(function(e) {
                        i || (i = !0, r[t] = e, --s || o(r))
                    },
                    l)
                }),
                --s || o(r)
            });
            return i.e && l(i.v),
            t.promise
        },
        race: function(e) {
            var t = this,
            i = P(t),
            r = i.reject,
            n = w(function() {
                y(e, !1,
                function(e) {
                    t.resolve(e).then(i.resolve, r)
                })
            });
            return n.e && r(n.v),
            i.promise
        }
    })
},
function(e, t) {
    e.exports = function(e, t, i, r) {
        if (! (e instanceof t) || void 0 !== r && r in e) throw TypeError(i + ": incorrect invocation!");
        return e
    }
},
function(e, t, i) {
    var c = i(21),
    f = i(163),
    p = i(164),
    v = i(13),
    m = i(38),
    _ = i(166),
    g = {},
    y = {}; (t = e.exports = function(e, t, i, r, n) {
        var s, a, o, l, u = n ?
        function() {
            return e
        }: _(e),
        h = c(i, r, t ? 2 : 1),
        d = 0;
        if ("function" != typeof u) throw TypeError(e + " is not iterable!");
        if (p(u)) {
            for (s = m(e.length); d < s; d++) if ((l = t ? h(v(a = e[d])[0], a[1]) : h(e[d])) === g || l === y) return l
        } else for (o = u.call(e); ! (a = o.next()).done;) if ((l = f(o, h, a.value, t)) === g || l === y) return l
    }).BREAK = g,
    t.RETURN = y
},
function(e, t, i) {
    function r() {
        var e = +this;
        if (y.hasOwnProperty(e)) {
            var t = y[e];
            delete y[e],
            t()
        }
    }
    function n(e) {
        r.call(e.data)
    }
    var s, a, o, l = i(21),
    u = i(78),
    h = i(48),
    d = i(16),
    c = i(5),
    f = c.process,
    p = c.setImmediate,
    v = c.clearImmediate,
    m = c.MessageChannel,
    _ = c.Dispatch,
    g = 0,
    y = {},
    b = "onreadystatechange";
    p && v || (p = function(e) {
        for (var t = [], i = 1; i < arguments.length;) t.push(arguments[i++]);
        return y[++g] = function() {
            u("function" == typeof e ? e: Function(e), t)
        },
        s(g),
        g
    },
    v = function(e) {
        delete y[e]
    },
    "process" == i(35)(f) ? s = function(e) {
        f.nextTick(l(r, e, 1))
    }: _ && _.now ? s = function(e) {
        _.now(l(r, e, 1))
    }: m ? (o = (a = new m).port2, a.port1.onmessage = n, s = l(o.postMessage, o, 1)) : c.addEventListener && "function" == typeof postMessage && !c.importScripts ? (s = function(e) {
        c.postMessage(e + "", "*")
    },
    c.addEventListener("message", n, !1)) : s = b in d("script") ?
    function(e) {
        h.appendChild(d("script"))[b] = function() {
            h.removeChild(this),
            r.call(e)
        }
    }: function(e) {
        setTimeout(l(r, e, 1), 0)
    }),
    e.exports = {
        set: p,
        clear: v
    }
},
function(e, t, i) {
    var o = i(5),
    l = i(214).set,
    u = o.MutationObserver || o.WebKitMutationObserver,
    h = o.process,
    d = o.Promise,
    c = "process" == i(35)(h);
    e.exports = function() {
        function e() {
            var e, t;
            for (c && (e = h.domain) && e.exit(); i;) {
                t = i.fn,
                i = i.next;
                try {
                    t()
                } catch(e) {
                    throw i ? n() : r = void 0,
                    e
                }
            }
            r = void 0,
            e && e.enter()
        }
        var i, r, n;
        if (c) n = function() {
            h.nextTick(e)
        };
        else if (!u || o.navigator && o.navigator.standalone) if (d && d.resolve) {
            var t = d.resolve(void 0);
            n = function() {
                t.then(e)
            }
        } else n = function() {
            l.call(o, e)
        };
        else {
            var s = !0,
            a = document.createTextNode("");
            new u(e).observe(a, {
                characterData: !0
            }),
            n = function() {
                a.data = s = !s
            }
        }
        return function(e) {
            var t = {
                fn: e,
                next: void 0
            };
            r && (r.next = t),
            i || (i = t, n()),
            r = t
        }
    }
},
function(e, t, i) {
    "use strict";
    var n = i(22);
    function r(e) {
        var i, r;
        this.promise = new e(function(e, t) {
            if (void 0 !== i || void 0 !== r) throw TypeError("Bad Promise constructor");
            i = e,
            r = t
        }),
        this.resolve = n(i),
        this.reject = n(r)
    }
    e.exports.f = function(e) {
        return new r(e)
    }
},
function(e, t) {
    e.exports = function(e) {
        try {
            return {
                e: !1,
                v: e()
            }
        } catch(e) {
            return {
                e: !0,
                v: e
            }
        }
    }
},
function(e, t, i) {
    var r = i(5).navigator;
    e.exports = r && r.userAgent || ""
},
function(e, t, i) {
    var r = i(13),
    n = i(14),
    s = i(216);
    e.exports = function(e, t) {
        if (r(e), n(t) && t.constructor === e) return t;
        var i = s.f(e);
        return (0, i.resolve)(t),
        i.promise
    }
},
function(e, t, i) {
    var n = i(19);
    e.exports = function(e, t, i) {
        for (var r in t) n(e, r, t[r], i);
        return e
    }
},
function(e, t, i) {
    "use strict";
    var r = i(222),
    n = i(223);
    e.exports = i(224)("Map",
    function(t) {
        return function(e) {
            return t(this, 0 < arguments.length ? e: void 0)
        }
    },
    {
        get: function(e) {
            var t = r.getEntry(n(this, "Map"), e);
            return t && t.v
        },
        set: function(e, t) {
            return r.def(n(this, "Map"), 0 === e ? 0 : e, t)
        }
    },
    r, !0)
},
function(e, t, i) {
    "use strict";
    function a(e, t) {
        var i, r = p(t);
        if ("F" !== r) return e._i[r];
        for (i = e._f; i; i = i.n) if (i.k == t) return i
    }
    var o = i(12).f,
    l = i(46),
    u = i(220),
    h = i(21),
    d = i(212),
    c = i(213),
    r = i(129),
    n = i(196),
    s = i(194),
    f = i(7),
    p = i(23).fastKey,
    v = i(223),
    m = f ? "_s": "size";
    e.exports = {
        getConstructor: function(e, s, i, r) {
            var n = e(function(e, t) {
                d(e, n, s, "_i"),
                e._t = s,
                e._i = l(null),
                e._f = void 0,
                e._l = void 0,
                e[m] = 0,
                null != t && c(t, i, e[r], e)
            });
            return u(n.prototype, {
                clear: function() {
                    for (var e = v(this, s), t = e._i, i = e._f; i; i = i.n) i.r = !0,
                    i.p && (i.p = i.p.n = void 0),
                    delete t[i.i];
                    e._f = e._l = void 0,
                    e[m] = 0
                },
                delete: function(e) {
                    var t = v(this, s),
                    i = a(t, e);
                    if (i) {
                        var r = i.n,
                        n = i.p;
                        delete t._i[i.i],
                        i.r = !0,
                        n && (n.n = r),
                        r && (r.p = n),
                        t._f == i && (t._f = r),
                        t._l == i && (t._l = n),
                        t[m]--
                    }
                    return !! i
                },
                forEach: function(e, t) {
                    v(this, s);
                    for (var i, r = h(e, 1 < arguments.length ? t: void 0, 3); i = i ? i.n: this._f;) for (r(i.v, i.k, this); i && i.r;) i = i.p
                },
                has: function(e) {
                    return !! a(v(this, s), e)
                }
            }),
            f && o(n.prototype, "size", {
                get: function() {
                    return v(this, s)[m]
                }
            }),
            n
        },
        def: function(e, t, i) {
            var r, n, s = a(e, t);
            return s ? s.v = i: (e._l = s = {
                i: n = p(t, !0),
                k: t,
                v: i,
                p: r = e._l,
                n: void 0,
                r: !1
            },
            e._f || (e._f = s), r && (r.n = s), e[m]++, "F" !== n && (e._i[n] = s)),
            e
        },
        getEntry: a,
        setStrong: function(e, i, t) {
            r(e, i,
            function(e, t) {
                this._t = v(e, i),
                this._k = t,
                this._l = void 0
            },
            function() {
                for (var e = this,
                t = e._k,
                i = e._l; i && i.r;) i = i.p;
                return e._t && (e._l = i = i ? i.n: e._t._f) ? n(0, "keys" == t ? i.k: "values" == t ? i.v: [i.k, i.v]) : (e._t = void 0, n(1))
            },
            t ? "entries": "values", !t, !0),
            s(i)
        }
    }
},
function(e, t, i) {
    var r = i(14);
    e.exports = function(e, t) {
        if (!r(e) || e._t !== t) throw TypeError("Incompatible receiver, " + t + " required!");
        return e
    }
},
function(e, t, i) {
    "use strict";
    var _ = i(5),
    g = i(9),
    y = i(19),
    b = i(220),
    S = i(23),
    E = i(213),
    k = i(212),
    w = i(14),
    T = i(8),
    A = i(167),
    R = i(26),
    I = i(88);
    e.exports = function(r, e, t, i, n, s) {
        function a(e) {
            var i = h[e];
            y(h, e, "delete" == e ?
            function(e) {
                return ! (s && !w(e)) && i.call(this, 0 === e ? 0 : e)
            }: "has" == e ?
            function(e) {
                return ! (s && !w(e)) && i.call(this, 0 === e ? 0 : e)
            }: "get" == e ?
            function(e) {
                return s && !w(e) ? void 0 : i.call(this, 0 === e ? 0 : e)
            }: "add" == e ?
            function(e) {
                return i.call(this, 0 === e ? 0 : e),
                this
            }: function(e, t) {
                return i.call(this, 0 === e ? 0 : e, t),
                this
            })
        }
        var o = _[r],
        l = o,
        u = n ? "set": "add",
        h = l && l.prototype,
        d = {};
        if ("function" == typeof l && (s || h.forEach && !T(function() { (new l).entries().next()
        }))) {
            var c = new l,
            f = c[u](s ? {}: -0, 1) != c,
            p = T(function() {
                c.has(1)
            }),
            v = A(function(e) {
                new l(e)
            }),
            m = !s && T(function() {
                for (var e = new l,
                t = 5; t--;) e[u](t, t);
                return ! e.has( - 0)
            });
            v || (((l = e(function(e, t) {
                k(e, l, r);
                var i = I(new o, e, l);
                return null != t && E(t, n, i[u], i),
                i
            })).prototype = h).constructor = l),
            (p || m) && (a("delete"), a("has"), n && a("get")),
            (m || f) && a(u),
            s && h.clear && delete h.clear
        } else l = i.getConstructor(e, r, n, u),
        b(l.prototype, t),
        S.NEED = !0;
        return R(l, r),
        d[r] = l,
        g(g.G + g.W + g.F * (l != o), d),
        s || i.setStrong(l, r, n),
        l
    }
},
function(e, t, i) {
    "use strict";
    var r = i(222),
    n = i(223);
    e.exports = i(224)("Set",
    function(t) {
        return function(e) {
            return t(this, 0 < arguments.length ? e: void 0)
        }
    },
    {
        add: function(e) {
            return r.def(n(this, "Set"), e = 0 === e ? 0 : e, e)
        }
    },
    r)
},
function(e, t, i) {
    "use strict";
    function r(t) {
        return function(e) {
            return t(this, 0 < arguments.length ? e: void 0)
        }
    }
    var s, n = i(174)(0),
    a = i(19),
    o = i(23),
    l = i(69),
    u = i(227),
    h = i(14),
    d = i(8),
    c = i(223),
    f = "WeakMap",
    p = o.getWeak,
    v = Object.isExtensible,
    m = u.ufstore,
    _ = {},
    g = {
        get: function(e) {
            if (h(e)) {
                var t = p(e);
                return ! 0 === t ? m(c(this, f)).get(e) : t ? t[this._i] : void 0
            }
        },
        set: function(e, t) {
            return u.def(c(this, f), e, t)
        }
    },
    y = e.exports = i(224)(f, r, g, u, !0, !0);
    d(function() {
        return 7 != (new y).set((Object.freeze || Object)(_), 7).get(_)
    }) && (l((s = u.getConstructor(r, f)).prototype, g), o.NEED = !0, n(["delete", "has", "get", "set"],
    function(r) {
        var e = y.prototype,
        n = e[r];
        a(e, r,
        function(e, t) {
            if (!h(e) || v(e)) return n.call(this, e, t);
            this._f || (this._f = new s);
            var i = this._f[r](e, t);
            return "set" == r ? this: i
        })
    }))
},
function(e, t, i) {
    "use strict";
    function a(e) {
        return e._l || (e._l = new _)
    }
    function r(e, t) {
        return p(e.a,
        function(e) {
            return e[0] === t
        })
    }
    var o = i(220),
    l = i(23).getWeak,
    n = i(13),
    u = i(14),
    h = i(212),
    d = i(213),
    s = i(174),
    c = i(6),
    f = i(223),
    p = s(5),
    v = s(6),
    m = 0,
    _ = function() {
        this.a = []
    };
    _.prototype = {
        get: function(e) {
            var t = r(this, e);
            if (t) return t[1]
        },
        has: function(e) {
            return !! r(this, e)
        },
        set: function(e, t) {
            var i = r(this, e);
            i ? i[1] = t: this.a.push([e, t])
        },
        delete: function(t) {
            var e = v(this.a,
            function(e) {
                return e[0] === t
            });
            return~e && this.a.splice(e, 1),
            !!~e
        }
    },
    e.exports = {
        getConstructor: function(e, i, r, n) {
            var s = e(function(e, t) {
                h(e, s, i, "_i"),
                e._t = i,
                e._i = m++,
                e._l = void 0,
                null != t && d(t, r, e[n], e)
            });
            return o(s.prototype, {
                delete: function(e) {
                    if (!u(e)) return ! 1;
                    var t = l(e);
                    return ! 0 === t ? a(f(this, i)).delete(e) : t && c(t, this._i) && delete t[this._i]
                },
                has: function(e) {
                    if (!u(e)) return ! 1;
                    var t = l(e);
                    return ! 0 === t ? a(f(this, i)).has(e) : t && c(t, this._i)
                }
            }),
            s
        },
        def: function(e, t, i) {
            var r = l(n(t), !0);
            return ! 0 === r ? a(e).set(t, i) : r[e._i] = i,
            e
        },
        ufstore: a
    }
},
function(e, t, i) {
    "use strict";
    var r = i(227),
    n = i(223),
    s = "WeakSet";
    i(224)(s,
    function(t) {
        return function(e) {
            return t(this, 0 < arguments.length ? e: void 0)
        }
    },
    {
        add: function(e) {
            return r.def(n(this, s), e, !0)
        }
    },
    r, !1, !0)
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(230),
    s = i(231),
    u = i(13),
    h = i(40),
    d = i(38),
    a = i(14),
    o = i(5).ArrayBuffer,
    c = i(210),
    f = s.ArrayBuffer,
    p = s.DataView,
    l = n.ABV && o.isView,
    v = f.prototype.slice,
    m = n.VIEW,
    _ = "ArrayBuffer";
    r(r.G + r.W + r.F * (o !== f), {
        ArrayBuffer: f
    }),
    r(r.S + r.F * !n.CONSTR, _, {
        isView: function(e) {
            return l && l(e) || a(e) && m in e
        }
    }),
    r(r.P + r.U + r.F * i(8)(function() {
        return ! new f(2).slice(1, void 0).byteLength
    }), _, {
        slice: function(e, t) {
            if (void 0 !== v && void 0 === t) return v.call(u(this), e);
            for (var i = u(this).byteLength, r = h(e, i), n = h(void 0 === t ? i: t, i), s = new(c(this, f))(d(n - r)), a = new p(this), o = new p(s), l = 0; r < n;) o.setUint8(l++, a.getUint8(r++));
            return s
        }
    }),
    i(194)(_)
},
function(e, t, i) {
    for (var r, n = i(5), s = i(11), a = i(20), o = a("typed_array"), l = a("view"), u = !(!n.ArrayBuffer || !n.DataView), h = u, d = 0, c = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); d < 9;)(r = n[c[d++]]) ? (s(r.prototype, o, !0), s(r.prototype, l, !0)) : h = !1;
    e.exports = {
        ABV: u,
        CONSTR: h,
        TYPED: o,
        VIEW: l
    }
},
function(e, t, i) {
    "use strict";
    var r = i(5),
    n = i(7),
    s = i(25),
    a = i(230),
    o = i(11),
    l = i(220),
    u = i(8),
    h = i(212),
    d = i(39),
    c = i(38),
    f = i(232),
    p = i(50).f,
    v = i(12).f,
    m = i(190),
    _ = i(26),
    g = "ArrayBuffer",
    y = "DataView",
    b = "prototype",
    S = "Wrong index!",
    E = r[g],
    k = r[y],
    w = r.Math,
    T = r.RangeError,
    A = r.Infinity,
    R = E,
    I = w.abs,
    x = w.pow,
    O = w.floor,
    C = w.log,
    L = w.LN2,
    D = "byteLength",
    P = "byteOffset",
    M = n ? "_b": "buffer",
    F = n ? "_l": D,
    N = n ? "_o": P;
    function B(e, t, i) {
        var r, n, s, a = new Array(i),
        o = 8 * i - t - 1,
        l = (1 << o) - 1,
        u = l >> 1,
        h = 23 === t ? x(2, -24) - x(2, -77) : 0,
        d = 0,
        c = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
        for ((e = I(e)) != e || e === A ? (n = e != e ? 1 : 0, r = l) : (r = O(C(e) / L), e * (s = x(2, -r)) < 1 && (r--, s *= 2), 2 <= (e += 1 <= r + u ? h / s: h * x(2, 1 - u)) * s && (r++, s /= 2), l <= r + u ? (n = 0, r = l) : 1 <= r + u ? (n = (e * s - 1) * x(2, t), r += u) : (n = e * x(2, u - 1) * x(2, t), r = 0)); 8 <= t; a[d++] = 255 & n, n /= 256, t -= 8);
        for (r = r << t | n, o += t; 0 < o; a[d++] = 255 & r, r /= 256, o -= 8);
        return a[--d] |= 128 * c,
        a
    }
    function U(e, t, i) {
        var r, n = 8 * i - t - 1,
        s = (1 << n) - 1,
        a = s >> 1,
        o = n - 7,
        l = i - 1,
        u = e[l--],
        h = 127 & u;
        for (u >>= 7; 0 < o; h = 256 * h + e[l], l--, o -= 8);
        for (r = h & (1 << -o) - 1, h >>= -o, o += t; 0 < o; r = 256 * r + e[l], l--, o -= 8);
        if (0 === h) h = 1 - a;
        else {
            if (h === s) return r ? NaN: u ? -A: A;
            r += x(2, t),
            h -= a
        }
        return (u ? -1 : 1) * r * x(2, h - t)
    }
    function j(e) {
        return e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0]
    }
    function z(e) {
        return [255 & e]
    }
    function G(e) {
        return [255 & e, e >> 8 & 255]
    }
    function V(e) {
        return [255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255]
    }
    function W(e) {
        return B(e, 52, 8)
    }
    function H(e) {
        return B(e, 23, 4)
    }
    function K(e, t, i) {
        v(e[b], t, {
            get: function() {
                return this[i]
            }
        })
    }
    function q(e, t, i, r) {
        var n = f( + i);
        if (n + t > e[F]) throw T(S);
        var s = e[M]._b,
        a = n + e[N],
        o = s.slice(a, a + t);
        return r ? o: o.reverse()
    }
    function Y(e, t, i, r, n, s) {
        var a = f( + i);
        if (a + t > e[F]) throw T(S);
        for (var o = e[M]._b, l = a + e[N], u = r( + n), h = 0; h < t; h++) o[l + h] = u[s ? h: t - h - 1]
    }
    if (a.ABV) {
        if (!u(function() {
            E(1)
        }) || !u(function() {
            new E( - 1)
        }) || u(function() {
            return new E,
            new E(1.5),
            new E(NaN),
            E.name != g
        })) {
            for (var Z, X = (E = function(e) {
                return h(this, E),
                new R(f(e))
            })[b] = R[b], J = p(R), $ = 0; J.length > $;)(Z = J[$++]) in E || o(E, Z, R[Z]);
            s || (X.constructor = E)
        }
        var Q = new k(new E(2)),
        ee = k[b].setInt8;
        Q.setInt8(0, 2147483648),
        Q.setInt8(1, 2147483649),
        !Q.getInt8(0) && Q.getInt8(1) || l(k[b], {
            setInt8: function(e, t) {
                ee.call(this, e, t << 24 >> 24)
            },
            setUint8: function(e, t) {
                ee.call(this, e, t << 24 >> 24)
            }
        },
        !0)
    } else E = function(e) {
        h(this, E, g);
        var t = f(e);
        this._b = m.call(new Array(t), 0),
        this[F] = t
    },
    k = function(e, t, i) {
        h(this, k, y),
        h(e, E, y);
        var r = e[F],
        n = d(t);
        if (n < 0 || r < n) throw T("Wrong offset!");
        if (r < n + (i = void 0 === i ? r - n: c(i))) throw T("Wrong length!");
        this[M] = e,
        this[N] = n,
        this[F] = i
    },
    n && (K(E, D, "_l"), K(k, "buffer", "_b"), K(k, D, "_l"), K(k, P, "_o")),
    l(k[b], {
        getInt8: function(e) {
            return q(this, 1, e)[0] << 24 >> 24
        },
        getUint8: function(e) {
            return q(this, 1, e)[0]
        },
        getInt16: function(e, t) {
            var i = q(this, 2, e, t);
            return (i[1] << 8 | i[0]) << 16 >> 16
        },
        getUint16: function(e, t) {
            var i = q(this, 2, e, t);
            return i[1] << 8 | i[0]
        },
        getInt32: function(e, t) {
            return j(q(this, 4, e, t))
        },
        getUint32: function(e, t) {
            return j(q(this, 4, e, t)) >>> 0
        },
        getFloat32: function(e, t) {
            return U(q(this, 4, e, t), 23, 4)
        },
        getFloat64: function(e, t) {
            return U(q(this, 8, e, t), 52, 8)
        },
        setInt8: function(e, t) {
            Y(this, 1, e, z, t)
        },
        setUint8: function(e, t) {
            Y(this, 1, e, z, t)
        },
        setInt16: function(e, t, i) {
            Y(this, 2, e, G, t, i)
        },
        setUint16: function(e, t, i) {
            Y(this, 2, e, G, t, i)
        },
        setInt32: function(e, t, i) {
            Y(this, 4, e, V, t, i)
        },
        setUint32: function(e, t, i) {
            Y(this, 4, e, V, t, i)
        },
        setFloat32: function(e, t, i) {
            Y(this, 4, e, H, t, i)
        },
        setFloat64: function(e, t, i) {
            Y(this, 8, e, W, t, i)
        }
    });
    _(E, g),
    _(k, y),
    o(k[b], a.VIEW, !0),
    t[g] = E,
    t[y] = k
},
function(e, t, i) {
    var r = i(39),
    n = i(38);
    e.exports = function(e) {
        if (void 0 === e) return 0;
        var t = r(e),
        i = n(t);
        if (t !== i) throw RangeError("Wrong length!");
        return i
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.G + r.W + r.F * !i(230).ABV, {
        DataView: i(231).DataView
    })
},
function(e, t, i) {
    i(235)("Int8", 1,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    "use strict";
    if (i(7)) {
        var _ = i(25),
        g = i(5),
        y = i(8),
        b = i(9),
        S = i(230),
        r = i(231),
        p = i(21),
        E = i(212),
        n = i(18),
        k = i(11),
        s = i(220),
        a = i(39),
        w = i(38),
        T = i(232),
        o = i(40),
        l = i(17),
        u = i(6),
        A = i(75),
        R = i(14),
        v = i(58),
        m = i(164),
        I = i(46),
        x = i(59),
        O = i(50).f,
        C = i(166),
        h = i(20),
        d = i(27),
        c = i(174),
        f = i(37),
        L = i(210),
        D = i(195),
        P = i(130),
        M = i(167),
        F = i(194),
        N = i(190),
        B = i(187),
        U = i(12),
        j = i(51),
        z = U.f,
        G = j.f,
        V = g.RangeError,
        W = g.TypeError,
        H = g.Uint8Array,
        K = "ArrayBuffer",
        q = "Shared" + K,
        Y = "BYTES_PER_ELEMENT",
        Z = "prototype",
        X = Array[Z],
        J = r.ArrayBuffer,
        $ = r.DataView,
        Q = c(0),
        ee = c(2),
        te = c(3),
        ie = c(4),
        re = c(5),
        ne = c(6),
        se = f(!0),
        ae = f(!1),
        oe = D.values,
        le = D.keys,
        ue = D.entries,
        he = X.lastIndexOf,
        de = X.reduce,
        ce = X.reduceRight,
        fe = X.join,
        pe = X.sort,
        ve = X.slice,
        me = X.toString,
        _e = X.toLocaleString,
        ge = d("iterator"),
        ye = d("toStringTag"),
        be = h("typed_constructor"),
        Se = h("def_constructor"),
        Ee = S.CONSTR,
        ke = S.TYPED,
        we = S.VIEW,
        Te = "Wrong length!",
        Ae = c(1,
        function(e, t) {
            return Ce(L(e, e[Se]), t)
        }),
        Re = y(function() {
            return 1 === new H(new Uint16Array([1]).buffer)[0]
        }),
        Ie = !!H && !!H[Z].set && y(function() {
            new H(1).set({})
        }),
        xe = function(e, t) {
            var i = a(e);
            if (i < 0 || i % t) throw V("Wrong offset!");
            return i
        },
        Oe = function(e) {
            if (R(e) && ke in e) return e;
            throw W(e + " is not a typed array!")
        },
        Ce = function(e, t) {
            if (! (R(e) && be in e)) throw W("It is not a typed array constructor!");
            return new e(t)
        },
        Le = function(e, t) {
            return De(L(e, e[Se]), t)
        },
        De = function(e, t) {
            for (var i = 0,
            r = t.length,
            n = Ce(e, r); i < r;) n[i] = t[i++];
            return n
        },
        Pe = function(e, t, i) {
            z(e, t, {
                get: function() {
                    return this._d[i]
                }
            })
        },
        Me = function(e, t, i) {
            var r, n, s, a, o, l, u = v(e),
            h = arguments.length,
            d = 1 < h ? t: void 0,
            c = void 0 !== d,
            f = C(u);
            if (null != f && !m(f)) {
                for (l = f.call(u), s = [], r = 0; ! (o = l.next()).done; r++) s.push(o.value);
                u = s
            }
            for (c && 2 < h && (d = p(d, i, 2)), r = 0, n = w(u.length), a = Ce(this, n); r < n; r++) a[r] = c ? d(u[r], r) : u[r];
            return a
        },
        Fe = function() {
            for (var e = 0,
            t = arguments.length,
            i = Ce(this, t); e < t;) i[e] = arguments[e++];
            return i
        },
        Ne = !!H && y(function() {
            _e.call(new H(1))
        }),
        Be = function() {
            return _e.apply(Ne ? ve.call(Oe(this)) : Oe(this), arguments)
        },
        Ue = {
            copyWithin: function(e, t, i) {
                return B.call(Oe(this), e, t, 2 < arguments.length ? i: void 0)
            },
            every: function(e, t) {
                return ie(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            fill: function(e) {
                return N.apply(Oe(this), arguments)
            },
            filter: function(e, t) {
                return Le(this, ee(Oe(this), e, 1 < arguments.length ? t: void 0))
            },
            find: function(e, t) {
                return re(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            findIndex: function(e, t) {
                return ne(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            forEach: function(e, t) {
                Q(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            indexOf: function(e, t) {
                return ae(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            includes: function(e, t) {
                return se(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            join: function(e) {
                return fe.apply(Oe(this), arguments)
            },
            lastIndexOf: function(e) {
                return he.apply(Oe(this), arguments)
            },
            map: function(e, t) {
                return Ae(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            reduce: function(e) {
                return de.apply(Oe(this), arguments)
            },
            reduceRight: function(e) {
                return ce.apply(Oe(this), arguments)
            },
            reverse: function() {
                for (var e, t = this,
                i = Oe(t).length, r = Math.floor(i / 2), n = 0; n < r;) e = t[n],
                t[n++] = t[--i],
                t[i] = e;
                return t
            },
            some: function(e, t) {
                return te(Oe(this), e, 1 < arguments.length ? t: void 0)
            },
            sort: function(e) {
                return pe.call(Oe(this), e)
            },
            subarray: function(e, t) {
                var i = Oe(this),
                r = i.length,
                n = o(e, r);
                return new(L(i, i[Se]))(i.buffer, i.byteOffset + n * i.BYTES_PER_ELEMENT, w((void 0 === t ? r: o(t, r)) - n))
            }
        },
        je = function(e, t) {
            return Le(this, ve.call(Oe(this), e, t))
        },
        ze = function(e, t) {
            Oe(this);
            var i = xe(t, 1),
            r = this.length,
            n = v(e),
            s = w(n.length),
            a = 0;
            if (r < s + i) throw V(Te);
            for (; a < s;) this[i + a] = n[a++]
        },
        Ge = {
            entries: function() {
                return ue.call(Oe(this))
            },
            keys: function() {
                return le.call(Oe(this))
            },
            values: function() {
                return oe.call(Oe(this))
            }
        },
        Ve = function(e, t) {
            return R(e) && e[ke] && "symbol" != typeof t && t in e && String( + t) == String(t)
        },
        We = function(e, t) {
            return Ve(e, t = l(t, !0)) ? n(2, e[t]) : G(e, t)
        },
        He = function(e, t, i) {
            return ! (Ve(e, t = l(t, !0)) && R(i) && u(i, "value")) || u(i, "get") || u(i, "set") || i.configurable || u(i, "writable") && !i.writable || u(i, "enumerable") && !i.enumerable ? z(e, t, i) : (e[t] = i.value, e)
        };
        Ee || (j.f = We, U.f = He),
        b(b.S + b.F * !Ee, "Object", {
            getOwnPropertyDescriptor: We,
            defineProperty: He
        }),
        y(function() {
            me.call({})
        }) && (me = _e = function() {
            return fe.call(this)
        });
        var Ke = s({},
        Ue);
        s(Ke, Ge),
        k(Ke, ge, Ge.values),
        s(Ke, {
            slice: je,
            set: ze,
            constructor: function() {},
            toString: me,
            toLocaleString: Be
        }),
        Pe(Ke, "buffer", "b"),
        Pe(Ke, "byteOffset", "o"),
        Pe(Ke, "byteLength", "l"),
        Pe(Ke, "length", "e"),
        z(Ke, ye, {
            get: function() {
                return this[ke]
            }
        }),
        e.exports = function(e, d, t, n) {
            function c(e, t) {
                z(e, t, {
                    get: function() {
                        return function(e, t) {
                            var i = e._d;
                            return i.v[r](t * d + i.o, Re)
                        } (this, t)
                    },
                    set: function(e) {
                        return function(e, t, i) {
                            var r = e._d;
                            n && (i = (i = Math.round(i)) < 0 ? 0 : 255 < i ? 255 : 255 & i),
                            r.v[s](t * d + r.o, i, Re)
                        } (this, t, e)
                    },
                    enumerable: !0
                })
            }
            var f = e + ((n = !!n) ? "Clamped": "") + "Array",
            r = "get" + e,
            s = "set" + e,
            p = g[f],
            a = p || {},
            i = p && x(p),
            o = !p || !S.ABV,
            l = {},
            u = p && p[Z];
            o ? (p = t(function(e, t, i, r) {
                E(e, p, f, "_d");
                var n, s, a, o, l = 0,
                u = 0;
                if (R(t)) {
                    if (! (t instanceof J || (o = A(t)) == K || o == q)) return ke in t ? De(p, t) : Me.call(p, t);
                    n = t,
                    u = xe(i, d);
                    var h = t.byteLength;
                    if (void 0 === r) {
                        if (h % d) throw V(Te);
                        if ((s = h - u) < 0) throw V(Te)
                    } else if (h < (s = w(r) * d) + u) throw V(Te);
                    a = s / d
                } else a = T(t),
                n = new J(s = a * d);
                for (k(e, "_d", {
                    b: n,
                    o: u,
                    l: s,
                    e: a,
                    v: new $(n)
                }); l < a;) c(e, l++)
            }), u = p[Z] = I(Ke), k(u, "constructor", p)) : y(function() {
                p(1)
            }) && y(function() {
                new p( - 1)
            }) && M(function(e) {
                new p,
                new p(null),
                new p(1.5),
                new p(e)
            },
            !0) || (p = t(function(e, t, i, r) {
                var n;
                return E(e, p, f),
                R(t) ? t instanceof J || (n = A(t)) == K || n == q ? void 0 !== r ? new a(t, xe(i, d), r) : void 0 !== i ? new a(t, xe(i, d)) : new a(t) : ke in t ? De(p, t) : Me.call(p, t) : new a(T(t))
            }), Q(i !== Function.prototype ? O(a).concat(O(i)) : O(a),
            function(e) {
                e in p || k(p, e, a[e])
            }), p[Z] = u, _ || (u.constructor = p));
            var h = u[ge],
            v = !!h && ("values" == h.name || null == h.name),
            m = Ge.values;
            k(p, be, !0),
            k(u, ke, f),
            k(u, we, !0),
            k(u, Se, p),
            (n ? new p(1)[ye] == f: ye in u) || z(u, ye, {
                get: function() {
                    return f
                }
            }),
            l[f] = p,
            b(b.G + b.W + b.F * (p != a), l),
            b(b.S, f, {
                BYTES_PER_ELEMENT: d
            }),
            b(b.S + b.F * y(function() {
                a.of.call(p, 1)
            }), f, {
                from: Me,
                of: Fe
            }),
            Y in u || k(u, Y, d),
            b(b.P, f, Ue),
            F(f),
            b(b.P + b.F * Ie, f, {
                set: ze
            }),
            b(b.P + b.F * !v, f, Ge),
            _ || u.toString == me || (u.toString = me),
            b(b.P + b.F * y(function() {
                new p(1).slice()
            }), f, {
                slice: je
            }),
            b(b.P + b.F * (y(function() {
                return [1, 2].toLocaleString() != new p([1, 2]).toLocaleString()
            }) || !y(function() {
                u.toLocaleString.call([1, 2])
            })), f, {
                toLocaleString: Be
            }),
            P[f] = v ? h: m,
            _ || v || k(u, ge, m)
        }
    } else e.exports = function() {}
},
function(e, t, i) {
    i(235)("Uint8", 1,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    i(235)("Uint8", 1,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    },
    !0)
},
function(e, t, i) {
    i(235)("Int16", 2,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    i(235)("Uint16", 2,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    i(235)("Int32", 4,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    i(235)("Uint32", 4,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    i(235)("Float32", 4,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    i(235)("Float64", 8,
    function(r) {
        return function(e, t, i) {
            return r(this, e, t, i)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    s = i(22),
    a = i(13),
    o = (i(5).Reflect || {}).apply,
    l = Function.apply;
    r(r.S + r.F * !i(8)(function() {
        o(function() {})
    }), "Reflect", {
        apply: function(e, t, i) {
            var r = s(e),
            n = a(i);
            return o ? o(r, t, n) : l.call(r, t, n)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    l = i(46),
    u = i(22),
    h = i(13),
    d = i(14),
    n = i(8),
    c = i(77),
    f = (i(5).Reflect || {}).construct,
    p = n(function() {
        function e() {}
        return ! (f(function() {},
        [], e) instanceof e)
    }),
    v = !n(function() {
        f(function() {})
    });
    r(r.S + r.F * (p || v), "Reflect", {
        construct: function(e, t, i) {
            u(e),
            h(t);
            var r = arguments.length < 3 ? e: u(i);
            if (v && !p) return f(e, t, r);
            if (e == r) {
                switch (t.length) {
                case 0:
                    return new e;
                case 1:
                    return new e(t[0]);
                case 2:
                    return new e(t[0], t[1]);
                case 3:
                    return new e(t[0], t[1], t[2]);
                case 4:
                    return new e(t[0], t[1], t[2], t[3])
                }
                var n = [null];
                return n.push.apply(n, t),
                new(c.apply(e, n))
            }
            var s = r.prototype,
            a = l(d(s) ? s: Object.prototype),
            o = Function.apply.call(e, a, t);
            return d(o) ? o: a
        }
    })
},
function(e, t, i) {
    var r = i(12),
    n = i(9),
    s = i(13),
    a = i(17);
    n(n.S + n.F * i(8)(function() {
        Reflect.defineProperty(r.f({},
        1, {
            value: 1
        }), 1, {
            value: 2
        })
    }), "Reflect", {
        defineProperty: function(e, t, i) {
            s(e),
            t = a(t, !0),
            s(i);
            try {
                return r.f(e, t, i),
                !0
            } catch(e) {
                return ! 1
            }
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(51).f,
    s = i(13);
    r(r.S, "Reflect", {
        deleteProperty: function(e, t) {
            var i = n(s(e), t);
            return ! (i && !i.configurable) && delete e[t]
        }
    })
},
function(e, t, i) {
    "use strict";
    function r(e) {
        this._t = s(e),
        this._i = 0;
        var t, i = this._k = [];
        for (t in e) i.push(t)
    }
    var n = i(9),
    s = i(13);
    i(131)(r, "Object",
    function() {
        var e, t = this._k;
        do {
            if (this._i >= t.length) return {
                value: void 0,
                done: !0
            }
        } while (!(( e = t [ this . _i ++]) in this._t));
        return {
            value: e,
            done: !1
        }
    }),
    n(n.S, "Reflect", {
        enumerate: function(e) {
            return new r(e)
        }
    })
},
function(e, t, i) {
    var a = i(51),
    o = i(59),
    l = i(6),
    r = i(9),
    u = i(14),
    h = i(13);
    r(r.S, "Reflect", {
        get: function e(t, i) {
            var r, n, s = arguments.length < 3 ? t: arguments[2];
            return h(t) === s ? t[i] : (r = a.f(t, i)) ? l(r, "value") ? r.value: void 0 !== r.get ? r.get.call(s) : void 0 : u(n = o(t)) ? e(n, i, s) : void 0
        }
    })
},
function(e, t, i) {
    var r = i(51),
    n = i(9),
    s = i(13);
    n(n.S, "Reflect", {
        getOwnPropertyDescriptor: function(e, t) {
            return r.f(s(e), t)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(59),
    s = i(13);
    r(r.S, "Reflect", {
        getPrototypeOf: function(e) {
            return n(s(e))
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Reflect", {
        has: function(e, t) {
            return t in e
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(13),
    s = Object.isExtensible;
    r(r.S, "Reflect", {
        isExtensible: function(e) {
            return n(e),
            !s || s(e)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Reflect", {
        ownKeys: i(255)
    })
},
function(e, t, i) {
    var r = i(50),
    n = i(43),
    s = i(13),
    a = i(5).Reflect;
    e.exports = a && a.ownKeys ||
    function(e) {
        var t = r.f(s(e)),
        i = n.f;
        return i ? t.concat(i(e)) : t
    }
},
function(e, t, i) {
    var r = i(9),
    n = i(13),
    s = Object.preventExtensions;
    r(r.S, "Reflect", {
        preventExtensions: function(e) {
            n(e);
            try {
                return s && s(e),
                !0
            } catch(e) {
                return ! 1
            }
        }
    })
},
function(e, t, i) {
    var l = i(12),
    u = i(51),
    h = i(59),
    d = i(6),
    r = i(9),
    c = i(18),
    f = i(13),
    p = i(14);
    r(r.S, "Reflect", {
        set: function e(t, i, r) {
            var n, s, a = arguments.length < 4 ? t: arguments[3],
            o = u.f(f(t), i);
            if (!o) {
                if (p(s = h(t))) return e(s, i, r, a);
                o = c(0)
            }
            if (d(o, "value")) {
                if (!1 === o.writable || !p(a)) return ! 1;
                if (n = u.f(a, i)) {
                    if (n.get || n.set || !1 === n.writable) return ! 1;
                    n.value = r,
                    l.f(a, i, n)
                } else l.f(a, i, c(0, r));
                return ! 0
            }
            return void 0 !== o.set && (o.set.call(a, r), !0)
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(73);
    n && r(r.S, "Reflect", {
        setPrototypeOf: function(e, t) {
            n.check(e, t);
            try {
                return n.set(e, t),
                !0
            } catch(e) {
                return ! 1
            }
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(37)(!0);
    r(r.P, "Array", {
        includes: function(e, t) {
            return n(this, e, 1 < arguments.length ? t: void 0)
        }
    }),
    i(188)("includes")
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    s = i(261),
    a = i(58),
    o = i(38),
    l = i(22),
    u = i(175);
    r(r.P, "Array", {
        flatMap: function(e, t) {
            var i, r, n = a(this);
            return l(e),
            i = o(n.length),
            r = u(n, 0),
            s(r, n, n, i, 0, 1, e, t),
            r
        }
    }),
    i(188)("flatMap")
},
function(e, t, i) {
    "use strict";
    var p = i(45),
    v = i(14),
    m = i(38),
    _ = i(21),
    g = i(27)("isConcatSpreadable");
    e.exports = function e(t, i, r, n, s, a, o, l) {
        for (var u, h, d = s,
        c = 0,
        f = !!o && _(o, l, 3); c < n;) {
            if (c in r) {
                if (u = f ? f(r[c], c, i) : r[c], h = !1, v(u) && (h = void 0 !== (h = u[g]) ? !!h: p(u)), h && 0 < a) d = e(t, i, u, m(u.length), d, a - 1) - 1;
                else {
                    if (9007199254740991 <= d) throw TypeError();
                    t[d] = u
                }
                d++
            }
            c++
        }
        return d
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    s = i(261),
    a = i(58),
    o = i(38),
    l = i(39),
    u = i(175);
    r(r.P, "Array", {
        flatten: function(e) {
            var t = e,
            i = a(this),
            r = o(i.length),
            n = u(i, 0);
            return s(n, i, i, r, 0, void 0 === t ? 1 : l(t)),
            n
        }
    }),
    i(188)("flatten")
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(128)(!0);
    r(r.P, "String", {
        at: function(e) {
            return n(this, e)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(265),
    s = i(218);
    r(r.P + r.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(s), "String", {
        padStart: function(e, t) {
            return n(this, e, 1 < arguments.length ? t: void 0, !0)
        }
    })
},
function(e, t, i) {
    var h = i(38),
    d = i(91),
    c = i(36);
    e.exports = function(e, t, i, r) {
        var n = String(c(e)),
        s = n.length,
        a = void 0 === i ? " ": String(i),
        o = h(t);
        if (o <= s || "" == a) return n;
        var l = o - s,
        u = d.call(a, Math.ceil(l / a.length));
        return u.length > l && (u = u.slice(0, l)),
        r ? u + n: n + u
    }
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(265),
    s = i(218);
    r(r.P + r.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(s), "String", {
        padEnd: function(e, t) {
            return n(this, e, 1 < arguments.length ? t: void 0, !1)
        }
    })
},
function(e, t, i) {
    "use strict";
    i(83)("trimLeft",
    function(e) {
        return function() {
            return e(this, 1)
        }
    },
    "trimStart")
},
function(e, t, i) {
    "use strict";
    i(83)("trimRight",
    function(e) {
        return function() {
            return e(this, 2)
        }
    },
    "trimEnd")
},
function(e, t, i) {
    "use strict";
    function n(e, t) {
        this._r = e,
        this._s = t
    }
    var r = i(9),
    s = i(36),
    a = i(38),
    o = i(135),
    l = i(198),
    u = RegExp.prototype;
    i(131)(n, "RegExp String",
    function() {
        var e = this._r.exec(this._s);
        return {
            value: e,
            done: null === e
        }
    }),
    r(r.P, "String", {
        matchAll: function(e) {
            if (s(this), !o(e)) throw TypeError(e + " is not a regexp!");
            var t = String(this),
            i = "flags" in u ? String(e.flags) : l.call(e),
            r = new RegExp(e.source, ~i.indexOf("g") ? i: "g" + i);
            return r.lastIndex = a(e.lastIndex),
            new n(r, t)
        }
    })
},
function(e, t, i) {
    i(29)("asyncIterator")
},
function(e, t, i) {
    i(29)("observable")
},
function(e, t, i) {
    var r = i(9),
    l = i(255),
    u = i(33),
    h = i(51),
    d = i(165);
    r(r.S, "Object", {
        getOwnPropertyDescriptors: function(e) {
            for (var t, i, r = u(e), n = h.f, s = l(r), a = {},
            o = 0; s.length > o;) void 0 !== (i = n(r, t = s[o++])) && d(a, t, i);
            return a
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(274)(!1);
    r(r.S, "Object", {
        values: function(e) {
            return n(e)
        }
    })
},
function(e, t, i) {
    var l = i(31),
    u = i(33),
    h = i(44).f;
    e.exports = function(o) {
        return function(e) {
            for (var t, i = u(e), r = l(i), n = r.length, s = 0, a = []; s < n;) h.call(i, t = r[s++]) && a.push(o ? [t, i[t]] : i[t]);
            return a
        }
    }
},
function(e, t, i) {
    var r = i(9),
    n = i(274)(!0);
    r(r.S, "Object", {
        entries: function(e) {
            return n(e)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(58),
    s = i(22),
    a = i(12);
    i(7) && r(r.P + i(277), "Object", {
        __defineGetter__: function(e, t) {
            a.f(n(this), e, {
                get: s(t),
                enumerable: !0,
                configurable: !0
            })
        }
    })
},
function(e, t, i) {
    "use strict";
    e.exports = i(25) || !i(8)(function() {
        var e = Math.random();
        __defineSetter__.call(null, e,
        function() {}),
        delete i(5)[e]
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(58),
    s = i(22),
    a = i(12);
    i(7) && r(r.P + i(277), "Object", {
        __defineSetter__: function(e, t) {
            a.f(n(this), e, {
                set: s(t),
                enumerable: !0,
                configurable: !0
            })
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(58),
    s = i(17),
    a = i(59),
    o = i(51).f;
    i(7) && r(r.P + i(277), "Object", {
        __lookupGetter__: function(e) {
            var t, i = n(this),
            r = s(e, !0);
            do {
                if (t = o(i, r)) return t.get
            } while ( i = a ( i ))
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(58),
    s = i(17),
    a = i(59),
    o = i(51).f;
    i(7) && r(r.P + i(277), "Object", {
        __lookupSetter__: function(e) {
            var t, i = n(this),
            r = s(e, !0);
            do {
                if (t = o(i, r)) return t.set
            } while ( i = a ( i ))
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.P + r.R, "Map", {
        toJSON: i(282)("Map")
    })
},
function(e, t, i) {
    var r = i(75),
    n = i(283);
    e.exports = function(e) {
        return function() {
            if (r(this) != e) throw TypeError(e + "#toJSON isn't generic");
            return n(this)
        }
    }
},
function(e, t, i) {
    var r = i(213);
    e.exports = function(e, t) {
        var i = [];
        return r(e, !1, i.push, i, t),
        i
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.P + r.R, "Set", {
        toJSON: i(282)("Set")
    })
},
function(e, t, i) {
    i(286)("Map")
},
function(e, t, i) {
    "use strict";
    var r = i(9);
    e.exports = function(e) {
        r(r.S, e, {
            of: function() {
                for (var e = arguments.length,
                t = new Array(e); e--;) t[e] = arguments[e];
                return new this(t)
            }
        })
    }
},
function(e, t, i) {
    i(286)("Set")
},
function(e, t, i) {
    i(286)("WeakMap")
},
function(e, t, i) {
    i(286)("WeakSet")
},
function(e, t, i) {
    i(291)("Map")
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    l = i(22),
    u = i(21),
    h = i(213);
    e.exports = function(e) {
        r(r.S, e, {
            from: function(e, t, i) {
                var r, n, s, a, o = t;
                return l(this),
                (r = void 0 !== o) && l(o),
                null == e ? new this: (n = [], r ? (s = 0, a = u(o, i, 2), h(e, !1,
                function(e) {
                    n.push(a(e, s++))
                })) : h(e, !1, n.push, n), new this(n))
            }
        })
    }
},
function(e, t, i) {
    i(291)("Set")
},
function(e, t, i) {
    i(291)("WeakMap")
},
function(e, t, i) {
    i(291)("WeakSet")
},
function(e, t, i) {
    var r = i(9);
    r(r.G, {
        global: i(5)
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "System", {
        global: i(5)
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(35);
    r(r.S, "Error", {
        isError: function(e) {
            return "Error" === n(e)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        clamp: function(e, t, i) {
            return Math.min(i, Math.max(t, e))
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        DEG_PER_RAD: Math.PI / 180
    })
},
function(e, t, i) {
    var r = i(9),
    n = 180 / Math.PI;
    r(r.S, "Math", {
        degrees: function(e) {
            return e * n
        }
    })
},
function(e, t, i) {
    var r = i(9),
    s = i(302),
    a = i(114);
    r(r.S, "Math", {
        fscale: function(e, t, i, r, n) {
            return a(s(e, t, i, r, n))
        }
    })
},
function(e, t) {
    e.exports = Math.scale ||
    function(e, t, i, r, n) {
        return 0 === arguments.length || e != e || t != t || i != i || r != r || n != n ? NaN: e === 1 / 0 || e === -1 / 0 ? e: (e - t) * (n - r) / (i - t) + r
    }
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        iaddh: function(e, t, i, r) {
            var n = e >>> 0,
            s = i >>> 0;
            return (t >>> 0) + (r >>> 0) + ((n & s | (n | s) & ~ (n + s >>> 0)) >>> 31) | 0
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        isubh: function(e, t, i, r) {
            var n = e >>> 0,
            s = i >>> 0;
            return (t >>> 0) - (r >>> 0) - ((~n & s | ~ (n ^ s) & n - s >>> 0) >>> 31) | 0
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        imulh: function(e, t) {
            var i = +e,
            r = +t,
            n = 65535 & i,
            s = 65535 & r,
            a = i >> 16,
            o = r >> 16,
            l = (a * s >>> 0) + (n * s >>> 16);
            return a * o + (l >> 16) + ((n * o >>> 0) + (65535 & l) >> 16)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        RAD_PER_DEG: 180 / Math.PI
    })
},
function(e, t, i) {
    var r = i(9),
    n = Math.PI / 180;
    r(r.S, "Math", {
        radians: function(e) {
            return e * n
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        scale: i(302)
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        umulh: function(e, t) {
            var i = +e,
            r = +t,
            n = 65535 & i,
            s = 65535 & r,
            a = i >>> 16,
            o = r >>> 16,
            l = (a * s >>> 0) + (n * s >>> 16);
            return a * o + (l >>> 16) + ((n * o >>> 0) + (65535 & l) >>> 16)
        }
    })
},
function(e, t, i) {
    var r = i(9);
    r(r.S, "Math", {
        signbit: function(e) {
            return (e = +e) != e ? e: 0 == e ? 1 / e == 1 / 0 : 0 < e
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(10),
    s = i(5),
    a = i(210),
    o = i(219);
    r(r.P + r.R, "Promise", {
        finally: function(t) {
            var i = a(this, n.Promise || s.Promise),
            e = "function" == typeof t;
            return this.then(e ?
            function(e) {
                return o(i, t()).then(function() {
                    return e
                })
            }: t, e ?
            function(e) {
                return o(i, t()).then(function() {
                    throw e
                })
            }: t)
        }
    })
},
function(e, t, i) {
    "use strict";
    var r = i(9),
    n = i(216),
    s = i(217);
    r(r.S, "Promise", {
        try: function(e) {
            var t = n.f(this),
            i = s(e);
            return (i.e ? t.reject: t.resolve)(i.v),
            t.promise
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = r.key,
    a = r.set;
    r.exp({
        defineMetadata: function(e, t, i, r) {
            a(e, t, n(i), s(r))
        }
    })
},
function(e, t, i) {
    function n(e, t, i) {
        var r = o.get(e);
        if (!r) {
            if (!i) return;
            o.set(e, r = new s)
        }
        var n = r.get(t);
        if (!n) {
            if (!i) return;
            r.set(t, n = new s)
        }
        return n
    }
    var s = i(221),
    r = i(9),
    a = i(24)("metadata"),
    o = a.store || (a.store = new(i(226)));
    e.exports = {
        store: o,
        map: n,
        has: function(e, t, i) {
            var r = n(t, i, !1);
            return void 0 !== r && r.has(e)
        },
        get: function(e, t, i) {
            var r = n(t, i, !1);
            return void 0 === r ? void 0 : r.get(e)
        },
        set: function(e, t, i, r) {
            n(i, r, !0).set(e, t)
        },
        keys: function(e, t) {
            var i = n(e, t, !1),
            r = [];
            return i && i.forEach(function(e, t) {
                r.push(t)
            }),
            r
        },
        key: function(e) {
            return void 0 === e || "symbol" == typeof e ? e: String(e)
        },
        exp: function(e) {
            r(r.S, "Reflect", e)
        }
    }
},
function(e, t, i) {
    var r = i(314),
    a = i(13),
    o = r.key,
    l = r.map,
    u = r.store;
    r.exp({
        deleteMetadata: function(e, t, i) {
            var r = arguments.length < 3 ? void 0 : o(i),
            n = l(a(t), r, !1);
            if (void 0 === n || !n.delete(e)) return ! 1;
            if (n.size) return ! 0;
            var s = u.get(t);
            return s.delete(r),
            !!s.size || u.delete(t)
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = i(59),
    a = r.has,
    o = r.get,
    l = r.key,
    u = function(e, t, i) {
        if (a(e, t, i)) return o(e, t, i);
        var r = s(t);
        return null !== r ? u(e, r, i) : void 0
    };
    r.exp({
        getMetadata: function(e, t, i) {
            return u(e, n(t), arguments.length < 3 ? void 0 : l(i))
        }
    })
},
function(e, t, i) {
    var s = i(225),
    a = i(283),
    r = i(314),
    n = i(13),
    o = i(59),
    l = r.keys,
    u = r.key,
    h = function(e, t) {
        var i = l(e, t),
        r = o(e);
        if (null === r) return i;
        var n = h(r, t);
        return n.length ? i.length ? a(new s(i.concat(n))) : n: i
    };
    r.exp({
        getMetadataKeys: function(e, t) {
            return h(n(e), arguments.length < 2 ? void 0 : u(t))
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = r.get,
    a = r.key;
    r.exp({
        getOwnMetadata: function(e, t, i) {
            return s(e, n(t), arguments.length < 3 ? void 0 : a(i))
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = r.keys,
    a = r.key;
    r.exp({
        getOwnMetadataKeys: function(e, t) {
            return s(n(e), arguments.length < 2 ? void 0 : a(t))
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = i(59),
    a = r.has,
    o = r.key,
    l = function(e, t, i) {
        if (a(e, t, i)) return ! 0;
        var r = s(t);
        return null !== r && l(e, r, i)
    };
    r.exp({
        hasMetadata: function(e, t, i) {
            return l(e, n(t), arguments.length < 3 ? void 0 : o(i))
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = r.has,
    a = r.key;
    r.exp({
        hasOwnMetadata: function(e, t, i) {
            return s(e, n(t), arguments.length < 3 ? void 0 : a(i))
        }
    })
},
function(e, t, i) {
    var r = i(314),
    n = i(13),
    s = i(22),
    a = r.key,
    o = r.set;
    r.exp({
        metadata: function(i, r) {
            return function(e, t) {
                o(i, r, (void 0 !== t ? n: s)(e), a(t))
            }
        }
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(215)(),
    s = i(5).process,
    a = "process" == i(35)(s);
    r(r.G, {
        asap: function(e) {
            var t = a && s.domain;
            n(t ? t.bind(e) : e)
        }
    })
},
function(e, t, i) {
    "use strict";
    function n(e) {
        return null == e ? void 0 : f(e)
    }
    function s(e) {
        var t = e._c;
        t && (e._c = void 0, t())
    }
    function a(e) {
        return void 0 === e._o
    }
    function o(e) {
        a(e) || (e._o = void 0, s(e))
    }
    function r(t, e) {
        p(t),
        this._c = void 0,
        this._o = t,
        t = new b(this);
        try {
            var i = e(t),
            r = i;
            null != i && ("function" == typeof i.unsubscribe ? i = function() {
                r.unsubscribe()
            }: f(i), this._c = i)
        } catch(e) {
            return void t.error(e)
        }
        a(this) && s(this)
    }
    var l = i(9),
    u = i(5),
    h = i(10),
    d = i(215)(),
    c = i(27)("observable"),
    f = i(22),
    p = i(13),
    v = i(212),
    m = i(220),
    _ = i(11),
    g = i(213),
    y = g.RETURN;
    r.prototype = m({},
    {
        unsubscribe: function() {
            o(this)
        }
    });
    var b = function(e) {
        this._s = e
    };
    b.prototype = m({},
    {
        next: function(e) {
            var t = this._s;
            if (!a(t)) {
                var i = t._o;
                try {
                    var r = n(i.next);
                    if (r) return r.call(i, e)
                } catch(e) {
                    try {
                        o(t)
                    } finally {
                        throw e
                    }
                }
            }
        },
        error: function(e) {
            var t = this._s;
            if (a(t)) throw e;
            var i = t._o;
            t._o = void 0;
            try {
                var r = n(i.error);
                if (!r) throw e;
                e = r.call(i, e)
            } catch(e) {
                try {
                    s(t)
                } finally {
                    throw e
                }
            }
            return s(t),
            e
        },
        complete: function(e) {
            var t = this._s;
            if (!a(t)) {
                var i = t._o;
                t._o = void 0;
                try {
                    var r = n(i.complete);
                    e = r ? r.call(i, e) : void 0
                } catch(e) {
                    try {
                        s(t)
                    } finally {
                        throw e
                    }
                }
                return s(t),
                e
            }
        }
    });
    var S = function(e) {
        v(this, S, "Observable", "_f")._f = f(e)
    };
    m(S.prototype, {
        subscribe: function(e) {
            return new r(e, this._f)
        },
        forEach: function(r) {
            var n = this;
            return new(h.Promise || u.Promise)(function(e, t) {
                f(r);
                var i = n.subscribe({
                    next: function(e) {
                        try {
                            return r(e)
                        } catch(e) {
                            t(e),
                            i.unsubscribe()
                        }
                    },
                    error: t,
                    complete: e
                })
            })
        }
    }),
    m(S, {
        from: function(e) {
            var t = "function" == typeof this ? this: S,
            i = n(p(e)[c]);
            if (i) {
                var r = p(i.call(e));
                return r.constructor === t ? r: new t(function(e) {
                    return r.subscribe(e)
                })
            }
            return new t(function(t) {
                var i = !1;
                return d(function() {
                    if (!i) {
                        try {
                            if (g(e, !1,
                            function(e) {
                                if (t.next(e), i) return y
                            }) === y) return
                        } catch(e) {
                            if (i) throw e;
                            return void t.error(e)
                        }
                        t.complete()
                    }
                }),
                function() {
                    i = !0
                }
            })
        },
        of: function() {
            for (var e = 0,
            t = arguments.length,
            r = new Array(t); e < t;) r[e] = arguments[e++];
            return new("function" == typeof this ? this: S)(function(t) {
                var i = !1;
                return d(function() {
                    if (!i) {
                        for (var e = 0; e < r.length; ++e) if (t.next(r[e]), i) return;
                        t.complete()
                    }
                }),
                function() {
                    i = !0
                }
            })
        }
    }),
    _(S.prototype, c,
    function() {
        return this
    }),
    l(l.G, {
        Observable: S
    }),
    i(194)("Observable")
},
function(e, t, i) {
    function r(n) {
        return function(e, t) {
            var i = 2 < arguments.length,
            r = i && o.call(arguments, 2);
            return n(i ?
            function() { ("function" == typeof e ? e: Function(e)).apply(this, r)
            }: e, t)
        }
    }
    var n = i(5),
    s = i(9),
    a = i(218),
    o = [].slice,
    l = /MSIE .\./.test(a);
    s(s.G + s.B + s.F * l, {
        setTimeout: r(n.setTimeout),
        setInterval: r(n.setInterval)
    })
},
function(e, t, i) {
    var r = i(9),
    n = i(214);
    r(r.G + r.B, {
        setImmediate: n.set,
        clearImmediate: n.clear
    })
},
function(e, t, i) {
    for (var r = i(195), n = i(31), s = i(19), a = i(5), o = i(11), l = i(130), u = i(27), h = u("iterator"), d = u("toStringTag"), c = l.Array, f = {
        CSSRuleList: !0,
        CSSStyleDeclaration: !1,
        CSSValueList: !1,
        ClientRectList: !1,
        DOMRectList: !1,
        DOMStringList: !1,
        DOMTokenList: !0,
        DataTransferItemList: !1,
        FileList: !1,
        HTMLAllCollection: !1,
        HTMLCollection: !1,
        HTMLFormElement: !1,
        HTMLSelectElement: !1,
        MediaList: !0,
        MimeTypeArray: !1,
        NamedNodeMap: !1,
        NodeList: !0,
        PaintRequestList: !1,
        Plugin: !1,
        PluginArray: !1,
        SVGLengthList: !1,
        SVGNumberList: !1,
        SVGPathSegList: !1,
        SVGPointList: !1,
        SVGStringList: !1,
        SVGTransformList: !1,
        SourceBufferList: !1,
        StyleSheetList: !0,
        TextTrackCueList: !1,
        TextTrackList: !1,
        TouchList: !1
    },
    p = n(f), v = 0; v < p.length; v++) {
        var m, _ = p[v],
        g = f[_],
        y = a[_],
        b = y && y.prototype;
        if (b && (b[h] || o(b, h, c), b[d] || o(b, d, _), l[_] = c, g)) for (m in r) b[m] || s(b, m, r[m], !0)
    }
},
function(L, e, t) { (function(e) { !
        function(e) {
            "use strict";
            var l, t = Object.prototype,
            u = t.hasOwnProperty,
            i = "function" == typeof Symbol ? Symbol: {},
            n = i.iterator || "@@iterator",
            r = i.asyncIterator || "@@asyncIterator",
            s = i.toStringTag || "@@toStringTag",
            a = "object" == typeof L,
            o = e.regeneratorRuntime;
            if (o) a && (L.exports = o);
            else { (o = e.regeneratorRuntime = a ? L.exports: {}).wrap = y;
                var h = "suspendedStart",
                d = "suspendedYield",
                c = "executing",
                f = "completed",
                p = {},
                v = {};
                v[n] = function() {
                    return this
                };
                var m = Object.getPrototypeOf,
                _ = m && m(m(O([])));
                _ && _ !== t && u.call(_, n) && (v = _);
                var g = k.prototype = S.prototype = Object.create(v);
                E.prototype = g.constructor = k,
                k.constructor = E,
                k[s] = E.displayName = "GeneratorFunction",
                o.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !! t && (t === E || "GeneratorFunction" === (t.displayName || t.name))
                },
                o.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, k) : (e.__proto__ = k, s in e || (e[s] = "GeneratorFunction")),
                    e.prototype = Object.create(g),
                    e
                },
                o.awrap = function(e) {
                    return {
                        __await: e
                    }
                },
                w(T.prototype),
                T.prototype[r] = function() {
                    return this
                },
                o.AsyncIterator = T,
                o.async = function(e, t, i, r) {
                    var n = new T(y(e, t, i, r));
                    return o.isGeneratorFunction(t) ? n: n.next().then(function(e) {
                        return e.done ? e.value: n.next()
                    })
                },
                w(g),
                g[s] = "Generator",
                g[n] = function() {
                    return this
                },
                g.toString = function() {
                    return "[object Generator]"
                },
                o.keys = function(i) {
                    var r = [];
                    for (var e in i) r.push(e);
                    return r.reverse(),
                    function e() {
                        for (; r.length;) {
                            var t = r.pop();
                            if (t in i) return e.value = t,
                            e.done = !1,
                            e
                        }
                        return e.done = !0,
                        e
                    }
                },
                o.values = O,
                x.prototype = {
                    constructor: x,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = !1, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(I), !e) for (var t in this)"t" === t.charAt(0) && u.call(this, t) && !isNaN( + t.slice(1)) && (this[t] = l)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(i) {
                        if (this.done) throw i;
                        var r = this;
                        function e(e, t) {
                            return s.type = "throw",
                            s.arg = i,
                            r.next = e,
                            t && (r.method = "next", r.arg = l),
                            !!t
                        }
                        for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                            var n = this.tryEntries[t],
                            s = n.completion;
                            if ("root" === n.tryLoc) return e("end");
                            if (n.tryLoc <= this.prev) {
                                var a = u.call(n, "catchLoc"),
                                o = u.call(n, "finallyLoc");
                                if (a && o) {
                                    if (this.prev < n.catchLoc) return e(n.catchLoc, !0);
                                    if (this.prev < n.finallyLoc) return e(n.finallyLoc)
                                } else if (a) {
                                    if (this.prev < n.catchLoc) return e(n.catchLoc, !0)
                                } else {
                                    if (!o) throw new Error("try statement without catch or finally");
                                    if (this.prev < n.finallyLoc) return e(n.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var i = this.tryEntries.length - 1; 0 <= i; --i) {
                            var r = this.tryEntries[i];
                            if (r.tryLoc <= this.prev && u.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var n = r;
                                break
                            }
                        }
                        n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
                        var s = n ? n.completion: {};
                        return s.type = e,
                        s.arg = t,
                        n ? (this.method = "next", this.next = n.finallyLoc, p) : this.complete(s)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg: "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t),
                        p
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                            var i = this.tryEntries[t];
                            if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc),
                            I(i),
                            p
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                            var i = this.tryEntries[t];
                            if (i.tryLoc === e) {
                                var r = i.completion;
                                if ("throw" === r.type) {
                                    var n = r.arg;
                                    I(i)
                                }
                                return n
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, t, i) {
                        return this.delegate = {
                            iterator: O(e),
                            resultName: t,
                            nextLoc: i
                        },
                        "next" === this.method && (this.arg = l),
                        p
                    }
                }
            }
            function y(e, t, i, r) {
                var n = t && t.prototype instanceof S ? t: S,
                s = Object.create(n.prototype),
                a = new x(r || []);
                return s._invoke = function(s, a, o) {
                    var l = h;
                    return function(e, t) {
                        if (l === c) throw new Error("Generator is already running");
                        if (l === f) {
                            if ("throw" === e) throw t;
                            return C()
                        }
                        for (o.method = e, o.arg = t;;) {
                            var i = o.delegate;
                            if (i) {
                                var r = A(i, o);
                                if (r) {
                                    if (r === p) continue;
                                    return r
                                }
                            }
                            if ("next" === o.method) o.sent = o._sent = o.arg;
                            else if ("throw" === o.method) {
                                if (l === h) throw l = f,
                                o.arg;
                                o.dispatchException(o.arg)
                            } else "return" === o.method && o.abrupt("return", o.arg);
                            l = c;
                            var n = b(s, a, o);
                            if ("normal" === n.type) {
                                if (l = o.done ? f: d, n.arg === p) continue;
                                return {
                                    value: n.arg,
                                    done: o.done
                                }
                            }
                            "throw" === n.type && (l = f, o.method = "throw", o.arg = n.arg)
                        }
                    }
                } (e, i, a),
                s
            }
            function b(e, t, i) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, i)
                    }
                } catch(e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            function S() {}
            function E() {}
            function k() {}
            function w(e) { ["next", "throw", "return"].forEach(function(t) {
                    e[t] = function(e) {
                        return this._invoke(t, e)
                    }
                })
            }
            function T(o) {
                function l(e, t, i, r) {
                    var n = b(o[e], o, t);
                    if ("throw" !== n.type) {
                        var s = n.arg,
                        a = s.value;
                        return a && "object" == typeof a && u.call(a, "__await") ? Promise.resolve(a.__await).then(function(e) {
                            l("next", e, i, r)
                        },
                        function(e) {
                            l("throw", e, i, r)
                        }) : Promise.resolve(a).then(function(e) {
                            s.value = e,
                            i(s)
                        },
                        r)
                    }
                    r(n.arg)
                }
                var t;
                "object" == typeof e.process && e.process.domain && (l = e.process.domain.bind(l)),
                this._invoke = function(i, r) {
                    function e() {
                        return new Promise(function(e, t) {
                            l(i, r, e, t)
                        })
                    }
                    return t = t ? t.then(e, e) : e()
                }
            }
            function A(e, t) {
                var i = e.iterator[t.method];
                if (i === l) {
                    if (t.delegate = null, "throw" === t.method) {
                        if (e.iterator.
                        return && (t.method = "return", t.arg = l, A(e, t), "throw" === t.method)) return p;
                        t.method = "throw",
                        t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return p
                }
                var r = b(i, e.iterator, t.arg);
                if ("throw" === r.type) return t.method = "throw",
                t.arg = r.arg,
                t.delegate = null,
                p;
                var n = r.arg;
                return n ? n.done ? (t[e.resultName] = n.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = l), t.delegate = null, p) : n: (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, p)
            }
            function R(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function I(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function x(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(R, this),
                this.reset(!0)
            }
            function O(t) {
                if (t) {
                    var e = t[n];
                    if (e) return e.call(t);
                    if ("function" == typeof t.next) return t;
                    if (!isNaN(t.length)) {
                        var i = -1,
                        r = function e() {
                            for (; ++i < t.length;) if (u.call(t, i)) return e.value = t[i],
                            e.done = !1,
                            e;
                            return e.value = l,
                            e.done = !0,
                            e
                        };
                        return r.next = r
                    }
                }
                return {
                    next: C
                }
            }
            function C() {
                return {
                    value: l,
                    done: !0
                }
            }
        } ("object" == typeof e ? e: "object" == typeof window ? window: "object" == typeof self ? self: this)
    }).call(this, t(2))
},
function(e, t, i) {
    i(330),
    e.exports = i(10).RegExp.escape
},
function(e, t, i) {
    var r = i(9),
    n = i(331)(/[\\^$*+?.()|[\]{}]/g, "\\$&");
    r(r.S, "RegExp", {
        escape: function(e) {
            return n(e)
        }
    })
},
function(e, t) {
    e.exports = function(t, i) {
        var r = i === Object(i) ?
        function(e) {
            return i[e]
        }: i;
        return function(e) {
            return String(e).replace(t, r)
        }
    }
},
function(e, t, i) {
    "use strict";
    var a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var p = i(333),
    l = i(334),
    s = i(335),
    o = T(i(336)),
    u = T(i(337)),
    h = T(i(338)),
    d = T(i(339)),
    c = T(i(340)),
    f = T(i(342)),
    v = T(i(343)),
    m = T(i(344)),
    _ = T(i(347)),
    g = T(i(403)),
    y = T(i(411)),
    b = T(i(413)),
    S = T(i(414)),
    E = T(i(415)),
    k = i(392),
    w = T(i(416));
    function T(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    i(420);
    var A = "ws://127.0.0.1:9122",
    R = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (I, l.EventUtil.aggregation(o.
default, u.
default, h.
default, d.
default, c.
default, f.
default, S.
default, v.
default, b.
default)), r(I, null, [{
        key: "setDefWsurl",
        value: function(e) {
            I._defWsurl = e || A
        }
    },
    {
        key: "isSupported",
        value: function() {
            return E.
        default.getFeatureList()
        }
    },
    {
        key: "playerversion",
        value: function() {
            return "1.3.2"
        }
    },
    {
        key: "setupversion",
        value: function(e, t) {
            return I._extendClass || (I._extendClass = new S.
        default(t || I._defWsurl)),
            I._extendClass && I._extendClass.setupversion(e)
        }
    },
    {
        key: "getMacString",
        value: function(e, t) {
            return I._extendClass || (I._extendClass = new S.
        default(t || I._defWsurl)),
            I._extendClass && I._extendClass.getMacString(e)
        }
    },
    {
        key: "getCpuMemory",
        value: function(e, t) {
            return I._extendClass || (I._extendClass = new S.
        default(t || I._defWsurl)),
            I._extendClass && I._extendClass.getCpuMemory(e)
        }
    },
    {
        key: "getExpandScreenInfo",
        value: function(e, t) {
            return I._extendClass || (I._extendClass = new S.
        default(t || I._defWsurl)),
            I._extendClass && I._extendClass.getExpandScreenInfo(e)
        }
    },
    {
        key: "getRegistryInfo",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.getRegistryInfo(e, t)
        }
    },
    {
        key: "runProcess",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.runProcess(e, t)
        }
    },
    {
        key: "openFileDirectory",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.openFileDirectory(e, t)
        }
    },
    {
        key: "moveProcessWindow",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.moveProcessWindow(e, t)
        }
    },
    {
        key: "savePicture",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.savePicture(e, t)
        }
    },
    {
        key: "copyToClipboard",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.copyToClipboard(e, t)
        }
    },
    {
        key: "isFileExist",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.isFileExist(e, t)
        }
    },
    {
        key: "removeFile",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.removeFile(e, t)
        }
    },
    {
        key: "openSaveFileDlg",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.openSaveFileDlg(e, t)
        }
    },
    {
        key: "openLocalSelectFolderDlg",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.openLocalSelectFolderDlg(e, t)
        }
    },
    {
        key: "isUpdateSetup",
        value: function(e, t, i) {
            return I._extendClass || (I._extendClass = new S.
        default(i || I._defWsurl)),
            I._extendClass && I._extendClass.isUpdateSetup(e, t)
        }
    }]), r(I, [{
        key: "setH5msInfo",
        value: function(e) {
            return (!this._h5msClient || this._h5msClient.status != k.HttpStatus.kConnecting && this._h5msClient.status != k.HttpStatus.kSuccess) && e && "string" == typeof e && "string" == typeof e.h5msUrl ? (this.opt.h5msUrl = "string" == typeof e ? e: e.h5msUrl, this._h5msClient = this._initH5msClient(e, !0), !0) : (this._showDebuggInfo("H5MS URL has exist!"), !1)
        }
    },
    {
        key: "_getH5msClient",
        value: function(e) {
            for (var t = this._h5msClientList,
            i = 0,
            r = t.length; i < r; i++) if (t[i].url === h5msUrl) return t[i];
            var n = this._initH5msClient(e);
            return this._h5msClientList.push(n),
            n
        }
    },
    {
        key: "_initH5msClient",
        value: function(e, t) {
            var i = {};
            if ("string" == typeof e ? i.h5msUrl = e: i = e, "string" != typeof i.h5msUrl) return null;
            var r = new k.HttpRequest({
                h5msUrl: this.opt.h5msUrl,
                h5msUser: this.opt.h5msUser || "admin",
                h5msPassward: this.opt.h5msPassward || "admin"
            });
            return t && (r.onError = this._onH5msError.bind(this), r.onInit = this._onH5msInit.bind(this)),
            r.init(),
            r
        }
    },
    {
        key: "_onH5msError",
        value: function(e, t) {
            e == k.HttpEvents.OnInitFail ? (this._reconnectCount++, this._reconnectCount > this.opt.reconnectCount ? this._h5msClient = null: this._h5msClient.init()) : k.HttpEvents.OnKeepAliveFail,
            this._emitter.emit(g.
        default.OnH5msError, e)
        }
    },
    {
        key: "_onH5msInit",
        value: function(e) {
            this._reconnectCount = 0,
            this._emitter.emit(g.
        default.OnH5msInit, e)
        }
    },
    {
        key: "_videoContainerResize",
        value: function() {
            if (!this._isFullScreen) {
                var e = this.playerC,
                t = this.opt.width,
                i = this.opt.height;
                if (this.opt.width = e.offsetWidth + "px", this.opt.height = e.offsetHeight + "px", t !== this.opt.width || i !== this.opt.height) {
                    this.styleArr = this._getAllVideoStyleByLayout();
                    for (var r = 0,
                    n = this.layoutcount; r < n; r++) {
                        var s = this._getVideoStyleByLayout(r);
                        if (!s) return;
                        this.maxScreenIndex === r ? this.videos[r].setPosition(0, 0, this.opt.width, this.opt.height) : this.videos[r].setPosition(s.top, s.left, s.width, s.height)
                    }
                    this._historyTimeAxisSizeChange(),
                    this._emitter.emit(g.
                default.OnSizeChange, t, i, this.opt.width, this.opt.height)
                }
            }
        }
    },
    {
        key: "_windowResizeEvent",
        value: function() {
            var t = this;
            window.addEventListener("resize",
            function() {
                var e = p.Toolkit.getBrowserZoomRatio();
                t.WinScreenWidth = window.screen.width / (e / 100),
                t.WinScreenHeight = window.screen.height / (e / 100)
            })
        }
    },
    {
        key: "destroy",
        value: function() {
            if (this._websocketctrl) {
                for (var e = this._talkbackTask,
                t = 0; t < e.length; t++) this._websocketctrl.stopTalkback(e[t]);
                e = [],
                this._websocketctrl.destroy(),
                this._websocketctrl = null
            }
            for (t = 0; t < this.videos.length; t++) this.videos[t].destroy();
            if (this.videos = [], this._h5msClient) {
                var i = this._audioPlayerArr;
                for (t = 0; t < i.length; t++) i[t].audioplayer.destroy();
                i = [],
                this._h5msClient.destroy(),
                this._h5msClient = null
            }
        }
    },
    {
        key: "_showDebuggInfo",
        value: function(e) {
            this._showDebugInfo && console.warn(e)
        }
    },
    {
        key: "_parselayout",
        value: function(e) {
            if ("0" === e.layout || "" === e.layout || "null" === e.layout) return e.layout = "0",
            e.row = 0,
            !(e.column = 0);
            var t = e.layout.split("*");
            if (2 === t.length) {
                if (t[0] = parseInt(t[0]), t[1] = parseInt(t[1]), 0 < t[0] && 0 < t[1] && t[0] * t[1] <= 64) return e.row = t[0],
                e.column = t[1],
                !0;
                if (0 === t[0] || 0 === t[1]) return e.layout = "0",
                e.row = 0,
                !(e.column = 0)
            }
            return ! 1
        }
    },
    {
        key: "_initDom",
        value: function() {
            this._createPlayerC(),
            this.opt.width = (this.opt.ele.offsetWidth || this.opt.videoSize.width) + "px",
            this.opt.height = (this.opt.ele.offsetHeight || this.opt.videoSize.height) + "px",
            "string" == typeof this.opt.layout && (this.opt.layout = {
                layout: this.opt.layout
            }),
            this._parselayout(this.opt.layout) || (this.opt.layout = {
                layout: "2*2",
                row: 2,
                column: 2
            }),
            this.opt.layoutmargin = this._getLayoutmargin(this.opt.layoutmargin),
            null === this.opt.layoutmargin && (this.opt.layoutmargin = {
                marginX: 0,
                marginY: 0
            }),
            this.styleArr = this._getAllVideoStyleByLayout(),
            0 < this.layoutcount && this._createVideoEle()
        }
    },
    {
        key: "_createPlayerC",
        value: function() {
            this.playerC = document.createElement("div"),
            this.playerC.className = "h5vp-content h5vp-content-style",
            this.opt.border && this.opt.border.borderColor && (this.playerC.style.background = this.opt.border.borderColor),
            this.opt.ele.appendChild(this.playerC)
        }
    },
    {
        key: "_createVideoEle",
        value: function() {
            this.videos = [];
            var e = {};
            p.Toolkit.deepMerge(e, this.opt);
            var t = e.ele,
            i = {};
            p.Toolkit.deepMerge(i, e),
            delete i.ele;
            for (var r = 0,
            n = this.layoutcount; r < n; r++) {
                var s = p.Toolkit.getUuid(),
                a = this._getVideoStyleByLayout(r);
                if (!a) return;
                var o = new m.
            default(p.Toolkit.deepMerge(i, {
                    ele: "npvideo-" + s,
                    uuid: s,
                    index: r,
                    fatherEle: t,
                    playerC: this.playerC,
                    width: a.width,
                    height: a.height,
                    left: a.left,
                    top: a.top
                }));
                this.listenAndEmitEvent(o),
                this.videos.push(o)
            }
            this._setFocusIndex(this.nFocusIndex)
        }
    },
    {
        key: "_getLayoutWindows",
        value: function(e, t, i, r) {
            var n = e % i,
            s = i - n,
            a = t % r,
            o = r - a;
            return {
                cw1: Math.ceil(e / i),
                cw1_c: n,
                cw2: Math.floor(e / i),
                cw2_c: s,
                ch1: Math.ceil(t / r),
                ch1_c: a,
                ch2: Math.floor(t / r),
                ch2_c: o
            }
        }
    },
    {
        key: "_get1ANlayoutArr",
        value: function(e, t, i, r) {
            var n = [],
            s = this.opt.layoutmargin.marginX,
            a = this.opt.layoutmargin.marginY,
            o = this._getLayoutWindows(e - s * (i - 1), t - a * (r - 1), i, r),
            l = void 0,
            u = void 0,
            h = 0,
            d = 0;
            n.push([e - o.cw2 - s, t - o.ch2 - a, 0, 0]);
            for (var c = 0; c < r; c++) {
                u = c < o.ch1_c ? o.ch1: o.ch2;
                for (var f = h = 0; f < i; f++) l = f < o.cw1_c ? o.cw1: o.cw2,
                f !== i - 1 && c !== r - 1 || n.push([l, u, h, d]),
                h += l + s;
                d += u + a
            }
            return n
        }
    },
    {
        key: "_getAllVideoStyleByLayout",
        value: function() {
            var e = this._isFullScreen ? this.WinScreenHeight: parseFloat(this.opt.height),
            t = this._isFullScreen ? this.WinScreenWidth: parseFloat(this.opt.width),
            i = [],
            r = this.opt.layout;
            switch (r.layout) {
            case "0":
                this.layoutcount = 0;
                break;
            case "1A5":
                i = this._get1ANlayoutArr(t, e, 3, 3),
                this.layoutcount = 6;
                break;
            case "1A7":
                i = this._get1ANlayoutArr(t, e, 4, 4),
                this.layoutcount = 8;
                break;
            case "1A9":
                i = this._get1ANlayoutArr(t, e, 5, 5),
                this.layoutcount = 10;
                break;
            default:
                for (var n = r.row,
                s = r.column,
                a = this.opt.layoutmargin.marginX,
                o = this.opt.layoutmargin.marginY,
                l = this._getLayoutWindows(t - a * (s - 1), e - o * (n - 1), s, n), u = void 0, h = void 0, d = 0, c = 0, f = 0; f < n; f++) {
                    h = f < l.ch1_c ? l.ch1: l.ch2;
                    for (var p = d = 0; p < s; p++) u = p < l.cw1_c ? l.cw1: l.cw2,
                    i.push([u, h, d, c]),
                    d += u + a;
                    c += h + o
                }
                this.layoutcount = s * n
            }
            return i || []
        }
    },
    {
        key: "_getVideoStyleByLayout",
        value: function(e) {
            if (e >= this.layoutcount) return console.log("窗口索引大于窗口总数"),
            null;
            var t = this.styleArr[e];
            return {
                width: t[0] + "px",
                height: t[1] + "px",
                left: t[2] + "px",
                top: t[3] + "px"
            }
        }
    },
    {
        key: "_initEvent",
        value: function() {
            this.screenChangeEvent(),
            this._addEvent()
        }
    },
    {
        key: "_onWsComplete",
        value: function() {
            this._websocketctrl = null
        }
    },
    {
        key: "_onWsError",
        value: function(e, t) {
            this._websocketctrl = null,
            this._onerror && this._onerror( - 1, e, t)
        }
    },
    {
        key: "_onWsCmdResponse",
        value: function(e) {
            this._onresponse && this._onresponse( - 1, e.name, e.param, e.rederved)
        }
    },
    {
        key: "_createWebsocketctrl",
        value: function(e) {
            return !! y.
        default.isSupported() && (this._websocketctrl && (this._websocketctrl.destroy(), this._websocketctrl = null), e = e || this.opt.wsurl, this._websocketctrl = new y.
        default(e), this._websocketctrl.onComplete = this._onWsComplete.bind(this), this._websocketctrl.onError = this._onWsError.bind(this), this._websocketctrl.onCommand = this._onWsCmdResponse.bind(this), this._websocketctrl.open())
        }
    },
    {
        key: "startTalkback",
        value: function(n, s, e) {
            n = n || {};
            var a = new w.
        default({
                channelInfo:
                n,
                url: n.wsurl || this.opt.wsurl,
                h5msClient: this._h5msClient
            },
            e),
            o = this;
            return a.load(),
            a.on("streamstart",
            function(e) {
                if (0 == e) o._audioPlayerArr.push({
                    info: n,
                    audioplayer: a
                });
                else {
                    for (var t = o._audioPlayerArr,
                    i = 0; i < t.length; i++) {
                        var r = t[i].audioplayer;
                        if (a.uuid === r.uuid) {
                            t.splice(i, 1);
                            break
                        }
                    }
                    a.destroy()
                }
                s && s({
                    error: e
                })
            }),
            !0
        }
    },
    {
        key: "stopTalkback",
        value: function(e, t) {
            for (var i = this._audioPlayerArr,
            r = 0; r < i.length; r++) {
                var n = i[r].info;
                if (e) {
                    if (e.devicetype == n.devicetype && e.ip == n.ip && e.channel == n.channel && e.port == n.port && e.user == n.user && e.password == n.password) {
                        i[r].audioplayer.destroy(),
                        i.splice(r, 1);
                        break
                    }
                } else i[r].audioplayer.destroy()
            }
            return e || (i = []),
            void(t && t({
                error: 0
            }))
        }
    },
    {
        key: "getTalkbackMode",
        value: function(e, t) {
            for (var i = this._audioPlayerArr,
            r = 0; r < i.length && e; r++) {
                var n = i[r].info;
                if (e.devicetype == n.devicetype && e.ip == n.ip && e.channel == n.channel && e.port == n.port && e.user == n.user && e.password == n.password) return void(t && t({
                    error: 0,
                    mode: n.mode
                }))
            }
            t && t({
                error: -1,
                mode: 0
            })
        }
    },
    {
        key: "listObject",
        value: function(e, t) {
            return this.opt.desEncodeType && void 0 === e.desencode && (e.desencode = 1),
            this._h5msClient ? this._h5msClient.listObject(e, t) : (this._websocketctrl || this._createWebsocketctrl(e.wsurl), !!this._websocketctrl && this._websocketctrl.listObject(e, t))
        }
    },
    {
        key: "queryRecord",
        value: function(e, t) {
            return this.opt.desEncodeType && void 0 === e.desencode && (e.desencode = 1),
            this._h5msClient ? this._h5msClient.queryRecord(e, t) : (this._websocketctrl || this._createWebsocketctrl(e.wsurl), !!this._websocketctrl && this._websocketctrl.queryRecord(e, t))
        }
    },
    {
        key: "startServerRecord",
        value: function(e, t) {
            return this._websocketctrl || this._createWebsocketctrl(e.wsurl),
            !!this._websocketctrl && this._websocketctrl.startServerRecord(e, t)
        }
    },
    {
        key: "stopServerRecord",
        value: function(e, t) {
            return this._websocketctrl || this._createWebsocketctrl(e.wsurl),
            !!this._websocketctrl && this._websocketctrl.stopServerRecord(e, t)
        }
    },
    {
        key: "play",
        value: function(e, t, i) { (parseInt(this.opt.width) <= 0 || parseInt(this.opt.height) <= 0) && this._videoContainerResize();
            var r = parseInt(e);
            if (!t || r < 0 || r >= this.videos.length || !this.videos[r]) return this._showDebuggInfo("play() param error!"),
            !1;
            this.opt.desEncodeType && void 0 === t.desencode && (t.desencode = 1);
            var n = t.wsurl || this.opt.wsurl;
            console.log("h5vp:", t);
            var s = this._h5msClient;
            return t.h5ms && "string" == typeof t.h5ms.h5msUrl && (s = this._getH5msClient(t.h5ms)),
            this.videos[r].startVideo(t, i, n, s)
        }
    },
    {
        key: "pause",
        value: function(e, t) {
            var i = parseInt(e);
            return i < 0 || i >= this.videos.length || !this.videos[i] || "boolean" != typeof t ? (this._showDebuggInfo("pause() param error!"), !1) : t ? this.videos[i].pause() : this.videos[i].play()
        }
    },
    {
        key: "stepPlay",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("stepPlay() param error!"), !1) : this.videos[t].singleFramePlay()
        }
    },
    {
        key: "segmentPlay",
        value: function(e, t, i, r) {
            var n = parseInt(e);
            return n < 0 || n >= this.videos.length || !this.videos[n] ? (this._showDebuggInfo("segmentPlay() param error!"), !1) : this.videos[n].segmentPlay(t, i, r)
        }
    },
    {
        key: "cancelSegmentPlay",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("cancelSegmentPlay() param error!"), !1) : this.videos[t].segmentPlay( - 1, -1)
        }
    },
    {
        key: "getPlayTime",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getPlayTime() param error!"), 0) : this.videos[t].getPlayTime()
        }
    },
    {
        key: "getPlayPts",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getPlayPts() param error!"), 0) : this.videos[t].getPlayPts()
        }
    },
    {
        key: "stop",
        value: function(e, t) {
            var i = parseInt(e);
            return ! (i < 0 || i >= this.videos.length || !this.videos[i]) && this.videos[i].stopVideo(t || !1)
        }
    },
    {
        key: "getVolume",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? 0 : this.videos[t].getVolume()
        }
    },
    {
        key: "setVolume",
        value: function(e, t) {
            var i = parseInt(e);
            if (i < 0 || i >= this.videos.length || !this.videos[i]) return ! 1;
            this.videos[i].setVolume(t)
        }
    },
    {
        key: "getMuted",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].getMuted()
        }
    },
    {
        key: "setMuted",
        value: function(e, t) {
            var i = parseInt(e);
            return ! (i < 0 || i >= this.videos.length || !this.videos[i]) && this.videos[i].setMuted(t)
        }
    },
    {
        key: "capturePicture",
        value: function(e, t, i, r) {
            var n = parseInt(e);
            return n < 0 || n >= this.videos.length || !this.videos[n] ? (this._showDebuggInfo("capturePicture() param error!"), "") : this.videos[n].capturePicture(t, i, r)
        }
    },
    {
        key: "continuousShooting",
        value: function(e, t, i, r, n, s) {
            var a = parseInt(e),
            o = parseInt(i);
            return o <= 0 || a < 0 || a >= this.videos.length || !this.videos[a] || "function" != typeof r ? (this._showDebuggInfo("continuousShooting() param error!"), !1) : this.videos[a].continuousShooting(t, o, r, n, s)
        }
    },
    {
        key: "setFilter",
        value: function(e, t) {
            var i = parseInt(e);
            if (i < 0 || i >= this.videos.length || !this.videos[i]) return this._showDebuggInfo("setFilter() param error!"),
            "";
            this.videos[i].setFilter(t)
        }
    },
    {
        key: "getFilter",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getFilter() param error!"), "") : this.videos[t].getFilter()
        }
    },
    {
        key: "_getLayoutmargin",
        value: function(e) {
            var t = null;
            if ("number" == typeof e || "string" == typeof e) {
                var i = parseInt(t);
                t = {
                    marginX: i = 0 <= i ? i: 0,
                    marginY: i
                }
            } else if (null == e) t = {
                marginX: 0,
                marginY: 0
            };
            else if ("object" === (void 0 === e ? "undefined": a(e))) {
                if (e.margin) {
                    var r = parseInt(e.margin);
                    t = {
                        marginX: r = 0 <= r ? r: 0,
                        marginY: r
                    }
                }
                if (e.marginX) {
                    var n = parseInt(e.marginX);
                    t = {
                        marginX: n = 0 <= n ? n: 0,
                        marginY: this.layoutmargin.marginY
                    }
                }
                if (e.marginY) {
                    var s = parseInt(e.marginY);
                    s = 0 <= s ? s: 0,
                    t = {
                        marginX: this.layoutmargin.marginX,
                        marginY: s
                    }
                }
            }
            return t
        }
    },
    {
        key: "_setLayoutmargin",
        value: function(e) {
            this.opt.layoutmargin = e,
            this.styleArr = this._getAllVideoStyleByLayout();
            for (var t = 0,
            i = this.layoutcount; t < i; t++) {
                var r = this._getVideoStyleByLayout(t);
                if (!r) return;
                this.maxScreenIndex === t ? this.videos[t].setPosition(0, 0, this.opt.width, this.opt.height) : this.videos[t].setPosition(r.top, r.left, r.width, r.height)
            }
        }
    },
    {
        key: "_setLayout",
        value: function(e) {
            var t = this.layoutcount;
            if (this.opt.layout, this.opt.layout = e, this.styleArr = this._getAllVideoStyleByLayout(), this.layoutcount < t) {
                for (var i = t - 1; - 1 < i; i--) if (i > this.layoutcount - 1) {
                    var r = this.videos[i].vOpt.videoC;
                    r.parentNode.removeChild(r),
                    this.videos[i].destroy(),
                    this.videos.splice(i, 1)
                } else {
                    var n = this._getVideoStyleByLayout(i);
                    this.videos[i].setPosition(n.top, n.left, n.width, n.height),
                    this.videos[i].setMax("origin"),
                    this.maxScreenIndex = -1
                }
                this.nFocusIndex >= this.layoutcount && this._setFocusIndex(0),
                this._emitter.emit(g.
            default.OnLayoutChange, t, this.layoutcount)
            } else if (this.layoutcount > t) {
                var s = {};
                p.Toolkit.deepMerge(s, this.opt);
                var a = s.ele,
                o = {};
                p.Toolkit.deepMerge(o, s),
                delete o.ele;
                for (var l = 0; l < this.layoutcount; l++) {
                    var u = this._getVideoStyleByLayout(l);
                    if (!u) return void console.warn("should not be here!");
                    if (t <= l) {
                        var h = p.Toolkit.getUuid(),
                        d = new m.
                    default(p.Toolkit.deepMerge(o, {
                            ele: "npvideo-" + h,
                            uuid: h,
                            index: l,
                            fatherEle: a,
                            playerC: this.playerC,
                            width: u.width,
                            height: u.height,
                            left: u.left,
                            top: u.top
                        }));
                        this.listenAndEmitEvent(d),
                        this.videos.push(d)
                    } else this.videos[l].setPosition(u.top, u.left, u.width, u.height),
                    this.videos[l].setMax("origin"),
                    this.maxScreenIndex = -1
                }
                this._emitter.emit(g.
            default.OnLayoutChange, t, this.layoutcount)
            } else for (var c = 0; c < this.layoutcount; c++) {
                var f = this._getVideoStyleByLayout(c);
                if (!f) return void console.warn("should not be here!");
                this.videos[c].setPosition(f.top, f.left, f.width, f.height),
                this.videos[c].setMax("origin"),
                this.maxScreenIndex = -1
            }
        }
    },
    {
        key: "moveLayoutWindow",
        value: function(e) {
            var t = 0;
            t = "object" === (void 0 === e ? "undefined": a(e)) ? parseInt(e.step) : parseInt(e);
            var i = this.videos ? this.videos.length: 0;
            if (0 === t || 0 === i) return ! 0;
            if (t <= 0 - i || i <= t) return ! 1;
            if (0 < t) for (; 0 < t--;) this.videos.push(this.videos.shift());
            else for (; t++<0;) this.videos.unshift(this.videos.pop());
            this._setLayout(this.opt.layout);
            for (var r = 0; r < i; r++) this.videos[r].setAttributeIndex(r);
            return ! 0
        }
    },
    {
        key: "_setFocusIndex",
        value: function(e) {
            for (var t = 0,
            i = this.videos.length; t < i; t++) this.videos[t].setFocusIndex(t === e);
            var r = this.nFocusIndex;
            return this.nFocusIndex = e,
            r != this.nFocusIndex && (this._historyTimeAxisFocusChange(r, this.nFocusIndex), this._emitter.emit(g.
        default.OnFocusChange, r, this.nFocusIndex)),
            !0
        }
    },
    {
        key: "isFocusIndex",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t > this.videos.length || !this.videos[t]) && t == this.nFocusIndex
        }
    },
    {
        key: "setWindowMaximum",
        value: function(e) {
            var t = parseInt(e);
            if (t < 0 || t > this.videos.length || !this.videos[t]) return ! 1;
            for (var i = 0,
            r = this.videos.length; i < r; i++) if (t === i) this.videos[i].vOpt.videoC.classList.add("max-screen"),
            this.videos[i].setMax("big"),
            this.maxScreenIndex = t,
            this._isFullScreen ? this.videos[i].setPosition(0, 0, this.WinScreenWidth + "px", this.WinScreenHeight + "px") : this.videos[i].setPosition(0, 0, this.opt.width, this.opt.height);
            else {
                this.videos[i].vOpt.videoC.classList.remove("max-screen");
                var n = this._getVideoStyleByLayout(i);
                this.videos[i].setPosition(n.top, n.left, n.width, n.height),
                this.videos[i].setMax("hide")
            }
            return this.maxScreenIndex != this.nFocusIndex && this._setFocusIndex(this.maxScreenIndex),
            !0
        }
    },
    {
        key: "setWindowRestore",
        value: function(e) {
            var t = parseInt(e);
            if (t < 0 || t > this.videos.length || !this.videos[t]) return ! 1;
            if (t === this.maxScreenIndex) {
                for (var i = 0,
                r = this.videos.length; i < r; i++) {
                    if (t === i) {
                        var n = this._getVideoStyleByLayout(i);
                        this.videos[i].setPosition(n.top, n.left, n.width, n.height)
                    }
                    this.videos[i].setMax("origin"),
                    this.videos[i].vOpt.videoC.classList.remove("max-screen")
                }
                this.maxScreenIndex = -1
            }
            return ! 0
        }
    },
    {
        key: "_toggleMaxScreen",
        value: function(e) {
            e === this.maxScreenIndex ? this.setWindowRestore(e) : this.setWindowMaximum(e)
        }
    },
    {
        key: "setBackgroundImage",
        value: function(e, t) {
            var i = parseInt(e);
            return ! (i < 0 || i > this.videos.length || !this.videos[i]) && this.videos[i].setBgImg(t)
        }
    },
    {
        key: "isBusyIndex",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t > this.videos.length || !this.videos[t]) && (this.videos[t].getIdleOrBusy() || !1)
        }
    },
    {
        key: "getWindowRect",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t > this.videos.length || !this.videos[t] ? null: this.maxScreenIndex === t ? this._isFullScreen ? {
                left: "0px",
                top: "0px",
                width: this.WinScreenWidth + "px",
                height: this.WinScreenHeight + "px"
            }: {
                left: "0px",
                top: "0px",
                width: this.opt.width,
                height: this.opt.height
            }: this._getVideoStyleByLayout(t)
        }
    },
    {
        key: "isFullScreen",
        value: function() {
            return this._isFullScreen || !1
        }
    },
    {
        key: "setFullScreen",
        value: function(e) {
            var t = this.playerC;
            e ? this.launchFullScreenStyle() : /IE9|IE10/i.test(this.browserV) ? this.launchFullScreenIE11L() : (t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen(), this.launchFullScreenStyle()),
            this.updateFullScreenState(!0)
        }
    },
    {
        key: "launchFullScreenStyle",
        value: function() {
            this.playerC.style.position = "fixed"
        }
    },
    {
        key: "launchFullScreenIE11L",
        value: function() {
            var e = this.playerC.className;
            this.playerC.className = e + " ie-fullscreen"
        }
    },
    {
        key: "exitFullscreen",
        value: function(e) {
            e ? this.exitFullScreenStyle() : /IE9|IE10/i.test(this.browserV) ? this.exitFullscreenIE11L() : (console.log("exitFullscreen"), this.exitFullScreenStyle(), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen())
        }
    },
    {
        key: "exitFullscreenIE11L",
        value: function() {
            this.updateFullScreenState(!1);
            var e = this.playerC.className;
            this.playerC.className = e.split(" ").slice(e.split(" ").indexOf("ie-fullscreen"), 1),
            this.playerC.style.position = "relative"
        }
    },
    {
        key: "exitFullScreenStyle",
        value: function() {
            this.playerC.style.position = "relative",
            this.updateFullScreenState(!1)
        }
    },
    {
        key: "updateFullScreenState",
        value: function(e) {
            this._isFullScreen = e || !1;
            var t = this._isFullScreen ? "h5vp-content h5vp-content-full": "h5vp-content";
            this.playerC.className = t,
            this.styleArr = this._getAllVideoStyleByLayout();
            for (var i = 0,
            r = this.videos.length; i < r; i++) {
                var n = this._getVideoStyleByLayout(i);
                this.maxScreenIndex === i ? this._isFullScreen ? this.videos[i].setPosition(0, 0, this.WinScreenWidth + "px", this.WinScreenHeight + "px") : this.videos[i].setPosition(0, 0, this.opt.width, this.opt.height) : this.videos[i].setPosition(n.top, n.left, n.width, n.height)
            }
            this._historyTimeAxisSizeChange(),
            this._isFullScreen ? this._emitter.emit(g.
        default.OnFullScreen):
            this._emitter.emit(g.
        default.OnExitFullScreen)
        }
    },
    {
        key: "screenChangeEvent",
        value: function(e) {
            var i = this;
            if (/IE11/i.test(this.browserV)) l.EventUtil.addHandler(document, "keydown",
            function(e) {
                27 === ((e = e || window.event).keyCode || e.which) && i._isFullScreen && i.exitFullScreenStyle()
            });
            else if (/IE9|IE10/i.test(this.browserV)) l.EventUtil.addHandler(document, "keydown",
            function(e) {
                27 === ((e = e || window.event).keyCode || e.which) && i._isFullScreen && i.exitFullscreenIE11L()
            });
            else {
                var t = ["webkitfullscreenchange", "mozfullscreenchange", "fullscreenchange", "msfullscreenchange"];
                l.EventUtil.addHandler(document, "keydown",
                function(e) {
                    27 === ((e = e || window.event).keyCode || e.which) && i._isFullScreen && i.exitFullScreenStyle()
                });
                for (var r = 0; r < t.length; r++) document.addEventListener(t[r],
                function() {
                    var e = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement,
                    t = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen || document.msIsFullScreen;
                    if (e && t) {
                        if (e != i.playerC) return;
                        i.launchFullScreenStyle()
                    } else i.exitFullScreenStyle()
                })
            }
        }
    },
    {
        key: "_addEvent",
        value: function() {
            this._clickEvent(),
            this._dblclickEvent(),
            this._dragEvent()
        }
    },
    {
        key: "_getEventInfo",
        value: function(e) {
            e = l.EventUtil.getEvent(e);
            var t = l.EventUtil.getVideoContainerTarget(e);
            if (!t) return {
                index: -1,
                ele: null,
                x: e.offsetX,
                y: e.offsetY
            };
            var i = l.EventUtil.getEleToParentDistance(e.target, "h5vp-video-container"),
            r = i.offsetLeft,
            n = i.offsetTop,
            s = parseInt(t.getAttribute("index"));
            return {
                ele: t,
                index: isFinite(s) ? s: -1,
                x: e.offsetX + r,
                y: e.offsetY + n
            }
        }
    },
    {
        key: "_clickEvent",
        value: function() {
            var i = this;
            l.EventUtil.addHandler(this.playerC, "click",
            function(e) {
                var t = i._getEventInfo(e).index;
                0 <= t && t < i.videos.length && (i._setFocusIndex(t), i.videos[t].showOrHideRightMenu(!1), i.videos[t].removeSelectDrawing(), i._emitter.emit(g.
            default.OnWndClick, t))
            })
        }
    },
    {
        key: "_dblclickEvent",
        value: function() {
            var a = this;
            l.EventUtil.addHandler(this.playerC, "dblclick",
            function(e) {
                var t = a._getEventInfo(e),
                i = parseInt(t.index),
                r = t.x,
                n = t.y;
                if (! (i < 0 || i >= a.videos.length)) {
                    var s = a.videos[i].isInPtzRange(r, n); (!s || s && a.enablePtzDoubleClick) && (a._toggleMaxScreen(i), a.videos[i].isShowPtzRedArrow(!0, e), a._emitter.emit(g.
                default.OnWndDClik, i))
                }
            })
        }
    },
    {
        key: "_dragEvent",
        value: function() {
            var s = this,
            a = null,
            o = null;
            l.EventUtil.addHandler(this.playerC, "dragstart",
            function(e) {
                0 <= (a = s._getEventInfo(e)).index && a.index < s.videos.length && (s.videos[a.index].videoCMouseOverFlag = !1, a.index === s.maxScreenIndex && (e.preventDefault(), s.videos[a.index]._ptzControlByWin(0, 0)))
            }),
            l.EventUtil.addHandler(this.playerC, "dragend",
            function(e) {
                a && 0 <= a.index && (s.videos[a.index].videoCMouseOverFlag = !1, s.videos[a.index]._ptzControlByWin(0, 0))
            }),
            l.EventUtil.addHandler(this.playerC, "dragover",
            function(e) {
                a && 0 <= a.index && (s.videos[a.index].videoCMouseOverFlag = !1, s.videos[a.index]._ptzControlByWin(0, 0)),
                e.preventDefault()
            }),
            l.EventUtil.addHandler(this.playerC, "drop",
            function(e) {
                if (! (! (o = s._getEventInfo(e)) || o.index < 0 || o.index >= s.videos.length) && (s.videos[o.index].videoCMouseOverFlag = !1, a && a.index !== s.maxScreenIndex && !(a.index < 0) && a.index != o.index)) {
                    var t = a.index,
                    i = o.index;
                    if (s.enableExchangeScreen) {
                        s.videos[t].showOrHideRightMenu(!1);
                        var r = s._getVideoStyleByLayout(i);
                        s.videos[t].setPosition(r.top, r.left, r.width, r.height),
                        r = s._getVideoStyleByLayout(t),
                        s.videos[i].setPosition(r.top, r.left, r.width, r.height),
                        s.videos[t].setAttributeIndex(i),
                        s.videos[i].setAttributeIndex(t);
                        var n = s.videos[t];
                        s.videos[t] = s.videos[i],
                        s.videos[i] = n,
                        s.videos[i]._ptzControlByWin(0, 0),
                        s._setFocusIndex(i),
                        s._emitter.emit(g.
                    default.OnSwitchWindow, t, i)
                    } else s._emitter.emit(g.
                default.OnUnexecutedSwitchWindow, t, i)
                }
            })
        }
    },
    {
        key: "addEventListener",
        value: function(e, t) {
            e === g.
        default.OnH5msInit && this._h5msClient && this._h5msClient.status === k.HttpStatus.kSuccess ? this._emitter.emit(g.
        default.OnH5msInit, k.HttpEvents.OnInitSuccess) : e === g.
        default.OnH5msError && this._h5msClient && this._h5msClient.status === k.HttpStatus.kInitError ? this._emitter.emit(g.
        default.OnH5msError, k.HttpEvents.OnInitFail) : e === g.
        default.OnH5msError && this._h5msClient && this._h5msClient.status === k.HttpStatus.kError && this._emitter.emit(g.
        default.OnH5msError, k.HttpEvents.OnKeepAliveFail),
            this._emitter.addListener(e, t)
        }
    },
    {
        key: "removeEventListener",
        value: function(e) {
            this._emitter.removeAllListeners(e)
        }
    },
    {
        key: "listenAndEmitEvent",
        value: function(e) {
            var o = this;
            e.addEvent(g.
        default.OnMouseEnter,
            function(e) {
                o._emitter.emit(g.
            default.OnMouseEnter, e)
            }),
            e.addEvent(g.
        default.OnMouseLeave,
            function(e) {
                o.opt.enablePtzMotion && 0 <= o._mousedownindex && o.videos[o._mousedownindex] && o.videos[o._mousedownindex]._ptzControlByWin(0, 0),
                o._mousedownindex = -1,
                o._emitter.emit(g.
            default.OnMouseLeave, e)
            }),
            e.addEvent(g.
        default.OnMouseDown,
            function(e) {
                o._mousedownindex = e,
                o._emitter.emit(g.
            default.OnMouseDown, e)
            }),
            e.addEvent(g.
        default.OnMouseUp,
            function(e) {
                o._mousedownindex != e && (o.opt.enablePtzMotion && 0 <= o._mousedownindex && o.videos[o._mousedownindex] && o.videos[o._mousedownindex]._ptzControlByWin(0, 0), o._mousedownindex = -1),
                o._emitter.emit(g.
            default.OnMouseUp, e)
            }),
            e.addEvent(g.
        default.OnMouseMove,
            function(e) {
                o._emitter.emit(g.
            default.OnMouseMove, e)
            }),
            e.addEvent(g.
        default.OnPTZControlEvent,
            function(e, t, i, r, n, s) {
                o._emitter.emit(g.
            default.OnPTZControlEvent, e, t, i, r, n, s)
            }),
            e.addEvent(g.
        default.OnPTZControl3DEvent,
            function(e, t, i, r, n, s, a) {
                o._emitter.emit(g.
            default.OnPTZControl3DEvent, e, t, i, r, n, s, a)
            }),
            e.addEvent(g.
        default.OnVideoClose,
            function(e) {
                o._emitter.emit(g.
            default.OnVideoClose, e),
                o._historyTimeAxisVideoClose(e)
            }),
            e.addEvent(g.
        default.OnVideoStart,
            function(e) {
                o._historyTimeAxisVideoStart(e)
            }),
            e.addEvent(g.
        default.OnTimeaxisLevel,
            function(e, t, i) {
                o._historyTimeAxisLevel(e, t, i)
            }),
            e.addEvent(g.
        default.OnDrawingObject,
            function(e) {
                o._emitter.emit(g.
            default.OnDrawingObject, e)
            }),
            e.addEvent(g.
        default.OnZoomStatusChange,
            function(e, t) {
                o._emitter.emit(g.
            default.OnZoomStatusChange, e, t),
                0 <= e && e < o.videos.length && o.videos[e].checkZoomBtnStatus()
            }),
            e.addEvent(g.
        default.OnWndClick,
            function(e) {
                0 <= e && e < o.videos.length && (o._setFocusIndex(e), o.videos[e].showOrHideRightMenu(!1), o._emitter.emit(g.
            default.OnWndClick, e))
            }),
            e.addEvent(g.
        default.OnMouseDown,
            function(e, t) {
                0 <= e && e < o.videos.length && (o._setFocusIndex(e), o.videos[e].showOrHideRightMenu(!1), t || o.videos[e].removeSelectDrawing(), o._emitter.emit(g.
            default.OnMouseDown, e))
            }),
            e.addEvent(g.
        default.OnWndDClik,
            function(e) {
                0 <= e && e < o.videos.length && (o._toggleMaxScreen(e), o._emitter.emit(g.
            default.OnWndDClik, e))
            })
        }
    },
    {
        key: "version",
        get: function() {
            return "1.3.2"
        }
    },
    {
        key: "onResponse",
        get: function() {
            return this._onresponse
        },
        set: function(e) {
            this._onresponse = e
        }
    },
    {
        key: "onError",
        get: function() {
            return this._onerror
        },
        set: function(e) {
            this._onerror = e
        }
    },
    {
        key: "desEncodeType",
        get: function() {
            return this.opt.desEncodeType
        },
        set: function(e) {
            return this.opt.desEncodeType = e
        }
    },
    {
        key: "backgroundColor",
        set: function(e) {
            this.opt.backgroundColor = e;
            for (var t = 0,
            i = this.videos.length; t < i; t++) this.videos[t].setbackgroundColor(e)
        },
        get: function() {
            return this.opt.backgroundColor
        }
    },
    {
        key: "enableLoadingGif",
        set: function(e) {
            if ("boolean" == typeof e) {
                this.opt.enableLoadingGif = e;
                for (var t = 0,
                i = this.videos.length; t < i; t++) this.videos[t].setLoadingFlag(e, this.opt.enableLoadingInfo)
            } else this._showDebuggInfo("set enableLoadingGif() param error!")
        },
        get: function() {
            return this.opt.enableLoadingGif
        }
    },
    {
        key: "enableLoadingInfo",
        set: function(e) {
            if ("boolean" == typeof e) {
                this.opt.enableLoadingInfo = e;
                for (var t = 0,
                i = this.videos.length; t < i; t++) this.videos[t].setLoadingFlag(this.opt.enableLoadingGif, e)
            } else this._showDebuggInfo("set enableLoadingInfo() param error!")
        },
        get: function() {
            return this.opt.enableLoadingInfo
        }
    },
    {
        key: "showerror",
        set: function(e) {
            if ("boolean" == typeof e) {
                this.opt.showerror = e;
                for (var t = 0,
                i = this.videos.length; t < i; t++) this.videos[t].setShowError(e, this.opt.showerrorDetail)
            } else this._showDebuggInfo("set showerror() param error!")
        },
        get: function() {
            return this.opt.showerror
        }
    },
    {
        key: "showerrorDetail",
        set: function(e) {
            if ("boolean" == typeof e) {
                this.opt.showerrorDetail = e;
                for (var t = 0,
                i = this.videos.length; t < i; t++) this.videos[t].setShowError(this.opt.showerror, e)
            } else this._showDebuggInfo("set showerrorDetail() param error!")
        },
        get: function() {
            return this.opt.showerrorDetail
        }
    },
    {
        key: "enableProgressShowPts",
        set: function(e) {
            if ("boolean" == typeof e) {
                this.opt.enableProgressShowPts = e;
                for (var t = 0,
                i = this.videos.length; t < i; t++) this.videos[t].setProgressShowPts(e)
            } else this._showDebuggInfo("set enableProgressShowPts() param error!")
        },
        get: function() {
            return this.opt.enableProgressShowPts
        }
    },
    {
        key: "layout",
        set: function(e) {
            var t = e;
            if ("string" == typeof t) t = {
                layout: t.toUpperCase()
            };
            else if (0 === t || null === t) t = {
                layout: "0"
            };
            else if ("object" !== (void 0 === t ? "undefined": a(t))) return void this._showDebuggInfo("set layout() param error!");
            "1A5" === t.layout || "1A7" === t.layout || "1A9" === t.layout || this._parselayout(t) ? this._setLayout(t) : this._showDebuggInfo("set layout() param error!")
        },
        get: function() {
            return this.opt.layout ? this.opt.layout: {}
        }
    },
    {
        key: "layoutmargin",
        set: function(e) {
            var t = this._getLayoutmargin(e);
            t ? this._setLayoutmargin(t) : this._showDebuggInfo("set layoutmargin() param error!")
        },
        get: function() {
            return this.opt.layoutmargin ? this.opt.layoutmargin: {}
        }
    },
    {
        key: "layoutCount",
        get: function() {
            return this.layoutcount ? this.layoutcount: 0
        }
    },
    {
        key: "borderStyle",
        set: function(e) {
            this.opt.border = p.Toolkit.deepMerge(this.opt.border, e);
            for (var t = 0,
            i = this.videos.length; t < i; t++) this.videos[t].setBorderStyle(this.opt.border);
            this.opt.border && this.opt.border.borderColor && (this.playerC.style.background = this.opt.border.borderColor)
        },
        get: function() {
            return this.opt.border
        }
    },
    {
        key: "focusIndex",
        set: function(e) {
            var t = parseInt(e);
            t < 0 || t > this.videos.length || !this.videos[t] ? this._showDebuggInfo("set focusIndex() param error!") : this._setFocusIndex(t)
        },
        get: function() {
            return this.nFocusIndex
        }
    },
    {
        key: "maxWindowIndex",
        get: function() {
            return this.maxScreenIndex
        }
    },
    {
        key: "defaultBackground",
        set: function(e) {
            this.opt.defBgClass = e;
            for (var t = 0,
            i = this.videos.length; t < i; t++) this.videos[t].setDefBgImg(e)
        },
        get: function() {
            return this.opt.defBgClass
        }
    },
    {
        key: "enableExchangeWindow",
        set: function(e) {
            this.opt.enableExchangeScreen = e || !1,
            this.enableExchangeScreen = e || !1
        },
        get: function() {
            return this.enableExchangeScreen
        }
    }]), I);
    function I(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, I);
        var t = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (I.__proto__ || Object.getPrototypeOf(I)).call(this, e.wsurl || A)),
        i = {
            ele: "#video",
            videoSize: {
                width: 0,
                height: 0
            },
            border: {
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#B9BABB",
                focusBorderStyle: "solid",
                focusBorderColor: "#28e6fd"
            },
            layout: "2*2",
            ratio: "origin",
            layoutmargin: {
                marginX: 0,
                marginY: 0
            },
            defBgClass: "h5vp-bg-img",
            errorBgClass: "h5vp-bg-img-error",
            backgroundColor: "#000",
            enablePtzMotion: !0,
            enableLoadingGif: !0,
            enableLoadingInfo: !0,
            enableProgressShowPts: !0,
            windowPtzSpeed: 10,
            ptzRangeMode: 1,
            top_bottom: 20,
            left_right: 20,
            showerror: !0,
            showerrorDetail: !0,
            reconnectCount: 3,
            reconnectDuration: 10,
            loadingTimeout: 10,
            enablercdtimershaft: !0,
            rcdtimershaftshowtype: 1,
            rcdtimershaft: {
                backcolor: "rgba(0, 0, 0, 0.5)",
                vodcolor: "rgba(45, 240, 249, 0.5)",
                novodcolor: "rgba(160, 125, 125, 0.5)",
                thumbpos: "53%",
                thumbcolor: "#E48E00",
                captioncolor: "rgba(45, 240, 249)",
                curtimecolor: "rgba(45, 240, 249)",
                level: 0,
                curPositon: 45,
                shrink: !0
            },
            imageAnimation: !0,
            desEncodeType: 0,
            enableWasmDecoder: !0,
            enableAudio: !0,
            enableExchangeScreen: !0,
            enableStopZoomByDblclick: !1,
            vmShowAttribute: !0,
            enableBarrage: !0,
            wsurl: A
        };
        t.opt = p.Toolkit.deepMerge(i, e),
        t.opt.VMStrokeColorObj = t.VMStrokeColorObj,
        t.opt.VMTitleObj = t.VMTitleObj,
        t.opt.h5msUrl ? t._h5msClient = t._initH5msClient(t.opt.h5msUrl, !0) : t._h5msClient = null,
        t._reconnectCount = 0,
        t._h5msClientList = [],
        t._showDebugInfo = !0,
        t.browserV = p.Toolkit.browserVersion(),
        t._isFullScreen = !1,
        t.maxScreenIndex = -1,
        t.nFocusIndex = 0,
        t.enableExchangeScreen = t.opt.enableExchangeScreen,
        t.enablePtzDoubleClick = !1,
        t._timeAxisIndex = -1,
        t._timeAxisTimer = null,
        t.videos = [],
        "string" == typeof t.opt.ele ? t.opt.ele = document.querySelector(t.opt.ele) : t.opt.ele = t.opt.ele,
        t._emitter = new _.
    default,
        t._mousedownindex = -1,
        t._websocketctrl = null,
        t._onresponse = null,
        t._onerror = null,
        t._initDom(),
        s.EleResize.on(t.playerC, t._videoContainerResize.bind(t));
        var r = p.Toolkit.getBrowserZoomRatio();
        return t.WinScreenWidth = window.screen.width / (r / 100),
        t.WinScreenHeight = window.screen.height / (r / 100),
        t._windowResizeEvent(),
        t._initEvent(),
        t._talkbackTask = [],
        t._audioPlayerArr = [],
        t
    }
    R._defWsurl = A,
    R._extendClass = null,
    R.version = "1.3.2",
    window.H5Player = R
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    };
    function n(e, t) {
        for (e = "" + e, t = t || 2; e.length < t;) e = "0" + e;
        return e
    }
    Date.prototype.format = function(e) {
        var t = {
            "M+": this.getMonth() + 1,
            "d+": this.getDate(),
            "h+": this.getHours(),
            "m+": this.getMinutes(),
            "s+": this.getSeconds(),
            "q+": Math.floor((this.getMonth() + 3) / 3),
            S: this.getMilliseconds()
        };
        for (var i in /(y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))), t) new RegExp("(" + i + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? t[i] : ("00" + t[i]).substr(("" + t[i]).length)));
        return e
    };
    var s = {
        generateOnlyId: function() {
            return Number(Math.random().toString().substr(3, 15) + Date.now()).toString(36)
        },
        getElementStyle: function(e, t) {
            if ("string" == typeof e) var i = document.querySelector(i);
            var r = arguments.length,
            n = void 0,
            s = void 0;
            return "currentStyle" in e ? n = e.currentStyle: "getComputedStyle" in window && (n = window.getComputedStyle(e, null)),
            "opacity" === t && document.all ? (s = e.filters) && 0 < s.length && s.alpha ? s.alpha.opacity / 100 : 1 : ("float" === t && (t = document.all ? "styleFloat": "cssFloat"), n = 2 == r ? n[t] : n)
        },
        browserVersion: function() {
            var e = navigator.userAgent,
            t = /(msie\s|trident.*rv:)([\w.]+)/,
            i = /(firefox)\/([\w.]+)/,
            r = /(opera).+version\/([\w.]+)/,
            n = /(chrome)\/([\w.]+)/,
            s = /version\/([\w.]+).*(safari)/,
            a = void 0,
            o = void 0;
            e.toLowerCase();
            var l, u, h = (l = e.toLowerCase(), null != (u = t.exec(l)) ? {
                browser: "IE",
                version: u[2] || "0"
            }: null != (u = i.exec(l)) ? {
                browser: u[1] || "",
                version: u[2] || "0"
            }: null != (u = r.exec(l)) ? {
                browser: u[1] || "",
                version: u[2] || "0"
            }: null != (u = n.exec(l)) ? {
                browser: u[1] || "",
                version: u[2] || "0"
            }: null != (u = s.exec(l)) ? {
                browser: u[2] || "",
                version: u[1] || "0"
            }: null != u ? {
                browser: "",
                version: "0"
            }: void 0);
            return h.browser && (a = h.browser, o = h.version),
            a + o
        },
        insertAfter: function(e, t) {
            var i = t.parentNode;
            i.lastChild == t ? i.appendChild(e) : i.insertBefore(e, t.nextSibling)
        },
        hexToRgb: function(e) {
            if ((e = e.toLowerCase()) && /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(e)) {
                if (4 === e.length) {
                    for (var t = "#",
                    i = 1; i < 4; i += 1) t += e.slice(i, i + 1).concat(e.slice(i, i + 1));
                    e = t
                }
                var r = [];
                for (i = 1; i < 7; i += 2) r.push(parseInt("0x" + e.slice(i, i + 2)));
                return "rgb(" + r.join(",") + ")"
            }
            return e
        },
        rgbAndOpacityToRgba: function(e, t) {
            var i = e.replace("rgb(", "").replace(")", "").split(",");
            return i.push(t),
            "rgba(" + i.join(",") + ")"
        },
        getBrowserZoomRatio: function() {
            var e = 0,
            t = window.screen,
            i = navigator.userAgent.toLowerCase();
            return void 0 !== window.devicePixelRatio ? e = window.devicePixelRatio: ~i.indexOf("msie") ? t.deviceXDPI && t.logicalXDPI && (e = t.deviceXDPI / t.logicalXDPI) : void 0 !== window.outerWidth && void 0 !== window.innerWidth && (e = window.outerWidth / window.innerWidth),
            e = e && Math.round(100 * e)
        },
        getUuid: function() {
            var e, t = 16,
            i = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
            r = [];
            for (t = t || i.length, e = 0; e < 32; e++) r[e] = i[0 | Math.random() * t];
            return r.join("")
        },
        deepMerge: function(e, t) {
            var i;
            for (i in t) t[i] && "object" === r(t[i]) && !t[i].nodeType ? (e[i] = t[i].constructor === Array ? [] : {},
            this.deepMerge(e[i], t[i])) : e[i] = t[i];
            return e
        },
        isPositiveInteger: function(e) {
            return /^[0-9]+$/.test(e)
        },
        debounce: function(t, i, r) {
            var n, s, a = null;
            return function() {
                if (n = this, s = arguments, a && clearTimeout(a), r) {
                    var e = !a;
                    a = setTimeout(function() {
                        a = null
                    },
                    i),
                    e && t.apply(n, s)
                } else a = setTimeout(function() {
                    t.apply(n, s)
                },
                i)
            }
        },
        findNearAncestor: function(e, t) {
            for (;
            "BODY" != e.tagName;) {
                if ( - 1 < e.className.indexOf(t)) return e;
                e = e.parentNode
            }
        },
        getShapeDistance: function(t, e) {
            if (e.length < 1) return 0;
            var i = 0,
            r = 0,
            n = 0,
            s = 0;
            return e.forEach(function(e) {
                n = e.x - t.x,
                e.y - t.y,
                s = s + n * n + n * n,
                i += e.x,
                r += e.y
            }),
            i /= e.length,
            r /= e.length,
            i -= t.x,
            r -= t.y,
            s = (s + i * i + r * r) / (e.length + 1)
        },
        isPointInRect: function(e, t, i) {
            if (2 != t.length) return ! 1;
            var r = parseInt(t[0].x),
            n = parseInt(t[1].x),
            s = parseInt(t[0].y),
            a = parseInt(t[1].y),
            o = parseInt(e.x),
            l = parseInt(e.y);
            n < r && (r = parseInt(t[1].x), n = parseInt(t[0].x)),
            a < s && (s = parseInt(t[1].y), a = parseInt(t[0].y));
            function u(e) {
                return e < 10 && -10 < e
            }
            var h = o - r,
            d = l - s,
            c = o - n,
            f = l - a;
            return u(h) && u(d) || u(c) && u(f) ? (i.mouse = "nw-resize", i.direction = "xy", u(h) && u(d) ? i.index = 0 : i.index = 2, !0) : u(h) && u(f) || u(c) && u(d) ? (i.mouse = "ne-resize", i.direction = "xy", u(c) && u(d) ? i.index = 1 : i.index = 3, !0) : s < l && l < a && (u(c) || u(h)) ? (i.mouse = "e-resize", i.direction = "x", u(h) ? i.index = 0 : i.index = 2, !0) : r < o && o < n && (u(d) || u(f)) ? (i.mouse = "n-resize", i.direction = "y", u(d) ? i.index = 0 : i.index = 2, !0) : r <= o && o <= n && s <= l && l <= a && (i.mouse = "move", !0)
        },
        isPointInPolygon: function(e, t, i) {
            for (var r = parseInt(e.x), n = parseInt(e.y), s = !1, a = function(e) {
                return e < 10 && -10 < e
            },
            o = 0, l = t.length, u = l - 1; o < l; u = o, o++) {
                var h = parseInt(t[o].x),
                d = parseInt(t[o].y),
                c = parseInt(t[u].x),
                f = parseInt(t[u].y),
                p = n - d;
                if (a(r - h) && a(p)) return i.index = o,
                i.mouse = "sw-resize",
                !0;
                var v = n - f;
                if (a(r - c) && a(v)) return i.index = u,
                i.mouse = "sw-resize",
                !0;
                if (d < n && n <= f || n <= d && f < n) {
                    var m = h + (n - d) * (c - h) / (f - d);
                    if (m === r) return i.mouse = "move",
                    !0;
                    r < m && (s = !s)
                }
            }
            return s && (i.mouse = "move"),
            s
        },
        isPointInLine: function(e, t, i, r, n) {
            if (2 != t.length) return ! 1;
            function s(e) {
                return e < 10 && -10 < e
            }
            var a = parseInt(e.x),
            o = parseInt(e.y),
            l = parseInt(t[0].x),
            u = parseInt(t[0].y),
            h = parseInt(t[1].x),
            d = parseInt(t[1].y),
            c = a - l,
            f = o - u,
            p = a - h,
            v = o - d;
            if (1 == n) {
                var m = -1;
                if (0 == r ? m = c * c + f * f: 1 == r && (m = p * p + v * v), 0 <= m && m <= 400 && (c * p < 0 || f * v < 0)) return i.index = r,
                i.mouse = "pointer",
                !0
            } else if (2 == n) {
                var _ = this.getLineArrowPoint(t),
                g = a - _[0].x,
                y = o - _[0].y,
                b = a - _[1].x,
                S = o - _[1].y;
                if ((0 == r || 2 == r) && g * g + y * y <= 400) return i.index = 0,
                i.mouse = "pointer",
                !0;
                if ((1 == r || 2 == r) && b * b + S * S <= 400) return i.index = 1,
                i.mouse = "pointer",
                !0
            }
            if (s(c) && s(f)) return i.index = 0,
            i.mouse = "sw-resize",
            !0;
            if (s(p) && s(v)) return i.index = 1,
            i.mouse = "sw-resize",
            !0;
            c = l - h,
            f = u - d;
            for (var E = !1,
            k = 6 / Math.sqrt(c * c + f * f), w = f * k, T = c * k, A = [{
                x: l + w,
                y: u - T
            },
            {
                x: l - w,
                y: u + T
            },
            {
                x: h - w,
                y: d + T
            },
            {
                x: h + w,
                y: d - T
            }], R = 0, I = A.length, x = I - 1; R < I; x = R, R++) {
                var O = parseInt(A[R].x),
                C = parseInt(A[R].y),
                L = parseInt(A[x].x),
                D = parseInt(A[x].y);
                if (C < o && o <= D || o <= C && D < o) {
                    var P = O + (o - C) * (L - O) / (D - C);
                    if (P === a) {
                        E = !0;
                        break
                    }
                    a < P && (E = !E)
                }
            }
            return E && (i.mouse = "move"),
            E
        },
        isPointInDoubleline: function(e, t, i, r, n, s, a) {
            if (this.isPointInLine(e, t, i, r, n)) return ! 0;
            for (var o = this.deepMerge([], t), l = parseInt(s), u = parseInt(a), h = 0; h < o.length; h++) o[h].x += l,
            o[h].y += u;
            return this.isPointInLine(e, o, i, r, n)
        },
        getLineArrowPoint: function(e) {
            var t = parseInt(e[0].x),
            i = parseInt(e[0].y),
            r = parseInt(e[1].x),
            n = parseInt(e[1].y);
            if (t == n && i == n) return [{
                x: 0,
                y: 0
            },
            {
                x: 0,
                y: 0
            }];
            var s = r - t,
            a = n - i,
            o = (t + r) / 2,
            l = (i + n) / 2,
            u = 20 / Math.sqrt(s * s + a * a),
            h = a * u,
            d = s * u;
            return [{
                x: parseInt(o - h),
                y: parseInt(l + d)
            },
            {
                x: parseInt(o + h),
                y: parseInt(l - d)
            }]
        },
        getLinePoint: function(e, t) {
            var i = parseInt(e[0].x),
            r = parseInt(e[0].y),
            n = parseInt(e[1].x),
            s = parseInt(e[1].y);
            if (i == s && r == s) return [{
                x: 0,
                y: 0
            },
            {
                x: 0,
                y: 0
            }];
            var a = n - i,
            o = s - r,
            l = t / Math.sqrt(a * a + o * o),
            u = o * l,
            h = a * l;
            return [{
                x: parseInt(i + u),
                y: parseInt(r - h)
            },
            {
                x: parseInt(n + u),
                y: parseInt(s - h)
            }]
        },
        dateTime2mills: function(e) {
            return Date.parse(new Date(e)) / 1e3
        },
        mills2datetime: function(e) {
            var t = new Date(e);
            return t.getFullYear() + "-" + n(t.getMonth() + 1) + "-" + n(t.getDate()) + " " + n(t.getHours()) + ":" + n(t.getMinutes()) + ":" + n(t.getSeconds())
        }
    };
    t.Toolkit = s
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = {
        aggregation: function(e) {
            for (var t = arguments.length,
            s = Array(1 < t ? t - 1 : 0), i = 1; i < t; i++) s[i - 1] = arguments[i];
            var r = (function(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            } (a, e), a);
            function a() {
                for (var e, t = arguments.length,
                i = Array(t), r = 0; r < t; r++) i[r] = arguments[r]; !
                function(e, t) {
                    if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                } (this, a);
                var n = function(e, t) {
                    if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return ! t || "object" != typeof t && "function" != typeof t ? e: t
                } (this, (e = a.__proto__ || Object.getPrototypeOf(a)).call.apply(e, [this].concat(i)));
                return s.forEach(function(e) {
                    "function" == typeof e.prototype.initializer && e.prototype.initializer.apply(n, i)
                }),
                n
            }
            function n(t, i) {
                Object.getOwnPropertyNames(i).concat(Object.getOwnPropertySymbols(i)).forEach(function(e) {
                    e.match(/^(?:initializer|constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/) || Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                })
            }
            return s.forEach(function(e) {
                n(r.prototype, e.prototype),
                n(r, e)
            }),
            r
        },
        addHandler: function(e, t, i) {
            e.addEventListener ? e.addEventListener(t, i, !1) : e.attachEvent ? e.attachEvent("on" + t, i) : e["on" + t] = i
        },
        removeHandler: function(e, t, i) {
            e.removeEventListener ? e.removeEventListener(t, i) : e.detachEvent ? e.detachEvent("on" + t, i) : e["on" + t] = null
        },
        getEvent: function(e) {
            return e || window.event
        },
        getVideoContainerTarget: function(e) {
            var t = e.target || e.srcElement,
            i = null;
            try {
                if ("string" == typeof t.className && -1 !== t.className.indexOf("h5vp-video-container")) i = t;
                else {
                    if ("string" == typeof t.className && -1 !== t.className.indexOf("h5vp-container")) return null;
                    i = r.getParentEle(t, "h5vp-video-container")
                }
            } catch(e) {}
            return i
        },
        getPageOffset: function(e) {
            for (var t = 0,
            i = 0; e && e !== document.body;) t += e.offsetLeft,
            i += e.offsetTop,
            e = e.offsetParent;
            return {
                offsetLeft: t,
                offsetTop: i
            }
        },
        getEleToParentDistance: function(e, t) {
            for (var i = 0,
            r = 0; e && e !== document.body && (!t || t && !e.classList.contains(t));) i += e.offsetLeft || 0,
            r += e.offsetTop || 0,
            e = e.offsetParent;
            return {
                offsetLeft: i,
                offsetTop: r
            }
        },
        getParentEle: function(e, t) {
            for (; e && e !== document.body && !e.classList.contains(t);) e = e.parentNode;
            return e !== document.body ? e: null
        },
        getTarget: function(e) {
            return e.target || e.srcElement
        },
        preventDefault: function(e) {
            e.preventDefault ? e.preventDefault() : e.returnValue = !1
        },
        stopPropagation: function(e) {
            e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0
        }
    };
    t.EventUtil = r
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = {
        _handleResize: function(e) {
            var t = (e.target || e.srcElement).__resizeTrigger__;
            if (t) {
                var i = t.__z_resizeListeners;
                if (i) for (var r = i.length,
                n = 0; n < r; n++) {
                    var s = i[n],
                    a = s.handler,
                    o = s.context;
                    a.apply(o, [e])
                }
            }
        },
        _removeHandler: function(e, t, i) {
            var r = e.__z_resizeListeners;
            if (r) for (var n = r.length,
            s = 0; s < n; s++) {
                var a = r[s];
                if (a.handler === t && a.context === i) return void r.splice(s, 1)
            }
        },
        _createResizeTrigger: function(e) {
            var t = document.createElement("object");
            return t.setAttribute("style", "display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden;opacity: 0; pointer-events: none; z-index: -1;"),
            t.onload = s._handleObjectLoad,
            t.type = "text/html",
            e.appendChild(t),
            t.data = "about:blank",
            t
        },
        _handleObjectLoad: function(e) {
            this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__,
            this.contentDocument.defaultView.addEventListener("resize", s._handleResize)
        }
    };
    document.attachEvent ? (s.on = function(e, t, i) {
        var r = e.__z_resizeListeners;
        r || (r = [], e.__z_resizeListeners = r, (e.__resizeTrigger__ = e).attachEvent("onresize", s._handleResize)),
        r.push({
            handler: t,
            context: i
        })
    },
    s.off = function(e, t, i) {
        var r = e.__z_resizeListeners;
        r && (s._removeHandler(e, t, i), 0 === r.length && (e.detachEvent("onresize", s._handleResize), delete e.__z_resizeListeners))
    }) : (s.on = function(e, t, i) {
        var r = e.__z_resizeListeners;
        if (!r) {
            r = [],
            e.__z_resizeListeners = r,
            "static" === getComputedStyle(e, null).position && (e.style.position = "relative");
            var n = s._createResizeTrigger(e); (e.__resizeTrigger__ = n).__resizeElement__ = e
        }
        r.push({
            handler: t,
            context: i
        })
    },
    s.off = function(e, t, i) {
        var r = e.__z_resizeListeners;
        if (r && (s._removeHandler(e, t, i), 0 === r.length)) {
            var n = e.__resizeTrigger__;
            n && (n.contentDocument.defaultView.removeEventListener("resize", s._handleResize), e.removeChild(n), delete e.__resizeTrigger__),
            delete e.__z_resizeListeners
        }
    }),
    t.EleResize = s
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "createToolbar",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("createToolbar() param error!") : this.videos[i].createToolbar(t)
        }
    },
    {
        key: "removeToolbar",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("removeToolbar() param error!") : this.videos[i].removeToolbar(t)
        }
    },
    {
        key: "setStaticContent",
        value: function(e, t, i) {
            var r = parseInt(e);
            r < 0 || r >= this.videos.length || !this.videos[r] ? this._showDebuggInfo("setStaticContent() param error!") : this.videos[r].setStaticContent(t, i)
        }
    },
    {
        key: "getStaticContent",
        value: function(e, t) {
            var i = parseInt(e);
            if (! (i < 0 || i >= this.videos.length) && this.videos[i]) return this.videos[i].getStaticContent(t);
            this._showDebuggInfo("getStaticContent() param error!")
        }
    },
    {
        key: "getToobarItemStatusById",
        value: function(e, t) {
            var i = parseInt(e);
            if (! (i < 0 || i >= this.videos.length) && this.videos[i]) return this.videos[i].getToobarItemStatusById(t);
            this._showDebuggInfo("getToobarItemStatusById() param error!")
        }
    },
    {
        key: "setToolbarMenuById",
        value: function(e, t, i) {
            var r = parseInt(e);
            r < 0 || r >= this.videos.length || !this.videos[r] ? this._showDebuggInfo("setToolbarMenuById() param error!") : this.videos[r].setToolbarMenuById(t, i)
        }
    },
    {
        key: "setToolbarItemAttrsById",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setToolbarItemAttrsById(t, i);
            this._showDebuggInfo("setToolbarItemAttrsById() param error!")
        }
    },
    {
        key: "setToolbarItemGray",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setToolbarItemGray(t, i);
            this._showDebuggInfo("setToolbarItemGray() param error!")
        }
    },
    {
        key: "setToolbarItemChecked",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setToolbarItemChecked(t, i);
            this._showDebuggInfo("setToolbarItemChecked() param error!")
        }
    },
    {
        key: "setToolbarItemText",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setToolbarItemText(t, i);
            this._showDebuggInfo("setToolbarItemText() param error!")
        }
    },
    {
        key: "showOrHideToolbar",
        value: function(e, t, i) {
            var r = parseInt(e);
            r < 0 || r >= this.videos.length || !this.videos[r] ? this._showDebuggInfo("showOrHideToolbar() param error!") : this.videos[r].showOrHideToolbar(t, i)
        }
    },
    {
        key: "getVideoInfo",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getVideoInfo() param error!"), null) : this.videos[t].getVideoInfo()
        }
    },
    {
        key: "getStreamRate",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getStreamRate() param error!"), null) : this.videos[t].getStreamRate()
        }
    },
    {
        key: "setPlayTime",
        value: function(e, t) {
            var i = parseInt(e),
            r = parseFloat(t);
            return i < 0 || i >= this.videos.length || !this.videos[i] || r < 0 || isNaN(r) ? (this._showDebuggInfo("setPlayTime() param error!"), !1) : this.videos[i].setPlayTime(r)
        }
    },
    {
        key: "getPlaySpeed",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getPlaySpeed() param error!"), 0) : this.videos[t].getPlaySpeed()
        }
    },
    {
        key: "setPlaySpeed",
        value: function(e, t) {
            var i = parseInt(e),
            r = parseFloat(t);
            return i < 0 || i >= this.videos.length || !this.videos[i] || r < 0 || isNaN(r) || 16 < r ? (this._showDebuggInfo("setPlaySpeed() param error!"), !1) : this.videos[i].setPlaySpeed(r)
        }
    },
    {
        key: "setRatio",
        value: function(e, t) {
            var i = parseInt(e);
            return i < 0 || i >= this.videos.length || !this.videos[i] || "string" != typeof t ? (this._showDebuggInfo("setRatio() param error!"), !1) : this.videos[i].setRatio(t.toLowerCase())
        }
    }]), s);
    function s(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s)
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = (function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    } (a, [{
        key: "initializer",
        value: function(e) {}
    },
    {
        key: "createRightMenu",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] || "object" != (void 0 === t ? "undefined": r(t)) ? this._showDebuggInfo("createRightMenu() param error!") : this.videos[i].createRightMenu(t)
        }
    },
    {
        key: "removeRightMenu",
        value: function(e) {
            var t = parseInt(e);
            t < 0 || t >= this.videos.length || !this.videos[t] ? this._showDebuggInfo("removeRightMenu() param error!") : this.videos[t].removeRightMenu()
        }
    },
    {
        key: "getRightMenuItemById",
        value: function(e, t) {
            var i = parseInt(e);
            if (! (i < 0 || i >= this.videos.length) && this.videos[i]) return this.videos[i].getRightMenuItemById(t);
            this._showDebuggInfo("getRightMenuItemById() param error!")
        }
    },
    {
        key: "setRightMenuItemAttrsById",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setRightMenuItemAttrsById(t, i);
            this._showDebuggInfo("setRightMenuItemAttrsById() param error!")
        }
    },
    {
        key: "setRightMenuItemGray",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setRightMenuItemGray(t, i);
            this._showDebuggInfo("setRightMenuItemGray() param error!")
        }
    },
    {
        key: "setRightMenuItemChecked",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setRightMenuItemChecked(t, i);
            this._showDebuggInfo("setRightMenuItemChecked() param error!")
        }
    },
    {
        key: "setRightMenuItemText",
        value: function(e, t, i) {
            var r = parseInt(e);
            if (! (r < 0 || r >= this.videos.length) && this.videos[r]) return this.videos[r].setRightMenuItemText(t, i);
            this._showDebuggInfo("setRightMenuItemText() param error!")
        }
    }]), a);
    function a() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, a)
    }
    t.
default = s
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "initializer",
        value: function() {}
    },
    {
        key: "ptzControl",
        value: function(e, t, i) {
            var r = parseInt(e),
            n = parseInt(t),
            s = parseInt(i || 0);
            return r < 0 || r >= this.videos.length || !this.videos[r] || n < 0 || 19 < n ? (this._showDebuggInfo("ptzControl() param error!"), !1) : this.videos[r].ptzControl(n, s)
        }
    },
    {
        key: "ptzControl3d",
        value: function(e, t, i, r, n, s) {
            var a = parseInt(e),
            o = parseInt(t);
            return parseFloat(i),
            parseFloat(r),
            parseFloat(n),
            parseFloat(s),
            a < 0 || a >= this.videos.length || !this.videos[a] || o < 0 || 2 < o ? (this._showDebuggInfo("ptzControl3d() param error!"), !1) : this.videos[a].ptzControl3d(t, i, r, n, s)
        }
    },
    {
        key: "ptzLock",
        value: function(e, t) {
            var i = parseInt(e),
            r = parseInt(t || 0);
            return i < 0 || i >= this.videos.length || !this.videos[i] ? (this._showDebuggInfo("ptzLock() param error!"), !1) : this.videos[i].ptzLock(r)
        }
    },
    {
        key: "SetWindowPtz",
        value: function(e, t) {
            var i = parseInt(e);
            return ! (i < 0 || i >= this.videos.length || !this.videos[i] || "boolean" != typeof t) && this.videos[i].SetWindowPTZ(t)
        }
    },
    {
        key: "setWindowPtz",
        value: function(e, t) {
            var i = parseInt(e);
            return ! (i < 0 || i >= this.videos.length || !this.videos[i] || "boolean" != typeof t) && this.videos[i].SetWindowPTZ(t)
        }
    },
    {
        key: "getWindowPtzStatus",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].isWindowPTZ()
        }
    },
    {
        key: "setWindowPtzRange",
        value: function(e, t, i) {
            var r = parseInt(e),
            n = parseInt(t),
            s = parseInt(i);
            if (0 === r && 0 < n && 0 < s || 1 === r && 0 < n && n < 50 && 0 < s && s < 50) {
                this.opt.ptzRangeMode = r,
                this.opt.top_bottom = n,
                this.opt.left_right = s;
                for (var a = 0,
                o = this.videos.length; a < o; a++) this.videos[a].setPTZRange(e, t, i);
                return ! 0
            }
            return ! 1
        }
    },
    {
        key: "setWindowPtz3D",
        value: function(e, t, i) {
            var r = parseInt(e);
            return ! (r < 0 || r >= this.videos.length || !this.videos[r] || "boolean" != typeof t) && (t ? this.videos[r].startPtz3D(i) : this.videos[r].stopPtz3D())
        }
    },
    {
        key: "getWindowPtz3DStatus",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].getPtz3DStatus()
        }
    },
    {
        key: "startZoom",
        value: function(e, t) {
            var i = parseInt(e);
            return ! (i < 0 || i >= this.videos.length || !this.videos[i]) && this.videos[i].startZoom(t)
        }
    },
    {
        key: "stopZoom",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].stopZoom()
        }
    },
    {
        key: "getZoomStatus",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].getZoomStatus()
        }
    },
    {
        key: "startSteplessZoom",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].startIZoom()
        }
    },
    {
        key: "stopSteplessZoom",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].stopIZoom()
        }
    },
    {
        key: "getSteplessZoomStatus",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length || !this.videos[t]) && this.videos[t].getIZoomStatus()
        }
    },
    {
        key: "enablePtzMotion",
        set: function(e) {
            if ("boolean" == typeof e) {
                this.opt.enablePtzMotion = e;
                for (var t = 0,
                i = this.videos.length; t < i; t++) this.videos[t].EnablePTZ(e)
            } else this._showDebuggInfo("set enablePtzMotion() param error!")
        },
        get: function() {
            return this.opt.enablePtzMotion
        }
    },
    {
        key: "windowPtzSpeed",
        set: function(e) {
            var t = parseInt(e);
            if (t <= 0 || 15 < t) this._showDebuggInfo("set windowPtzSpeed() param error!");
            else {
                this.opt.windowPtzSpeed = t;
                for (var i = 0,
                r = this.videos.length; i < r; i++) this.videos[i].SetWndPtzSpeed(t)
            }
        },
        get: function() {
            return this.opt.windowPtzSpeed
        }
    },
    {
        key: "enableStopZoomByDblclick",
        set: function(e) {
            e = !!e,
            this.opt.enableStopZoomByDblclick = e;
            for (var t = 0,
            i = this.videos.length; t < i; t++) this.videos[t].stopZoomByDblclick(e)
        },
        get: function() {
            return this.opt.enableStopZoomByDblclick
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s)
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "initializer",
        value: function() {}
    },
    {
        key: "addWaterMark",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("addWaterMark() param error!") : this.videos[i].addWaterMark(t)
        }
    },
    {
        key: "getWaterMarkById",
        value: function(e, t) {
            var i = parseInt(e);
            return i < 0 || i >= this.videos.length || !this.videos[i] ? (this._showDebuggInfo("getWaterMarkById() param error!"), null) : this.videos[i].getWaterMarkById(t)
        }
    },
    {
        key: "delWaterMarkById",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("delWaterMarkById() param error!") : this.videos[i].delWaterMarkById(t)
        }
    },
    {
        key: "changeWaterMarkById",
        value: function(e, t, i) {
            var r = parseInt(e);
            r < 0 || r >= this.videos.length || !this.videos[r] ? this._showDebuggInfo("changeWaterMarkById() param error!") : this.videos[r].changeWaterMarkById(t, i)
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s)
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = i(341);
    var a = (r(o, [{
        key: "initializer",
        value: function() {
            this.defaultConfig = (0, s.createDefaultConfig)(),
            this.VMStrokeColorObj = {},
            this._initStrokeColorByType(),
            this.VMTitleObj = {},
            this._initTitleByType()
        }
    },
    {
        key: "_setRTVOStrokeColor",
        value: function(e, t) {
            this._setStrokeColorByType(e, t);
            for (var i = 0,
            r = this.layoutcount; i < r; i++) this.videos[i].vOpt.VMStrokeColorObj = this.VMStrokeColorObj
        }
    },
    {
        key: "_initStrokeColorByType",
        value: function() {
            this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_CAR] = "rgb(214,38,30)",
            this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_BICYCLE] = "rgb(0,211,12)",
            this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_TRICYCLE] = "rgb(0,211,12)",
            this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_PEDESTRIAN] = "rgb(255,42,245)",
            this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_FACE] = "rgb(255,42,245)"
        }
    },
    {
        key: "_initTitleByType",
        value: function(e) {
            this.VMTitleObj[this.defaultConfig.OBJ_TYPE_CAR] = "车辆",
            this.VMTitleObj[this.defaultConfig.OBJ_TYPE_BICYCLE] = "自行车",
            this.VMTitleObj[this.defaultConfig.OBJ_TYPE_TRICYCLE] = "非机动车",
            this.VMTitleObj[this.defaultConfig.OBJ_TYPE_PEDESTRIAN] = "行人",
            this.VMTitleObj[this.defaultConfig.OBJ_TYPE_FACE] = "人脸"
        }
    },
    {
        key: "_setStrokeColorByType",
        value: function(e, t) {
            var i = {};
            i[e] = t,
            this.VMStrokeColorObj = Object.assign(this.VMStrokeColorObj, i)
        }
    },
    {
        key: "vmPersonStrokeColor",
        set: function(e) {
            this._setRTVOStrokeColor(this.defaultConfig.OBJ_TYPE_PEDESTRIAN, e)
        },
        get: function() {
            return this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_PEDESTRIAN]
        }
    },
    {
        key: "vmCarStrokeColor",
        set: function(e) {
            this._setRTVOStrokeColor(this.defaultConfig.OBJ_TYPE_CAR, e)
        },
        get: function() {
            return this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_CAR]
        }
    },
    {
        key: "vmBicycleStrokeColor",
        set: function(e) {
            this._setRTVOStrokeColor(this.defaultConfig.OBJ_TYPE_BICYCLE, e)
        },
        get: function() {
            return this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_BICYCLE]
        }
    },
    {
        key: "vmTricycleStrokeColor",
        set: function(e) {
            this._setRTVOStrokeColor(this.defaultConfig.OBJ_TYPE_TRICYCLE, e)
        },
        get: function() {
            return this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_TRICYCLE]
        }
    },
    {
        key: "vmFaceStrokeColor",
        set: function(e) {
            this._setRTVOStrokeColor(this.defaultConfig.OBJ_TYPE_FACE, e)
        },
        get: function() {
            return this.VMStrokeColorObj[this.defaultConfig.OBJ_TYPE_FACE]
        }
    },
    {
        key: "vmShowAttribute",
        set: function(e) {
            this.opt.vmShowAttribute = e || !1;
            for (var t = 0,
            i = this.videos.length; t < i; t++) this.videos[t].enableShowAttribute(this.opt.vmShowAttribute)
        },
        get: function() {
            return this.opt.vmShowAttribute
        }
    }]), o);
    function o() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, o)
    }
    t.
default = a
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    }),
    t.createDefaultConfig = function() {
        return Object.assign({},
        r)
    };
    var r = t.defaultConfig = {
        enableWorkerFmp4: !1,
        enableWorker: !0,
        enableStashBuffer: !1,
        stashInitialSize: void 0,
        isLive: !1,
        lazyLoad: !0,
        lazyLoadMaxDuration: 180,
        lazyLoadRecoverDuration: 30,
        deferLoadAfterSourceOpen: !0,
        autoCleanupMaxBackwardDuration: 90,
        autoCleanupMinBackwardDuration: 10,
        autoSpeedMaxDurationForLive: 2,
        autoSpeedMinDurationForLive: 1,
        autoSeekDurationForLive: 4,
        videoFramesBeforeAudioForLive: 3,
        videoFramesBeforeAudioForVod: 5,
        statisticsInfoReportInterval: 1e3,
        fixAudioTimestampGap: !0,
        accurateSeek: !0,
        seekType: "range",
        seekParamStart: "bstart",
        seekParamEnd: "bend",
        rangeLoadZeroStart: !1,
        customSeekHandler: void 0,
        reuseRedirectedURL: !1,
        headers: void 0,
        OBJ_TYPE_CAR: 1,
        OBJ_TYPE_BICYCLE: 2,
        OBJ_TYPE_TRICYCLE: 3,
        OBJ_TYPE_PEDESTRIAN: 4,
        OBJ_TYPE_FACE: 1024
    }
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "initializer",
        value: function() {}
    },
    {
        key: "startDrawing",
        value: function(e, t, i) {
            var r = parseInt(e);
            return r < 0 || r >= this.videos.length || !this.videos[r] || "rect" !== t && "polygon" != t && "line" !== t && "doubleline" !== t ? (this._showDebuggInfo("startDrawing() param error!"), !1) : this.videos[r].startDrawing(t, i)
        }
    },
    {
        key: "stopDrawing",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("stopDrawing() param error!") : this.videos[i].stopDrawing(t)
        }
    },
    {
        key: "deleteDrawingById",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("deleteDrawingById() param error!") : this.videos[i].deleteDrawingById(t)
        }
    },
    {
        key: "addDrawingObject",
        value: function(e, t) {
            var i = parseInt(e);
            i < 0 || i >= this.videos.length || !this.videos[i] ? this._showDebuggInfo("addDrawingObject() param error!") : this.videos[i].addDrawingObject(t)
        }
    },
    {
        key: "getAllDrawingObject",
        value: function(e) {
            var t = parseInt(e);
            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("getAllDrawingObject() param error!"), null) : this.videos[t].getAllDrawingObject()
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s)
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = i(333);
    var a = (r(o, [{
        key: "initializer",
        value: function() {}
    },
    {
        key: "_historyTimeAxisFocusChange",
        value: function(e, t) {
            this.videos && this.enablercdtimershaft && this._showTimeAxisIfNeed()
        }
    },
    {
        key: "_historyTimeAxisSizeChange",
        value: function() {
            var e = this.videos;
            e && this.enablercdtimershaft && e[this._timeAxisIndex] && e[this._timeAxisIndex].updateTimeAxis()
        }
    },
    {
        key: "_historyTimeAxisVideoClose",
        value: function(e) {
            this.videos && this.enablercdtimershaft && this._timeAxisIndex === e && (this._closeTimeAxis(), this._showTimeAxisIfNeed())
        }
    },
    {
        key: "_historyTimeAxisLevel",
        value: function(e, t, i) {
            e == this._timeAxisIndex && (this.opt.rcdtimershaft.level = t, null != i && (this.opt.rcdtimershaft.shrink = i))
        }
    },
    {
        key: "_showTimeAxisIfNeed",
        value: function() {
            var e = this.videos;
            if (e && this.enablercdtimershaft) {
                if (this._isVodPlay(this.nFocusIndex)) {
                    if (this.nFocusIndex == this._timeAxisIndex && e[this._timeAxisIndex].isShowTimeAxis()) return;
                    return this._closeTimeAxis(),
                    this._timeAxisIndex = this.nFocusIndex,
                    void(e[this._timeAxisIndex] && e[this._timeAxisIndex].showTimeAxis(this.opt.rcdtimershaft))
                }
                if (0 != this.rcdtimershaftshowtype || "fix" == this.rcdtimershaft.curPositon) {
                    if (! (e[this._timeAxisIndex] && e[this._timeAxisIndex].isVodPlay() && e[this._timeAxisIndex].isShowTimeAxis())) {
                        this._closeTimeAxis();
                        for (var t = -1,
                        i = 0; i < e.length; i++) {
                            if (e[i].isVodPlay()) return void e[this._timeAxisIndex = i].showTimeAxis(this.opt.rcdtimershaft);
                            e[i].getIdleOrBusy() && (t = i)
                        }
                        2 == this.rcdtimershaftshowtype && -1 != t ? e[this._timeAxisIndex = t].showTimeAxis(this.opt.rcdtimershaft) : 3 != this.rcdtimershaftshowtype && "fix" !== this.rcdtimershaft.curPositon || !e[0] || e[this._timeAxisIndex = 0].showTimeAxis(this.opt.rcdtimershaft)
                    }
                } else this._closeTimeAxis()
            }
        }
    },
    {
        key: "_historyTimeAxisVideoStart",
        value: function(e) {
            var t = this.videos;
            if (t && this.enablercdtimershaft) {
                var i = t[e];
                i && (i.isVodPlay() ? this.nFocusIndex != e && this._isVodPlay(this._timeAxisIndex) || (this._closeTimeAxis(), this._timeAxisIndex = e, i.showTimeAxis(this.opt.rcdtimershaft)) : 2 == this.rcdtimershaftshowtype && -1 == this._timeAxisIndex && (this._closeTimeAxis(), this._timeAxisIndex = e, i.showTimeAxis(this.opt.rcdtimershaft)))
            }
        }
    },
    {
        key: "_isVodPlay",
        value: function(e) {
            var t = parseInt(e);
            return ! (t < 0 || t >= this.videos.length) && this.videos[t].isVodPlay()
        }
    },
    {
        key: "_closeTimeAxis",
        value: function() {
            for (var e = this.videos,
            t = 0; t < e.length; t++) e[t] && e[t].closeTimeAxis();
            this._timeAxisIndex = -1
        }
    },
    {
        key: "rcdtimershaft",
        set: function(e) {
            this.opt.rcdtimershaft = s.Toolkit.deepMerge(this.opt.rcdtimershaft, e);
            var t = this._timeAxisIndex;
            this._closeTimeAxis(),
            this._timeAxisIndex = t,
            this.videos[t] && this.videos[t].showTimeAxis(this.opt.rcdtimershaft)
        },
        get: function() {
            return this.opt.rcdtimershaft
        }
    },
    {
        key: "enablercdtimershaft",
        set: function(e) {
            this.opt.enablercdtimershaft = e,
            this.opt.enablercdtimershaft && this.videos ? this._showTimeAxisIfNeed() : this._closeTimeAxis()
        },
        get: function() {
            return this.opt.enablercdtimershaft
        }
    },
    {
        key: "rcdtimershaftshowtype",
        set: function(e) {
            this.opt.rcdtimershaftshowtype = e,
            this.opt.enablercdtimershaft && this.videos && this._showTimeAxisIfNeed()
        },
        get: function() {
            return this.opt.rcdtimershaftshowtype
        }
    }]), o);
    function o() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, o)
    }
    t.
default = a
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = b(i(345)),
    a = b(i(398)),
    o = b(i(401)),
    l = b(i(402)),
    u = b(i(404)),
    h = b(i(405)),
    d = b(i(406)),
    c = b(i(407)),
    f = b(i(408)),
    p = i(334),
    v = i(333),
    m = b(i(409)),
    _ = b(i(410)),
    g = b(i(347)),
    y = b(i(403));
    function b(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var S = "正在开流...",
    E = "视频流加载中...",
    k = "第",
    w = "次重连中...",
    T = "视频流接收超时",
    A = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (R, p.EventUtil.aggregation(a.
default, o.
default, l.
default, u.
default, h.
default, d.
default, f.
default, c.
default, _.
default)), r(R, [{
        key: "destroy",
        value: function() {
            this._videoplayer && (this._videoplayer.destroy(), this._videoplayer = null, this._emitter.emit(y.
        default.OnVideoClose, this.vOpt.index)),
            this._restartTimer && (window.clearTimeout(this._restartTimer), this._restartTimer = null),
            this.closeTimeAxis()
        }
    },
    {
        key: "_getOrignWidthHeight",
        value: function() {
            this.width = this.vOpt.width,
            this.height = this.vOpt.height
        }
    },
    {
        key: "_createCanvas",
        value: function() {
            return document.createElement("canvas")
        }
    },
    {
        key: "_createVideoEle",
        value: function() {
            var e = document.createElement("div"),
            t = document.createElement("video"),
            i = document.createElement("div"),
            r = document.createElement("canvas");
            e.className = "div-" + this.vOpt.ele + " h5vp-video-container",
            e.style.position = "absolute",
            e.setAttribute("index", this.vOpt.index),
            e.style.float = "left",
            e.style.width = this.vOpt.width,
            e.style.height = this.vOpt.height,
            e.style.top = this.vOpt.top,
            e.style.left = this.vOpt.left,
            t.className = this.vOpt.ele,
            t.setAttribute("draggable", !0),
            t.setAttribute("index", this.vOpt.index),
            r.style.display = "none",
            r.className = "videoCanvas",
            r.setAttribute("draggable", !0),
            i.className = "h5Player-layer-common h5Player-video-layer",
            i.setAttribute("index", this.vOpt.index),
            i.appendChild(t),
            i.appendChild(r);
            var n = document.createElement("div");
            n.className = "npvideo-loading-container h5Player-loading-layer";
            var s = document.createElement("div");
            s.className = "npvideo-loading",
            n.appendChild(s);
            var a = document.createElement("div");
            a.className = "npvideo-loading-info",
            n.appendChild(a),
            this.vOpt.playerC.appendChild(e),
            e.appendChild(n),
            e.appendChild(i),
            this.vOpt.videoC = e,
            this.vOpt.displayC = i,
            this.vOpt.videoEle = t,
            this.vOpt.videoCvs = r,
            this.vOpt.videoLoading = n,
            this.vOpt.loadingInfoDiv = a,
            this._setBgImg(!0),
            this._setBorderStyle(this.isFocusScreen),
            this.setRatio(this.vOpt.ratio),
            this._addEvent()
        }
    },
    {
        key: "_onflverror",
        value: function(e, t, i) {
            if (console.log("onerror:", e, t, i), this._dataRate = 0, this._fps = 0, this._updateDateRate(), !this._firstError) {
                if (this._firstError = !0, this._errorAtTime <= 0 && (this._errorAtTime = (new Date).getTime()), this._restartTimer && (window.clearTimeout(this._restartTimer), this._restartTimer = null), this.isFirstCanPlay && this._hasPlayed ? this.vOpt.displayC.style.backgroundImage = "url(" + this.capturePicture("jpeg") + ")": this.vOpt.displayC.style.backgroundImage = "", this._videoplayer.unload(), this._restartTimes < this.vOpt.reconnectCount) return this._restartTimer = window.setTimeout(this._createPlayer.bind(this), 0),
                this._restartTimes++,
                this.vOpt.loadingInfoDiv && (this.vOpt.loadingInfoDiv.innerHTML = k + this._restartTimes + w),
                void console.log("第", this._restartTimes, "次重连中... BY COUNT");
                if (this._hasPlayed && (this.vOpt.reconnectDuration < 0 || (new Date).getTime() - this._errorAtTime < 1e3 * this.vOpt.reconnectDuration)) {
                    if (this._restartTimer = window.setTimeout(this._createPlayer.bind(this), 3e3), this._restartTimes++, this.vOpt.loadingInfoDiv) {
                        this._showOrHideLoading(!0);
                        var r = this._restartTimes - (0 <= this.vOpt.reconnectCount ? this.vOpt.reconnectCount: 0);
                        this.vOpt.loadingInfoDiv.innerHTML = k + r + w
                    }
                    return void console.log("第", this._restartTimes, "次重连中... BY TIME")
                }
                this.errorBgToggle(!0),
                this._showError(e, t, i),
                this._clearLoadingCheckTimer()
            }
        }
    },
    {
        key: "_onflvstatistics_info",
        value: function(e) {
            if (0 !== this._videoWidth && 0 !== this._videoHeight || (void 0 !== this._videoplayer && this._videoplayer && this._videoplayer.mediaInfo && (this._videoWidth = this._videoplayer.mediaInfo.videoWidth, this._videoHeight = this._videoplayer.mediaInfo.videoHeight), "wasmPlayer" === this._videoplayer.type && (this.vOpt.videoCvs.width = this._videoWidth, this.vOpt.videoCvs.height = this._videoHeight)), this._fps = e.decodedFrames - this._lastdecodedFrames, this._lastdecodedFrames = e.decodedFrames, this._fps < 0 && (this._fps = 0), this._dataRate = e.dataRate, this._updateDateRate(), this._onstatisticsinfo && this._onstatisticsinfo({
                videoWideth: this._videoWidth,
                videoHeight: this._videoHeight,
                frameRate: this._fps,
                dataRate: this._dataRate,
                durtion: this.durationT
            }), isFinite(this.durationT) && 0 < this.durationT && !this._videoplayer.paused) {
                var t = this._videoplayer.currentTime;
                t == this._lastPlaytime && this.durationT - t <= 5 ? (this._keepPlaytime++, 5 == this._keepPlaytime && (this._onflvplaytime(this.durationT), console.log("check and updata playtime " + t + " to " + this.durationT))) : this._keepPlaytime = 0
            }
            this._lastPlaytime = this._videoplayer.currentTime
        }
    },
    {
        key: "_onflvcommand_response",
        value: function(e, t, i) {
            console.log("oncommand_response", e, t, i)
        }
    },
    {
        key: "_onflvcommand_notify",
        value: function(e, t, i) {
            console.log("oncommand_notify", e, t, i)
        }
    },
    {
        key: "_onflvfirstcanplay",
        value: function() {
            if (this._showOrHideLoading(!1), this._clearLoadingCheckTimer(), this.delWaterMarkById("_showError_"), this.errorBgToggle(!1), this.isFirstCanPlay = !0, this._hasPlayed = !0, this._restartTimes = 0, this._errorAtTime = 0, this.durationT = this._videoplayer.duration, this._videoWidth = this._videoplayer.mediaInfo.videoWidth, this._videoHeight = this._videoplayer.mediaInfo.videoHeight, "origin" === this.vOpt.ratio) {
                var e = this._getOriginVideoSize(),
                t = this.setZoomSVGPosition(e);
                this.setRTSVGPosition(t),
                this.setVMCanvasPosition(t),
                this.setVideoCanvasPosition(t)
            }
            "wasmPlayer" === this._videoplayer.type ? (this.vOpt.videoCvs.style.display = "block", this.vOpt.videoCvs.width = this._videoWidth, this.vOpt.videoCvs.height = this._videoHeight) : this.vOpt.videoCvs.style.display = "none",
            this._updateCurrentTText()
        }
    },
    {
        key: "_onflvplay",
        value: function() {
            this.showOrHideBtn("videoPause", !0),
            this.showOrHideBtn("videoPlay", !1)
        }
    },
    {
        key: "_onflvpause",
        value: function() {
            this.showOrHideBtn("videoPause", !1),
            this.showOrHideBtn("videoPlay", !0)
        }
    },
    {
        key: "_onflvvideomuted",
        value: function(e) {
            var t = this._videoplayer,
            i = this.getToobarBtnById("videoSound");
            t.audioinit && i && (e ? (i.classList.remove("video-sound-on", "video-sound-disable"), i.classList.add("video-sound-off")) : (i.classList.remove("video-sound-off", "video-sound-disable"), i.classList.add("video-sound-on")))
        }
    },
    {
        key: "_onflvaudioinit",
        value: function() {
            var e = this.getToobarBtnById("videoSound");
            e.classList.remove("video-sound-disable"),
            e.classList.add("video-sound-off"),
            e.setAttribute("title", "声音")
        }
    },
    {
        key: "_onflvspeedchange",
        value: function() {}
    },
    {
        key: "_onflvobjectinfo",
        value: function(e) {
            this.RTVOInit(e)
        }
    },
    {
        key: "_onflvrecordseek",
        value: function(e) {
            null != e.error && 0 != e.error && this._isVodPlay && this._updateHistoryTimeAxis(0 < this._videoStartPts ? this.getPlayPts() : this._srcStartPts)
        }
    },
    {
        key: "_onflvstartstream",
        value: function(e) {
            this._videoplayer && this._isVodPlay && null == this._videoRecordList && this._videoplayer.queryRecord(this._videoSrc),
            this.vOpt.loadingInfoDiv && 0 == e && (this.vOpt.loadingInfoDiv.innerHTML = E),
            0 == e && 0 < this.vOpt.loadingTimeout && null == this._loadingCheckTimer && (this._loadingCheckTimer = window.setTimeout(this._loadingTimeoutCheck.bind(this), 1e3 * this.vOpt.loadingTimeout))
        }
    },
    {
        key: "_onflvqueryrecord",
        value: function(e) {
            if (this._videoRecordList = [], 0 == e.error) {
                var t = e.info;
                if ("string" == typeof t && (t = JSON.parse(t)), t && 0 < t.length) {
                    for (var i = 0,
                    r = 0,
                    n = -1,
                    s = 0; s < t.length; s++) i = new Date(t[s].begintime.replace(/-/g, "/")).getTime(),
                    r = new Date(t[s].endtime.replace(/-/g, "/")).getTime(),
                    ( - 1 == n || i < n) && (n = i),
                    this._videoRecordList.push([i, r]); - 1 != n && (this._videoStartPts = n, this._videoSrc && (this._playtimeOffset = (this._videoStartPts - this._srcStartPts) / 1e3, this._playtimeOffset < 0 && (this._playtimeOffset = 0), 0 < this._playtimeOffset && this._videoplayer.setPlaybackOffset(this._playtimeOffset)))
                }
            }
            this._updateHistoryTimeAxisRecord(v.Toolkit.deepMerge([], this._videoRecordList))
        }
    },
    {
        key: "_onflvplaytime",
        value: function(e) { ! this.isDragProgress && this._videoplayer && (this.currentT = e + this._playtimeOffset, this.updatePorgress(), this._isVodPlay && 0 < this._videoStartPts && this._updateHistoryTimeAxis(1e3 * e + this._videoStartPts))
        }
    },
    {
        key: "_loadingTimeoutCheck",
        value: function() {
            this.firstcanplay || (this._videoplayer && this._videoplayer.unload(), this.errorBgToggle(!0), this._showError(T), this._clearLoadingCheckTimer())
        }
    },
    {
        key: "_clearLoadingCheckTimer",
        value: function() {
            this._loadingCheckTimer && (clearTimeout(this._loadingCheckTimer), this._loadingCheckTimer = null)
        }
    },
    {
        key: "isVodPlay",
        value: function() {
            return this._isVodPlay
        }
    },
    {
        key: "getPlayPts",
        value: function() {
            return this._videoplayer ? 1e3 * this._videoplayer.currentTime + this._videoStartPts: 0
        }
    },
    {
        key: "setPlayPts",
        value: function(e) {
            if (this._videoplayer && isFinite(this.durationT)) {
                var t = (e - this._videoStartPts) / 1e3;
                t < 0 ? t = 0 : t > this.durationT && (t = this.durationT),
                this._videoplayer.currentTime = t
            }
        }
    },
    {
        key: "getVideoRange",
        value: function() {
            if (!this._videoRecordRange && this._isVodPlay) {
                var e = new Date(this._videoSrc.endtime.replace(/-/g, "/")).getTime();
                this._videoRecordRange = {
                    begintime: this._srcStartPts,
                    endtime: e
                }
            }
            return this._videoRecordRange ? v.Toolkit.deepMerge({},
            this._videoRecordRange) : null
        }
    },
    {
        key: "getVideoEl",
        value: function() {
            return this.vOpt.displayC
        }
    },
    {
        key: "getRecordList",
        value: function() {
            return this._videoRecordList ? v.Toolkit.deepMerge([], this._videoRecordList) : null
        }
    },
    {
        key: "_createPlayer",
        value: function() {
            this._videoplayer && (this._videoplayer.destroy(), this._videoplayer = null),
            this._firstError = !1,
            this.isFirstCanPlay = !1,
            this._videoplayer = new s.
        default({
                channelInfo:
                this._videoSrc,
                callbacks: this._paramSrc.callbacks,
                url: this._paramSrc.wsurl,
                h5msClient: this._paramSrc.h5msClient
            },
            v.Toolkit.deepMerge({
                enableWasmDecoder: this.vOpt.enableWasmDecoder,
                enableAudio: this.vOpt.enableAudio
            },
            this.vOpt.playConfig)),
            this._videoplayer.on("error", this._onflverror.bind(this)),
            this._videoplayer.on("statistics_info", this._onflvstatistics_info.bind(this)),
            this._videoplayer.on("firstcanplay", this._onflvfirstcanplay.bind(this)),
            this._videoplayer.on("seek", this._onflvrecordseek.bind(this)),
            this._videoplayer.on("pause", this._onflvpause.bind(this)),
            this._videoplayer.on("play", this._onflvplay.bind(this)),
            this._videoplayer.on("speedchange", this._onflvspeedchange.bind(this)),
            this._videoplayer.on("objectinfo", this._onflvobjectinfo.bind(this)),
            this._videoplayer.on("streamstart", this._onflvstartstream.bind(this)),
            this._videoplayer.on("queryrecord", this._onflvqueryrecord.bind(this)),
            this._videoplayer.on("playtime", this._onflvplaytime.bind(this)),
            this._videoplayer.on("audio_init", this._onflvaudioinit.bind(this)),
            this._videoplayer.on("videomuted", this._onflvvideomuted.bind(this)),
            this.vOpt.videoCvs.style.display = "inline-block",
            this._videoplayer.attachMediaElement(this.vOpt.videoEle, this.vOpt.videoCvs),
            this._videoplayer.load()
        }
    },
    {
        key: "startVideo",
        value: function(e, t, i, r) {
            this._videoplayer && this._videoCloseFunc(!1 | e.keeplastpicture),
            i = i || this.vOpt.wsurl,
            this.isIdle = !1,
            this.currentT = 0,
            this.currentP = 0,
            this.durationT = 0,
            this._videoStartPts = 0,
            this._playtimeOffset = 0,
            this._videoRecordRange = null,
            this._videoRecordList = null;
            var n = "string" == typeof e.devicetype ? e.devicetype.toLowerCase() : "";
            if ("flv" == n || "hls" == n || "native" == n ? (this._hasStartEvent = !1, 0 < this.vOpt.loadingTimeout && (this._loadingCheckTimer = window.setTimeout(this._loadingTimeoutCheck.bind(this), 1e3 * this.vOpt.loadingTimeout))) : this._hasStartEvent = !0, "pfsfile" == n && (e.streamtype = "vod"), this._videoSrc = v.Toolkit.deepMerge({},
            e), this._paramSrc = {
                callbacks: t,
                wsurl: i,
                h5msClient: r
            },
            e && "vod" === e.streamtype && -1 != n.indexOf("pvg") && this._videoSrc.begintime ? (this._isVodPlay = !0, this._videoStartPts = this._srcStartPts = new Date(this._videoSrc.begintime.replace(/-/g, "/")).getTime()) : this._isVodPlay = !1, this._hasPlayed = !1, e.title ? this._videoTitle = e.title: this._videoTitle = "", this._setBgImg(!1), "image" != n) return this._imageEl && (this._imageEl.style.display = "none"),
            this._createPlayer(),
            this.setRatio(this.vOpt.ratio),
            this._videoplayer.currentTime || (this.vOpt.loadingInfoDiv && (this._hasStartEvent ? this.vOpt.loadingInfoDiv.innerHTML = S: this.vOpt.loadingInfoDiv.innerHTML = E), this._showOrHideLoading(!0)),
            this._emitter.emit(y.
        default.OnVideoStart, this.vOpt.index),
            !0;
            this.playImage(e)
        }
    },
    {
        key: "playImage",
        value: function(e) {
            var t = this;
            if (e.url) {
                this.isIdle = !1,
                this.isFirstCanPlay = !0;
                var i = this.vOpt.imageAnimation;
                if (!this.animaitionFinshed) if (this._resetiZoom(), this._imageEl) {
                    this._imageEl.style.display = "inline-block",
                    this.animaitionFinshed = !0;
                    var r = this.vOpt.displayC.clientWidth,
                    n = (this.vOpt.displayC.clientHeight, this._imageEl.getAttribute("data-img"));
                    this._imageEl.style.backgroundImage = "url(" + n + "),url(" + e.url + ") ",
                    this._imageEl.style.backgroundPositionX = "center," + (r + 20) + "px",
                    setTimeout(function() {
                        i && (t._imageEl.style.transition = "all 0.8s ease"),
                        t._imageEl.style.backgroundPositionX = "-" + (r + 20) + "px,center"
                    },
                    0),
                    setTimeout(function() {
                        t._imageEl.style.transition = "none",
                        t._imageEl.style.backgroundImage = "url(" + e.url + ") ",
                        t._imageEl.style.backgroundPositionX = "center",
                        t._imageEl.setAttribute("data-img", e.url),
                        t.animaitionFinshed = !1
                    },
                    800)
                } else this._imageEl = document.createElement("div"),
                this._imageEl.className = "h5vp-image-container",
                this._imageEl.style.backgroundImage = "url(" + e.url + ")",
                this._imageEl.setAttribute("data-img", e.url),
                this.vOpt.displayC.appendChild(this._imageEl)
            }
        }
    },
    {
        key: "destroyImage",
        value: function() {
            this._imageEl && this.vOpt.displayC.removeChild(this._imageEl),
            this._imageEl = null,
            this._emitter.emit(y.
        default.OnVideoClose, this.vOpt.index)
        }
    },
    {
        key: "stopVideo",
        value: function(e) {
            1 == e && this.isFirstCanPlay && this._hasPlayed ? this.vOpt.displayC.style.backgroundImage = "url(" + this.capturePicture("jpeg") + ")": this.vOpt.displayC.style.backgroundImage = "";
            var t = !1;
            return this.filterObj = {
                bright: 50,
                contrast: 50,
                saturate: 50,
                tone: 50,
                blur: 50,
                gray: 50,
                invert: 50,
                opacity: 50,
                sepia: 50
            },
            this._videoplayer && (this._videoplayer.setFilter(this.filterObj), this.Barrage && this.Barrage.closeBarrage(), this.stopRTVO(), this.stopPtz3D(), this.stopZoom(), this._videoplayer.destroy(), this._videoplayer = null, this._lastdecodedFrames = 0, this._videoWidth = 0, this._videoHeight = 0, this._fps = 0, this._dataRate = 0, this._firstError = !1, this._restartTimes = 0, this._errorAtTime = 0, this._videotitle = "", this._videoSrc = null, this._paramSrc = null, this._isVodPlay = !1, this._videoRecordList = null, this._videoStartPts = 0, this._videoRecordRange = null, this._srcStartPts = 0, this._playtimeOffset = 0, this.durationT = 0, this.currentT = 0, this.currentP = 0, t = !(this._hasStartEvent = !1)),
            this.isFirstCanPlay = !1,
            this._hasPlayed = !1,
            this._showOrHideLoading(!1),
            this._setBgImg(!0),
            this.SetWindowPTZ(!1),
            this.stopIZoom(),
            this.isIdle = !0,
            this._changeVideoCursor(),
            this.ptzDirection = -1,
            this.mousewheelTimer && (clearTimeout(this.mousewheelTimer), this.mousewheelTimer = null),
            this._clearLoadingCheckTimer(),
            this._updateDateRate(),
            this.delWaterMarkById("_showError_"),
            this.errorBgToggle(!1),
            this.setRatio(this.vOpt.ratio),
            this.destroyImage(),
            t && this._emitter.emit(y.
        default.OnVideoClose, this.vOpt.index),
            !0
        }
    },
    {
        key: "errorBgToggle",
        value: function(e) { (this._showErroring = e) && (this.vOpt.videoCvs.style.display = "none"),
            e && this.vOpt.showerror ? (this.vOpt.displayC.style.backgroundImage = "", this.vOpt.videoC.classList.add(this.vOpt.errorBgClass)) : this.vOpt.videoC.classList.remove(this.vOpt.errorBgClass)
        }
    },
    {
        key: "setFilter",
        value: function(e) {
            this._videoplayer && (this._videoplayer.setFilter(e), this.filterObj = this._videoplayer.getFilter(), this.setZoomFilter())
        }
    },
    {
        key: "getFilter",
        value: function() {
            return this.filterObj
        }
    },
    {
        key: "singleFramePlay",
        value: function() {
            return this._videoplayer && (this._videoplayer.singleFramePlay(), this.showOrHideBtn("videoPause", !1), this.showOrHideBtn("videoPlay", !0)),
            !0
        }
    },
    {
        key: "play",
        value: function() {
            return !! this._videoplayer && this._videoplayer.play()
        }
    },
    {
        key: "pause",
        value: function() {
            return !! this._videoplayer && this._videoplayer.pause()
        }
    },
    {
        key: "segmentPlay",
        value: function(e, t, i) {
            return this._videoplayer && this._videoplayer.segmentPlay(e, t, i),
            !0
        }
    },
    {
        key: "getVideoInfo",
        value: function() {
            return this._videoplayer ? (0 === this.durationT && (this.durationT = this._videoplayer.duration), {
                videowidth: this._videoWidth,
                videoheight: this._videoHeight,
                durtion: this.durationT
            }) : null
        }
    },
    {
        key: "getStreamRate",
        value: function() {
            return {
                datarate: this._dataRate,
                framerate: this._fps
            }
        }
    },
    {
        key: "getVolume",
        value: function() {
            return this._videoplayer ? this._videoplayer.volume: this.vOpt.videoEle.volume
        }
    },
    {
        key: "setVolume",
        value: function(e) {
            return this._videoplayer ? this._videoplayer.volume = e: this.vOpt.videoEle.volume = e
        }
    },
    {
        key: "getMuted",
        value: function() {
            return ! this._videoplayer || this._videoplayer.muted
        }
    },
    {
        key: "setMuted",
        value: function(e) {
            if (this._videoplayer) return this._videoplayer.muted = e
        }
    },
    {
        key: "capturePicture",
        value: function(e, t, i) {
            return this._videoplayer ? this._videoplayer.catchPicture(e, t, i) : ""
        }
    },
    {
        key: "continuousShooting",
        value: function(e, t, i, r, n) {
            return ! this._videoplayer || this._videoplayer.continuousShooting(e, t, i, r, n)
        }
    },
    {
        key: "setFocusIndex",
        value: function(e) {
            this.isFocusScreen !== e && (this.isFocusScreen = e, this._setBorderStyle(e))
        }
    },
    {
        key: "_showOrHideLoading",
        value: function(e) {
            this._showLoading = e,
            this.vOpt.videoLoading && (this.vOpt.loadingInfoDiv && (this.vOpt.loadingInfoDiv.style.display = this.vOpt.enableLoadingInfo ? "block": "none"), this.vOpt.enableLoadingGif ? this.vOpt.videoLoading.style.display = e ? "block": "none": this.vOpt.videoLoading.style.display = "none")
        }
    },
    {
        key: "setProgressShowPts",
        value: function(e) {
            this.vOpt.enableProgressShowPts = e || !1
        }
    },
    {
        key: "setLoadingFlag",
        value: function(e, t) {
            this.vOpt.enableLoadingGif = e || !1,
            this.vOpt.enableLoadingInfo = t || !1,
            this.vOpt.loadingInfoDiv && this._showLoading && (this.vOpt.loadingInfoDiv.style.display = this.vOpt.enableLoadingInfo ? "block": "none", this.vOpt.videoLoading.style.display = e ? "block": "none")
        }
    },
    {
        key: "setShowError",
        value: function(e, t) {
            this.vOpt.showerror = e || !1,
            this.vOpt.showerrorDetail = t || !1,
            e && this._showErroring ? this.vOpt.videoC.classList.add(this.vOpt.errorBgClass) : this.vOpt.videoC.classList.remove(this.vOpt.errorBgClass),
            this._showErroring && this._showErrorOpacity()
        }
    },
    {
        key: "getIdleOrBusy",
        value: function() {
            return ! this.isIdle
        }
    },
    {
        key: "setBorderStyle",
        value: function(e) {
            this.vOpt.border = e,
            this._setBorderStyle(this.isFocusScreen)
        }
    },
    {
        key: "_setBorderStyle",
        value: function(e) {
            var t = this.vOpt.border,
            i = this.vOpt.videoC.style;
            t.borderWidth && (i.borderWidth = t.borderWidth),
            t.borderStyle && !e ? i.borderStyle = t.borderStyle: t.focusBorderStyle && e && (i.borderStyle = t.focusBorderStyle),
            t.borderColor && !e ? i.borderColor = t.borderColor: t.focusBorderColor && e && (i.borderColor = t.focusBorderColor)
        }
    },
    {
        key: "setBgImg",
        value: function(e) {
            return this.vOpt.bgImgClass && this.vOpt.videoC.classList.remove(this.vOpt.bgImgClass),
            this.vOpt.bgImgClass = !e || "" == e || e && "string" != typeof e ? null: e,
            this._setBgImg(this.isIdle),
            !0
        }
    },
    {
        key: "setDefBgImg",
        value: function(e) {
            return ! (!e || e && "string" != typeof e || (this.vOpt.videoC.classList.remove(this.vOpt.defBgClass), this.vOpt.defBgClass = e, this._setBgImg(this.isIdle), 0))
        }
    },
    {
        key: "setbackgroundColor",
        value: function(e) {
            this.vOpt.backgroundColor = e,
            "" != this.vOpt.videoC.style.background && (this.vOpt.videoC.style.background = this.vOpt.backgroundColor)
        }
    },
    {
        key: "_setBgImg",
        value: function(e) { (this.vOpt.bgImgClass || this.vOpt.defBgClass) && (e ? (this.vOpt.videoC.style.background = "", this.vOpt.bgImgClass ? (this.vOpt.videoC.classList.remove(this.vOpt.defBgClass), this.vOpt.videoC.classList.add(this.vOpt.bgImgClass)) : this.vOpt.videoC.classList.add(this.vOpt.defBgClass)) : (this.vOpt.videoC.style.background = this.vOpt.backgroundColor, this.vOpt.bgImgClass && this.vOpt.videoC.classList.remove(this.vOpt.bgImgClass), this.vOpt.videoC.classList.remove(this.vOpt.defBgClass)))
        }
    },
    {
        key: "setMax",
        value: function(e, t) {
            switch (e) {
            case "big":
                this.isMaxScreen = !0,
                this.vOpt.videoC.style.display = "inline-block";
                break;
            case "hide":
                this.isMaxScreen = !1,
                this.vOpt.videoC.style.display = "none";
                break;
            case "origin":
                this.isMaxScreen = !1,
                this.vOpt.videoC.style.display = "inline-block"
            }
        }
    },
    {
        key: "setPosition",
        value: function(e, t, i, r) {
            this.resetWaterMarkPos(parseInt(this.vOpt.width), parseInt(this.vOpt.height), parseInt(i), parseInt(r)),
            this.resetIZoomOrigin(parseInt(this.vOpt.width), parseInt(this.vOpt.height), parseInt(i), parseInt(r)),
            this.vOpt.width = i,
            this.vOpt.height = r,
            this.vOpt.videoC.style.top = e,
            this.vOpt.videoC.style.left = t,
            this.vOpt.videoC.style.width = i,
            this.vOpt.videoC.style.height = r,
            this.setRatio(this._videoRatio)
        }
    },
    {
        key: "setAttributeIndex",
        value: function(e) {
            this.vOpt.videoC.setAttribute("index", e),
            this.vOpt.videoEle.setAttribute("index", e),
            this.vOpt.displayC.setAttribute("index", e),
            this.vOpt.index = e
        }
    },
    {
        key: "_addEvent",
        value: function() {
            var t = this,
            e = t.vOpt.videoC;
            p.EventUtil.addHandler(e, "click",
            function(e) {
                t.videoCMouseOverFlag = !1
            }),
            p.EventUtil.addHandler(e, "mouseenter",
            function(e) {
                t.videoCMouseOverFlag = !0,
                t._emitter.emit(y.
            default.OnMouseEnter, t.vOpt.index),
                t.showToolbarAuto(!0)
            }),
            p.EventUtil.addHandler(e, "mouseleave",
            function(e) {
                t.videoCMouseOverFlag && (t._emitter.emit(y.
            default.OnMouseLeave, t.vOpt.index), t.showToolbarAuto(!1), t.showOrHideRightMenu(!1), t.isShowPtzRedArrow(!1, e))
            }),
            p.EventUtil.addHandler(e, "mousedown",
            function(e) {
                t._emitter.emit(y.
            default.OnMouseDown, t.vOpt.index),
                0 == e.button && v.Toolkit.isPositiveInteger(t.ptzDirection) && t.ptzDirection <= 19 && t._ptzControlByWin(t.ptzDirection, t.vOpt.windowPtzSpeed, 3)
            }),
            p.EventUtil.addHandler(e, "mouseup",
            function(e) {
                t._emitter.emit(y.
            default.OnMouseUp, t.vOpt.index),
                v.Toolkit.isPositiveInteger(t.ptzDirection) && t.ptzDirection <= 19 && t._ptzControlByWin(t.ptzDirection, 0, 4)
            }),
            p.EventUtil.addHandler(e, "contextmenu",
            function(e) {
                t.videoCMouseOverFlag = !1,
                (e = e || window.event).preventDefault ? e.preventDefault() : e.returnValue = !1,
                t._changeVideoCursor(),
                t.rightMenuEle && t.showOrHideRightMenu(!0, e)
            }),
            p.EventUtil.addHandler(e, "mousemove",
            function(e) {
                t.videoCMouseOverFlag = !0,
                t.isShowPtzRedArrow(!0, e),
                t._emitter.emit(y.
            default.OnMouseMove, t.vOpt.index)
            }),
            p.EventUtil.addHandler(e, "mousewheel", this._ptzScrollFunc.bind(this)),
            p.EventUtil.addHandler(document, "keydown", this._ptzOnkeydown.bind(this)),
            p.EventUtil.addHandler(document, "keyup", this._ptzOnkeyup.bind(this))
        }
    },
    {
        key: "formartTime",
        value: function(e) {
            function t(e) {
                return (e = e.toString())[1] ? e: "0" + e
            }
            if (!isFinite(e)) return "00:00:00";
            var i = Math.floor(e / 60),
            r = Math.floor(e % 60),
            n = Math.floor(i / 60);
            return i = Math.floor(i % 60),
            t(n) + ":" + t(i) + ":" + t(r)
        }
    },
    {
        key: "addEvent",
        value: function(e, t) {
            this._emitter.on(e, t)
        }
    }]), R);
    function R(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, R);
        var t = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (R.__proto__ || Object.getPrototypeOf(R)).call(this));
        return t.vOpt = v.Toolkit.deepMerge({
            ele: "npvideo-ele",
            src: null,
            callback: null,
            toolbar: [],
            rightMenu: [],
            defBgClass: "h5vp-bg-img",
            errorBgClass: "h5vp-bg-img-error",
            bgImgClass: null,
            backgroundColor: "#000",
            ratio: "stretch",
            showerror: !0,
            clickFunc: function() {}
        },
        e),
        t._emitter = new g.
    default,
        t.isMaxScreen = !1,
        t.isIdle = !0,
        t.isFocusScreen = !1,
        t._videoRatio = t.vOpt.ratio,
        t._showLoading = !1,
        t._showErroring = !1,
        t.vOpt.toolbarEleArr = [],
        t._getOrignWidthHeight(),
        t._videoplayer = null,
        t._lastdecodedFrames = 0,
        t._videoWidth = 0,
        t._videoHeight = 0,
        t._fps = 0,
        t._dataRate = 0,
        t._firstError = !1,
        t._restartTimes = 0,
        t._errorAtTime = 0,
        t._createVideoEle(),
        t._onstatisticsinfo = null,
        t._videotitle = "",
        t._videoSrc = null,
        t._paramSrc = null,
        t._videoRecordList = null,
        t._videoRecordRange = null,
        t._videoStartPts = 0,
        t._srcStartPts = 0,
        t._playtimeOffset = 0,
        t._isVodPlay = !1,
        t._hasStartEvent = !1,
        t._loadingCheckTimer = null,
        t.isFirstCanPlay = !1,
        t._hasPlayed = !1,
        t.durationT = 0,
        t.currentT = 0,
        t.currentP = 0,
        t._lastPlaytime = 0,
        t._keepPlaytime = 0,
        t.isDragProgress = !1,
        t.maxProgressWidth = 0,
        t.mousewheelTimer = null,
        t.videoCMouseOverFlag = !1,
        t.filterObj = {
            bright: 50,
            contrast: 50,
            saturate: 50,
            tone: 50,
            blur: 50,
            gray: 50,
            invert: 50,
            opacity: 50,
            sepia: 50
        },
        t.Barrage = new m.
    default(t.vOpt),
        t._imageEl = null,
        t
    }
    t.
default = A
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var d = u(i(346)),
    s = u(i(348)),
    a = u(i(354)),
    o = u(i(396)),
    l = u(i(349));
    function u(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var h = (r(c, [{
        key: "destroy",
        value: function() {
            null != this._player && (this._player.destroy(), this._player = null),
            this._shootingCanvas = null,
            this._captureCanvas = null,
            this._mediaElement = null
        }
    },
    {
        key: "on",
        value: function(e, t) {
            null != this._player && this._player.on(e, t)
        }
    },
    {
        key: "off",
        value: function(e, t) {
            null != this._player && this._player.off(e, t)
        }
    },
    {
        key: "attachMediaElement",
        value: function(e, t) {
            null != this._player && (this._player.attachMediaElement(e, t), this._mediaElement = e, this._mediaCvs = t, this._captureCanvas = document.createElement("canvas"), this._captureCanvas, this._shootingCanvas = document.createElement("canvas"), this._shootingCanvas)
        }
    },
    {
        key: "detachMediaElement",
        value: function() {
            this._timerstep && (window.clearInterval(this._timerstep), this._timerstep = null),
            this._timershooting && (window.clearInterval(this._timershooting), this._timershooting = null),
            null != this._player && (this._player.detachMediaElement(), this._mediaElement = null, this._mediaCvs = null)
        }
    },
    {
        key: "load",
        value: function() {
            var e = this;
            null != this._player && (this._player.load(), this._player.on(l.
        default.FIRST_CANPLAY,
            function() {
                e._receivedCanPlay = !0
            }))
        }
    },
    {
        key: "unload",
        value: function() {
            this._timerstep && (window.clearInterval(this._timerstep), this._timerstep = null),
            null != this._player && this._player.unload()
        }
    },
    {
        key: "play",
        value: function() {
            if (this._timerstep && (window.clearInterval(this._timerstep), this._timerstep = null), null == this._player) return ! 1;
            if (this._playspeed != this._player.playbackRate && 8 < this._playspeed) {
                var e = this;
                window.setTimeout(function() {
                    e._player.playbackRate = e._playspeed
                },
                1e3)
            }
            return this._player.play()
        }
    },
    {
        key: "pause",
        value: function() {
            return null != this._player && this._player.pause()
        }
    },
    {
        key: "setPlaybackOffset",
        value: function(e) {
            return ! (!this._player || !this._player.setPlaybackOffset || (this._player.setPlaybackOffset(e), 0))
        }
    },
    {
        key: "ptzControl",
        value: function(e, t) {
            if (null != this._player && this._player.ptzControl && "undefined" !== this._player.ptzControl) return this._player.ptzControl(e, t)
        }
    },
    {
        key: "ptzLock",
        value: function(e) {
            if (null != this._player && this._player.ptzLock && "undefined" !== this._player.ptzLock) return this._player.ptzLock(e)
        }
    },
    {
        key: "ptzControl3D",
        value: function(e, t, i, r, n) {
            if (null != this._player && this._player.ptzControl3D && "undefined" !== this._player.ptzControl3D) return this._player.ptzControl3D(e, t, i, r, n)
        }
    },
    {
        key: "queryRecord",
        value: function(e) {
            if (null != this._player && this._player.queryRecord && "undefined" !== this._player.queryRecord) return this._player.queryRecord(e)
        }
    },
    {
        key: "catchPicture",
        value: function(e, t, i) {
            if (!this._player) return "";
            var r = this._player;
            if ("wasmPlayer" === r.type && this._captureCanvas) return r.catchPicture(this._shootingCanvas, e, t, i);
            if (this._mediaElement && this._captureCanvas) {
                e = e || "jpeg";
                var n = this._player.mediaInfo.videoWidth,
                s = this._player.mediaInfo.videoHeight,
                a = parseInt(t || -1),
                o = parseInt(i || -1);
                n < a && (a = n),
                s < o && (o = s),
                0 < a && o <= 0 ? o = Math.ceil(a * s / n) : 0 < o && a <= 0 ? a = Math.ceil(n * o / s) : a <= 0 && o <= 0 && (a = n, o = s),
                this._captureCanvas.width = a,
                this._captureCanvas.height = o,
                this._captureCanvas.getContext("2d").drawImage(this._mediaElement, 0, 0, n, s, 0, 0, a, o);
                try {
                    return this._captureCanvas.toDataURL("image/" + e)
                } catch(e) {
                    return d.
                default.e(this.TAG, "catchPicture " + e.name + " " + e.code + " " + e.message),
                    ""
                }
            }
        }
    },
    {
        key: "continuousShooting",
        value: function(e, t, i, r, n) {
            if (!this._player) return ! 1;
            var s = this._player;
            if ("wasmPlayer" === s.type && this._shootingCanvas) return s.continuousShooting(this._shootingCanvas, e, t, i, r, n),
            !0;
            if (this._mediaElement && this._shootingCanvas && !this._timershooting) {
                e = e || "jpeg";
                var a = this._mediaElement.videoWidth,
                o = this._mediaElement.videoHeight,
                l = parseInt(r || -1),
                u = parseInt(n || -1);
                a < l && (l = a),
                o < u && (u = o),
                0 < l && u <= 0 ? u = Math.ceil(l * o / a) : 0 < u && l <= 0 ? l = Math.ceil(a * u / o) : l <= 0 && u <= 0 && (l = a, u = o),
                this._shootingCanvas.width = l,
                this._shootingCanvas.height = u,
                this._shootingCanvas.getContext("2d").drawImage(this._mediaElement, 0, 0, a, o, 0, 0, l, u);
                try {
                    i(0, this._shootingCanvas.toDataURL("image/" + e))
                } catch(e) {
                    return i( - 1, "continuousShooting " + e.name + " " + e.code + " " + e.message),
                    d.
                default.e(this.TAG, "continuousShooting " + e.name + " " + e.code + " " + e.message),
                    !1
                }
                if (1 < t) {
                    this._shootingInfo = {
                        playtime: this._mediaElement.currentTime,
                        count: t,
                        index: 1,
                        callback: i,
                        type: e
                    };
                    var h = parseInt(500 * this._player.frameDuration / this._player.playbackRate);
                    h < 5 ? h = 5 : 50 < h && (h = 50),
                    this._timershooting = window.setInterval(this._shootingCheck.bind(this), h)
                }
                return ! 0
            }
            return ! 1
        }
    },
    {
        key: "_shootingCheck",
        value: function() {
            if (!this._mediaElement || !this._player) return window.clearInterval(this._timershooting),
            void(this._timershooting = null);
            var e = this._mediaElement.currentTime;
            if (e - this._shootingInfo.playtime >= this._player.frameDuration) {
                this._shootingInfo.playtime = e,
                this._shootingCanvas.getContext("2d").drawImage(this._mediaElement, 0, 0, this._mediaElement.videoWidth, this._mediaElement.videoHeight, 0, 0, this._shootingCanvas.width, this._shootingCanvas.height);
                try {
                    this._shootingInfo.callback(this._shootingInfo.index, this._shootingCanvas.toDataURL("image/" + this._shootingInfo.type))
                } catch(e) {
                    this._shootingInfo.callback( - 1, "continuousShooting " + e.name + " " + e.code + " " + e.message)
                }
                this._shootingInfo.index++
            }
            this._shootingInfo.index === this._shootingInfo.count && (window.clearInterval(this._timershooting), this._timershooting = null)
        }
    },
    {
        key: "_transformFilterVal",
        value: function(e) {
            "number" == typeof e.bright ? (e.bright < 0 ? e.bright = 0 : 100 < e.bright && (e.bright = 100), this.filterObj.bright = e.bright, e.bright = (e.bright <= 50 ? 10 + 9 * e.bright / 5 : 100 + 3 * (e.bright - 50)) + "%") : e.bright = "",
            "number" == typeof e.contrast ? (e.contrast < 0 ? e.contrast = 0 : 100 < e.contrast && (e.contrast = 100), this.filterObj.contrast = e.contrast, e.contrast = (e.contrast <= 50 ? 10 + 9 * e.contrast / 5 : 100 + 18 * (e.contrast - 50)) + "%") : e.contrast = "",
            "number" == typeof e.saturate ? (e.saturate < 0 ? e.saturate = 0 : 100 < e.saturate && (e.saturate = 100), this.filterObj.saturate = e.saturate, e.saturate = (e.saturate <= 50 ? 10 + 9 * e.saturate / 5 : 100 + 18 * (e.saturate - 50)) + "%") : e.saturate = "",
            "number" == typeof e.tone ? (e.tone < 0 ? e.tone = 0 : 100 < e.tone && (e.tone = 100), this.filterObj.tone = e.tone, e.tone = (e.tone <= 50 ? 180 - 3.6 * e.tone: 540 - 3.6 * e.tone) + "deg") : e.tone = "",
            "number" == typeof e.gray ? (e.gray < 0 ? e.gray = 0 : 100 < e.gray && (e.gray = 100), this.filterObj.gray = e.gray, e.gray = (50 <= e.gray ? 2 * (e.gray - 50) : 100 - 2 * e.gray) + "%") : e.gray = "",
            "number" == typeof e.invert ? (e.invert < 0 ? e.invert = 0 : 100 < e.invert && (e.invert = 100), this.filterObj.invert = e.invert, e.invert = (50 <= e.invert ? 2 * (e.invert - 50) : 100 - 2 * e.invert) + "%") : e.invert = "",
            "number" == typeof e.opacity ? (e.opacity < 0 ? e.opacity = 0 : 100 < e.opacity && (e.opacity = 100), this.filterObj.opacity = e.opacity, e.opacity = (50 <= e.opacity ? 200 - 2 * e.opacity: 2 * e.opacity) + "%") : e.opacity = "",
            "number" == typeof e.sepia ? (e.sepia < 0 ? e.sepia = 0 : 100 < e.sepia && (e.sepia = 100), this.filterObj.sepia = e.sepia, e.sepia = (50 <= e.sepia ? 2 * (e.sepia - 50) : 100 - 2 * e.sepia) + "%") : e.sepia = ""
        }
    },
    {
        key: "setFilter",
        value: function(e) {
            var t = Object.assign({},
            e);
            this._transformFilterVal(t);
            var i = "";
            i += t.bright ? "brightness(" + t.bright + ")": "",
            i += t.contrast ? "contrast(" + t.contrast + ")": "",
            i += t.saturate ? "saturate(" + t.saturate + ")": "",
            i += t.tone ? "hue-rotate(" + t.tone + ")": "",
            i += t.gray ? "grayscale(" + t.gray + ")": "",
            i += t.invert ? "invert(" + t.invert + ")": "",
            i += t.opacity ? "opacity(" + t.opacity + ")": "",
            i += t.sepia ? "sepia(" + t.sepia + ")": "",
            this._mediaElement.style.webkitFilter = i,
            this._mediaElement.style.filter = i,
            this._mediaCvs.style.webkitFilter = i,
            this._mediaCvs.style.filter = i
        }
    },
    {
        key: "getFilter",
        value: function() {
            return this.filterObj
        }
    },
    {
        key: "singleFramePlay",
        value: function() {
            var e = this._player;
            if ("wasmPlayer" === e.type && e.singleFramePlay) return e.singleFramePlay(),
            !0;
            if (this._mediaElement.paused) {
                var t = 10 * this._player.frameDuration;
                this._mediaElement.playbackRate = 3 < t ? 3 : t;
                try {
                    this._mediaElement.play().
                    catch(function(e) {})
                } catch(e) {}
                this._prePlaytime = this._mediaElement.currentTime,
                this._timerstep || (this._timerstep = window.setInterval(this._stepPlayCheck.bind(this), 20))
            } else this._mediaElement.pause()
        }
    },
    {
        key: "_stepPlayCheck",
        value: function() {
            if (!this._mediaElement || !this._player) return window.clearInterval(this._timerstep),
            void(this._timerstep = null);
            var e = this._mediaElement.currentTime - this._prePlaytime; (e >= this._player.frameDuration || e <= 0 - this._player.frameDuration) && (this._mediaElement.pause(), 8 < this._playspeed ? this._mediaElement.playbackRate = 8 : this._mediaElement.playbackRate = this._playspeed, window.clearInterval(this._timerstep), this._timerstep = null)
        }
    },
    {
        key: "segmentPlay",
        value: function(e, t, i) {
            t <= e || t < 0 || e < 0 ? (this._segmentStart = -1, this._segmentEnd = -1, this._segmentLoop = !1) : (this._segmentStart = e, this._segmentEnd = t, this._segmentLoop = i, this._player.currentTime = e, this.play(), this._receivedCanPlay ? 1 != (1 & this._haslistener) && (this._player.on(l.
        default.VIDEOSEEK, this._onVideoSeeked.bind(this)), this._haslistener |= 1) : 2 != (2 & this._haslistener) && (this._player.on("playtime", this._checkPlayTime.bind(this)), this._haslistener |= 2))
        }
    },
    {
        key: "_onVideoSeeked",
        value: function(e) {
            0 == e.error ? 2 != (2 & this._haslistener) && (this._player.on("playtime", this._checkPlayTime.bind(this)), this._haslistener |= 2) : this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.SEGMENTPLAY_FAILED)
        }
    },
    {
        key: "_checkPlayTime",
        value: function(e) {
            this._segmentStart >= this._segmentEnd || this._segmentStart < 0 || this._segmentEnd < 0 || e >= this._segmentEnd && (this._segmentLoop ? this._player.currentTime = this._segmentStart: (this._segmentStart = -1, this._segmentEnd = -1, this._player.pause()), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.SEGMENTPLAY_COMPLETE))
        }
    },
    {
        key: "type",
        get: function() {
            if (null != this._player) return this._player.type
        }
    },
    {
        key: "buffered",
        get: function() {
            if (null != this._player) return this._player.buffered
        }
    },
    {
        key: "duration",
        get: function() {
            return null != this._player ? this._player.duration: 0
        }
    },
    {
        key: "volume",
        get: function() {
            if (null != this._player) return this._player.volume
        },
        set: function(e) {
            null != this._player && (this._player.volume = e)
        }
    },
    {
        key: "muted",
        get: function() {
            if (null != this._player) return this._player.muted
        },
        set: function(e) {
            null != this._player && (this._player.muted = e)
        }
    },
    {
        key: "currentTime",
        get: function() {
            return null != this._player ? this._player.currentTime: 0
        },
        set: function(e) {
            return ! (null == this._player || !isFinite(e) || (0 <= this._segmentStart && 0 < this._segmentEnd && (this._segmentStart > e || this._segmentEnd < e) && (this._segmentStart = -1, this._segmentEnd = -1, this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.SEGMENTPLAY_CANCEL)), this._player.currentTime = e, this.play(), 0))
        }
    },
    {
        key: "audioinit",
        get: function() {
            if (this._player) return this._player.audioinit
        }
    },
    {
        key: "playbackRate",
        get: function() {
            return null != this._player ? this._player.playbackRate: 0
        },
        set: function(e) {
            try {
                null != this._player && (this._player.playbackRate = e, this._playspeed = this._player.playbackRate)
            } catch(e) {}
        }
    },
    {
        key: "paused",
        get: function() {
            var e = this._player;
            return "wasmPlayer" === e.type ? e.paused: this._mediaElement.paused
        }
    },
    {
        key: "mediaElement",
        get: function() {
            var e = this._player;
            return e && e.getVideoEle ? e.getVideoEle() : this._mediaElement
        }
    },
    {
        key: "mediaInfo",
        get: function() {
            return null != this._player ? this._player.mediaInfo: {}
        }
    },
    {
        key: "statisticsInfo",
        get: function() {
            return null != this._player ? this._player.statisticsInfo: {}
        }
    }]), c);
    function c(e, t) {
        if (function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, c), this.TAG = "videoplayer", this._player = null, e && e.channelInfo) {
            var i = e.channelInfo.devicetype;
            "string" == typeof i && ("native" === (i = i.toLowerCase()) ? this._player = new s.
        default(e, t) : "hls" === i && (this._player = new o.
        default(e, t)))
        }
        null === this._player && (this._player = new a.
    default(e, t)),
        this._callbacks = e.callbacks,
        this._mediaSource = e.channelInfo,
        this._mediaElement = null,
        this._mediaCvs = null,
        this._captureCanvas = null,
        this._shootingCanvas = null,
        this._shootingInfo = {},
        this._timershooting = null,
        this._playspeed = 1,
        this._timerstep = null,
        this._prePlaytime = 0,
        this._receivedCanPlay = !1,
        this._segmentStart = -1,
        this._segmentEnd = -1,
        this._segmentLoop = !1,
        this._haslistener = 0,
        this.filterObj = {
            bright: 50,
            contrast: 50,
            saturate: 50,
            tone: 50,
            blur: 50,
            gray: 50,
            invert: 50,
            opacity: 50,
            sepia: 50
        }
    }
    t.
default = h
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s, a = i(347),
    o = (s = a) && s.__esModule ? s: {
    default:
        s
    };
    var l = (r(u, null, [{
        key: "e",
        value: function(e, t) {
            e && !u.FORCE_GLOBAL_TAG || (e = u.GLOBAL_TAG);
            var i = "[" + e + "] > " + t;
            u.ENABLE_CALLBACK && u.emitter.emit("log", "error", i),
            u.ENABLE_ERROR && (console.error ? console.error(i) : console.warn ? console.warn(i) : console.log(i))
        }
    },
    {
        key: "i",
        value: function(e, t) {
            e && !u.FORCE_GLOBAL_TAG || (e = u.GLOBAL_TAG);
            var i = "[" + e + "] > " + t;
            u.ENABLE_CALLBACK && u.emitter.emit("log", "info", i),
            u.ENABLE_INFO && (console.info ? console.info(i) : console.log(i))
        }
    },
    {
        key: "w",
        value: function(e, t) {
            e && !u.FORCE_GLOBAL_TAG || (e = u.GLOBAL_TAG);
            var i = "[" + e + "] > " + t;
            u.ENABLE_CALLBACK && u.emitter.emit("log", "warn", i),
            u.ENABLE_WARN && (console.warn ? console.warn(i) : console.log(i))
        }
    },
    {
        key: "d",
        value: function(e, t) {
            e && !u.FORCE_GLOBAL_TAG || (e = u.GLOBAL_TAG);
            var i = "[" + e + "] > " + t;
            u.ENABLE_CALLBACK && u.emitter.emit("log", "debug", i),
            u.ENABLE_DEBUG && (console.debug ? console.debug(i) : console.log(i))
        }
    },
    {
        key: "v",
        value: function(e, t) {
            e && !u.FORCE_GLOBAL_TAG || (e = u.GLOBAL_TAG);
            var i = "[" + e + "] > " + t;
            u.ENABLE_CALLBACK && u.emitter.emit("log", "verbose", i),
            u.ENABLE_VERBOSE && console.log(i)
        }
    }]), u);
    function u() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, u)
    }
    l.GLOBAL_TAG = "flv.js",
    l.FORCE_GLOBAL_TAG = !1,
    l.ENABLE_ERROR = !0,
    l.ENABLE_INFO = !0,
    l.ENABLE_WARN = !0,
    l.ENABLE_DEBUG = !0,
    l.ENABLE_VERBOSE = !0,
    l.ENABLE_CALLBACK = !1,
    l.emitter = new o.
default,
    t.
default = l
},
function(e, t, i) {
    "use strict";
    var r, n = "object" == typeof Reflect ? Reflect: null,
    h = n && "function" == typeof n.apply ? n.apply: function(e, t, i) {
        return Function.prototype.apply.call(e, t, i)
    };
    r = n && "function" == typeof n.ownKeys ? n.ownKeys: Object.getOwnPropertySymbols ?
    function(e) {
        return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
    }: function(e) {
        return Object.getOwnPropertyNames(e)
    };
    var s = Number.isNaN ||
    function(e) {
        return e != e
    };
    function a() {
        a.init.call(this)
    } ((e.exports = a).EventEmitter = a).prototype._events = void 0,
    a.prototype._eventsCount = 0,
    a.prototype._maxListeners = void 0;
    var o = 10;
    function l(e) {
        return void 0 === e._maxListeners ? a.defaultMaxListeners: e._maxListeners
    }
    function u(e, t, i, r) {
        var n, s, a;
        if ("function" != typeof i) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof i);
        if (void 0 === (s = e._events) ? (s = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== s.newListener && (e.emit("newListener", t, i.listener ? i.listener: i), s = e._events), a = s[t]), void 0 === a) a = s[t] = i,
        ++e._eventsCount;
        else if ("function" == typeof a ? a = s[t] = r ? [i, a] : [a, i] : r ? a.unshift(i) : a.push(i), 0 < (n = l(e)) && a.length > n && !a.warned) {
            a.warned = !0;
            var o = new Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            o.name = "MaxListenersExceededWarning",
            o.emitter = e,
            o.type = t,
            o.count = a.length,
            function(e) {
                console && console.warn && console.warn(e)
            } (o)
        }
        return e
    }
    function d(e, t, i) {
        var r = {
            fired: !1,
            wrapFn: void 0,
            target: e,
            type: t,
            listener: i
        },
        n = function() {
            for (var e = [], t = 0; t < arguments.length; t++) e.push(arguments[t]);
            this.fired || (this.target.removeListener(this.type, this.wrapFn), this.fired = !0, h(this.listener, this.target, e))
        }.bind(r);
        return n.listener = i,
        r.wrapFn = n
    }
    function c(e, t, i) {
        var r = e._events;
        if (void 0 === r) return [];
        var n = r[t];
        return void 0 === n ? [] : "function" == typeof n ? i ? [n.listener || n] : [n] : i ?
        function(e) {
            for (var t = new Array(e.length), i = 0; i < t.length; ++i) t[i] = e[i].listener || e[i];
            return t
        } (n) : p(n, n.length)
    }
    function f(e) {
        var t = this._events;
        if (void 0 !== t) {
            var i = t[e];
            if ("function" == typeof i) return 1;
            if (void 0 !== i) return i.length
        }
        return 0
    }
    function p(e, t) {
        for (var i = new Array(t), r = 0; r < t; ++r) i[r] = e[r];
        return i
    }
    Object.defineProperty(a, "defaultMaxListeners", {
        enumerable: !0,
        get: function() {
            return o
        },
        set: function(e) {
            if ("number" != typeof e || e < 0 || s(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
            o = e
        }
    }),
    a.init = function() {
        void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0),
        this._maxListeners = this._maxListeners || void 0
    },
    a.prototype.setMaxListeners = function(e) {
        if ("number" != typeof e || e < 0 || s(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
        return this._maxListeners = e,
        this
    },
    a.prototype.getMaxListeners = function() {
        return l(this)
    },
    a.prototype.emit = function(e) {
        for (var t = [], i = 1; i < arguments.length; i++) t.push(arguments[i]);
        var r = "error" === e,
        n = this._events;
        if (void 0 !== n) r = r && void 0 === n.error;
        else if (!r) return ! 1;
        if (r) {
            var s;
            if (0 < t.length && (s = t[0]), s instanceof Error) throw s;
            var a = new Error("Unhandled error." + (s ? " (" + s.message + ")": ""));
            throw a.context = s,
            a
        }
        var o = n[e];
        if (void 0 === o) return ! 1;
        if ("function" == typeof o) h(o, this, t);
        else {
            var l = o.length,
            u = p(o, l);
            for (i = 0; i < l; ++i) h(u[i], this, t)
        }
        return ! 0
    },
    a.prototype.on = a.prototype.addListener = function(e, t) {
        return u(this, e, t, !1)
    },
    a.prototype.prependListener = function(e, t) {
        return u(this, e, t, !0)
    },
    a.prototype.once = function(e, t) {
        if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
        return this.on(e, d(this, e, t)),
        this
    },
    a.prototype.prependOnceListener = function(e, t) {
        if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
        return this.prependListener(e, d(this, e, t)),
        this
    },
    a.prototype.off = a.prototype.removeListener = function(e, t) {
        var i, r, n, s, a;
        if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
        if (void 0 === (r = this._events)) return this;
        if (void 0 === (i = r[e])) return this;
        if (i === t || i.listener === t) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete r[e], r.removeListener && this.emit("removeListener", e, i.listener || t));
        else if ("function" != typeof i) {
            for (n = -1, s = i.length - 1; 0 <= s; s--) if (i[s] === t || i[s].listener === t) {
                a = i[s].listener,
                n = s;
                break
            }
            if (n < 0) return this;
            0 === n ? i.shift() : function(e, t) {
                for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                e.pop()
            } (i, n),
            1 === i.length && (r[e] = i[0]),
            void 0 !== r.removeListener && this.emit("removeListener", e, a || t)
        }
        return this
    },
    a.prototype.removeAllListeners = function(e) {
        var t, i, r;
        if (void 0 === (i = this._events)) return this;
        if (void 0 === i.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== i[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete i[e]),
        this;
        if (0 === arguments.length) {
            var n, s = Object.keys(i);
            for (r = 0; r < s.length; ++r)"removeListener" !== (n = s[r]) && this.removeAllListeners(n);
            return this.removeAllListeners("removeListener"),
            this._events = Object.create(null),
            this._eventsCount = 0,
            this
        }
        if ("function" == typeof(t = i[e])) this.removeListener(e, t);
        else if (void 0 !== t) for (r = t.length - 1; 0 <= r; r--) this.removeListener(e, t[r]);
        return this
    },
    a.prototype.listeners = function(e) {
        return c(this, e, !0)
    },
    a.prototype.rawListeners = function(e) {
        return c(this, e, !1)
    },
    a.listenerCount = function(e, t) {
        return "function" == typeof e.listenerCount ? e.listenerCount(t) : f.call(e, t)
    },
    a.prototype.listenerCount = f,
    a.prototype.eventNames = function() {
        return 0 < this._eventsCount ? r(this._events) : []
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    n = function(e, t, i) {
        return t && s(e.prototype, t),
        i && s(e, i),
        e
    };
    function s(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var a = d(i(347)),
    o = d(i(349)),
    l = i(350),
    u = i(341),
    h = i(352);
    function d(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var c = (n(f, [{
        key: "destroy",
        value: function() {
            this._mediaElement && (this.unload(), this.detachMediaElement()),
            this.e = null,
            this._mediaDataSource = null,
            this._emitter.removeAllListeners(),
            this._emitter = null
        }
    },
    {
        key: "on",
        value: function(e, t) {
            var i = this;
            e === o.
        default.MEDIA_INFO ? null != this._mediaElement && 0 !== this._mediaElement.readyState && Promise.resolve().then(function() {
                i._emitter.emit(o.
            default.MEDIA_INFO, i.mediaInfo)
            }) : e === o.
        default.STATISTICS_INFO && null != this._mediaElement && 0 !== this._mediaElement.readyState && Promise.resolve().then(function() {
                i._emitter.emit(o.
            default.STATISTICS_INFO, i.statisticsInfo)
            }),
            this._emitter.addListener(e, t)
        }
    },
    {
        key: "off",
        value: function(e, t) {
            this._emitter.removeListener(e, t)
        }
    },
    {
        key: "attachMediaElement",
        value: function(e) {
            if ((this._mediaElement = e).addEventListener("loadedmetadata", this.e.onvLoadedMetadata), e.addEventListener("canplay", this.e.onvCanPlay), e.addEventListener("seeked", this.e.onvSeeked), e.addEventListener("error", this.e.onvError), e.addEventListener("ratechange", this.e.onvRateChange), e.addEventListener("timeupdate", this.e.onvTimeUpdate), e.addEventListener("ended", this.e.onvEnded), null != this._pendingSeekTime) try {
                e.currentTime = this._pendingSeekTime,
                this._pendingSeekTime = null
            } catch(e) {}
        }
    },
    {
        key: "detachMediaElement",
        value: function() {
            this._mediaElement && (this._mediaElement.src = "", this._mediaElement.removeAttribute("src"), this._mediaElement.removeEventListener("loadedmetadata", this.e.onvLoadedMetadata), this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay), this._mediaElement.removeEventListener("seeked", this.e.onvSeeked), this._mediaElement.removeEventListener("error", this.e.onvError), this._mediaElement.removeEventListener("ratechange", this.e.onvRateChange), this._mediaElement.removeEventListener("timeupdate", this.e.onvTimeUpdate), this._mediaElement.removeEventListener("ended", this.e.onvEnded), this._mediaElement = null),
            null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
        }
    },
    {
        key: "load",
        value: function() {
            if (!this._mediaElement) throw new h.IllegalStateException("HTMLMediaElement must be attached before load()!");
            this._mediaElement.src = this._mediaDataSource.channelInfo.url,
            0 < this._mediaElement.readyState && (this._mediaElement.currentTime = 0),
            this._mediaElement.preload = "auto",
            this._mediaElement.load();
            try {
                this._mediaElement.muted = !0,
                this._mediaElement.autoplay = !0,
                this._mediaElement.play().
                catch(function(e) {})
            } catch(e) {}
            this._statisticsReporter = window.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval)
        }
    },
    {
        key: "unload",
        value: function() {
            this._mediaElement && (this._mediaElement.src = "", this._mediaElement.removeAttribute("src")),
            null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
        }
    },
    {
        key: "play",
        value: function() {
            this._emitter.emit(o.
        default.VIDEOPLAY),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
        default.VIDEOPLAY);
            try {
                this._mediaElement.play().
                catch(function(e) {})
            } catch(e) {}
            return ! 0
        }
    },
    {
        key: "pause",
        value: function() {
            return this._emitter.emit(o.
        default.VIDEOPAUSE),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
        default.VIDEOPAUSE),
            this._mediaElement.pause(),
            !0
        }
    },
    {
        key: "_onvCanPlay",
        value: function(e) { ! 1 === this._receivedCanPlay && (this._emitter.emit(o.
        default.FIRST_CANPLAY), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
        default.FIRST_CANPLAY)),
            this._receivedCanPlay = !0,
            this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay)
        }
    },
    {
        key: "_onvTimeUpdate",
        value: function(e) {
            this._emitter.emit(o.
        default.PLAYTIME, this._mediaElement.currentTime),
            this._callbacks && "function" == typeof this._callbacks.onplaytime && this._mediaElement && this._callbacks.onplaytime(this._mediaElement.currentTime)
        }
    },
    {
        key: "_onvLoadedMetadata",
        value: function(e) {
            null != this._pendingSeekTime && (this._mediaElement.currentTime = this._pendingSeekTime, this._pendingSeekTime = null)
        }
    },
    {
        key: "_onvSeeked",
        value: function(e) {
            this._emitter.emit(o.
        default.VIDEOSEEK, {
                currentTime: this._mediaElement.currentTime
            }),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
        default.VIDEOSEEK, {
                currentTime: this._mediaElement.currentTime
            })
        }
    },
    {
        key: "_onvRateChange",
        value: function(e) {
            this._emitter.emit(o.
        default.SPEEDCHANGE, {
                playbackRate: this._mediaElement.playbackRate
            }),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
        default.SPEEDCHANGE, {
                playbackRate: this._mediaElement.playbackRate
            })
        }
    },
    {
        key: "_onvError",
        value: function(e) {
            var t = this._mediaElement.error.code ? this._mediaElement.error.code: e.code;
            this._emitter.emit(o.
        default.ERROR, l.ErrorTypes.MEDIA_ERROR, l.ErrorDetails.MEDIA_VIDEO_ERROR, {
                code: t
            }),
            this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(l.ErrorTypes.MEDIA_ERROR, l.ErrorDetails.MEDIA_VIDEO_ERROR, {
                code: t
            })
        }
    },
    {
        key: "_onvEnded",
        value: function(e) {
            this._emitter.emit(o.
        default.PLAY_COMPLETE),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
        default.PLAY_COMPLETE)
        }
    },
    {
        key: "_reportStatisticsInfo",
        value: function() {
            this._emitter.emit(o.
        default.STATISTICS_INFO, this.statisticsInfo)
        }
    },
    {
        key: "type",
        get: function() {
            return this._type
        }
    },
    {
        key: "buffered",
        get: function() {
            return this._mediaElement.buffered
        }
    },
    {
        key: "duration",
        get: function() {
            return this._mediaElement.duration
        }
    },
    {
        key: "volume",
        get: function() {
            return this._mediaElement.volume
        },
        set: function(e) {
            this._mediaElement.volume = e
        }
    },
    {
        key: "muted",
        get: function() {
            return this._mediaElement.muted
        },
        set: function(e) {
            this._mediaElement.muted = e
        }
    },
    {
        key: "audioinit",
        get: function() {
            return ! 0
        }
    },
    {
        key: "currentTime",
        get: function() {
            return this._mediaElement ? this._mediaElement.currentTime: 0
        },
        set: function(e) {
            if (this._mediaElement) {
                if (this._mediaElement.currentTime = e, this._mediaElement.paused) try {
                    this._mediaElement.play().
                    catch(function(e) {})
                } catch(e) {}
            } else this._pendingSeekTime = e
        }
    },
    {
        key: "playbackRate",
        get: function() {
            return this._mediaElement ? this._mediaElement.playbackRate: 0
        },
        set: function(e) {
            if (this._mediaElement) return this._mediaElement.playbackRate = e
        }
    },
    {
        key: "mediaInfo",
        get: function() {
            var e = {
                mimeType: (this._mediaElement instanceof HTMLAudioElement ? "audio/": "video/") + this._mediaDataSource.type
            };
            return this._mediaElement && (e.duration = Math.floor(1e3 * this._mediaElement.duration), this._mediaElement instanceof HTMLVideoElement && (e.videoWidth = this._mediaElement.videoWidth, e.videoHeight = this._mediaElement.videoHeight)),
            e
        }
    },
    {
        key: "frameDuration",
        get: function() {
            return this._frameDuration
        }
    },
    {
        key: "statisticsInfo",
        get: function() {
            var e = {
                playerType: this._type,
                url: this._mediaDataSource.channelInfo.url
            };
            if (! (this._mediaElement instanceof HTMLVideoElement)) return e;
            var t = !0,
            i = 0,
            r = 0;
            if (this._mediaElement.getVideoPlaybackQuality) {
                var n = this._mediaElement.getVideoPlaybackQuality();
                i = n.totalVideoFrames,
                r = n.droppedVideoFrames
            } else null != this._mediaElement.webkitDecodedFrameCount ? (i = this._mediaElement.webkitDecodedFrameCount, r = this._mediaElement.webkitDroppedFrameCount) : t = !1;
            return t && (e.decodedFrames = i, e.droppedFrames = r),
            e
        }
    }]), f);
    function f(e, t) {
        if (function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, f), this.TAG = "NativePlayer", this._type = "NativePlayer", this._emitter = new a.
    default, this._config = (0, u.createDefaultConfig)(), "object" === (void 0 === t ? "undefined": r(t)) && Object.assign(this._config, t), this._callbacks = null, "object" === r(e.callbacks) && (this._callbacks = e.callbacks), e.channelInfo.devicetype && "native" !== e.channelInfo.devicetype.toLowerCase()) throw new h.InvalidArgumentException("NativePlayer does't support stream input!");
        this.e = {
            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),
            onvCanPlay: this._onvCanPlay.bind(this),
            onvSeeked: this._onvSeeked.bind(this),
            onvError: this._onvError.bind(this),
            onvTimeUpdate: this._onvTimeUpdate.bind(this),
            onvEnded: this._onvEnded.bind(this),
            onvRateChange: this._onvRateChange.bind(this)
        },
        this._pendingSeekTime = null,
        this._statisticsReporter = null,
        this._mediaDataSource = e,
        this._mediaElement = null,
        this._receivedCanPlay = !1,
        this._frameDuration = .04
    }
    t.
default = c
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.
default = {
        ERROR: "error",
        LOADING_COMPLETE: "loading_complete",
        RECOVERED_EARLY_EOF: "recovered_early_eof",
        MEDIA_INFO: "media_info",
        METADATA_ARRIVED: "metadata_arrived",
        SCRIPTDATA_ARRIVED: "scriptdata_arrived",
        STATISTICS_INFO: "statistics_info",
        COMMAND_RESPONSE: "command_response",
        COMMAND_NOTIFY: "command_notify",
        STARTSTREAM: "streamstart",
        FIRST_CANPLAY: "firstcanplay",
        LOADED_METADATA: "loadedmetadata",
        PTZCONTROL: "ptzcontrol",
        SPEEDCHANGE: "speedchange",
        VIDEOPAUSE: "pause",
        VIDEOPLAY: "play",
        STREAMPAUSE: "streampause",
        VIDEOSEEK: "seek",
        PLAYTIME: "playtime",
        VIDEOMUTED: "videomuted",
        SEGMENTPLAY_COMPLETE: "segmentplay_complete",
        SEGMENTPLAY_CANCEL: "segmentplay_cancel",
        SEGMENTPLAY_FAILED: "segmentplay_failed",
        OBJECTINFO: "objectinfo",
        PLAY_COMPLETE: "play_complete",
        QUERYRECORD: "queryrecord",
        ESDATA_FRAME: "esdata_frame",
        ESSCRIPTDATA_ARRIVED: "esscriptdata_arrived",
        AUDIO_INIT: "audio_init"
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    }),
    t.ErrorDetails = t.ErrorTypes = void 0;
    var r, n = i(351),
    s = i(353),
    a = (r = s) && r.__esModule ? r: {
    default:
        r
    };
    t.ErrorTypes = {
        NETWORK_ERROR: "NetworkError",
        MEDIA_ERROR: "MediaError",
        STREAM_ERROR: "StreamError",
        WASM_ERROR: "WasmError",
        OTHER_ERROR: "OtherError"
    },
    t.ErrorDetails = {
        NETWORK_EXCEPTION: n.LoaderErrors.EXCEPTION,
        NETWORK_STATUS_CODE_INVALID: n.LoaderErrors.HTTP_STATUS_CODE_INVALID,
        NETWORK_TIMEOUT: n.LoaderErrors.CONNECTING_TIMEOUT,
        NETWORK_UNRECOVERABLE_EARLY_EOF: n.LoaderErrors.UNRECOVERABLE_EARLY_EOF,
        MEDIA_MSE_ERROR: "MediaMSEError",
        MEDIA_VIDEO_ERROR: "MediaVideoError",
        WASM_WORK_ERROR: "WasmWorkError",
        WASM_DECODER_ERROR: "WasmDecoderError",
        MEDIA_FORMAT_ERROR: a.
    default.FORMAT_ERROR,
        MEDIA_FORMAT_UNSUPPORTED: a.
    default.FORMAT_UNSUPPORTED,
        MEDIA_CODEC_UNSUPPORTED: a.
    default.CODEC_UNSUPPORTED,
        STARTSTREAM_ERROR: "StartStreamError",
        READFILEERROR_ERROR: "ReadFileError"
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    }),
    t.BaseLoader = t.LoaderErrors = t.LoaderStatus = void 0;
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = i(352);
    var a = t.LoaderStatus = {
        kIdle: 0,
        kConnecting: 1,
        kBuffering: 2,
        kError: 3,
        kComplete: 4
    };
    t.LoaderErrors = {
        OK: "OK",
        EXCEPTION: "Exception",
        UNSUPPORT: "Unsupport",
        HTTP_STATUS_CODE_INVALID: "HttpStatusCodeInvalid",
        CONNECTING_TIMEOUT: "ConnectingTimeout",
        CONNECTING_ERROR: "ConnectingError",
        EARLY_EOF: "EarlyEof",
        UNRECOVERABLE_EARLY_EOF: "UnrecoverableEarlyEof"
    },
    t.BaseLoader = (r(o, [{
        key: "destroy",
        value: function() {
            this._status = a.kIdle,
            this._onContentLengthKnown = null,
            this._onURLRedirect = null,
            this._onDataArrival = null,
            this._onError = null,
            this._onComplete = null
        }
    },
    {
        key: "isWorking",
        value: function() {
            return this._status === a.kConnecting || this._status === a.kBuffering
        }
    },
    {
        key: "open",
        value: function(e, t) {
            throw new s.NotImplementedException("Unimplemented abstract function!")
        }
    },
    {
        key: "abort",
        value: function() {
            throw new s.NotImplementedException("Unimplemented abstract function!")
        }
    },
    {
        key: "type",
        get: function() {
            return this._type
        }
    },
    {
        key: "status",
        get: function() {
            return this._status
        }
    },
    {
        key: "needStashBuffer",
        get: function() {
            return this._needStash
        }
    },
    {
        key: "onContentLengthKnown",
        get: function() {
            return this._onContentLengthKnown
        },
        set: function(e) {
            this._onContentLengthKnown = e
        }
    },
    {
        key: "onURLRedirect",
        get: function() {
            return this._onURLRedirect
        },
        set: function(e) {
            this._onURLRedirect = e
        }
    },
    {
        key: "onDataArrival",
        get: function() {
            return this._onDataArrival
        },
        set: function(e) {
            this._onDataArrival = e
        }
    },
    {
        key: "onError",
        get: function() {
            return this._onError
        },
        set: function(e) {
            this._onError = e
        }
    },
    {
        key: "onComplete",
        get: function() {
            return this._onComplete
        },
        set: function(e) {
            this._onComplete = e
        }
    }]), o);
    function o(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, o),
        this._type = e || "undefined",
        this._status = a.kIdle,
        this._needStash = !1,
        this._onContentLengthKnown = null,
        this._onURLRedirect = null,
        this._onDataArrival = null,
        this._onError = null,
        this._onComplete = null
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    function s(e, t) {
        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return ! t || "object" != typeof t && "function" != typeof t ? e: t
    }
    function a(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    }
    function o(e, t) {
        if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    var l = t.RuntimeException = (r(u, [{
        key: "toString",
        value: function() {
            return this.name + ": " + this.message
        }
    },
    {
        key: "name",
        get: function() {
            return "RuntimeException"
        }
    },
    {
        key: "message",
        get: function() {
            return this._message
        }
    }]), u);
    function u(e) {
        o(this, u),
        this._message = e
    }
    t.IllegalStateException = (a(h, l), r(h, [{
        key: "name",
        get: function() {
            return "IllegalStateException"
        }
    }]), h);
    function h(e) {
        return o(this, h),
        s(this, (h.__proto__ || Object.getPrototypeOf(h)).call(this, e))
    }
    t.InvalidArgumentException = (a(d, l), r(d, [{
        key: "name",
        get: function() {
            return "InvalidArgumentException"
        }
    }]), d);
    function d(e) {
        return o(this, d),
        s(this, (d.__proto__ || Object.getPrototypeOf(d)).call(this, e))
    }
    t.NotImplementedException = (a(c, l), r(c, [{
        key: "name",
        get: function() {
            return "NotImplementedException"
        }
    }]), c);
    function c(e) {
        return o(this, c),
        s(this, (c.__proto__ || Object.getPrototypeOf(c)).call(this, e))
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.
default = {
        OK: "OK",
        FORMAT_ERROR: "FormatError",
        FORMAT_UNSUPPORTED: "FormatUnsupported",
        CODEC_UNSUPPORTED: "CodecUnsupported"
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    n = function(e, t, i) {
        return t && s(e.prototype, t),
        i && s(e, i),
        e
    };
    function s(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var a = c(i(347)),
    o = (c(i(346)), c(i(355))),
    l = c(i(349)),
    u = c(i(356)),
    h = i(350),
    d = c(i(394));
    function c(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var f = (n(p, [{
        key: "destroy",
        value: function() {
            this._flvplayer && (this._flvplayer.destroy(), this._flvplayer = null),
            this._wasmPlayer && (this._wasmPlayer.destroy(), this._wasmPlayer = null),
            this._mediaDataSource = null,
            this._emitter.removeAllListeners(),
            this._emitter = null,
            this._h5msClient = null,
            this._mediaEle = null,
            this._mediaCvs = null
        }
    },
    {
        key: "on",
        value: function(e, t) {
            this._flvplayer && (e === l.
        default.STATISTICS_INFO ? this._flvplayer.on(l.
        default.STATISTICS_INFO, this._flvOnStatisticsInfo.bind(this)) : this._flvplayer.on(e, t)),
            e !== l.
        default.ERROR && e !== l.
        default.STATISTICS_INFO && e !== l.
        default.FIRST_CANPLAY && e !== l.
        default.VIDEOSEEK && e !== l.
        default.PLAYTIME || this._emitter.addListener(e, t)
        }
    },
    {
        key: "off",
        value: function(e, t) {
            this._flvplayer && this._flvplayer.off(e, t),
            this._wasmPlayer && this._wasmPlayer.off(e, t),
            this._emitter.removeListener(e, t)
        }
    },
    {
        key: "attachMediaElement",
        value: function(e, t) {
            this._flvplayer && this._flvplayer.attachMediaElement(e),
            this._mediaEle = e,
            this._mediaCvs = t
        }
    },
    {
        key: "detachMediaElement",
        value: function() {
            this._flvplayer && this._flvplayer.detachMediaElement(),
            this._wasmPlayer && this._wasmPlayer.detachMediaElement()
        }
    },
    {
        key: "load",
        value: function() {
            this._flvplayer && (this._flvplayer.on(l.
        default.ESSCRIPTDATA_ARRIVED, this._onEsScriptDataArrived.bind(this)), this._flvplayer.on(l.
        default.ESDATA_FRAME, this._onEsDataFrame.bind(this)), this._flvplayer.load())
        }
    },
    {
        key: "unload",
        value: function() {
            this._flvplayer && this._flvplayer.unload()
        }
    },
    {
        key: "play",
        value: function() {
            if (this._wasmPlayer && this._wasmPlayer.play(), this._flvplayer) return this._flvplayer.play()
        }
    },
    {
        key: "pause",
        value: function() {
            if (this._wasmPlayer && this._wasmPlayer.pause(), this._flvplayer) return this._flvplayer.pause()
        }
    },
    {
        key: "getVideoEle",
        value: function() {
            return this._wasmPlayer ? this._mediaCvs: this._flvplayer ? this._mediaEle: void 0
        }
    },
    {
        key: "setPlaybackOffset",
        value: function(e) {
            this._flvplayer && this._flvplayer.setPlaybackOffset(e),
            this._wasmPlayer && this._wasmPlayer.setPlaybackOffset(e)
        }
    },
    {
        key: "ptzControl",
        value: function(e, t) {
            if (this._flvplayer) return this._flvplayer.ptzControl(e, t)
        }
    },
    {
        key: "ptzLock",
        value: function(e) {
            if (this._flvplayer) return this._flvplayer.ptzLock(e)
        }
    },
    {
        key: "ptzControl3D",
        value: function(e, t, i, r, n) {
            if (this._flvplayer) return this._flvplayer.ptzControl3D(e, t, i, r, n)
        }
    },
    {
        key: "queryRecord",
        value: function(e) {
            if (this._flvplayer) return this._flvplayer.queryRecord(e)
        }
    },
    {
        key: "continuousShooting",
        value: function(e, t, i, r, n, s) {
            this._wasmPlayer && this._wasmPlayer.continuousShooting(e, t, i, r, n, s)
        }
    },
    {
        key: "catchPicture",
        value: function(e, t, i, r) {
            return this._wasmPlayer ? this._wasmPlayer.catchPicture(e, t, i, r) : ""
        }
    },
    {
        key: "singleFramePlay",
        value: function() {
            if (this._wasmPlayer) return this._wasmPlayer.singleFramePlay()
        }
    },
    {
        key: "_wpOnFirstCanplay",
        value: function() {
            this._emitter.emit(l.
        default.FIRST_CANPLAY),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.FIRST_CANPLAY)
        }
    },
    {
        key: "_wpOnVideoSeeked",
        value: function(e) {
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.VIDEOSEEK, {
                error: 0,
                currentTime: e
            }),
            this._emitter.emit(l.
        default.VIDEOSEEK, {
                error: 0,
                currentTime: e
            })
        }
    },
    {
        key: "_wpOnError",
        value: function(e, t) {
            this._emitter.emit(l.
        default.ERROR, h.ErrorTypes.WASM_ERROR, h.ErrorDetails.WASM_DECODER_ERROR, {
                code: t
            }),
            this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(h.ErrorTypes.WASM_ERROR, h.ErrorDetails.WASM_DECODER_ERROR, {
                code: t
            })
        }
    },
    {
        key: "_wpOnPlayTime",
        value: function(e) {
            this._emitter.emit(l.
        default.PLAYTIME, e),
            this._callbacks && "function" == typeof this._callbacks.onplaytime && this._callbacks.onplaytime(e)
        }
    },
    {
        key: "_wpOnStreamPause",
        value: function(e) {
            this._flvplayer && this._flvplayer._pauseStream(e)
        }
    },
    {
        key: "_flvOnStatisticsInfo",
        value: function(e) {
            this._wasmPlayer && (e.playerType = "wasmPlayer", e.decodedFrames = this._wasmPlayer.decodedFrames, e.droppedFrames = 0),
            this._emitter.emit(l.
        default.STATISTICS_INFO, e)
        }
    },
    {
        key: "_createWasmPlayer",
        value: function(e, t) {
            if (this._wasmPlayer && (this._wasmPlayer.destroy(), this._wasmPlayer = null), -1 != e) {
                var i = this._wasmPlayer = new d.
            default(this._mediaCvs, this.isLive, e, t);
                i.on(l.
            default.ERROR, this._wpOnError.bind(this)),
                i.on(l.
            default.FIRST_CANPLAY, this._wpOnFirstCanplay.bind(this)),
                i.on(l.
            default.VIDEOSEEK, this._wpOnVideoSeeked.bind(this)),
                i.on(l.
            default.PLAYTIME, this._wpOnPlayTime.bind(this)),
                i.onstreamPuase = this._wpOnStreamPause.bind(this),
                i.initDecodeWorker(),
                i.play()
            }
        }
    },
    {
        key: "_onEsScriptDataArrived",
        value: function(e) {
            null == this._wasmPlayer || e.codecId != this._wasmPlayer.codecId ? this._createWasmPlayer(e.codecId, e.duration) : this._wasmPlayer.duration = e.duration
        }
    },
    {
        key: "_onEsDataFrame",
        value: function(e, t) {
            null != this._wasmPlayer && t.codecId == this._wasmPlayer.codecId || (this._createWasmPlayer(t.codecId), this._wasmPlayer.duration = this._flvplayer.duration),
            this._wasmPlayer.inputData(e, t)
        }
    },
    {
        key: "type",
        get: function() {
            return this._wasmPlayer ? "wasmPlayer": this._flvplayer ? this._flvplayer.type: void 0
        }
    },
    {
        key: "buffered",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.buffered() : this._flvplayer ? this._flvplayer.buffered: void 0
        }
    },
    {
        key: "duration",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.duration: this._flvplayer ? this._flvplayer.duration: void 0
        }
    },
    {
        key: "volume",
        get: function() {
            return this._flvplayer ? this._flvplayer.volume: this._mediaEle.volume
        },
        set: function(e) {
            if (this._flvplayer) return this._flvplayer.volume = e;
            this._mediaEle.volume = e
        }
    },
    {
        key: "muted",
        get: function() {
            return this._flvplayer ? this._flvplayer.muted: this._mediaEle.muted
        },
        set: function(e) {
            if (this._flvplayer) return this._flvplayer.muted = e;
            this._mediaEle.muted = e
        }
    },
    {
        key: "audioinit",
        get: function() {
            return ! this._wasmPlayer && (this._flvplayer ? this._flvplayer.audioinit: void 0)
        }
    },
    {
        key: "paused",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.paused: this._flvplayer ? this._mediaEle.paused: void 0
        }
    },
    {
        key: "currentTime",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.currentTime: this._flvplayer ? this._flvplayer.currentTime: 0
        },
        set: function(e) {
            this._wasmPlayer ? this._wasmPlayer.setDidirectPlayTime(e) || (this._flvplayer.currentTime = e) : this._flvplayer && (this._flvplayer.currentTime = e)
        }
    },
    {
        key: "playbackRate",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.playbackRate: this._flvplayer ? this._flvplayer.playbackRate: 1
        },
        set: function(e) {
            if (this._wasmPlayer) return this._wasmPlayer.playbackRate = 16 < e ? 16 : e,
            void this._flvplayer._setStreamRate(e);
            this._flvplayer && (this._flvplayer.playbackRate = e)
        }
    },
    {
        key: "mediaInfo",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.mediaInfo: this._flvplayer ? this._flvplayer.mediaInfo: void 0
        }
    },
    {
        key: "frameDuration",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.frameDuration: this._flvplayer ? this._flvplayer.frameDuration: void 0
        }
    },
    {
        key: "statisticsInfo",
        get: function() {
            return this._wasmPlayer ? this._wasmPlayer.statisticsInfo: this._flvplayer ? this._flvplayer.statisticsInfo: void 0
        }
    }]), p);
    function p(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, p),
        this.TAG = "ExtFlvPlayer",
        this._type = "ExtFlvPlayer",
        this._emitter = new a.
    default,
        this._mediaDataSource = e,
        this._callbacks = null,
        "object" === r(e.callbacks) && (this._callbacks = e.callbacks);
        var i = t.enableWasmDecoder && (o.
    default.msedge || o.
    default.chrome && 57 < o.
    default.version.major);
        e.channelInfo && "live" === e.channelInfo.streamtype ? this.isLive = !0 : this.isLive = !1,
        e.channelInfo.extdecoder = i ? 7 : 0,
        this._h5msClient = null,
        this._mediaEle = null,
        this._mediaCvs = null,
        this._mediaInfo = null,
        this._statisticsInfo = null,
        this._wasmPlayer = null,
        this._flvplayer = new u.
    default(e, t)
    }
    t.
default = f
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = {}; !
    function() {
        var e = self.navigator.userAgent.toLowerCase(),
        t = /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || 0 <= e.indexOf("trident") && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(firefox)[ \/]([\w.]+)/.exec(e) || [],
        i = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || [],
        r = {
            browser: t[5] || t[3] || t[1] || "",
            version: t[2] || t[4] || "0",
            majorVersion: t[4] || t[2] || "0",
            platform: i[0] || ""
        },
        n = {};
        if (r.browser) {
            n[r.browser] = !0;
            var s = r.majorVersion.split(".");
            n.version = {
                major: parseInt(r.majorVersion, 10),
                string: r.version
            },
            1 < s.length && (n.version.minor = parseInt(s[1], 10)),
            2 < s.length && (n.version.build = parseInt(s[2], 10))
        }
        if (r.platform && (n[r.platform] = !0), (n.chrome || n.opr || n.safari) && (n.webkit = !0), n.rv || n.iemobile) {
            n.rv && delete n.rv;
            r.browser = "msie",
            n.msie = !0
        }
        if (n.edge) {
            delete n.edge;
            r.browser = "msedge",
            n.msedge = !0
        }
        if (n.opr) {
            r.browser = "opera",
            n.opera = !0
        }
        if (n.safari && n.android) {
            r.browser = "android",
            n.android = !0
        }
        for (var a in n.name = r.browser,
        n.platform = r.platform,
        o) o.hasOwnProperty(a) && delete o[a];
        Object.assign(o, n)
    } (),
    t.
default = o
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    n = function(e, t, i) {
        return t && s(e.prototype, t),
        i && s(e, i),
        e
    };
    function s(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var a = m(i(347)),
    _ = m(i(346)),
    o = m(i(355)),
    l = m(i(349)),
    u = m(i(357)),
    h = m(i(379)),
    d = m(i(390)),
    c = m(i(391)),
    f = i(350),
    p = i(341),
    v = i(352);
    m(i(392));
    function m(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var g = (n(y, [{
        key: "destroy",
        value: function() {
            null != this._progressChecker && (window.clearInterval(this._progressChecker), this._progressChecker = null),
            this._seekTimeoutChecker && (clearTimeout(this._seekTimeoutChecker), this._seekTimeoutChecker = null),
            this._seekAudioChecker && (clearTimeout(this._seekAudioChecker), this._seekAudioChecker = null),
            this._transmuxer && this.unload(),
            this._mediaElement && this.detachMediaElement(),
            this.e = null,
            this._mediaDataSource = null,
            this._emitter.removeAllListeners(),
            this._emitter = null,
            this._h5msClient = null,
            this._duration = 0
        }
    },
    {
        key: "on",
        value: function(e, t) {
            var i = this;
            e === l.
        default.MEDIA_INFO ? null != this._mediaInfo && Promise.resolve().then(function() {
                i._emitter.emit(l.
            default.MEDIA_INFO, i.mediaInfo)
            }) : e === l.
        default.STATISTICS_INFO && null != this._statisticsInfo && Promise.resolve().then(function() {
                i._emitter.emit(l.
            default.STATISTICS_INFO, i.statisticsInfo)
            }),
            this._emitter.addListener(e, t)
        }
    },
    {
        key: "off",
        value: function(e, t) {
            this._emitter.removeListener(e, t)
        }
    },
    {
        key: "attachMediaElement",
        value: function(e) {
            var t = this;
            if (this._mediaElement = e, this._mediaElement.currentTime = 0, this._mediaElement.load(), e.addEventListener("loadedmetadata", this.e.onvLoadedMetadata), e.addEventListener("seeking", this.e.onvSeeking), e.addEventListener("canplay", this.e.onvCanPlay), e.addEventListener("stalled", this.e.onvStalled), e.addEventListener("progress", this.e.onvProgress), e.addEventListener("seeked", this.e.onvSeeked), e.addEventListener("error", this.e.onvError), e.addEventListener("ratechange", this.e.onvRateChange), e.addEventListener("timeupdate", this.e.onvTimeUpdate), this._msectl = new d.
        default(this._config), this._msectl.on(c.
        default.UPDATE_END, this._onmseUpdateEnd.bind(this)), this._msectl.on(c.
        default.BUFFER_FULL, this._onmseBufferFull.bind(this)), this._msectl.on(c.
        default.SOURCE_OPEN,
            function() {
                t._mseSourceOpened = !0,
                t._hasPendingLoad && (t._hasPendingLoad = !1, t.load())
            }), this._msectl.on(c.
        default.ERROR,
            function(e) {
                t._emitter.emit(l.
            default.ERROR, f.ErrorTypes.MEDIA_ERROR, f.ErrorDetails.MEDIA_MSE_ERROR, e),
                t._callbacks && "function" == typeof t._callbacks.onerror && t._callbacks.onerror(f.ErrorTypes.MEDIA_ERROR, f.ErrorDetails.MEDIA_MSE_ERROR, e)
            }), this._msectl.on(c.
        default.SOURCE_SEEK,
            function(e) {
                t._mediaElement && (t._requestSetTime = !0, t._mediaElement.currentTime = e, t._edgeseeking = !1, t._checkSeekingAudio(e))
            }), this._msectl.on(c.
        default.AUDIO_INIT,
            function() {
                t._audioinit = !0,
                t._emitter.emit(l.
            default.AUDIO_INIT)
            }), this._msectl.attachMediaElement(e), null != this._pendingSeekTime) try {
                e.currentTime = this._pendingSeekTime,
                this._pendingSeekTime = null
            } catch(e) {}
        }
    },
    {
        key: "detachMediaElement",
        value: function() {
            this._mediaElement && (this._msectl.detachMediaElement(), this._mediaElement.removeEventListener("loadedmetadata", this.e.onvLoadedMetadata), this._mediaElement.removeEventListener("seeking", this.e.onvSeeking), this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay), this._mediaElement.removeEventListener("stalled", this.e.onvStalled), this._mediaElement.removeEventListener("progress", this.e.onvProgress), this._mediaElement.removeEventListener("seeked", this.e.onvSeeked), this._mediaElement.removeEventListener("error", this.e.onvError), this._mediaElement.removeEventListener("ratechange", this.e.onvRateChange), this._mediaElement.removeEventListener("timeupdate", this.e.onvTimeUpdate), this._mediaElement = null),
            this._msectl && (this._msectl.destroy(), this._msectl = null)
        }
    },
    {
        key: "load",
        value: function() {
            var i = this;
            if (this._h5msClient) {
                var r = this._mediaDataSource.channelInfo;
                this._h5msClient.startStream(r,
                function(e) {
                    if (console.log(e), e && 0 === e.param.error && e.msg && e.msg.playUrl && e.msg.streamId) {
                        if (i._mediaDataSource.url = e.msg.playUrl, i._mediaDataSource.streamId = e.msg.streamId, i._mediaDataSource.mediaType = "h5msflv", i._mediaType = "h5msflv", !i._mediaDataSource.isLive && r.begintime && r.endtime && (i._mediaDataSource.duration = new Date(r.endtime.replace(/-/g, "/")).getTime() - new Date(r.begintime.replace(/-/g, "/")).getTime(), i._h5msClient.setSpeed(i._mediaDataSource.streamId, 1)), e.msg.streamInfo) {
                            console.log(e.msg.streamInfo);
                            var t = JSON.parse(e.msg.streamInfo); (t = t && JSON.parse(t.info)) && (i._frameDuration = t.frameRate / 1e3, i._mediaDataSource.duration = t.times)
                        }
                        i._internalLoad()
                    }
                    e && -1 === e.param.error && (e.param.error = -105e3),
                    e.param.h5ms = !0,
                    i._onStartStream(e)
                })
            } else this._internalLoad()
        }
    },
    {
        key: "_internalLoad",
        value: function() {
            var r = this;
            if (!this._mediaElement) throw new v.IllegalStateException("HTMLMediaElement must be attached before load()!");
            if (this._transmuxer) throw new v.IllegalStateException("FlvPlayer.load() has been called, please call unload() first!");
            if (!this._hasPendingLoad) if (this._config.deferLoadAfterSourceOpen && !1 === this._mseSourceOpened) this._hasPendingLoad = !0;
            else {
                0 < this._mediaElement.readyState && (this._requestSetTime = !0, this._mediaElement.currentTime = 0),
                this._transmuxer = new u.
            default(this._mediaDataSource, this._config),
                this._transmuxer.on(h.
            default.COMMAND_RESPONSE,
                function(e) {
                    r._wsCommandResponse(e)
                }),
                this._transmuxer.on(h.
            default.INIT_SEGMENT,
                function(e, t) {
                    r._wasmPlayer = !1,
                    r._emitter.emit(l.
                default.ESSCRIPTDATA_ARRIVED, {
                        codecId: -1,
                        duration: 0
                    }),
                    r._msectl.appendInitSegment(t)
                }),
                this._transmuxer.on(h.
            default.MEDIA_SEGMENT,
                function(e, t) {
                    if (r._msectl.appendMediaSegment(t), r._config.lazyLoad && !r._mediaDataSource.isLive && "flv" === r._mediaType) {
                        var i = r._mediaElement.currentTime;
                        t.info.endDts >= 1e3 * (i + r._config.lazyLoadMaxDuration) && null == r._progressChecker && (_.
                    default.v(r.TAG, "Maximum buffering duration exceeded, suspend transmuxing task"), r._suspendTransmuxer())
                    }
                }),
                this._transmuxer.on(h.
            default.LOADING_COMPLETE,
                function() {
                    "flv" != r._mediaType ? r._emitter.emit(l.
                default.ERROR, f.ErrorTypes.NETWORK_ERROR, "WebsocketClosed", {
                        error: -1
                    }) : (r._msectl.endOfStream(), r._emitter.emit(l.
                default.LOADING_COMPLETE))
                }),
                this._transmuxer.on(h.
            default.IO_ERROR,
                function(e, t) {
                    r._emitter.emit(l.
                default.ERROR, f.ErrorTypes.NETWORK_ERROR, e, t),
                    r._callbacks && "function" == typeof r._callbacks.onerror && r._callbacks.onerror(f.ErrorTypes.NETWORK_ERROR, e, t)
                }),
                this._transmuxer.on(h.
            default.RECOVERED_EARLY_EOF,
                function() {
                    r._emitter.emit(l.
                default.RECOVERED_EARLY_EOF)
                }),
                this._transmuxer.on(h.
            default.DEMUX_ERROR,
                function(e, t) {
                    r._emitter.emit(l.
                default.ERROR, f.ErrorTypes.MEDIA_ERROR, e, {
                        code: -1,
                        msg: t
                    })
                }),
                this._transmuxer.on(h.
            default.MEDIA_INFO,
                function(e) {
                    "number" == typeof(r._mediaInfo = e).fps && 0 != e.fps && (r._frameDuration = 1 / e.fps),
                    r._emitter.emit(l.
                default.MEDIA_INFO, Object.assign({},
                    e))
                }),
                this._transmuxer.on(h.
            default.METADATA_ARRIVED,
                function(e) {
                    r._emitter.emit(l.
                default.METADATA_ARRIVED, e)
                }),
                this._transmuxer.on(h.
            default.SCRIPTDATA_ARRIVED,
                function(e) {
                    "number" == typeof e.frameDuration && e.type && (r._frameDuration = e.frameDuration, console.log("get frameduration by ", e.type, " : ", e.frameDuration)),
                    r._emitter.emit(l.
                default.SCRIPTDATA_ARRIVED, e)
                }),
                this._transmuxer.on(h.
            default.STATISTICS_INFO,
                function(e) {
                    r._statisticsInfo = r._fillStatisticsInfo(e),
                    r._emitter.emit(l.
                default.STATISTICS_INFO, Object.assign({},
                    r._statisticsInfo))
                }),
                this._transmuxer.on(h.
            default.RECOMMEND_SEEKPOINT,
                function(e) {
                    r._mediaElement && !r._config.accurateSeek && (r._requestSetTime = !0, r._mediaElement.currentTime = e / 1e3)
                }),
                this._transmuxer.on(h.
            default.ESDATA_ARRIVED,
                function(e, t) {
                    r._wasmPlayer = !0,
                    r._receivedCanPlay = !1,
                    r._emitter.emit(l.
                default.ESDATA_FRAME, e, t)
                }),
                this._transmuxer.on(h.
            default.ESSCRIPTDATA_ARRIVED,
                function(e) {
                    r._wasmPlayer || (r._wasmPlayer = !0, r._receivedCanPlay = !1),
                    r._emitter.emit(l.
                default.ESSCRIPTDATA_ARRIVED, e)
                }),
                this._transmuxer.open();
                try {
                    this._mediaElement.muted = !0,
                    this._mediaElement.autoplay = !0,
                    this._mediaElement.play().
                    catch(function(e) {}),
                    this._emitter.emit(l.
                default.VIDEOPLAY),
                    this._emitter.emit(l.
                default.VIDEOMUTED, this._mediaElement.muted)
                } catch(e) {}
            }
        }
    },
    {
        key: "unload",
        value: function() {
            if (this._mediaElement) {
                this._mediaElement.playbackRate = this._mediaElement.defaultPlaybackRate;
                try {
                    this._mediaElement.pause(),
                    this._mediaElement.src = "",
                    this._mediaElement.removeAttribute("src")
                } catch(e) {}
            }
            this._msectl && this._msectl.seek(0),
            this._transmuxer && (this._transmuxer.close(), this._transmuxer.destroy(), this._transmuxer = null)
        }
    },
    {
        key: "play",
        value: function() {
            if (this._mediaDataSource.isLive) return ! 1;
            this._emitter.emit(l.
        default.VIDEOPLAY),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.VIDEOPLAY);
            try {
                this._mediaElement.play().
                catch(function(e) {})
            } catch(e) {}
            return ! 0
        }
    },
    {
        key: "pause",
        value: function() {
            return ! this._mediaDataSource.isLive && (this._emitter.emit(l.
        default.VIDEOPAUSE), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.VIDEOPAUSE), this._mediaElement.pause(), !0)
        }
    },
    {
        key: "setPlaybackOffset",
        value: function(e) {
            this._playbackStreamOffset = e
        }
    },
    {
        key: "ptzControl",
        value: function(e, t) {
            return !! (this._mediaElement && this._transmuxer && this._mediaDataSource.isLive) && ("fmp4" === this._mediaType ? this._transmuxer.sendcmd({
                type: "command",
                name: "PtzControl",
                param: {
                    cmd: parseInt(e),
                    value: parseInt(t)
                }
            }) : "h5msflv" === this._mediaType && this._h5msClient.ptzControl(this._mediaDataSource.streamId, parseInt(e), parseInt(t)), !0)
        }
    },
    {
        key: "ptzLock",
        value: function(e) {
            return !! (this._mediaElement && this._transmuxer && this._mediaDataSource.isLive) && ("fmp4" === this._mediaType ? this._transmuxer.sendcmd({
                type: "command",
                name: "PtzLock",
                param: {
                    value: parseInt(e)
                }
            }) : "h5msflv" === this._mediaType && this._h5msClient.ptzLock(this._mediaDataSource.streamId, parseInt(e)), !0)
        }
    },
    {
        key: "ptzControl3D",
        value: function(e, t, i, r, n) {
            return !! (this._mediaElement && this._transmuxer && this._mediaDataSource.isLive) && ("fmp4" === this._mediaType ? this._transmuxer.sendcmd({
                type: "command",
                name: "PtzControl3D",
                param: {
                    direct: parseInt(e),
                    x: t,
                    y: i,
                    w: r,
                    h: n
                }
            }) : "h5msflv" === this._mediaType && this._h5msClient.ptzControl3D(this._mediaDataSource.streamId, parseInt(e), t, i, r, n), !0)
        }
    },
    {
        key: "queryRecord",
        value: function(e) { ! this._mediaDataSource.isLive && this._transmuxer && ("fmp4" === this._mediaType ? this._transmuxer.sendcmd({
                type: "command",
                name: "QueryRecord",
                param: e
            }) : "h5msflv" === this._mediaType && this._h5msClient.queryRecord(e, this._onQueryRecord.bind(this)))
        }
    },
    {
        key: "_onStartStream",
        value: function(e) {
            this._emitter.emit(l.
        default.STARTSTREAM, e.param.error),
            0 !== e.param.error ? (this._emitter && this._emitter.emit(l.
        default.ERROR, f.ErrorTypes.STREAM_ERROR, f.ErrorDetails.STARTSTREAM_ERROR, Object.assign({},
            e.param, e.rederved)), this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(f.ErrorTypes.STREAM_ERROR, f.ErrorDetails.STARTSTREAM_ERROR, Object.assign({},
            e.param, e.rederved))) : this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.STARTSTREAM)
        }
    },
    {
        key: "_onPtzControl",
        value: function(e) {
            this._emitter.emit(l.
        default.PTZCONTROL, Object.assign({},
            e.param, e.rederved)),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.PTZCONTROL, Object.assign({},
            e.param, e.rederved))
        }
    },
    {
        key: "_onSetSpeed",
        value: function(e) {
            this._emitter.emit(l.
        default.SPEEDCHANGE, Object.assign({
                playbackRate: this._mediaElement.playbackRate
            },
            e.param, e.rederved)),
            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.SPEEDCHANGE, Object.assign({
                playbackRate: this._mediaElement.playbackRate
            },
            e.param, e.rederved))
        }
    },
    {
        key: "_onSeek",
        value: function(e) {
            if (this._loadingComplete && (this._loadingComplete = !1), 0 === e.param.error) {
                var t = (e.param.value - "0") / 1e3;
                "fmp4" === this._mediaType ? this._msectl.seek(t) : "h5msflv" === this._mediaType && (this._msectl.seek(t), this._transmuxer.seek(e.param.value - "0")),
                this._config.accurateSeek && (this._requestSetTime = !0, this._mediaElement.currentTime = t)
            } else this._emitter.emit(l.
        default.VIDEOSEEK, {
                error: e.param.error
            }),
            this._edgeseeking = !1,
            this._msectl.seekover(),
            _.
        default.e(this.TAG, "_wsCommandResponse Seek(" + e.param.value / 1e3 + ") " + e.param.error + " ")
        }
    },
    {
        key: "_onQueryRecord",
        value: function(e) {
            this._emitter.emit(l.
        default.QUERYRECORD, Object.assign({},
            e.param || e, e.rederved))
        }
    },
    {
        key: "_onPause",
        value: function(e) {}
    },
    {
        key: "_wsCommandResponse",
        value: function(e) {
            var t = this,
            i = "object" === (void 0 === e ? "undefined": r(e)) ? e: JSON.parse(e);
            if (i && i.type) if ("objectinfo" === i.type) this.callbacks && "function" == typeof this._callbacks.objectinfo ? this.callbacks.objectinfo(i,
            function(e) {
                t._emitter.emit(l.
            default.OBJECTINFO, e)
            }) : this._emitter.emit(l.
        default.OBJECTINFO, i);
            else if ("response" === i.type) switch (i.name) {
            case "StartStream":
                this._onStartStream(i);
                break;
            case "PtzControl":
            case "PtzControl3D":
                this._onPtzControl(i);
                break;
            case "SetSpeed":
                this._onSetSpeed(i);
                break;
            case "Seek":
                this._onSeek(i);
                break;
            case "Pause":
                this._onPause(i);
                break;
            case "QueryRecord":
                this._onQueryRecord(i)
            } else "notify" === i.type && ("VodEnd" == i.name ? (this._loadingComplete = !0, this._emitter.emit(l.
        default.LOADING_COMPLETE)):
            "ReadFileError" == i.name ? (this._emitter.emit(l.
        default.ERROR, f.ErrorTypes.STREAM_ERROR, f.ErrorDetails.READFILEERROR_ERROR, Object.assign({},
            i.param, i.rederved)), this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(f.ErrorTypes.STREAM_ERROR, f.ErrorDetails.READFILEERROR_ERROR, Object.assign({},
            i.param, i.rederved))) : "frameduration" == i.name ? this._frameDuration = i.param / 1e3: (this._emitter.emit(l.
        default.COMMAND_NOTIFY, i.name, i.name, Object.assign({},
            i.param, i.rederved)), this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onnotify(i.name, Object.assign({},
            i.param, i.rederved))));
            else _.
        default.e(this.TAG, "_wsCommandResponse " + e + " ")
        }
    },
    {
        key: "_fillStatisticsInfo",
        value: function(e) {
            if (e.playerType = this._type, !(this._mediaElement instanceof HTMLVideoElement)) return e;
            var t = !0,
            i = 0,
            r = 0;
            if (this._mediaElement.getVideoPlaybackQuality) {
                var n = this._mediaElement.getVideoPlaybackQuality();
                i = n.totalVideoFrames,
                r = n.droppedVideoFrames
            } else null != this._mediaElement.webkitDecodedFrameCount ? (i = this._mediaElement.webkitDecodedFrameCount, r = this._mediaElement.webkitDroppedFrameCount) : t = !1;
            return t && (e.decodedFrames = i, e.droppedFrames = r),
            e
        }
    },
    {
        key: "_onmseUpdateEnd",
        value: function() {
            if (! (!this._config.lazyLoad || this._config.autoSpeedMaxDurationForLive <= 0 || this._progressChecker || this._loadingComplete)) {
                for (var e = this._mediaElement.buffered,
                t = this._mediaElement.currentTime,
                i = 0,
                r = 0,
                n = !1,
                s = 0; s < e.length; s++) {
                    var a = e.start(s),
                    o = e.end(s);
                    if (a <= t && t < o) {
                        i = a,
                        r = o,
                        n = !0;
                        break
                    }
                }
                if (null === this._currentRange) this._currentRange = {},
                this._currentRange.start = i,
                this._currentRange.end = r;
                else if (this._currentRange.end !== r || this._edgeseeking) n || this._edgeseeking || "flv" == this._mediaType || 1 <= e.length && (i = e.start(e.length - 1), .5 < (r = e.end(e.length - 1)) - i && (this._mediaElement.currentTime = i + .1, t = i + .1, _.
            default.w(this.TAG, "_onmseUpdateEnd bufferedcannotfind  len " + e.length + " seek " + t + " to " + i)));
                else if (r - .5 <= t) {
                    for (var l = 0,
                    u = 0,
                    h = 0,
                    d = 0; d < e.length; d++) {
                        var c = e.start(d),
                        f = e.end(d);
                        if (t < c && t < f && r != f && c != i) { (this._mediaDataSource.isLive || this._duration > c) && (u = c, h = f, l = 1, _.
                        default.w(this.TAG, "_onmseUpdateEnd fount bufferedchange len " + e.length + " findtype " + l + " seek " + t + " to " + c));
                            break
                        }
                        c != i && f != r && (this._mediaDataSource.isLive || this._duration > c) && (u = c, u = f, l = 2, _.
                    default.w(this.TAG, "_onmseUpdateEnd back bufferedchange len " + e.length + " findtype " + l + " seek " + t + " to " + c))
                    }
                    0 != l && "flv" != this._mediaType && (i = u, r = h, t = this._mediaElement.currentTime = i, this._checkSeekingAudio(i))
                }
                this._currentRange.start = i,
                this._currentRange.end = r;
                var p = !this._mediaDataSource.isLive && r >= t + this._config.lazyLoadMaxDuration && r < this._duration,
                v = this._mediaDataSource.isLive && 0 < this._config.autoSpeedMaxDurationForLive && r >= t + this._config.autoSpeedMaxDurationForLive;
                if (!p && !v || this._mediaElement.seeking || this._edgeseeking || (this._suspendTransmuxer(), _.
            default.v(this.TAG, "Maximum buffering duration exceeded, suspend task currentTime " + t + "  buffered " + i + " to " + r)), v && r >= t + this._config.autoSeekDurationForLive && "flv" != this._mediaType && this._receivedCanPlay && this._frameDuration < .5) {
                    _.
                default.v(this.TAG, "_onmseUpdateEnd buffered.length " + e.length + " " + i + " to " + r);
                    var m = r - this._config.autoSpeedMaxDurationForLive;
                    this._mediaElement.currentTime = m,
                    _.
                default.v(this.TAG, "_onmseUpdateEnd seek " + t + " to " + m)
                }
            }
        }
    },
    {
        key: "_onmseBufferFull",
        value: function() {
            _.
        default.v(this.TAG, "MSE SourceBuffer is full, suspend task"),
            null != this._progressChecker || this._mediaElement.seeking || this._edgeseeking || this._suspendTransmuxer()
        }
    },
    {
        key: "_suspendTransmuxer",
        value: function() {
            this._transmuxer && (this._mediaDataSource.isLive ? this._mediaElement.playbackRate = "fmp4" === this._mediaType ? 1.75 : 1.25 : this._pauseStream(!0), null == this._progressChecker && (this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 500)))
        }
    },
    {
        key: "_pauseStream",
        value: function(e) {
            this._transmuxer && ("flv" === this._mediaType ? e ? this._transmuxer.pause() : this._transmuxer.resume() : "h5msflv" === this._mediaType ? this._h5msClient.pause(this._mediaDataSource.streamId, !!e, this._onPause.bind(this)) : this._transmuxer.sendcmd({
                type: "command",
                name: "Pause",
                param: {
                    value: e ? 1 : 0
                }
            }))
        }
    },
    {
        key: "_checkProgressAndResume",
        value: function() {
            for (var e = this._mediaElement.currentTime,
            t = this._mediaElement.buffered,
            i = !0,
            r = 0,
            n = 0; n < t.length; n++) {
                var s = t.start(n),
                a = t.end(n);
                if (s <= e && e < a) {
                    i = !!(!this._mediaDataSource.isLive && e >= a - this._config.lazyLoadRecoverDuration || this._mediaDataSource.isLive && e >= a - this._config.autoSpeedMinDurationForLive),
                    r = a;
                    break
                }
            }
            i || this._mediaElement.seeking || this._edgeseeking ? (window.clearInterval(this._progressChecker), this._progressChecker = null, i && (_.
        default.v(this.TAG, "Continue loading from paused position"), this._mediaDataSource.isLive ? this._mediaElement.playbackRate = 1 : this._pauseStream(!1))) : (this._mediaDataSource.isLive && r >= e + this._config.autoSeekDurationForLive && "flv" != this._mediaType && this._receivedCanPlay && this._frameDuration < .5 && (this._mediaElement.currentTime = r - this._config.autoSpeedMaxDurationForLive, _.
        default.v(this.TAG, "_checkProgressAndResume reset currentTime = " + this._mediaElement.currentTime)), this._mediaDataSource.isLive && (this._mediaElement.playbackRate = "fmp4" === this._mediaType ? 1.75 : 1.25))
        }
    },
    {
        key: "_isTimepointBuffered",
        value: function(e) {
            for (var t = this._mediaElement.buffered,
            i = 0; i < t.length; i++) {
                var r = t.start(i),
                n = t.end(i);
                if (r <= e && e < n) return ! 0
            }
            return ! 1
        }
    },
    {
        key: "_seekStream",
        value: function(e) {
            this._transmuxer && ("fmp4" === this._mediaType ? this._transmuxer.sendcmd({
                type: "command",
                name: "Seek",
                param: {
                    value: parseInt(1e3 * (e + this._playbackStreamOffset))
                }
            }) : "h5msflv" === this._mediaType ? (this._h5msClient.seek(this._mediaDataSource.streamId, parseInt(1e3 * (e + this._playbackStreamOffset)), this._onSeek.bind(this)), this._h5msClient.pause(this._mediaDataSource.streamId, !1)) : (this._msectl.seek(e), this._transmuxer.seek(Math.floor(1e3 * e)), this._config.accurateSeek && (this._requestSetTime = !0, this._mediaElement.currentTime = e)))
        }
    },
    {
        key: "_internalSeek",
        value: function(e) {
            if (! (e < 0 || isFinite(this._mediaElement.duration) && e > this._mediaElement.duration)) {
                this._seektime = e;
                var t = this._isTimepointBuffered(e),
                i = !1,
                r = 0;
                if (e < 1 && 0 < this._mediaElement.buffered.length) {
                    var n = this._mediaElement.buffered.start(0); (n < 1 && e < n || o.
                default.safari) && (i = !0, r = o.
                default.safari ? .1 : n)
                }
                if (i) this._requestSetTime = !0,
                this._mediaElement.currentTime = r;
                else if (t) {
                    if (this._alwaysSeekKeyframe) {
                        var s = this._msectl.getNearestKeyframe(Math.floor(1e3 * e));
                        this._requestSetTime = !0,
                        this._mediaElement.currentTime = null != s ? s.dts / 1e3: e
                    } else this._requestSetTime = !0,
                    this._mediaElement.currentTime = e,
                    _.
                default.v(this.TAG, "_internalSeek directSeek " + e);
                    null != this._progressChecker && this._checkProgressAndResume()
                } else this._edgeseeking = !0,
                this._edgeseeking,
                null != this._progressChecker && (window.clearInterval(this._progressChecker), this._progressChecker = null),
                this._seekTimeoutChecker && (clearTimeout(this._seekTimeoutChecker), this._seekTimeoutChecker = null),
                this._seekAudioChecker && (clearTimeout(this._seekAudioChecker), this._seekAudioChecker = null),
                console.log("_msectl seek " + e),
                this._seekStream(e);
                this._seekTimeoutChecker = window.setTimeout(this._checkSeekingTimeout.bind(this), 5e3)
            }
        }
    },
    {
        key: "_checkSeekingTimeout",
        value: function() {
            this._edgeseeking && (this._edgeseeking = !1, this._msectl.seekover())
        }
    },
    {
        key: "_checkSeekingAudio",
        value: function(e) {
            if (this._audioinit) {
                var t = this;
                this._seekAudioChecker = setTimeout(function() {
                    e == t._mediaElement.currentTime && (t._mediaElement.currentTime = e, console.log("_checkSeekingAudio  ", e))
                },
                300)
            }
        }
    },
    {
        key: "_checkAndApplyUnbufferedSeekpoint",
        value: function() {
            if (this._seekpointRecord) if (this._seekpointRecord.recordTime <= this._now() - 100) {
                var e = this._mediaElement.currentTime;
                this._seekpointRecord = null,
                this._isTimepointBuffered(e) || (null != this._progressChecker && (window.clearTimeout(this._progressChecker), this._progressChecker = null), _.
            default.v(this.TAG, "_checkAndApplyUnbufferedSeekpoint  msestreamseek " + e), this._seekStream(e))
            } else window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50)
        }
    },
    {
        key: "_checkAndResumeStuckPlayback",
        value: function(e) {
            if (!this._loadingComplete) {
                var t = this._mediaElement;
                if (e || !this._receivedCanPlay || t.readyState < 2) {
                    var i = t.buffered;
                    0 < i.length && t.currentTime < i.start(0) && (_.
                default.w(this.TAG, "Playback seems stuck at " + t.currentTime + ", seek to " + i.start(0)), this._requestSetTime = !0, this._mediaElement.currentTime = i.start(0), this._msectl.seekover(), this._checkSeekingAudio(i.start(0)), this._mediaElement.removeEventListener("progress", this.e.onvProgress))
                } else this._mediaElement.removeEventListener("progress", this.e.onvProgress)
            }
        }
    },
    {
        key: "_onvLoadedMetadata",
        value: function(e) {
            null != this._pendingSeekTime && (this._mediaElement.currentTime = this._pendingSeekTime, this._pendingSeekTime = null)
        }
    },
    {
        key: "_onvSeeking",
        value: function(e) {
            var t = this._mediaElement.currentTime,
            i = this._mediaElement.buffered;
            if (this._requestSetTime) this._requestSetTime = !1;
            else {
                if (t < 1 && 0 < i.length) {
                    var r = i.start(0);
                    if (r < 1 && t < r || o.
                default.safari) return this._requestSetTime = !0,
                    void(this._mediaElement.currentTime = o.
                default.safari ? .1 : r)
                }
                if (this._isTimepointBuffered(t)) {
                    if (this._alwaysSeekKeyframe) {
                        var n = this._msectl.getNearestKeyframe(Math.floor(1e3 * t));
                        null != n && (this._requestSetTime = !0, this._mediaElement.currentTime = n.dts / 1e3)
                    }
                    null != this._progressChecker && this._checkProgressAndResume()
                } else this._mediaDataSource.isLive || (this._seekpointRecord = {
                    seekPoint: t,
                    recordTime: this._now()
                },
                window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50))
            }
        }
    },
    {
        key: "_onvTimeUpdate",
        value: function(e) {
            null != this._progressChecker && this._checkProgressAndResume(),
            this._receivedCanPlay && 0 == this._edgeseeking && (this._emitter.emit(l.
        default.PLAYTIME, this._mediaElement.currentTime), this._callbacks && "function" == typeof this._callbacks.onplaytime && this._mediaElement && this._callbacks.onplaytime(this._mediaElement.currentTime))
        }
    },
    {
        key: "_onvCanPlay",
        value: function(e) { ! 1 === this._receivedCanPlay && (this._emitter.emit(l.
        default.FIRST_CANPLAY), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.FIRST_CANPLAY)),
            this._receivedCanPlay = !0,
            this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay)
        }
    },
    {
        key: "_onvStalled",
        value: function(e) {
            this._checkAndResumeStuckPlayback(!0)
        }
    },
    {
        key: "_onvProgress",
        value: function(e) {
            this._checkAndResumeStuckPlayback()
        }
    },
    {
        key: "_onvSeeked",
        value: function(e) {
            this._mediaDataSource.isLive || ("fmp4" != this._mediaType && this._edgeseeking && (this._edgeseeking = !1, this._msectl.seekover()), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(l.
        default.VIDEOSEEK, {
                error: 0,
                currentTime: this._mediaElement.currentTime
            }), this._emitter.emit(l.
        default.VIDEOSEEK, {
                error: 0,
                currentTime: this._mediaElement.currentTime
            }))
        }
    },
    {
        key: "_onvError",
        value: function(e) {
            var t = this._mediaElement.error.code ? this._mediaElement.error.code: e.code;
            this._emitter.emit(l.
        default.ERROR, f.ErrorTypes.MEDIA_ERROR, f.ErrorDetails.MEDIA_VIDEO_ERROR, {
                code: t
            }),
            this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(f.ErrorTypes.MEDIA_ERROR, f.ErrorDetails.MEDIA_VIDEO_ERROR, {
                code: t
            })
        }
    },
    {
        key: "_onvRateChange",
        value: function(e) {}
    },
    {
        key: "_setStreamRate",
        value: function(e, t) {
            if (!this._mediaDataSource.isLive && this._transmuxer) {
                var i = 0;
                i = e <= .25 ? t ? -2 : -1 : e <= .5 ? t ? -1 : 0 : e <= 1 ? t ? 0 : 1 : e <= 2 ? t ? 1 : 2 : e <= 4 ? t ? 2 : 3 : e <= 8 && t ? 3 : 4,
                this._transmuxer && "fmp4" === this._mediaType ? this._transmuxer.sendcmd({
                    type: "command",
                    name: "SetSpeed",
                    param: {
                        value: i
                    }
                }) : this._h5msClient && "h5msflv" === this._mediaType && this._h5msClient.setSpeed(this._mediaDataSource.streamId, i, this._onSetSpeed.bind(this))
            }
        }
    },
    {
        key: "type",
        get: function() {
            return this._type
        }
    },
    {
        key: "buffered",
        get: function() {
            return this._mediaElement.buffered
        }
    },
    {
        key: "duration",
        get: function() {
            return this._h5msClient && !isFinite(this._mediaElement.duration) && this._mediaDataSource.duration ? (this._duration = this._mediaDataSource.duration, this._duration) : (this._duration = this._mediaElement.duration, this._mediaElement.duration)
        }
    },
    {
        key: "volume",
        get: function() {
            return this._mediaElement.volume
        },
        set: function(e) {
            this._mediaElement.volume = e
        }
    },
    {
        key: "muted",
        get: function() {
            return this._mediaElement.muted
        },
        set: function(e) {
            this._mediaElement.muted = e,
            this._emitter.emit(l.
        default.VIDEOMUTED, this._mediaElement.muted)
        }
    },
    {
        key: "audioinit",
        get: function() {
            return this._audioinit
        }
    },
    {
        key: "currentTime",
        get: function() {
            return this._mediaElement ? isFinite(this._duration) ? this._mediaElement.currentTime > this._duration ? this._duration: this._edgeseeking ? this._seektime: this._mediaElement.currentTime: this._mediaElement.currentTime: 0
        },
        set: function(e) {
            if (!this._mediaDataSource.isLive) {
                if (this._wasmPlayer) return void this._seekStream(e);
                this._mediaElement && this._receivedCanPlay ? (this._beforSeekTime = this._mediaElement.currentTime, this._internalSeek(e)) : this._pendingSeekTime = e
            }
        }
    },
    {
        key: "receivedCanPlay",
        get: function() {
            return this._receivedCanPlay
        }
    },
    {
        key: "playbackRate",
        get: function() {
            return this._mediaElement ? this._mediaDataSource.isLive ? 1 : this._mediaElement.playbackRate: 0
        },
        set: function(e) {
            if (this._mediaElement) return this._mediaDataSource.isLive ? void 0 : (this._setStreamRate(e), this._mediaElement.playbackRate = 16 < e ? 16 : e)
        }
    },
    {
        key: "mediaInfo",
        get: function() {
            return this._mediaElement && (null == this._mediaInfo && (this._mediaInfo = {}), this._mediaInfo.duration = this._duration, this._mediaInfo.videoWidth = this._mediaElement.videoWidth, this._mediaInfo.videoHeight = this._mediaElement.videoHeight),
            Object.assign({},
            this._mediaInfo)
        }
    },
    {
        key: "frameDuration",
        get: function() {
            return this._frameDuration
        }
    },
    {
        key: "statisticsInfo",
        get: function() {
            return null == this._statisticsInfo && (this._statisticsInfo = {}),
            this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo),
            Object.assign({},
            this._statisticsInfo)
        }
    }]), y);
    function y(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, y),
        this.TAG = "FlvPlayer",
        this._type = "FlvPlayer",
        this._emitter = new a.
    default,
        this._mediaType = null,
        this._mediaDataSource = e,
        this._callbacks = null,
        "object" === r(e.callbacks) && (this._callbacks = e.callbacks),
        this._config = (0, p.createDefaultConfig)(),
        "object" === (void 0 === t ? "undefined": r(t)) && Object.assign(this._config, t),
        e.channelInfo && "live" === e.channelInfo.streamtype ? (this._mediaDataSource.isLive = !0, this._config.isLive = !0) : (this._mediaDataSource.channelInfo.streamtype = "vod", this._mediaDataSource.isLive = !1, this._config.isLive = !1),
        this._h5msClient = null;
        var i = e.channelInfo;
        1 == i.enableaudio || 1 == i.enableaudio || 1 == t.enableaudio || 1 == i.enableAudio || 1 == i.enableAudio || 1 == t.enableAudio ? (this._mediaDataSource.channelInfo._enableAudio = 1, this._config.enableaudio = !0) : (this._mediaDataSource.channelInfo._enableAudio = 0, this._config.enableaudio = !1),
        i && i.devicetype && "flv" === i.devicetype.toLowerCase() ? (Object.assign(this._mediaDataSource, e.channelInfo), this._mediaDataSource.mediaType = "flv", this._mediaType = "flv") : !e.h5msClient && e.url && e.streamId && "h5msflv" == e.mediaType ? this._mediaType = "h5msflv": !e.h5msClient || i.devicetype && "pfsfile" === i.devicetype.toLowerCase() && "npfs" != i.url.substring(0, 4).toLowerCase() ? (this._mediaDataSource.mediaType = "fmp4", this._mediaType = "fmp4") : (this._h5msClient = e.h5msClient, t || (this._config.autoSpeedMaxDurationForLive = 4, this._config.autoSpeedMinDurationForLive = 2, this._config.autoSeekDurationForLive = 6)),
        this.e = {
            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),
            onvSeeking: this._onvSeeking.bind(this),
            onvCanPlay: this._onvCanPlay.bind(this),
            onvStalled: this._onvStalled.bind(this),
            onvProgress: this._onvProgress.bind(this),
            onvError: this._onvError.bind(this),
            onvSeeked: this._onvSeeked.bind(this),
            onvRateChange: this._onvRateChange.bind(this),
            onvTimeUpdate: this._onvTimeUpdate.bind(this)
        },
        window.performance && window.performance.now ? this._now = window.performance.now.bind(window.performance) : this._now = Date.now,
        this._pendingSeekTime = null,
        this._requestSetTime = !1,
        this._seekpointRecord = null,
        this._progressChecker = null,
        this._beforSeekTime = -1,
        this._playbackStreamOffset = 0,
        this._mediaElement = null,
        this._msectl = null,
        this._transmuxer = null,
        this._mseSourceOpened = !1,
        this._hasPendingLoad = !1,
        this._receivedCanPlay = !1,
        this._mediaInfo = null,
        this._statisticsInfo = null,
        this._chromeNeedIDRFix = o.
    default.chrome && (o.
    default.version.major < 50 || 50 === o.
    default.version.major && o.
    default.version.build < 2661),
        this._alwaysSeekKeyframe = !(!(this._chromeNeedIDRFix || o.
    default.msedge || o.
    default.msie) || "flv" !== this._mediaType),
        this._checkseeking = !!(this._chromeNeedIDRFix || o.
    default.msedge || o.
    default.msie),
        this._alwaysSeekKeyframe ? this._config.accurateSeek = !1 : this._config.accurateSeek = !0,
        this._mediaDataSource.channelInfo.fixiframe = !!this._chromeNeedIDRFix,
        this._currentRange = null,
        this._duration = 0,
        this._edgeseeking = !1,
        this._seektime = 0,
        this._loadingComplete = !1,
        this._frameDuration = .04,
        this._wasmPlayer = !1,
        this._audioinit = !1,
        this._seekTimeoutChecker = null,
        this._seekAudioChecker = null
    }
    t.
default = g
},
function(e, t, l) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    };
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var u = s(l(347)),
    h = s(l(346)),
    d = s(l(358)),
    c = s(l(359)),
    f = s(l(379)),
    n = s(l(360)),
    p = s(l(380));
    function s(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var a = (i(v, [{
        key: "destroy",
        value: function() {
            this._worker ? this._workerDestroying || (this._workerDestroying = !0, this._worker.postMessage({
                cmd: "destroy"
            }), d.
        default.removeListener(this.e.onLoggingConfigChanged), this.e = null) : (this._controller.destroy(), this._controller = null),
            this._protobufworker && (this._protobufDestroy || (this._protobufDestroy = !0, this._protobufworker.postMessage({
                cmd: "destroy"
            })), this.e && (d.
        default.removeListener(this.e.onLoggingConfigChanged), this.e = null)),
            this._emitter.removeAllListeners(),
            this._emitter = null
        }
    },
    {
        key: "on",
        value: function(e, t) {
            this._emitter.addListener(e, t)
        }
    },
    {
        key: "off",
        value: function(e, t) {
            this._emitter.removeListener(e, t)
        }
    },
    {
        key: "hasWorker",
        value: function() {
            return null != this._worker
        }
    },
    {
        key: "open",
        value: function() {
            this._worker ? this._worker.postMessage({
                cmd: "start"
            }) : this._controller.start()
        }
    },
    {
        key: "close",
        value: function() {
            this._worker ? this._worker.postMessage({
                cmd: "stop"
            }) : this._controller.stop()
        }
    },
    {
        key: "sendcmd",
        value: function(e) {
            this._worker ? this._worker.postMessage({
                cmd: "sendcmd",
                param: e
            }) : this._controller.sendcmd(e)
        }
    },
    {
        key: "seek",
        value: function(e) {
            this._worker ? this._worker.postMessage({
                cmd: "seek",
                param: e
            }) : this._controller.seek(e)
        }
    },
    {
        key: "pause",
        value: function() {
            this._worker ? this._worker.postMessage({
                cmd: "pause"
            }) : this._controller.pause()
        }
    },
    {
        key: "resume",
        value: function() {
            this._worker ? this._worker.postMessage({
                cmd: "resume"
            }) : this._controller.resume()
        }
    },
    {
        key: "_onCommandResponse",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.COMMAND_RESPONSE, e)
            })
        }
    },
    {
        key: "_onInitSegment",
        value: function(e, t) {
            var i = this;
            this._emitter && Promise.resolve().then(function() {
                i._emitter.emit(f.
            default.INIT_SEGMENT, e, t)
            })
        }
    },
    {
        key: "_onMediaSegment",
        value: function(e, t) {
            var i = this;
            this._emitter && Promise.resolve().then(function() {
                i._emitter.emit(f.
            default.MEDIA_SEGMENT, e, t)
            })
        }
    },
    {
        key: "_onLoadingComplete",
        value: function() {
            var e = this;
            this._emitter && Promise.resolve().then(function() {
                e._emitter.emit(f.
            default.LOADING_COMPLETE)
            })
        }
    },
    {
        key: "_onRecoveredEarlyEof",
        value: function() {
            var e = this;
            this._emitter && Promise.resolve().then(function() {
                e._emitter.emit(f.
            default.RECOVERED_EARLY_EOF)
            })
        }
    },
    {
        key: "_onMediaInfo",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.MEDIA_INFO, e)
            })
        }
    },
    {
        key: "_onMetaDataArrived",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.METADATA_ARRIVED, e)
            })
        }
    },
    {
        key: "_onScriptDataArrived",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.SCRIPTDATA_ARRIVED, e)
            })
        }
    },
    {
        key: "_onStatisticsInfo",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.STATISTICS_INFO, e)
            })
        }
    },
    {
        key: "_onEsDataArrived",
        value: function(e, t) {
            var i = this;
            this._emitter && Promise.resolve().then(function() {
                i._emitter.emit(f.
            default.ESDATA_ARRIVED, e, t)
            })
        }
    },
    {
        key: "_onObjectInfoDataArrived",
        value: function(e) {
            this._protobufworker && this._protobufInit && this._protobufworker.postMessage({
                cmd: "input",
                param: e
            },
            [e.data.buffer])
        }
    },
    {
        key: "_onWorkerProtobufMessage",
        value: function(e) {
            var t = e.data,
            i = t.data;
            if ("destroyed" === t.msg || this._protobufDestroy) return this._protobufDestroy = !1,
            this._protobufworker.terminate(),
            void(this._protobufworker = null);
            if (this._emitter) switch (t.msg) {
            case "output":
                var r = {
                    type: "objectinfo",
                    pts: i.pts,
                    index: i.index,
                    objects: i.objects
                };
                this._emitter.emit(f.
            default.COMMAND_RESPONSE, r);
                break;
            case "init":
                this._protobufInit = !0;
            case "logcat_callback":
                h.
            default.emitter.emit("log", i.type, i.logcat)
            }
        }
    },
    {
        key: "_onEsScriptDataArrived",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.ESSCRIPTDATA_ARRIVED, e)
            })
        }
    },
    {
        key: "_onIOError",
        value: function(e, t) {
            var i = this;
            this._emitter && Promise.resolve().then(function() {
                i._emitter.emit(f.
            default.IO_ERROR, e, t)
            })
        }
    },
    {
        key: "_onDemuxError",
        value: function(e, t) {
            var i = this;
            this._emitter && Promise.resolve().then(function() {
                i._emitter.emit(f.
            default.DEMUX_ERROR, e, t)
            })
        }
    },
    {
        key: "_onRecommendSeekpoint",
        value: function(e) {
            var t = this;
            this._emitter && Promise.resolve().then(function() {
                t._emitter.emit(f.
            default.RECOMMEND_SEEKPOINT, e)
            })
        }
    },
    {
        key: "_onLoggingConfigChanged",
        value: function(e) {
            this._worker && this._worker.postMessage({
                cmd: "logging_config",
                param: e
            }),
            this._protobufworker && this._protobufworker.postMessage({
                cmd: "logging_config",
                param: e
            })
        }
    },
    {
        key: "_onWorkerMessage",
        value: function(e) {
            var t = e.data,
            i = t.data;
            if ("destroyed" === t.msg || this._workerDestroying) return this._workerDestroying = !1,
            this._worker.terminate(),
            void(this._worker = null);
            if (this._emitter) switch (t.msg) {
            case f.
            default.INIT_SEGMENT:
            case f.
            default.MEDIA_SEGMENT:
            case f.
            default.ESDATA_ARRIVED:
                this._emitter.emit(t.msg, i.type, i.data);
                break;
            case f.
            default.ESSCRIPTDATA_ARRIVED:
                this._emitter.emit(t.msg, i);
                break;
            case f.
            default.LOADING_COMPLETE:
            case f.
            default.RECOVERED_EARLY_EOF:
                this._emitter.emit(t.msg);
                break;
            case f.
            default.MEDIA_INFO:
                Object.setPrototypeOf(i, n.
            default.prototype),
                this._emitter.emit(t.msg, i);
                break;
            case f.
            default.METADATA_ARRIVED:
            case f.
            default.SCRIPTDATA_ARRIVED:
            case f.
            default.STATISTICS_INFO:
            case f.
            default.COMMAND_RESPONSE:
                this._emitter.emit(t.msg, i);
                break;
            case f.
            default.IO_ERROR:
            case f.
            default.DEMUX_ERROR:
                this._emitter.emit(t.msg, i.type, i.info);
                break;
            case f.
            default.RECOMMEND_SEEKPOINT:
                this._emitter.emit(t.msg, i);
                break;
            case "logcat_callback":
                h.
            default.emitter.emit("log", i.type, i.logcat);
                break;
            case f.
            default.OBJECTINFODATA_ARRIVED:
                this._onObjectInfoDataArrived(i)
            }
        }
    }]), v);
    function v(t, i) {
        if (function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, v), this.TAG = "Transmuxer", this._emitter = new u.
    default, this._mediaType = t.mediaType ? t.mediaType.toLowerCase() : "", "fmp4" !== this._mediaType && t.channelInfo && 1 == t.channelInfo.frametype && "undefined" != typeof Worker) try {
            var e = l(381),
            r = this._protobufworker = e(382);
            this._protobufDestroy = !1,
            r.addEventListener("message", this._onWorkerProtobufMessage.bind(this)),
            r.onerror = function(e) {},
            this._protobufInit = !1,
            r.postMessage({
                cmd: "init",
                param: {
                    path: p.
                default.rPath
                }
            }),
            this.e && this.e.onLoggingConfigChanged || (this.e = {
                onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)
            })
        } catch(e) {
            h.
        default.e(this.TAG, "Error while initialize protobuf worker, cannot show ObjectInfos"),
            this._protobufworker = null
        }
        if (t._objectInfoData = null != this._protobufworker, i.enableWorker && "undefined" != typeof Worker && "fmp4" !== this._mediaType || i.enableWorkerFmp4 && "fmp4" == this._mediaType) try {
            var n = l(381),
            s = this._worker = n(389);
            this._workerDestroying = !1,
            s.addEventListener("message", this._onWorkerMessage.bind(this)),
            s.onerror = function(e) {};
            var a = {};
            Object.assign(a, t),
            delete a.callbacks,
            delete a.h5msClient,
            s.postMessage({
                cmd: "init",
                param: [a, i]
            }),
            this.e = {
                onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)
            },
            d.
        default.registerListener(this.e.onLoggingConfigChanged),
            s.postMessage({
                cmd: "logging_config",
                param: d.
            default.getConfig()
            })
        } catch(e) {
            h.
        default.e(this.TAG, "Error while initialize transmuxing worker, fallback to inline transmuxing"),
            this._worker = null,
            this._controller = new c.
        default(t, i)
        } else this._controller = new c.
    default(t, i);
        if (this._controller) {
            var o = this._controller;
            o.on(f.
        default.IO_ERROR, this._onIOError.bind(this)),
            o.on(f.
        default.DEMUX_ERROR, this._onDemuxError.bind(this)),
            o.on(f.
        default.INIT_SEGMENT, this._onInitSegment.bind(this)),
            o.on(f.
        default.MEDIA_SEGMENT, this._onMediaSegment.bind(this)),
            o.on(f.
        default.LOADING_COMPLETE, this._onLoadingComplete.bind(this)),
            o.on(f.
        default.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this)),
            o.on(f.
        default.MEDIA_INFO, this._onMediaInfo.bind(this)),
            o.on(f.
        default.METADATA_ARRIVED, this._onMetaDataArrived.bind(this)),
            o.on(f.
        default.SCRIPTDATA_ARRIVED, this._onScriptDataArrived.bind(this)),
            o.on(f.
        default.STATISTICS_INFO, this._onStatisticsInfo.bind(this)),
            o.on(f.
        default.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this)),
            o.on(f.
        default.COMMAND_RESPONSE, this._onCommandResponse.bind(this)),
            o.on(f.
        default.ESDATA_ARRIVED, this._onEsDataArrived.bind(this)),
            o.on(f.
        default.ESSCRIPTDATA_ARRIVED, this._onEsScriptDataArrived.bind(this)),
            o.on(f.
        default.OBJECTINFODATA_ARRIVED, this._onObjectInfoDataArrived.bind(this))
        }
    }
    t.
default = a
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = o(i(347)),
    a = o(i(346));
    function o(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var l = (r(u, null, [{
        key: "getConfig",
        value: function() {
            return {
                globalTag: a.
            default.GLOBAL_TAG,
                forceGlobalTag: a.
            default.FORCE_GLOBAL_TAG,
                enableVerbose: a.
            default.ENABLE_VERBOSE,
                enableDebug: a.
            default.ENABLE_DEBUG,
                enableInfo: a.
            default.ENABLE_INFO,
                enableWarn: a.
            default.ENABLE_WARN,
                enableError: a.
            default.ENABLE_ERROR,
                enableCallback: a.
            default.ENABLE_CALLBACK
            }
        }
    },
    {
        key: "applyConfig",
        value: function(e) {
            a.
        default.GLOBAL_TAG = e.globalTag,
            a.
        default.FORCE_GLOBAL_TAG = e.forceGlobalTag,
            a.
        default.ENABLE_VERBOSE = e.enableVerbose,
            a.
        default.ENABLE_DEBUG = e.enableDebug,
            a.
        default.ENABLE_INFO = e.enableInfo,
            a.
        default.ENABLE_WARN = e.enableWarn,
            a.
        default.ENABLE_ERROR = e.enableError,
            a.
        default.ENABLE_CALLBACK = e.enableCallback
        }
    },
    {
        key: "_notifyChange",
        value: function() {
            var e = u.emitter;
            if (0 < e.listenerCount("change")) {
                var t = u.getConfig();
                e.emit("change", t)
            }
        }
    },
    {
        key: "registerListener",
        value: function(e) {
            u.emitter.addListener("change", e)
        }
    },
    {
        key: "removeListener",
        value: function(e) {
            u.emitter.removeListener("change", e)
        }
    },
    {
        key: "addLogListener",
        value: function(e) {
            a.
        default.emitter.addListener("log", e),
            0 < a.
        default.emitter.listenerCount("log") && (a.
        default.ENABLE_CALLBACK = !0, u._notifyChange())
        }
    },
    {
        key: "removeLogListener",
        value: function(e) {
            a.
        default.emitter.removeListener("log", e),
            0 === a.
        default.emitter.listenerCount("log") && (a.
        default.ENABLE_CALLBACK = !1, u._notifyChange())
        }
    },
    {
        key: "forceGlobalTag",
        get: function() {
            return a.
        default.FORCE_GLOBAL_TAG
        },
        set: function(e) {
            a.
        default.FORCE_GLOBAL_TAG = e,
            u._notifyChange()
        }
    },
    {
        key: "globalTag",
        get: function() {
            return a.
        default.GLOBAL_TAG
        },
        set: function(e) {
            a.
        default.GLOBAL_TAG = e,
            u._notifyChange()
        }
    },
    {
        key: "enableAll",
        get: function() {
            return a.
        default.ENABLE_VERBOSE && a.
        default.ENABLE_DEBUG && a.
        default.ENABLE_INFO && a.
        default.ENABLE_WARN && a.
        default.ENABLE_ERROR
        },
        set: function(e) {
            a.
        default.ENABLE_VERBOSE = e,
            a.
        default.ENABLE_DEBUG = e,
            a.
        default.ENABLE_INFO = e,
            a.
        default.ENABLE_WARN = e,
            a.
        default.ENABLE_ERROR = e,
            u._notifyChange()
        }
    },
    {
        key: "enableDebug",
        get: function() {
            return a.
        default.ENABLE_DEBUG
        },
        set: function(e) {
            a.
        default.ENABLE_DEBUG = e,
            u._notifyChange()
        }
    },
    {
        key: "enableVerbose",
        get: function() {
            return a.
        default.ENABLE_VERBOSE
        },
        set: function(e) {
            a.
        default.ENABLE_VERBOSE = e,
            u._notifyChange()
        }
    },
    {
        key: "enableInfo",
        get: function() {
            return a.
        default.ENABLE_INFO
        },
        set: function(e) {
            a.
        default.ENABLE_INFO = e,
            u._notifyChange()
        }
    },
    {
        key: "enableWarn",
        get: function() {
            return a.
        default.ENABLE_WARN
        },
        set: function(e) {
            a.
        default.ENABLE_WARN = e,
            u._notifyChange()
        }
    },
    {
        key: "enableError",
        get: function() {
            return a.
        default.ENABLE_ERROR
        },
        set: function(e) {
            a.
        default.ENABLE_ERROR = e,
            u._notifyChange()
        }
    }]), u);
    function u() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, u)
    }
    l.emitter = new s.
default,
    t.
default = l
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = v(i(347)),
    a = v(i(346)),
    o = v(i(355)),
    l = v(i(360)),
    u = v(i(361)),
    h = v(i(366)),
    d = v(i(353)),
    c = v(i(370)),
    f = v(i(379)),
    p = i(351);
    function v(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var m = (r(_, [{
        key: "destroy",
        value: function() {
            this._mediaInfo = null,
            this._mediaDataSource = null,
            this._statisticsReporter && this._disableStatisticsReporter(),
            this._ioctl && (this._ioctl.destroy(), this._ioctl = null),
            this._demuxer && (this._demuxer.destroy(), this._demuxer = null),
            this._remuxer && (this._remuxer.destroy(), this._remuxer = null),
            this._emitter.removeAllListeners(),
            this._emitter = null
        }
    },
    {
        key: "on",
        value: function(e, t) {
            this._emitter.addListener(e, t)
        }
    },
    {
        key: "off",
        value: function(e, t) {
            this._emitter.removeListener(e, t)
        }
    },
    {
        key: "start",
        value: function() {
            this._loadSegment(0),
            this._enableStatisticsReporter()
        }
    },
    {
        key: "_loadSegment",
        value: function(e, t) {
            this._currentSegmentIndex = e;
            var i = this._mediaDataSource.segments[e],
            r = this._ioctl = new c.
        default(i, this._config, e);
            r.onError = this._onIOException.bind(this),
            r.onSeeked = this._onIOSeeked.bind(this),
            r.onComplete = this._onIOComplete.bind(this),
            r.onRedirect = this._onIORedirect.bind(this),
            r.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this),
            "fmp4" == this._mediaType ? r.onDataArrival = this._onInitDataFmp4Arrival.bind(this) : null != t ? this._demuxer.bindDataSource(this._ioctl) : r.onDataArrival = this._onInitChunkArrival.bind(this),
            r.onCommand = this._onCmdResponse.bind(this),
            r.open(t)
        }
    },
    {
        key: "stop",
        value: function() {
            this._internalAbort(),
            this._disableStatisticsReporter()
        }
    },
    {
        key: "_internalAbort",
        value: function() {
            this._ioctl && (this._ioctl.destroy(), this._ioctl = null)
        }
    },
    {
        key: "pause",
        value: function() {
            this._ioctl && this._ioctl.isWorking() && this._ioctl.pause()
        }
    },
    {
        key: "resume",
        value: function() {
            this._ioctl && this._ioctl.isPaused() && this._ioctl.resume()
        }
    },
    {
        key: "seek",
        value: function(e) {
            if ("h5msflv" !== this._mediaType && null != this._mediaInfo && this._mediaInfo.isSeekable()) {
                var t = this._searchSegmentIndexContains(e);
                if (t === this._currentSegmentIndex) {
                    var i = this._mediaInfo.segments[t];
                    if (null == i) this._pendingSeekTime = e;
                    else {
                        var r = i.getNearestKeyframe(e);
                        this._remuxer.seek(r.milliseconds),
                        this._ioctl.seek(r.fileposition),
                        this._pendingResolveSeekPoint = r.milliseconds
                    }
                } else {
                    var n = this._mediaInfo.segments[t];
                    if (null == n) this._pendingSeekTime = e,
                    this._internalAbort(),
                    this._remuxer.seek(),
                    this._remuxer.insertDiscontinuity(),
                    this._loadSegment(t);
                    else {
                        var s = n.getNearestKeyframe(e);
                        this._internalAbort(),
                        this._remuxer.seek(e),
                        this._remuxer.insertDiscontinuity(),
                        this._demuxer.resetMediaInfo(),
                        this._demuxer.timestampBase = this._mediaDataSource.segments[t].timestampBase,
                        this._loadSegment(t, s.fileposition),
                        this._pendingResolveSeekPoint = s.milliseconds,
                        this._reportSegmentMediaInfo(t)
                    }
                }
            }
        }
    },
    {
        key: "_searchSegmentIndexContains",
        value: function(e) {
            for (var t = this._mediaDataSource.segments,
            i = t.length - 1,
            r = 0; r < t.length; r++) if (e < t[r].timestampBase) {
                i = r - 1;
                break
            }
            return i
        }
    },
    {
        key: "sendcmd",
        value: function(e) {
            this._ioctl && this._ioctl.isWorking() && this._ioctl.sendcmd(e)
        }
    },
    {
        key: "_onInitChunkArrival",
        value: function(e, t) {
            var i = this,
            r = null,
            n = 0;
            if (0 < t && this._demuxer) this._demuxer.bindDataSource(this._ioctl),
            this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase,
            n = this._demuxer.parseChunks(e, t);
            else if ((r = u.
        default.probe(e)).match) {
                this._demuxer = new u.
            default(r, this._config),
                this._remuxer || ("flv" != this._mediaType && (this._config.isLive = !0), this._remuxer = new h.
            default(this._config));
                var s = this._mediaDataSource;
                null == s.duration || isNaN(s.duration) || (this._demuxer.overridedDuration = s.duration),
                "boolean" == typeof s.hasAudio && (this._demuxer.overridedHasAudio = s.hasAudio),
                "boolean" == typeof s.hasVideo && (this._demuxer.overridedHasVideo = s.hasVideo),
                this._demuxer.timestampBase = s.segments[this._currentSegmentIndex].timestampBase,
                this._demuxer.onError = this._onDemuxException.bind(this),
                this._demuxer.onMediaInfo = this._onMediaInfo.bind(this),
                this._demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this),
                this._demuxer.onScriptDataArrived = this._onScriptDataArrived.bind(this),
                this._demuxer.onGetFrameDuration = this._onGetFrameDuration.bind(this),
                this._remuxer.bindDataSource(this._demuxer.bindDataSource(this._ioctl)),
                this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this),
                this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this),
                this._demuxer.onEsDataArrived = this._onEsDataArrived.bind(this),
                this._mediaDataSource._objectInfoData && (this._demuxer.onObjectDataArrived = this._onObjectDataArrived.bind(this)),
                n = this._demuxer.parseChunks(e, t)
            } else r = null,
            a.
        default.e(this.TAG, "Non-FLV, Unsupported media type!"),
            Promise.resolve().then(function() {
                i._internalAbort()
            }),
            this._emitter.emit(f.
        default.DEMUX_ERROR, d.
        default.FORMAT_UNSUPPORTED, "Non-FLV, Unsupported media type"),
            n = 0;
            return n
        }
    },
    {
        key: "_onMediaInfo",
        value: function(e) {
            var t = this;
            null == this._mediaInfo && (this._mediaInfo = Object.assign({},
            e), this._mediaInfo.keyframesIndex = null, this._mediaInfo.segments = [], this._mediaInfo.segmentCount = this._mediaDataSource.segments.length, Object.setPrototypeOf(this._mediaInfo, l.
        default.prototype));
            var i = Object.assign({},
            e);
            Object.setPrototypeOf(i, l.
        default.prototype),
            this._mediaInfo.segments[this._currentSegmentIndex] = i,
            this._reportSegmentMediaInfo(this._currentSegmentIndex),
            null != this._pendingSeekTime && Promise.resolve().then(function() {
                var e = t._pendingSeekTime;
                t._pendingSeekTime = null,
                t.seek(e)
            })
        }
    },
    {
        key: "_onMetaDataArrived",
        value: function(e) {
            this._emitter.emit(f.
        default.METADATA_ARRIVED, e)
        }
    },
    {
        key: "_onScriptDataArrived",
        value: function(e) {
            this._emitter.emit(f.
        default.SCRIPTDATA_ARRIVED, e)
        }
    },
    {
        key: "_onGetFrameDuration",
        value: function(e, t) {
            this._emitter.emit(f.
        default.SCRIPTDATA_ARRIVED, {
                frameDuration: t / 1e3,
                type: e
            })
        }
    },
    {
        key: "_onIOSeeked",
        value: function() {
            this._remuxer.insertDiscontinuity()
        }
    },
    {
        key: "_onIOComplete",
        value: function(e) {
            if ("fmp4" !== this._mediaType) {
                var t = e + 1;
                t < this._mediaDataSource.segments.length ? (this._internalAbort(), this._remuxer && this._remuxer.flushStashedSamples(), this._loadSegment(t)) : (this._remuxer && this._remuxer.flushStashedSamples(), this._emitter.emit(f.
            default.LOADING_COMPLETE))
            } else this._emitter.emit(f.
        default.LOADING_COMPLETE)
        }
    },
    {
        key: "_onIORedirect",
        value: function(e) {
            var t = this._ioctl.extraData;
            this._mediaDataSource.segments[t].redirectedURL = e
        }
    },
    {
        key: "_onIORecoveredEarlyEof",
        value: function() {
            this._emitter.emit(f.
        default.RECOVERED_EARLY_EOF)
        }
    },
    {
        key: "_onCmdResponse",
        value: function(e) {
            this._emitter.emit(f.
        default.COMMAND_RESPONSE, e);
            var t = JSON.parse(e);
            "encodeType" === t.type && ("po_se" == t.name ? (this._ioctl.onDataArrival = this._onDataPoEsArrival.bind(this), this._emitter.emit(f.
        default.ESSCRIPTDATA_ARRIVED, t), this._init = {
                video: !1,
                audio: !1
            }) : "fmp4" == t.name ? this._ioctl.onDataArrival = this._onInitDataFmp4Arrival.bind(this) : "pcm_se" == t.name && (console.log("_onCmdResponse to pcm"), this._ioctl.onDataArrival = this._onDataPcmEsArrival.bind(this), this._emitter.emit(f.
        default.ESSCRIPTDATA_ARRIVED, t), this._init = {
                video: !1,
                audio: !1
            }))
        }
    },
    {
        key: "_onIOException",
        value: function(e, t) {
            if (a.
        default.e(this.TAG, "IOException: type = " + e + ", code = " + t.code + ", msg = " + t.msg), "h5msflv" == this.mediaType && (e == p.LoaderErrors.UNRECOVERABLE_EARLY_EOF || e == p.LoaderErrors.EARLY_EOF)) return this.seek(),
            void a.
        default.w(this.TAG, "IOException: type = " + e + ", msg = " + t.msg + ", Connecting...");
            this._emitter && this._emitter.emit(f.
        default.IO_ERROR, e, t)
        }
    },
    {
        key: "_onDataPoEsArrival",
        value: function(e) {
            if (! (e.byteLength < 6)) {
                var t = new Uint8Array(e, 0, 5);
                if (65 !== t[0] || 85 !== t[1] || 68 !== t[2] || 73 !== t[3] || 79 !== t[4]) {
                    var i = new Uint8Array(e, 6),
                    r = new Uint8Array(e, 0, 6),
                    n = {
                        codecId: r[0],
                        pts: r[2] | r[3] << 8 | r[4] << 16 | r[5] << 24,
                        frameType: r[1],
                        data: i
                    };
                    this._emitter.emit(f.
                default.ESDATA_ARRIVED, "video", n)
                }
            }
        }
    },
    {
        key: "_onDataPcmEsArrival",
        value: function(e) {
            var t = {
                codecId: 0,
                data: new Uint8Array(e)
            };
            this._emitter.emit(f.
        default.ESDATA_ARRIVED, "audio", t)
        }
    },
    {
        key: "_onInitDataFmp4Arrival",
        value: function(e) {
            var t = new Uint8Array(e, 0, 5);
            if (65 !== t[0] || 85 !== t[1] || 68 !== t[2] || 73 !== t[3] || 79 !== t[4]) this._init.video ? this._emitter.emit(f.
        default.MEDIA_SEGMENT, "video", {
                type: "video",
                data: e
            }) : (this._emitter.emit(f.
        default.INIT_SEGMENT, "video", {
                type: "video",
                data: e,
                container: "video/mp4",
                codec: "avc1.4D4028"
            }), this._init.video = !0);
            else {
                var i = new Uint8Array(e.byteLength - 5),
                r = new Uint8Array(e, 5);
                i.set(r),
                this._init.audio ? this._emitter.emit(f.
            default.MEDIA_SEGMENT, "audio", {
                    type: "audio",
                    data: i.buffer
                }) : (this._emitter.emit(f.
            default.INIT_SEGMENT, "audio", {
                    type: "audio",
                    data: i.buffer,
                    codec: "mp4a.40.5",
                    container: "audio/mp4"
                }), this._init.audio = !0)
            }
        }
    },
    {
        key: "_onDataFmp4Arrival",
        value: function(e) {
            this._emitter.emit(f.
        default.MEDIA_SEGMENT, "video", {
                type: "video",
                data: e
            })
        }
    },
    {
        key: "_onDemuxException",
        value: function(e, t) {
            a.
        default.e(this.TAG, "DemuxException: type = " + e + ", info = " + t),
            this._emitter.emit(f.
        default.DEMUX_ERROR, e, t)
        }
    },
    {
        key: "_onRemuxerInitSegmentArrival",
        value: function(e, t) {
            console.log("_onRemuxerInitSegmentArrival: ", e, t),
            this._emitter.emit(f.
        default.INIT_SEGMENT, e, t)
        }
    },
    {
        key: "_onRemuxerMediaSegmentArrival",
        value: function(e, t) {
            if (null == this._pendingSeekTime && (this._emitter.emit(f.
        default.MEDIA_SEGMENT, e, t), null != this._pendingResolveSeekPoint && "video" === e)) {
                var i = t.info.syncPoints,
                r = this._pendingResolveSeekPoint;
                this._pendingResolveSeekPoint = null,
                o.
            default.safari && 0 < i.length && i[0].originalDts === r && (r = i[0].pts),
                this._emitter.emit(f.
            default.RECOMMEND_SEEKPOINT, r)
            }
        }
    },
    {
        key: "_onEsDataArrived",
        value: function(e, t) {
            var i = new Uint8Array(t.data);
            t.data = i,
            this._emitter.emit(f.
        default.ESDATA_ARRIVED, e, t)
        }
    },
    {
        key: "_onObjectDataArrived",
        value: function(e) {
            var t = new Uint8Array(e.data);
            e.data = t,
            this._emitter.emit(f.
        default.OBJECTINFODATA_ARRIVED, e)
        }
    },
    {
        key: "_enableStatisticsReporter",
        value: function() {
            null == this._statisticsReporter && (this._statisticsReporter = self.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval))
        }
    },
    {
        key: "_disableStatisticsReporter",
        value: function() {
            this._statisticsReporter && (self.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
        }
    },
    {
        key: "_reportSegmentMediaInfo",
        value: function(e) {
            var t = this._mediaInfo.segments[e],
            i = Object.assign({},
            t);
            i.duration = this._mediaInfo.duration,
            i.segmentCount = this._mediaInfo.segmentCount,
            delete i.segments,
            delete i.keyframesIndex,
            this._emitter.emit(f.
        default.MEDIA_INFO, i)
        }
    },
    {
        key: "_reportStatisticsInfo",
        value: function() {
            var e = {};
            this._ioctl ? (e.url = this._ioctl.currentURL, e.hasRedirect = this._ioctl.hasRedirect, e.hasRedirect && (e.redirectedURL = this._ioctl.currentRedirectedURL), e.dataRate = this._ioctl.currentSpeed, e.loaderType = this._ioctl.loaderType) : e.dataRate = 0,
            e.currentSegmentIndex = this._currentSegmentIndex,
            e.totalSegmentCount = this._mediaDataSource.segments.length,
            this._emitter.emit(f.
        default.STATISTICS_INFO, e)
        }
    }]), _);
    function _(t, i) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, _),
        this.TAG = "TransmuxingController",
        this._emitter = new s.
    default,
        this._config = {},
        Object.assign(this._config, i),
        t.segments || (t.segments = [{
            url: t.url,
            channelInfo: t.channelInfo,
            mediaType: t.mediaType,
            duration: t.duration,
            filesize: t.filesize
        }]),
        "boolean" != typeof t.cors && (t.cors = !0),
        "boolean" != typeof t.withCredentials && (t.withCredentials = !1),
        this._mediaType = t.mediaType.toLowerCase(),
        this._mediaDataSource = t;
        var r = this._currentSegmentIndex = 0;
        this._mediaDataSource.segments.forEach(function(e) {
            e.timestampBase = r,
            r += e.duration,
            e.cors = t.cors,
            e.withCredentials = t.withCredentials,
            i.referrerPolicy && (e.referrerPolicy = i.referrerPolicy)
        }),
        isNaN(r) || this._mediaDataSource.duration === r || (this._mediaDataSource.duration = r),
        this._mediaInfo = null,
        this._demuxer = null,
        this._remuxer = null,
        this._ioctl = null,
        this._pendingSeekTime = null,
        this._pendingResolveSeekPoint = null,
        this._statisticsReporter = null,
        this._init = {
            video: !1,
            audio: !1
        }
    }
    t.
default = m
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "isComplete",
        value: function() {
            var e = !1 === this.hasAudio || !0 === this.hasAudio && null != this.audioCodec && null != this.audioSampleRate && null != this.audioChannelCount,
            t = !1 === this.hasVideo || !0 === this.hasVideo && null != this.videoCodec && null != this.width && null != this.height && null != this.fps && null != this.profile && null != this.level && null != this.refFrames && null != this.chromaFormat && null != this.sarNum && null != this.sarDen;
            return null != this.mimeType && null != this.duration && null != this.metadata && null != this.hasKeyframesIndex && e && t
        }
    },
    {
        key: "isSeekable",
        value: function() {
            return ! 0 === this.hasKeyframesIndex
        }
    },
    {
        key: "getNearestKeyframe",
        value: function(e) {
            if (null == this.keyframesIndex) return null;
            var t = this.keyframesIndex,
            i = this._search(t.times, e);
            return {
                index: i,
                milliseconds: t.times[i],
                fileposition: t.filepositions[i]
            }
        }
    },
    {
        key: "_search",
        value: function(e, t) {
            var i = 0,
            r = e.length - 1,
            n = 0,
            s = 0,
            a = r;
            for (t < e[0] && (i = 0, s = a + 1); s <= a;) {
                if ((n = s + Math.floor((a - s) / 2)) === r || t >= e[n] && t < e[n + 1]) {
                    i = n;
                    break
                }
                e[n] < t ? s = n + 1 : a = n - 1
            }
            return i
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s),
        this.mimeType = null,
        this.duration = null,
        this.hasAudio = null,
        this.hasVideo = null,
        this.audioCodec = null,
        this.videoCodec = null,
        this.audioDataRate = null,
        this.videoDataRate = null,
        this.audioSampleRate = null,
        this.audioChannelCount = null,
        this.width = null,
        this.height = null,
        this.fps = null,
        this.profile = null,
        this.level = null,
        this.refFrames = null,
        this.chromaFormat = null,
        this.sarNum = null,
        this.sarDen = null,
        this.metadata = null,
        this.segments = null,
        this.segmentCount = null,
        this.hasKeyframesIndex = null,
        this.keyframesIndex = null
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var I = a(i(346)),
    h = a(i(362)),
    T = a(i(364)),
    A = a(i(353)),
    s = a(i(360)),
    c = i(352);
    function a(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var o = (r(f, [{
        key: "destroy",
        value: function() {
            this._mediaInfo = null,
            this._metadata = null,
            this._audioMetadata = null,
            this._videoMetadata = null,
            this._videoTrack = null,
            this._audioTrack = null,
            this._onError = null,
            this._onMediaInfo = null,
            this._onMetaDataArrived = null,
            this._onScriptDataArrived = null,
            this._onTrackMetadata = null,
            this._onDataAvailable = null,
            this._onEsDataArrived = null,
            this._onObjectDataArrived = null
        }
    },
    {
        key: "bindDataSource",
        value: function(e) {
            return e.onDataArrival = this.parseChunks.bind(this),
            this
        }
    },
    {
        key: "resetMediaInfo",
        value: function() {
            this._mediaInfo = new s.
        default
        }
    },
    {
        key: "resetFirstParse",
        value: function() {
            this._firstParse = !0;
            var e = this._videoTrack.samples;
            e.splice(0, e.length),
            this._videoTrack.length = 0;
            var t = this._audioTrack.samples;
            t.splice(0, t.length),
            this._audioTrack.length = 0,
            console.log("demux clean Track")
        }
    },
    {
        key: "_isInitialMetadataDispatched",
        value: function() {
            return this._hasAudio && this._hasVideo ? this._videoInitialMetadataDispatched: this._hasAudio && !this._hasVideo ? this._audioInitialMetadataDispatched: !(this._hasAudio || !this._hasVideo) && this._videoInitialMetadataDispatched
        }
    },
    {
        key: "parseChunks",
        value: function(e, t) {
            if (! (this._onError && this._onMediaInfo && this._onTrackMetadata && this._onDataAvailable)) throw new c.IllegalStateException("Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified");
            var i = 0,
            r = this._littleEndian;
            if (0 === t) {
                if (! (13 < e.byteLength)) return 0;
                i = f.probe(e).dataOffset
            }
            for (this._firstParse && (this._firstParse = !1, t + i !== this._dataOffset && I.
        default.w(this.TAG, "First time parsing but chunk byteStart invalid!"), 0 !== new DataView(e, i).getUint32(0, !r) && I.
        default.w(this.TAG, "PrevTagSize0 !== 0 !!!"), i += 4); i < e.byteLength;) {
                this._dispatch = !0;
                var n = new DataView(e, i);
                if (i + 11 + 4 > e.byteLength) break;
                var s = n.getUint8(0),
                a = 16777215 & n.getUint32(0, !r);
                if (i + 11 + a + 4 > e.byteLength) break;
                if (8 === s || 9 === s || 18 === s) {
                    var o = n.getUint8(4),
                    l = n.getUint8(5),
                    u = n.getUint8(6) | l << 8 | o << 16 | n.getUint8(7) << 24;
                    0 != (16777215 & n.getUint32(7, !r)) && I.
                default.w(this.TAG, "Meet tag which has StreamID != 0!");
                    var h = i + 11;
                    switch (s) {
                    case 8:
                        this._parseAudioData(e, h, a, u);
                        break;
                    case 9:
                        this._parseVideoData(e, h, a, u, t + i);
                        break;
                    case 18:
                        this._parseScriptData(e, h, a)
                    }
                    var d = n.getUint32(11 + a, !r);
                    d !== 11 + a && I.
                default.w(this.TAG, "Invalid PrevTagSize " + d),
                    i += 11 + a + 4
                } else I.
            default.w(this.TAG, "Unsupported tag type " + s + ", size " + a + ", skipped"),
                i += 11 + a + 4
            }
            return this._isInitialMetadataDispatched() && this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack),
            i
        }
    },
    {
        key: "_parseScriptData",
        value: function(e, t, i) {
            var r = h.
        default.parseScriptData(e, t, i);
            if (r.hasOwnProperty("onMetaData")) {
                if (null == r.onMetaData || "object" !== u(r.onMetaData)) return void I.
            default.w(this.TAG, "Invalid onMetaData structure!");
                this._metadata && I.
            default.w(this.TAG, "Found another onMetaData tag!"),
                this._metadata = r;
                var n = this._metadata.onMetaData;
                if (this._onMetaDataArrived && this._onMetaDataArrived(Object.assign({},
                n)), "boolean" == typeof n.hasAudio && !1 === this._hasAudioFlagOverrided && (this._hasAudio = n.hasAudio, this._mediaInfo.hasAudio = this._hasAudio), "boolean" == typeof n.hasVideo && !1 === this._hasVideoFlagOverrided && (this._hasVideo = n.hasVideo, this._mediaInfo.hasVideo = this._hasVideo), "number" == typeof n.audiodatarate && (this._mediaInfo.audioDataRate = n.audiodatarate), "number" == typeof n.videodatarate && (this._mediaInfo.videoDataRate = n.videodatarate), "number" == typeof n.width && (this._mediaInfo.width = n.width), "number" == typeof n.height && (this._mediaInfo.height = n.height), "number" == typeof n.duration) {
                    if (!this._durationOverrided) {
                        var s = Math.floor(n.duration * this._timescale);
                        this._duration = s,
                        this._mediaInfo.duration = s
                    }
                } else this._mediaInfo.duration = 0;
                if ("number" == typeof n.framerate) {
                    var a = Math.floor(1e3 * n.framerate);
                    if (0 < a) {
                        var o = a / 1e3;
                        this._referenceFrameRate.fixed = !0,
                        this._referenceFrameRate.fps = o,
                        this._referenceFrameRate.fps_num = a,
                        this._referenceFrameRate.fps_den = 1e3,
                        this._mediaInfo.fps = o,
                        this._frameDur0 = 1e3 / o,
                        this._onGetFrameDuration && this._onGetFrameDuration("scriptdata", this._frameDur0)
                    }
                }
                if ("object" === u(n.keyframes)) {
                    this._mediaInfo.hasKeyframesIndex = !0;
                    var l = n.keyframes;
                    this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(l),
                    n.keyframes = null
                } else this._mediaInfo.hasKeyframesIndex = !1;
                this._dispatch = !1,
                this._mediaInfo.metadata = n,
                I.
            default.v(this.TAG, "Parsed onMetaData"),
                this._mediaInfo.isComplete() && this._onMediaInfo(this._mediaInfo)
            }
            0 < Object.keys(r).length && this._onScriptDataArrived && this._onScriptDataArrived(Object.assign({},
            r))
        }
    },
    {
        key: "_parseKeyframesIndex",
        value: function(e) {
            for (var t = [], i = [], r = 1; r < e.times.length; r++) {
                var n = this._timestampBase + Math.floor(1e3 * e.times[r]);
                t.push(n),
                i.push(e.filepositions[r])
            }
            return {
                times: t,
                filepositions: i
            }
        }
    },
    {
        key: "_parseAudioData",
        value: function(e, t, i, r) {
            if (i <= 1) I.
        default.w(this.TAG, "Flv: Invalid audio packet, missing SoundData payload!");
            else if (!0 !== this._hasAudioFlagOverrided || !1 !== this._hasAudio) {
                this._littleEndian;
                var n = new DataView(e, t, i).getUint8(0),
                s = n >>> 4;
                if (2 == s || 10 == s || 0 == s) {
                    var a = 0,
                    o = (12 & n) >>> 2;
                    if (0 <= o && o <= 4) {
                        a = this._flvSoundRateTable[o];
                        var l = (2 & n) >>> 1,
                        u = 1 & n;
                        if (0 != s) {
                            var h = this._audioMetadata,
                            d = this._audioTrack;
                            if (h || (!1 === this._hasAudio && !1 === this._hasAudioFlagOverrided && (this._hasAudio = !0, this._mediaInfo.hasAudio = !0), (h = this._audioMetadata = {}).type = "audio", h.id = d.id, h.timescale = this._timescale, h.duration = this._duration, h.audioSampleRate = a, h.channelCount = 0 == u ? 1 : 2), 10 == s) {
                                var c = this._parseAACAudioData(e, t + 1, i - 1);
                                if (null == c) return;
                                if (0 === c.packetType) {
                                    h.config && I.
                                default.w(this.TAG, "Found another AudioSpecificConfig!");
                                    var f = c.data;
                                    h.audioSampleRate = f.samplingRate,
                                    h.channelCount = f.channelCount,
                                    h.codec = f.codec,
                                    h.originalCodec = f.originalCodec,
                                    h.config = f.config,
                                    h.refSampleDuration = 1024 / h.audioSampleRate * h.timescale,
                                    I.
                                default.v(this.TAG, "Parsed AudioSpecificConfig"),
                                    this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._audioInitialMetadataDispatched = !0,
                                    this._dispatch = !1,
                                    this._onTrackMetadata("audio", h);
                                    var p = this._mediaInfo;
                                    p.audioCodec = h.originalCodec,
                                    p.audioSampleRate = h.audioSampleRate,
                                    p.audioChannelCount = h.channelCount,
                                    p.hasVideo ? null != p.videoCodec && (p.mimeType = 'video/x-flv; codecs="' + p.videoCodec + "," + p.audioCodec + '"') : p.mimeType = 'video/x-flv; codecs="' + p.audioCodec + '"',
                                    p.isComplete() && this._onMediaInfo(p)
                                } else if (1 === c.packetType) {
                                    var v = this._timestampBase + r,
                                    m = {
                                        unit: c.data,
                                        length: c.data.byteLength,
                                        dts: v,
                                        pts: v
                                    };
                                    d.samples.push(m),
                                    d.length += c.data.length
                                } else I.
                            default.e(this.TAG, "Flv: Unsupported AAC data type " + c.packetType)
                            } else if (2 == s) {
                                if (!h.codec) {
                                    var _ = this._parseMP3AudioData(e, t + 1, i - 1, !0);
                                    if (null == _) return;
                                    h.audioSampleRate = _.samplingRate,
                                    h.channelCount = _.channelCount,
                                    h.codec = _.codec,
                                    h.originalCodec = _.originalCodec,
                                    h.refSampleDuration = 1152 / h.audioSampleRate * h.timescale,
                                    I.
                                default.v(this.TAG, "Parsed MPEG Audio Frame Header"),
                                    this._audioInitialMetadataDispatched = !0,
                                    this._onTrackMetadata("audio", h);
                                    var g = this._mediaInfo;
                                    g.audioCodec = h.codec,
                                    g.audioSampleRate = h.audioSampleRate,
                                    g.audioChannelCount = h.channelCount,
                                    g.audioDataRate = _.bitRate,
                                    g.hasVideo ? null != g.videoCodec && (g.mimeType = 'video/x-flv; codecs="' + g.videoCodec + "," + g.audioCodec + '"') : g.mimeType = 'video/x-flv; codecs="' + g.audioCodec + '"',
                                    g.isComplete() && this._onMediaInfo(g)
                                }
                                var y = this._parseMP3AudioData(e, t + 1, i - 1, !1);
                                if (null == y) return;
                                var b = this._timestampBase + r,
                                S = {
                                    unit: y,
                                    length: y.byteLength,
                                    dts: b,
                                    pts: b
                                };
                                d.samples.push(S),
                                d.length += y.length
                            }
                        } else if (this._onEsDataArrived) {
                            var E = new Uint8Array(e, t + 1, i - 1);
                            this._onEsDataArrived("audio", {
                                codecId: 0,
                                sampleRate: a,
                                depth: 0 == l ? 8 : 16,
                                channel: 0 == u ? 1 : 2,
                                data: E
                            })
                        }
                    } else this._onError(A.
                default.FORMAT_ERROR, "Flv: Invalid audio sample rate idx: " + o)
                } else this._onError(A.
            default.CODEC_UNSUPPORTED, "Flv: Unsupported audio codec idx: " + s)
            }
        }
    },
    {
        key: "_parseAACAudioData",
        value: function(e, t, i) {
            if (! (i <= 1)) {
                var r = {},
                n = new Uint8Array(e, t, i);
                return r.packetType = n[0],
                0 === n[0] ? r.data = this._parseAACAudioSpecificConfig(e, t + 1, i - 1) : r.data = n.subarray(1),
                r
            }
            I.
        default.w(this.TAG, "Flv: Invalid AAC packet, missing AACPacketType or/and Data!")
        }
    },
    {
        key: "_parseAACAudioSpecificConfig",
        value: function(e, t, i) {
            var r, n, s = new Uint8Array(e, t, i),
            a = null,
            o = 0,
            l = null;
            if (o = r = s[0] >>> 3, (n = (7 & s[0]) << 1 | s[1] >>> 7) < 0 || n >= this._mpegSamplingRates.length) this._onError(A.
        default.FORMAT_ERROR, "Flv: AAC invalid sampling frequency index!");
            else {
                var u = this._mpegSamplingRates[n],
                h = (120 & s[1]) >>> 3;
                if (! (h < 0 || 8 <= h)) {
                    5 === o && (l = (7 & s[1]) << 1 | s[2] >>> 7, s[2]);
                    var d = self.navigator.userAgent.toLowerCase();
                    return - 1 !== d.indexOf("firefox") ? l = 6 <= n ? (o = 5, a = new Array(4), n - 3) : (o = 2, a = new Array(2), n) : -1 !== d.indexOf("android") ? (o = 2, a = new Array(2), l = n) : (o = 5, l = n, a = new Array(4), 6 <= n ? l = n - 3 : 1 == h && (o = 2, a = new Array(2), l = n)),
                    a[0] = o << 3,
                    a[0] |= (15 & n) >>> 1,
                    a[1] = (15 & n) << 7,
                    a[1] |= (15 & h) << 3,
                    5 === o && (a[1] |= (15 & l) >>> 1, a[2] = (1 & l) << 7, a[2] |= 8, a[3] = 0),
                    {
                        config: a,
                        samplingRate: u,
                        channelCount: h,
                        codec: "mp4a.40." + o,
                        originalCodec: "mp4a.40." + r
                    }
                }
                this._onError(A.
            default.FORMAT_ERROR, "Flv: AAC invalid channel configuration")
            }
        }
    },
    {
        key: "_parseMP3AudioData",
        value: function(e, t, i, r) {
            if (! (i < 4)) {
                this._littleEndian;
                var n = new Uint8Array(e, t, i),
                s = null;
                if (r) {
                    if (255 !== n[0]) return;
                    var a = n[1] >>> 3 & 3,
                    o = (6 & n[1]) >> 1,
                    l = (240 & n[2]) >>> 4,
                    u = (12 & n[2]) >>> 2,
                    h = 3 != (n[3] >>> 6 & 3) ? 2 : 1,
                    d = 0,
                    c = 0;
                    switch (a) {
                    case 0:
                        d = this._mpegAudioV25SampleRateTable[u];
                        break;
                    case 2:
                        d = this._mpegAudioV20SampleRateTable[u];
                        break;
                    case 3:
                        d = this._mpegAudioV10SampleRateTable[u]
                    }
                    switch (o) {
                    case 1:
                        l < this._mpegAudioL3BitRateTable.length && (c = this._mpegAudioL3BitRateTable[l]);
                        break;
                    case 2:
                        l < this._mpegAudioL2BitRateTable.length && (c = this._mpegAudioL2BitRateTable[l]);
                        break;
                    case 3:
                        l < this._mpegAudioL1BitRateTable.length && (c = this._mpegAudioL1BitRateTable[l])
                    }
                    s = {
                        bitRate: c,
                        samplingRate: d,
                        channelCount: h,
                        codec: "mp3",
                        originalCodec: "mp3"
                    }
                } else s = n;
                return s
            }
            I.
        default.w(this.TAG, "Flv: Invalid MP3 packet, header missing!")
        }
    },
    {
        key: "_parseVideoData",
        value: function(e, t, i, r, n) {
            if (i <= 1) I.
        default.w(this.TAG, "Flv: Invalid video packet, missing VideoData payload!");
            else if (!0 !== this._hasVideoFlagOverrided || !1 !== this._hasVideo) {
                var s = new Uint8Array(e, t, i)[0],
                a = (240 & s) >>> 4,
                o = 15 & s;
                if (7 != o) {
                    if (9 != o && 12 != o && 13 != o || !this._onEsDataArrived) return void this._onError(A.
                default.CODEC_UNSUPPORTED, "Flv: Unsupported codec in video frame: " + o);
                    this._parseAVCVideoPacket(e, t + 1, i - 1, r, n, a, o)
                } else this._parseAVCVideoPacket(e, t + 1, i - 1, r, n, a)
            }
        }
    },
    {
        key: "_parseAVCVideoPacket",
        value: function(e, t, i, r, n, s, a) {
            if (i < 4) I.
        default.w(this.TAG, "Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime");
            else {
                var o = this._littleEndian,
                l = new DataView(e, t, i),
                u = l.getUint8(0),
                h = (16777215 & l.getUint32(0, !o)) << 8 >> 8;
                if (0 === u) this._parseAVCDecoderConfigurationRecord(e, t + 4, i - 4);
                else if (1 === u) this._parseAVCVideoData(e, t + 4, i - 4, r, n, s, h, a);
                else if (2 !== u) return void this._onError(A.
            default.FORMAT_ERROR, "Flv: Invalid video packet type " + u)
            }
        }
    },
    {
        key: "_parseAVCDecoderConfigurationRecord",
        value: function(e, t, i) {
            if (i < 7) I.
        default.w(this.TAG, "Flv: Invalid AVCDecoderConfigurationRecord, lack of data!");
            else {
                var r = this._videoMetadata,
                n = this._videoTrack,
                s = this._littleEndian,
                a = new DataView(e, t, i);
                r ? void 0 !== r.avcc && I.
            default.w(this.TAG, "Found another AVCDecoderConfigurationRecord!") : (!1 === this._hasVideo && !1 === this._hasVideoFlagOverrided && (this._hasVideo = !0, this._mediaInfo.hasVideo = !0), (r = this._videoMetadata = {}).type = "video", r.id = n.id, r.timescale = this._timescale, r.duration = this._duration);
                var o = a.getUint8(0),
                l = a.getUint8(1);
                if (a.getUint8(2), a.getUint8(3), 1 === o && 0 !== l) if (this._naluLengthSize = 1 + (3 & a.getUint8(4)), 3 === this._naluLengthSize || 4 === this._naluLengthSize) {
                    var u = 31 & a.getUint8(5);
                    if (0 != u) {
                        1 < u && I.
                    default.w(this.TAG, "Flv: Strange AVCDecoderConfigurationRecord: SPS Count = " + u);
                        for (var h = 6,
                        d = 0; d < u; d++) {
                            var c = a.getUint16(h, !s);
                            if (h += 2, 0 !== c) {
                                var f = new Uint8Array(e, t + h, c);
                                h += c;
                                var p = T.
                            default.parseSPS(f);
                                if (0 === d) {
                                    r.codecWidth = p.codec_size.width,
                                    r.codecHeight = p.codec_size.height,
                                    r.presentWidth = p.present_size.width,
                                    r.presentHeight = p.present_size.height,
                                    r.profile = p.profile_string,
                                    r.level = p.level_string,
                                    r.bitDepth = p.bit_depth,
                                    r.chromaFormat = p.chroma_format,
                                    r.sarRatio = p.sar_ratio,
                                    r.frameRate = p.frame_rate,
                                    "number" == typeof p.frame_rate.fps && 0 < p.frame_rate.fps && (this._frameDur0 = 1e3 / p.frame_rate.fps, this._onGetFrameDuration && this._onGetFrameDuration("sps", this._frameDur0)),
                                    !1 !== p.frame_rate.fixed && 0 !== p.frame_rate.fps_num && 0 !== p.frame_rate.fps_den || (r.frameRate = this._referenceFrameRate);
                                    var v = r.frameRate.fps_den,
                                    m = r.frameRate.fps_num;
                                    r.refSampleDuration = r.timescale * (v / m);
                                    for (var _ = f.subarray(1, 4), g = "avc1.", y = 0; y < 3; y++) {
                                        var b = _[y].toString(16);
                                        b.length < 2 && (b = "0" + b),
                                        g += b
                                    }
                                    r.codec = g;
                                    var S = this._mediaInfo;
                                    S.width = r.codecWidth,
                                    S.height = r.codecHeight,
                                    S.fps = r.frameRate.fps,
                                    S.profile = r.profile,
                                    S.level = r.level,
                                    S.refFrames = p.ref_frames,
                                    S.chromaFormat = p.chroma_format_string,
                                    S.sarNum = r.sarRatio.width,
                                    S.sarDen = r.sarRatio.height,
                                    S.videoCodec = g,
                                    S.hasAudio ? null != S.audioCodec && (S.mimeType = 'video/x-flv; codecs="' + S.videoCodec + "," + S.audioCodec + '"') : S.mimeType = 'video/x-flv; codecs="' + S.videoCodec + '"',
                                    S.isComplete() && this._onMediaInfo(S)
                                }
                            }
                        }
                        var E = a.getUint8(h);
                        if (0 !== E) {
                            1 < E && I.
                        default.w(this.TAG, "Flv: Strange AVCDecoderConfigurationRecord: PPS Count = " + E),
                            h++;
                            for (var k = 0; k < E; k++) {
                                var w = a.getUint16(h, !s);
                                h += 2,
                                0 !== w && (h += w)
                            }
                            r.avcc = new Uint8Array(i),
                            r.avcc.set(new Uint8Array(e, t, i), 0),
                            I.
                        default.v(this.TAG, "Parsed AVCDecoderConfigurationRecord"),
                            this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._videoInitialMetadataDispatched = !0,
                            this._dispatch = !1,
                            this._onTrackMetadata("video", r)
                        } else this._onError(A.
                    default.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord: No PPS")
                    } else this._onError(A.
                default.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord: No SPS")
                } else this._onError(A.
            default.FORMAT_ERROR, "Flv: Strange NaluLengthSizeMinusOne: " + (this._naluLengthSize - 1));
                else this._onError(A.
            default.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord")
            }
        }
    },
    {
        key: "_parseAVCVideoData",
        value: function(e, t, i, r, n, s, a, o) {
            o = o || 7;
            for (var l = this._littleEndian,
            u = new DataView(e, t, i), h = [], d = 0, c = 0, f = 7 == o ? this._naluLengthSize: 4, p = this._timestampBase + r, v = 1 === s; c < i;) {
                if (i <= c + 4) {
                    I.
                default.w(this.TAG, "Malformed Nalu near timestamp " + p + ", offset = " + c + ", dataSize = " + i);
                    break
                }
                var m = u.getUint32(c, !l);
                if (3 === f && (m >>>= 8), i - f < m) return void I.
            default.w(this.TAG, "Malformed Nalus near timestamp " + p + ", NaluSize > DataSize!");
                if (7 == o) {
                    var _ = u.getUint8(c + f);
                    if (141 != _) {
                        var g = 31 & _;
                        5 == g && (v = !0);
                        var y = new Uint8Array(e, t + c, f + m),
                        b = {
                            type: g,
                            data: y
                        };
                        h.push(b),
                        d += y.byteLength,
                        c += f + m
                    } else {
                        if (this._onObjectDataArrived) {
                            var S = new Uint8Array(e, t + c + f + 1, m - 1 - 9); - 1 == this._firstPts && (this._firstPts = p + a),
                            this._onObjectDataArrived({
                                pts: p + a - this._firstPts,
                                type: "DeepGlint",
                                data: S
                            })
                        }
                        c += f + m
                    }
                } else {
                    var E = new Uint8Array(e, t + c + f, m);
                    this._onEsDataArrived("video", {
                        codecId: o,
                        pts: r,
                        frameType: s,
                        data: E
                    }),
                    c += f + m
                }
            }
            if (h.length) {
                var k = this._videoTrack,
                w = p + a,
                T = {
                    units: h,
                    length: d,
                    isKeyframe: v,
                    dts: p,
                    cts: a,
                    pts: w
                };
                if (v && (T.fileposition = n), k.samples.push(T), k.length += d, 0 == this._frameDur0 && 0 == this._frameDurN) if (0 == this._totalCount) this._lastPts = w,
                this._lastDts = p,
                this._totalCount++;
                else {
                    var A = w - this._lastPts,
                    R = p - this._lastDts; (0 < A || 0 < A) && Math.abs(A) < 2e3 && Math.abs(R) < 2e3 ? (this._lastDts = w, this._lastPts = p, this._totalPts += A, this._totalDts += R, (200 == this._totalCount || 1e4 < this._totalPts) && (this._frameDurN = this._totalPts / this._totalCount, this._onGetFrameDuration && this._onGetFrameDuration("videopts", this._frameDurN)), this._totalCount++) : this._totalCount = 0
                }
            }
        }
    },
    {
        key: "onTrackMetadata",
        get: function() {
            return this._onTrackMetadata
        },
        set: function(e) {
            this._onTrackMetadata = e
        }
    },
    {
        key: "onMediaInfo",
        get: function() {
            return this._onMediaInfo
        },
        set: function(e) {
            this._onMediaInfo = e
        }
    },
    {
        key: "onGetFrameDuration",
        set: function(e) {
            this._onGetFrameDuration = e
        }
    },
    {
        key: "onMetaDataArrived",
        get: function() {
            return this._onMetaDataArrived
        },
        set: function(e) {
            this._onMetaDataArrived = e
        }
    },
    {
        key: "onScriptDataArrived",
        get: function() {
            return this._onScriptDataArrived
        },
        set: function(e) {
            this._onScriptDataArrived = e
        }
    },
    {
        key: "onEsDataArrived",
        get: function() {
            return this._onEsDataArrived
        },
        set: function(e) {
            this._onEsDataArrived = e
        }
    },
    {
        key: "onObjectDataArrived",
        get: function() {
            return this._onObjectDataArrived
        },
        set: function(e) {
            this._onObjectDataArrived = e
        }
    },
    {
        key: "onError",
        get: function() {
            return this._onError
        },
        set: function(e) {
            this._onError = e
        }
    },
    {
        key: "onDataAvailable",
        get: function() {
            return this._onDataAvailable
        },
        set: function(e) {
            this._onDataAvailable = e
        }
    },
    {
        key: "timestampBase",
        get: function() {
            return this._timestampBase
        },
        set: function(e) {
            this._timestampBase = e
        }
    },
    {
        key: "overridedDuration",
        get: function() {
            return this._duration
        },
        set: function(e) {
            this._durationOverrided = !0,
            this._duration = e,
            this._mediaInfo.duration = e
        }
    },
    {
        key: "overridedHasAudio",
        set: function(e) {
            this._hasAudioFlagOverrided = !0,
            this._hasAudio = e,
            this._mediaInfo.hasAudio = e
        }
    },
    {
        key: "overridedHasVideo",
        set: function(e) {
            this._hasVideoFlagOverrided = !0,
            this._hasVideo = e,
            this._mediaInfo.hasVideo = e
        }
    }], [{
        key: "probe",
        value: function(e) {
            var t = new Uint8Array(e),
            i = {
                match: !1
            };
            if (70 !== t[0] || 76 !== t[1] || 86 !== t[2] || 1 !== t[3]) return i;
            var r = (4 & t[4]) >>> 2 != 0,
            n = 0 != (1 & t[4]),
            s = function(e, t) {
                return e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]
            } (t, 5);
            return s < 9 ? i: {
                match: !0,
                consumed: s,
                dataOffset: s,
                hasAudioTrack: r,
                hasVideoTrack: n
            }
        }
    }]), f);
    function f(e, t) {
        var i; !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, f),
        this.TAG = "FLVDemuxer",
        this._config = t,
        this._onError = null,
        this._onMediaInfo = null,
        this._onMetaDataArrived = null,
        this._onScriptDataArrived = null,
        this._onTrackMetadata = null,
        this._onDataAvailable = null,
        this._onEsDataArrived = null,
        this._onObjectDataArrived = null,
        this._onGetFrameDuration = null,
        this._dataOffset = e.dataOffset,
        this._firstParse = !0,
        this._dispatch = !1,
        this._hasAudio = e.hasAudioTrack,
        this._hasVideo = e.hasVideoTrack,
        this._hasAudioFlagOverrided = !1,
        this._hasVideoFlagOverrided = !1,
        this._audioInitialMetadataDispatched = !1,
        this._videoInitialMetadataDispatched = !1,
        this._mediaInfo = new s.
    default,
        this._mediaInfo.hasAudio = this._hasAudio,
        this._mediaInfo.hasVideo = this._hasVideo,
        this._metadata = null,
        this._audioMetadata = null,
        this._videoMetadata = null,
        this._naluLengthSize = 4,
        this._timestampBase = 0,
        this._timescale = 1e3,
        this._duration = 0,
        this._durationOverrided = !1,
        this._referenceFrameRate = {
            fixed: !0,
            fps: 23.976,
            fps_num: 23976,
            fps_den: 1e3
        },
        this._frameDur0 = 0,
        this._totalPts = 0,
        this._totalDts = 0,
        this._totalCount = 0,
        this._lastPts = 0,
        this._lastDts = 0,
        this._frameDurN = 0,
        this._firstPts = -1,
        this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48e3],
        this._mpegSamplingRates = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350],
        this._mpegAudioV10SampleRateTable = [44100, 48e3, 32e3, 0],
        this._mpegAudioV20SampleRateTable = [22050, 24e3, 16e3, 0],
        this._mpegAudioV25SampleRateTable = [11025, 12e3, 8e3, 0],
        this._mpegAudioL1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1],
        this._mpegAudioL2BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1],
        this._mpegAudioL3BitRateTable = [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1],
        this._videoTrack = {
            type: "video",
            id: 1,
            sequenceNumber: 0,
            samples: [],
            length: 0
        },
        this._audioTrack = {
            type: "audio",
            id: 2,
            sequenceNumber: 0,
            samples: [],
            length: 0
        },
        this._littleEndian = (i = new ArrayBuffer(2), new DataView(i).setInt16(0, 256, !0), 256 === new Int16Array(i)[0])
    }
    t.
default = o
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var g = a(i(346)),
    s = a(i(363)),
    y = i(352);
    function a(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var o, b = (o = new ArrayBuffer(2), new DataView(o).setInt16(0, 256, !0), 256 === new Int16Array(o)[0]),
    l = (r(S, null, [{
        key: "parseScriptData",
        value: function(e, t, i) {
            var r = {};
            try {
                var n = S.parseValue(e, t, i),
                s = S.parseValue(e, t + n.size, i - n.size);
                r[n.data] = s.data
            } catch(e) {
                g.
            default.e("AMF", e.toString())
            }
            return r
        }
    },
    {
        key: "parseObject",
        value: function(e, t, i) {
            if (i < 3) throw new y.IllegalStateException("Data not enough when parse ScriptDataObject");
            var r = S.parseString(e, t, i),
            n = S.parseValue(e, t + r.size, i - r.size),
            s = n.objectEnd;
            return {
                data: {
                    name: r.data,
                    value: n.data
                },
                size: r.size + n.size,
                objectEnd: s
            }
        }
    },
    {
        key: "parseVariable",
        value: function(e, t, i) {
            return S.parseObject(e, t, i)
        }
    },
    {
        key: "parseString",
        value: function(e, t, i) {
            if (i < 2) throw new y.IllegalStateException("Data not enough when parse String");
            var r = new DataView(e, t, i).getUint16(0, !b);
            return {
                data: 0 < r ? (0, s.
            default)(new Uint8Array(e, t + 2, r)) : "",
                size: 2 + r
            }
        }
    },
    {
        key: "parseLongString",
        value: function(e, t, i) {
            if (i < 4) throw new y.IllegalStateException("Data not enough when parse LongString");
            var r = new DataView(e, t, i).getUint32(0, !b);
            return {
                data: 0 < r ? (0, s.
            default)(new Uint8Array(e, t + 4, r)) : "",
                size: 4 + r
            }
        }
    },
    {
        key: "parseDate",
        value: function(e, t, i) {
            if (i < 10) throw new y.IllegalStateException("Data size invalid when parse Date");
            var r = new DataView(e, t, i),
            n = r.getFloat64(0, !b),
            s = r.getInt16(8, !b);
            return {
                data: new Date(n += 60 * s * 1e3),
                size: 10
            }
        }
    },
    {
        key: "parseValue",
        value: function(e, t, i) {
            if (i < 1) throw new y.IllegalStateException("Data not enough when parse Value");
            var r = new DataView(e, t, i),
            n = 1,
            s = r.getUint8(0),
            a = void 0,
            o = !1;
            try {
                switch (s) {
                case 0:
                    a = r.getFloat64(1, !b),
                    n += 8;
                    break;
                case 1:
                    a = !!r.getUint8(1),
                    n += 1;
                    break;
                case 2:
                    var l = S.parseString(e, t + 1, i - 1);
                    a = l.data,
                    n += l.size;
                    break;
                case 3:
                    a = {};
                    var u = 0;
                    for (9 == (16777215 & r.getUint32(i - 4, !b)) && (u = 3); n < i - 4;) {
                        var h = S.parseObject(e, t + n, i - n - u);
                        if (h.objectEnd) break;
                        a[h.data.name] = h.data.value,
                        n += h.size
                    }
                    n <= i - 3 && 9 == (16777215 & r.getUint32(n - 1, !b)) && (n += 3);
                    break;
                case 8:
                    a = {},
                    n += 4;
                    var d = 0;
                    for (9 == (16777215 & r.getUint32(i - 4, !b)) && (d = 3); n < i - 8;) {
                        var c = S.parseVariable(e, t + n, i - n - d);
                        if (c.objectEnd) break;
                        a[c.data.name] = c.data.value,
                        n += c.size
                    }
                    n <= i - 3 && 9 == (16777215 & r.getUint32(n - 1, !b)) && (n += 3);
                    break;
                case 9:
                    n = 1,
                    o = !(a = void 0);
                    break;
                case 10:
                    a = [];
                    var f = r.getUint32(1, !b);
                    n += 4;
                    for (var p = 0; p < f; p++) {
                        var v = S.parseValue(e, t + n, i - n);
                        a.push(v.data),
                        n += v.size
                    }
                    break;
                case 11:
                    var m = S.parseDate(e, t + 1, i - 1);
                    a = m.data,
                    n += m.size;
                    break;
                case 12:
                    var _ = S.parseString(e, t + 1, i - 1);
                    a = _.data,
                    n += _.size;
                    break;
                default:
                    n = i,
                    g.
                default.w("AMF", "Unsupported AMF value type " + s)
                }
            } catch(e) {
                g.
            default.e("AMF", e.toString())
            }
            return {
                data: a,
                size: n,
                objectEnd: o
            }
        }
    }]), S);
    function S() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, S)
    }
    t.
default = l
},
function(e, t, i) {
    "use strict";
    function l(e, t, i) {
        var r = e;
        if (t + i < r.length) {
            for (; i--;) if (128 != (192 & r[++t])) return ! 1;
            return ! 0
        }
        return ! 1
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    }),
    t.
default = function(e) {
        for (var t = [], i = e, r = 0, n = e.length; r < n;) if (i[r] < 128) t.push(String.fromCharCode(i[r])),
        ++r;
        else {
            if (i[r] < 192);
            else if (i[r] < 224) {
                if (l(i, r, 1)) {
                    var s = (31 & i[r]) << 6 | 63 & i[r + 1];
                    if (128 <= s) {
                        t.push(String.fromCharCode(65535 & s)),
                        r += 2;
                        continue
                    }
                }
            } else if (i[r] < 240) {
                if (l(i, r, 2)) {
                    var a = (15 & i[r]) << 12 | (63 & i[r + 1]) << 6 | 63 & i[r + 2];
                    if (2048 <= a && 55296 != (63488 & a)) {
                        t.push(String.fromCharCode(65535 & a)),
                        r += 3;
                        continue
                    }
                }
            } else if (i[r] < 248 && l(i, r, 3)) {
                var o = (7 & i[r]) << 18 | (63 & i[r + 1]) << 12 | (63 & i[r + 2]) << 6 | 63 & i[r + 3];
                if (65536 < o && o < 1114112) {
                    o -= 65536,
                    t.push(String.fromCharCode(o >>> 10 | 55296)),
                    t.push(String.fromCharCode(1023 & o | 56320)),
                    r += 4;
                    continue
                }
            }
            t.push(String.fromCharCode(65533)),
            ++r
        }
        return t.join("")
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s, a = i(365),
    B = (s = a) && s.__esModule ? s: {
    default:
        s
    };
    var o = (r(U, null, [{
        key: "_ebsp2rbsp",
        value: function(e) {
            for (var t = e,
            i = t.byteLength,
            r = new Uint8Array(i), n = 0, s = 0; s < i; s++) 2 <= s && 3 === t[s] && 0 === t[s - 1] && 0 === t[s - 2] || (r[n] = t[s], n++);
            return new Uint8Array(r.buffer, 0, n)
        }
    },
    {
        key: "parseSPS",
        value: function(e) {
            var t = U._ebsp2rbsp(e),
            i = new B.
        default(t);
            i.readByte();
            var r = i.readByte();
            i.readByte();
            var n = i.readByte();
            i.readUEG();
            var s = U.getProfileString(r),
            a = U.getLevelString(n),
            o = 1,
            l = 420,
            u = 8;
            if ((100 === r || 110 === r || 122 === r || 244 === r || 44 === r || 83 === r || 86 === r || 118 === r || 128 === r || 138 === r || 144 === r) && (3 === (o = i.readUEG()) && i.readBits(1), o <= 3 && (l = [0, 420, 422, 444][o]), u = i.readUEG() + 8, i.readUEG(), i.readBits(1), i.readBool())) for (var h = 3 !== o ? 8 : 12, d = 0; d < h; d++) i.readBool() && U._skipScalingList(i, d < 6 ? 16 : 64);
            i.readUEG();
            var c = i.readUEG();
            if (0 === c) i.readUEG();
            else if (1 === c) {
                i.readBits(1),
                i.readSEG(),
                i.readSEG();
                for (var f = i.readUEG(), p = 0; p < f; p++) i.readSEG()
            }
            var v = i.readUEG();
            i.readBits(1);
            var m = i.readUEG(),
            _ = i.readUEG(),
            g = i.readBits(1);
            0 === g && i.readBits(1),
            i.readBits(1);
            var y = 0,
            b = 0,
            S = 0,
            E = 0;
            i.readBool() && (y = i.readUEG(), b = i.readUEG(), S = i.readUEG(), E = i.readUEG());
            var k = 1,
            w = 1,
            T = 0,
            A = !0,
            R = 0,
            I = 0;
            if (i.readBool()) {
                if (i.readBool()) {
                    var x = i.readByte();
                    0 < x && x < 16 ? (k = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][x - 1], w = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][x - 1]) : 255 === x && (k = i.readByte() << 8 | i.readByte(), w = i.readByte() << 8 | i.readByte())
                }
                if (i.readBool() && i.readBool(), i.readBool() && (i.readBits(4), i.readBool() && i.readBits(24)), i.readBool() && (i.readUEG(), i.readUEG()), i.readBool()) {
                    var O = i.readBits(32),
                    C = i.readBits(32);
                    A = i.readBool(),
                    T = (R = C) / (I = 2 * O)
                }
            }
            var L = 1;
            1 === k && 1 === w || (L = k / w);
            var D = 0,
            P = 0;
            P = 0 === o ? (D = 1, 2 - g) : (D = 3 === o ? 1 : 2, (1 === o ? 2 : 1) * (2 - g));
            var M = 16 * (m + 1),
            F = 16 * (_ + 1) * (2 - g);
            M -= (y + b) * D,
            F -= (S + E) * P;
            var N = Math.ceil(M * L);
            return i.destroy(),
            i = null,
            {
                profile_string: s,
                level_string: a,
                bit_depth: u,
                ref_frames: v,
                chroma_format: l,
                chroma_format_string: U.getChromaFormatString(l),
                frame_rate: {
                    fixed: A,
                    fps: T,
                    fps_den: I,
                    fps_num: R
                },
                sar_ratio: {
                    width: k,
                    height: w
                },
                codec_size: {
                    width: M,
                    height: F
                },
                present_size: {
                    width: N,
                    height: F
                }
            }
        }
    },
    {
        key: "_skipScalingList",
        value: function(e, t) {
            for (var i = 8,
            r = 8,
            n = 0; n < t; n++) 0 !== r && (r = (i + e.readSEG() + 256) % 256),
            i = 0 === r ? i: r
        }
    },
    {
        key: "getProfileString",
        value: function(e) {
            switch (e) {
            case 66:
                return "Baseline";
            case 77:
                return "Main";
            case 88:
                return "Extended";
            case 100:
                return "High";
            case 110:
                return "High10";
            case 122:
                return "High422";
            case 244:
                return "High444";
            default:
                return "Unknown"
            }
        }
    },
    {
        key: "getLevelString",
        value: function(e) {
            return (e / 10).toFixed(1)
        }
    },
    {
        key: "getChromaFormatString",
        value: function(e) {
            switch (e) {
            case 420:
                return "4:2:0";
            case 422:
                return "4:2:2";
            case 444:
                return "4:4:4";
            default:
                return "Unknown"
            }
        }
    }]), U);
    function U() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, U)
    }
    t.
default = o
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var a = i(352);
    var s = (r(o, [{
        key: "destroy",
        value: function() {
            this._buffer = null
        }
    },
    {
        key: "_fillCurrentWord",
        value: function() {
            var e = this._total_bytes - this._buffer_index;
            if (e <= 0) throw new a.IllegalStateException("ExpGolomb: _fillCurrentWord() but no bytes available");
            var t = Math.min(4, e),
            i = new Uint8Array(4);
            i.set(this._buffer.subarray(this._buffer_index, this._buffer_index + t)),
            this._current_word = new DataView(i.buffer).getUint32(0, !1),
            this._buffer_index += t,
            this._current_word_bits_left = 8 * t
        }
    },
    {
        key: "readBits",
        value: function(e) {
            if (32 < e) throw new a.InvalidArgumentException("ExpGolomb: readBits() bits exceeded max 32bits!");
            if (e <= this._current_word_bits_left) {
                var t = this._current_word >>> 32 - e;
                return this._current_word <<= e,
                this._current_word_bits_left -= e,
                t
            }
            var i = this._current_word_bits_left ? this._current_word: 0;
            i >>>= 32 - this._current_word_bits_left;
            var r = e - this._current_word_bits_left;
            this._fillCurrentWord();
            var n = Math.min(r, this._current_word_bits_left),
            s = this._current_word >>> 32 - n;
            return this._current_word <<= n,
            this._current_word_bits_left -= n,
            i = i << n | s
        }
    },
    {
        key: "readBool",
        value: function() {
            return 1 === this.readBits(1)
        }
    },
    {
        key: "readByte",
        value: function() {
            return this.readBits(8)
        }
    },
    {
        key: "_skipLeadingZero",
        value: function() {
            var e = void 0;
            for (e = 0; e < this._current_word_bits_left; e++) if (0 != (this._current_word & 2147483648 >>> e)) return this._current_word <<= e,
            this._current_word_bits_left -= e,
            e;
            return this._fillCurrentWord(),
            e + this._skipLeadingZero()
        }
    },
    {
        key: "readUEG",
        value: function() {
            var e = this._skipLeadingZero();
            return this.readBits(e + 1) - 1
        }
    },
    {
        key: "readSEG",
        value: function() {
            var e = this.readUEG();
            return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1)
        }
    }]), o);
    function o(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, o),
        this.TAG = "ExpGolomb",
        this._buffer = e,
        this._buffer_index = 0,
        this._total_bytes = e.byteLength,
        this._total_bits = 8 * e.byteLength,
        this._current_word = 0,
        this._current_word_bits_left = 0
    }
    t.
default = s
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var Y = a(i(346)),
    Z = a(i(367)),
    X = a(i(368)),
    J = a(i(355)),
    $ = i(369),
    s = i(352);
    function a(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var o = (r(l, [{
        key: "destroy",
        value: function() {
            this._dtsBase = -1,
            this._dtsBaseInited = !1,
            this._audioMeta = null,
            this._videoMeta = null,
            this._audioSegmentInfoList.clear(),
            this._audioSegmentInfoList = null,
            this._videoSegmentInfoList.clear(),
            this._videoSegmentInfoList = null,
            this._onInitSegment = null,
            this._onMediaSegment = null
        }
    },
    {
        key: "bindDataSource",
        value: function(e) {
            return e.onDataAvailable = this.remux.bind(this),
            e.onTrackMetadata = this._onTrackMetadataReceived.bind(this),
            this
        }
    },
    {
        key: "insertDiscontinuity",
        value: function() {
            this._audioNextDts = this._videoNextDts = void 0
        }
    },
    {
        key: "seek",
        value: function(e) {
            this._audioStashedLastSample = null,
            this._videoStashedLastSample = null,
            this._videoSegmentInfoList.clear(),
            this._audioSegmentInfoList.clear()
        }
    },
    {
        key: "remux",
        value: function(e, t) {
            if (!this._onMediaSegment) throw new s.IllegalStateException("MP4Remuxer: onMediaSegment callback must be specificed!");
            this._dtsBaseInited || this._calculateDtsBase(e, t),
            this._remuxVideo(t),
            this._remuxAudio(e)
        }
    },
    {
        key: "_onTrackMetadataReceived",
        value: function(e, t) {
            var i = null,
            r = "mp4",
            n = t.codec;
            if ("audio" === e) i = "mp3" === (this._audioMeta = t).codec && this._mp3UseMpegAudio ? (r = "mpeg", n = "", new Uint8Array) : Z.
        default.generateInitSegment(t);
            else {
                if ("video" !== e) return;
                this._videoMeta = t,
                i = Z.
            default.generateInitSegment(t)
            }
            if (!this._onInitSegment) throw new s.IllegalStateException("MP4Remuxer: onInitSegment callback must be specified!");
            this._onInitSegment(e, {
                type: e,
                data: i.buffer,
                codec: n,
                container: e + "/" + r,
                mediaDuration: t.duration
            })
        }
    },
    {
        key: "_calculateDtsBase",
        value: function(e, t) {
            this._dtsBaseInited || (e.samples && e.samples.length && (this._audioDtsBase = e.samples[0].dts), t.samples && t.samples.length && (this._videoDtsBase = t.samples[0].dts), this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase), this._dtsBaseInited = !0)
        }
    },
    {
        key: "flushStashedSamples",
        value: function() {
            var e = this._videoStashedLastSample,
            t = this._audioStashedLastSample,
            i = {
                type: "video",
                id: 1,
                sequenceNumber: 0,
                samples: [],
                length: 0
            };
            null != e && (i.samples.push(e), i.length = e.length);
            var r = {
                type: "audio",
                id: 2,
                sequenceNumber: 0,
                samples: [],
                length: 0
            };
            null != t && (r.samples.push(t), r.length = t.length),
            this._videoStashedLastSample = null,
            this._audioStashedLastSample = null,
            this._remuxVideo(i, !0),
            this._remuxAudio(r, !0)
        }
    },
    {
        key: "_remuxAudio",
        value: function(e, t) {
            if (null != this._audioMeta) {
                var i, r = e,
                n = r.samples,
                s = void 0,
                a = -1,
                o = this._audioMeta.refSampleDuration,
                l = "mp3" === this._audioMeta.codec && this._mp3UseMpegAudio,
                u = this._dtsBaseInited && void 0 === this._audioNextDts,
                h = !1;
                if (n && 0 !== n.length && (1 !== n.length || t)) {
                    var d = 0,
                    c = null,
                    f = 0;
                    f = l ? (d = 0, r.length) : (d = 8) + r.length;
                    var p = null;
                    if (1 < n.length && (f -= (p = n.pop()).length), null != this._audioStashedLastSample) {
                        var v = this._audioStashedLastSample;
                        this._audioStashedLastSample = null,
                        n.unshift(v),
                        f += v.length
                    }
                    null != p && (this._audioStashedLastSample = p);
                    var m = n[0].dts - this._dtsBase;
                    if (this._audioNextDts) s = m - this._audioNextDts;
                    else if (this._audioSegmentInfoList.isEmpty()) s = 0,
                    this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty() && "mp3" !== this._audioMeta.originalCodec && (h = !0);
                    else {
                        var _ = this._audioSegmentInfoList.getLastSampleBefore(m);
                        if (null != _) {
                            var g = m - (_.originalDts + _.duration);
                            g <= 3 && (g = 0),
                            s = m - (_.dts + _.duration + g)
                        } else s = 0
                    }
                    if (h) {
                        var y = m - s,
                        b = this._videoSegmentInfoList.getLastSegmentBefore(m);
                        if (null != b && b.beginDts < y) {
                            var S = X.
                        default.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);
                            if (S) {
                                var E = b.beginDts,
                                k = y - b.beginDts;
                                Y.
                            default.v(this.TAG, "InsertPrefixSilentAudio: dts: " + E + ", duration: " + k),
                                n.unshift({
                                    unit: S,
                                    dts: E,
                                    pts: E
                                }),
                                f += S.byteLength
                            }
                        } else h = !1
                    }
                    for (var w = [], T = 0; T < n.length; T++) {
                        var A = n[T],
                        R = A.unit,
                        I = A.dts - this._dtsBase,
                        x = I - s; - 1 === a && (a = x);
                        var O = 0;
                        O = T !== n.length - 1 ? n[T + 1].dts - this._dtsBase - s - x: null != p ? p.dts - this._dtsBase - s - x: 1 <= w.length ? w[w.length - 1].duration: Math.floor(o);
                        var C = !1,
                        L = null;
                        if (1.5 * o < O && "mp3" !== this._audioMeta.codec && this._fillAudioTimestampGap && !J.
                    default.safari) {
                            C = !0;
                            var D = Math.abs(O - o),
                            P = Math.ceil(D / o),
                            M = x + o;
                            Y.
                        default.w(this.TAG, "Large audio timestamp gap detected, may cause AV sync to drift. Silent frames will be generated to avoid unsync.\ndts: " + (x + O) + " ms, expected: " + (x + Math.round(o)) + " ms, delta: " + Math.round(D) + " ms, generate: " + P + " frames");
                            var F = X.
                        default.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);
                            null == F && (Y.
                        default.w(this.TAG, "Unable to generate silent frame for " + this._audioMeta.originalCodec + " with " + this._audioMeta.channelCount + " channels, repeat last frame"), F = R),
                            L = [];
                            for (var N = 0; N < P; N++) {
                                var B = Math.round(M);
                                if (0 < L.length) {
                                    var U = L[L.length - 1];
                                    U.duration = B - U.dts
                                }
                                var j = {
                                    dts: B,
                                    pts: B,
                                    cts: 0,
                                    unit: F,
                                    size: F.byteLength,
                                    duration: 0,
                                    originalDts: I,
                                    flags: {
                                        isLeading: 0,
                                        dependsOn: 1,
                                        isDependedOn: 0,
                                        hasRedundancy: 0
                                    }
                                };
                                L.push(j),
                                f += j.size,
                                M += o
                            }
                            var z = L[L.length - 1];
                            z.duration = x + O - z.dts,
                            O = Math.round(o)
                        }
                        w.push({
                            dts: x,
                            pts: x,
                            cts: 0,
                            unit: A.unit,
                            size: A.unit.byteLength,
                            duration: O,
                            originalDts: I,
                            flags: {
                                isLeading: 0,
                                dependsOn: 1,
                                isDependedOn: 0,
                                hasRedundancy: 0
                            }
                        }),
                        C && w.push.apply(w, L)
                    }
                    l ? c = new Uint8Array(f) : ((c = new Uint8Array(f))[0] = f >>> 24 & 255, c[1] = f >>> 16 & 255, c[2] = f >>> 8 & 255, c[3] = 255 & f, c.set(Z.
                default.types.mdat, 4));
                    for (var G = 0; G < w.length; G++) {
                        var V = w[G].unit;
                        c.set(V, d),
                        d += V.byteLength
                    }
                    var W = w[w.length - 1];
                    i = W.dts + W.duration,
                    this._audioNextDts = i;
                    var H = new $.MediaSegmentInfo;
                    H.beginDts = a,
                    H.endDts = i,
                    H.beginPts = a,
                    H.endPts = i,
                    H.originalBeginDts = w[0].originalDts,
                    H.originalEndDts = W.originalDts + W.duration,
                    H.firstSample = new $.SampleInfo(w[0].dts, w[0].pts, w[0].duration, w[0].originalDts, !1),
                    H.lastSample = new $.SampleInfo(W.dts, W.pts, W.duration, W.originalDts, !1),
                    this._isLive || this._audioSegmentInfoList.append(H),
                    r.samples = w,
                    r.sequenceNumber++;
                    var K = null;
                    K = l ? new Uint8Array: Z.
                default.moof(r, a),
                    r.samples = [],
                    r.length = 0;
                    var q = {
                        type: "audio",
                        data: this._mergeBoxes(K, c).buffer,
                        sampleCount: w.length,
                        info: H
                    };
                    l && u && (q.timestampOffset = a),
                    this._onMediaSegment("audio", q)
                }
            }
        }
    },
    {
        key: "_remuxVideo",
        value: function(e, t) {
            if (null != this._videoMeta) {
                var i, r, n = e,
                s = n.samples,
                a = void 0,
                o = -1,
                l = -1;
                if (s && 0 !== s.length && (1 !== s.length || t)) {
                    var u = 8,
                    h = null,
                    d = 8 + e.length,
                    c = null;
                    if (1 < s.length && (d -= (c = s.pop()).length), null != this._videoStashedLastSample) {
                        var f = this._videoStashedLastSample;
                        this._videoStashedLastSample = null,
                        s.unshift(f),
                        d += f.length
                    }
                    null != c && (this._videoStashedLastSample = c);
                    var p = s[0].dts - this._dtsBase;
                    if (this._videoNextDts) a = p - this._videoNextDts;
                    else if (this._videoSegmentInfoList.isEmpty()) a = 0;
                    else {
                        var v = this._videoSegmentInfoList.getLastSampleBefore(p);
                        if (null != v) {
                            var m = p - (v.originalDts + v.duration);
                            m <= 3 && (m = 0),
                            a = p - (v.dts + v.duration + m)
                        } else a = 0
                    }
                    0 != a && Y.
                default.w(this.TAG, "_remuxVideo dtsCorrection: " + a);
                    for (var _ = new $.MediaSegmentInfo,
                    g = [], y = 0; y < s.length; y++) {
                        var b = s[y],
                        S = b.dts - this._dtsBase,
                        E = b.isKeyframe,
                        k = S - a,
                        w = b.cts,
                        T = k + w; - 1 === o && (o = k, l = T);
                        var A = 0;
                        if ((A = y !== s.length - 1 ? s[y + 1].dts - this._dtsBase - a - k: null != c ? c.dts - this._dtsBase - a - k: 1 <= g.length ? g[g.length - 1].duration: Math.floor(this._videoMeta.refSampleDuration)) < 0 && (Y.
                    default.w(this.TAG, "_remuxVideo sampleDuration: " + A), A = 0), E) {
                            var R = new $.SampleInfo(k, T, A, b.dts, !0);
                            R.fileposition = b.fileposition,
                            _.appendSyncPoint(R)
                        }
                        var I = T - this._prePts;
                        0 < g.length && (I < -3e3 || 3e3 < I) ? (Y.
                    default.w(this.TAG, "_remuxVideo delete data pts: " + T + "  prePts: " + this._prePts + " frames: " + g.length), l = -1, g = []) : (3e3 < T - this._prePts || 3e3 < A) && Y.
                    default.w(this.TAG, "_remuxVideo diff pts: " + (T - this._prePts) + ", dts: " + A),
                        this._prePts = T,
                        g.push({
                            dts: k,
                            pts: T,
                            cts: w,
                            units: b.units,
                            size: b.length,
                            isKeyframe: E,
                            duration: A,
                            originalDts: S,
                            flags: {
                                isLeading: 0,
                                dependsOn: E ? 2 : 1,
                                isDependedOn: E ? 1 : 0,
                                hasRedundancy: 0,
                                isNonSync: E ? 0 : 1
                            }
                        })
                    } (h = new Uint8Array(d))[0] = d >>> 24 & 255,
                    h[1] = d >>> 16 & 255,
                    h[2] = d >>> 8 & 255,
                    h[3] = 255 & d,
                    h.set(Z.
                default.types.mdat, 4);
                    for (var x = 0; x < g.length; x++) for (var O = g[x].units; O.length;) {
                        var C = O.shift().data;
                        h.set(C, u),
                        u += C.byteLength
                    }
                    var L = g[g.length - 1];
                    if (i = L.dts + L.duration, r = L.pts + L.duration, this._videoNextDts = i, (l > g[0].pts || -1 == l) && (l = g[0].pts, o = g[0].dts), _.beginDts = o, _.endDts = i, _.beginPts = l, _.endPts = r, _.originalBeginDts = g[0].originalDts, _.originalEndDts = L.originalDts + L.duration, _.firstSample = new $.SampleInfo(g[0].dts, g[0].pts, g[0].duration, g[0].originalDts, g[0].isKeyframe), _.lastSample = new $.SampleInfo(L.dts, L.pts, L.duration, L.originalDts, L.isKeyframe), this._isLive || this._videoSegmentInfoList.append(_), n.samples = g, n.sequenceNumber++, this._forceFirstIDR) {
                        var D = g[0].flags;
                        D.dependsOn = 2,
                        D.isNonSync = 0
                    }
                    var P = Z.
                default.moof(n, o);
                    n.samples = [],
                    n.length = 0,
                    this._onMediaSegment("video", {
                        type: "video",
                        data: this._mergeBoxes(P, h).buffer,
                        sampleCount: g.length,
                        info: _
                    })
                }
            }
        }
    },
    {
        key: "_mergeBoxes",
        value: function(e, t) {
            var i = new Uint8Array(e.byteLength + t.byteLength);
            return i.set(e, 0),
            i.set(t, e.byteLength),
            i
        }
    },
    {
        key: "onInitSegment",
        get: function() {
            return this._onInitSegment
        },
        set: function(e) {
            this._onInitSegment = e
        }
    },
    {
        key: "onMediaSegment",
        get: function() {
            return this._onMediaSegment
        },
        set: function(e) {
            this._onMediaSegment = e
        }
    }]), l);
    function l(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, l),
        this.TAG = "MP4Remuxer",
        this._config = e,
        this._isLive = !0 === e.isLive,
        this._dtsBase = -1,
        this._dtsBaseInited = !1,
        this._audioDtsBase = 1 / 0,
        this._videoDtsBase = 1 / 0,
        this._audioNextDts = void 0,
        this._videoNextDts = void 0,
        this._audioStashedLastSample = null,
        this._videoStashedLastSample = null,
        this._audioMeta = null,
        this._videoMeta = null,
        this._audioSegmentInfoList = new $.MediaSegmentInfoList("audio"),
        this._videoSegmentInfoList = new $.MediaSegmentInfoList("video"),
        this._onInitSegment = null,
        this._onMediaSegment = null,
        this._forceFirstIDR = !(!J.
    default.chrome || !(J.
    default.version.major < 50 || 50 === J.
    default.version.major && J.
    default.version.build < 2661)),
        this._fillSilentAfterSeek = J.
    default.msedge || J.
    default.msie,
        this._mp3UseMpegAudio = !J.
    default.firefox,
        this._fillAudioTimestampGap = this._config.fixAudioTimestampGap,
        this._prePts = 0
    }
    t.
default = o
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (d, null, [{
        key: "init",
        value: function() {
            for (var e in d.types = {
                avc1: [],
                avcC: [],
                btrt: [],
                dinf: [],
                dref: [],
                esds: [],
                ftyp: [],
                hdlr: [],
                mdat: [],
                mdhd: [],
                mdia: [],
                mfhd: [],
                minf: [],
                moof: [],
                moov: [],
                mp4a: [],
                mvex: [],
                mvhd: [],
                sdtp: [],
                stbl: [],
                stco: [],
                stsc: [],
                stsd: [],
                stsz: [],
                stts: [],
                tfdt: [],
                tfhd: [],
                traf: [],
                trak: [],
                trun: [],
                trex: [],
                tkhd: [],
                vmhd: [],
                smhd: [],
                ".mp3": []
            }) d.types.hasOwnProperty(e) && (d.types[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
            var t = d.constants = {};
            t.FTYP = new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49]),
            t.STSD_PREFIX = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]),
            t.STTS = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
            t.STSC = t.STCO = t.STTS,
            t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            t.HDLR_VIDEO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
            t.HDLR_AUDIO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]),
            t.DREF = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
            t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
            t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
        }
    },
    {
        key: "box",
        value: function(e) {
            for (var t = 8,
            i = null,
            r = Array.prototype.slice.call(arguments, 1), n = r.length, s = 0; s < n; s++) t += r[s].byteLength; (i = new Uint8Array(t))[0] = t >>> 24 & 255,
            i[1] = t >>> 16 & 255,
            i[2] = t >>> 8 & 255,
            i[3] = 255 & t,
            i.set(e, 4);
            for (var a = 8,
            o = 0; o < n; o++) i.set(r[o], a),
            a += r[o].byteLength;
            return i
        }
    },
    {
        key: "generateInitSegment",
        value: function(e) {
            var t = d.box(d.types.ftyp, d.constants.FTYP),
            i = d.moov(e),
            r = new Uint8Array(t.byteLength + i.byteLength);
            return r.set(t, 0),
            r.set(i, t.byteLength),
            r
        }
    },
    {
        key: "moov",
        value: function(e) {
            var t = d.mvhd(e.timescale, e.duration),
            i = d.trak(e),
            r = d.mvex(e);
            return d.box(d.types.moov, t, i, r)
        }
    },
    {
        key: "mvhd",
        value: function(e, t) {
            return d.box(d.types.mvhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]))
        }
    },
    {
        key: "trak",
        value: function(e) {
            return d.box(d.types.trak, d.tkhd(e), d.mdia(e))
        }
    },
    {
        key: "tkhd",
        value: function(e) {
            var t = e.id,
            i = e.duration,
            r = e.presentWidth,
            n = e.presentHeight;
            return d.box(d.types.tkhd, new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, r >>> 8 & 255, 255 & r, 0, 0, n >>> 8 & 255, 255 & n, 0, 0]))
        }
    },
    {
        key: "mdia",
        value: function(e) {
            return d.box(d.types.mdia, d.mdhd(e), d.hdlr(e), d.minf(e))
        }
    },
    {
        key: "mdhd",
        value: function(e) {
            var t = e.timescale,
            i = e.duration;
            return d.box(d.types.mdhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 85, 196, 0, 0]))
        }
    },
    {
        key: "hdlr",
        value: function(e) {
            var t = null;
            return t = "audio" === e.type ? d.constants.HDLR_AUDIO: d.constants.HDLR_VIDEO,
            d.box(d.types.hdlr, t)
        }
    },
    {
        key: "minf",
        value: function(e) {
            var t = null;
            return t = "audio" === e.type ? d.box(d.types.smhd, d.constants.SMHD) : d.box(d.types.vmhd, d.constants.VMHD),
            d.box(d.types.minf, t, d.dinf(), d.stbl(e))
        }
    },
    {
        key: "dinf",
        value: function() {
            return d.box(d.types.dinf, d.box(d.types.dref, d.constants.DREF))
        }
    },
    {
        key: "stbl",
        value: function(e) {
            return d.box(d.types.stbl, d.stsd(e), d.box(d.types.stts, d.constants.STTS), d.box(d.types.stsc, d.constants.STSC), d.box(d.types.stsz, d.constants.STSZ), d.box(d.types.stco, d.constants.STCO))
        }
    },
    {
        key: "stsd",
        value: function(e) {
            return "audio" === e.type ? "mp3" === e.codec ? d.box(d.types.stsd, d.constants.STSD_PREFIX, d.mp3(e)) : d.box(d.types.stsd, d.constants.STSD_PREFIX, d.mp4a(e)) : d.box(d.types.stsd, d.constants.STSD_PREFIX, d.avc1(e))
        }
    },
    {
        key: "mp3",
        value: function(e) {
            var t = e.channelCount,
            i = e.audioSampleRate,
            r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t, 0, 16, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, 0, 0]);
            return d.box(d.types[".mp3"], r)
        }
    },
    {
        key: "mp4a",
        value: function(e) {
            var t = e.channelCount,
            i = e.audioSampleRate,
            r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t, 0, 16, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, 0, 0]);
            return d.box(d.types.mp4a, r, d.esds(e))
        }
    },
    {
        key: "esds",
        value: function(e) {
            var t = e.config || [],
            i = t.length,
            r = new Uint8Array([0, 0, 0, 0, 3, 23 + i, 0, 1, 0, 4, 15 + i, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([i]).concat(t).concat([6, 1, 2]));
            return d.box(d.types.esds, r)
        }
    },
    {
        key: "avc1",
        value: function(e) {
            var t = e.avcc,
            i = e.codecWidth,
            r = e.codecHeight,
            n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, r >>> 8 & 255, 255 & r, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 10, 120, 113, 113, 47, 102, 108, 118, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 255, 255]);
            return d.box(d.types.avc1, n, d.box(d.types.avcC, t))
        }
    },
    {
        key: "mvex",
        value: function(e) {
            return d.box(d.types.mvex, d.trex(e))
        }
    },
    {
        key: "trex",
        value: function(e) {
            var t = e.id,
            i = new Uint8Array([0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
            return d.box(d.types.trex, i)
        }
    },
    {
        key: "moof",
        value: function(e, t) {
            return d.box(d.types.moof, d.mfhd(e.sequenceNumber), d.traf(e, t))
        }
    },
    {
        key: "mfhd",
        value: function(e) {
            var t = new Uint8Array([0, 0, 0, 0, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e]);
            return d.box(d.types.mfhd, t)
        }
    },
    {
        key: "traf",
        value: function(e, t) {
            var i = e.id,
            r = d.box(d.types.tfhd, new Uint8Array([0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i])),
            n = d.box(d.types.tfdt, new Uint8Array([0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t])),
            s = d.sdtp(e),
            a = d.trun(e, s.byteLength + 16 + 16 + 8 + 16 + 8 + 8);
            return d.box(d.types.traf, r, n, a, s)
        }
    },
    {
        key: "sdtp",
        value: function(e) {
            for (var t = e.samples || [], i = t.length, r = new Uint8Array(4 + i), n = 0; n < i; n++) {
                var s = t[n].flags;
                r[n + 4] = s.isLeading << 6 | s.dependsOn << 4 | s.isDependedOn << 2 | s.hasRedundancy
            }
            return d.box(d.types.sdtp, r)
        }
    },
    {
        key: "trun",
        value: function(e, t) {
            var i = e.samples || [],
            r = i.length,
            n = 12 + 16 * r,
            s = new Uint8Array(n);
            t += 8 + n,
            s.set([0, 0, 15, 1, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t], 0);
            for (var a = 0; a < r; a++) {
                var o = i[a].duration,
                l = i[a].size,
                u = i[a].flags,
                h = i[a].cts;
                s.set([o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, 255 & o, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l, u.isLeading << 2 | u.dependsOn, u.isDependedOn << 6 | u.hasRedundancy << 4 | u.isNonSync, 0, 0, h >>> 24 & 255, h >>> 16 & 255, h >>> 8 & 255, 255 & h], 12 + 16 * a)
            }
            return d.box(d.types.trun, s)
        }
    },
    {
        key: "mdat",
        value: function(e) {
            return d.box(d.types.mdat, e)
        }
    }]), d);
    function d() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, d)
    }
    n.init(),
    t.
default = n
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, null, [{
        key: "getSilentFrame",
        value: function(e, t) {
            if ("mp4a.40.2" === e) {
                if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224])
            } else {
                if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
            }
            return null
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s)
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    function a(e, t) {
        if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    t.SampleInfo = function e(t, i, r, n, s) {
        a(this, e),
        this.dts = t,
        this.pts = i,
        this.duration = r,
        this.originalDts = n,
        this.isSyncPoint = s,
        this.fileposition = null
    },
    t.MediaSegmentInfo = (r(s, [{
        key: "appendSyncPoint",
        value: function(e) {
            e.isSyncPoint = !0,
            this.syncPoints.push(e)
        }
    }]), s);
    function s() {
        a(this, s),
        this.beginDts = 0,
        this.endDts = 0,
        this.beginPts = 0,
        this.endPts = 0,
        this.originalBeginDts = 0,
        this.originalEndDts = 0,
        this.syncPoints = [],
        this.firstSample = null,
        this.lastSample = null
    }
    t.IDRSampleList = (r(o, [{
        key: "clear",
        value: function() {
            this._list = []
        }
    },
    {
        key: "appendArray",
        value: function(e) {
            var t = this._list;
            0 !== e.length && (0 < t.length && e[0].originalDts < t[t.length - 1].originalDts && this.clear(), Array.prototype.push.apply(t, e))
        }
    },
    {
        key: "getLastSyncPointBeforeDts",
        value: function(e) {
            if (0 == this._list.length) return null;
            var t = this._list,
            i = 0,
            r = t.length - 1,
            n = 0,
            s = 0,
            a = r;
            for (e < t[0].dts && (i = 0, s = a + 1); s <= a;) {
                if ((n = s + Math.floor((a - s) / 2)) === r || e >= t[n].dts && e < t[n + 1].dts) {
                    i = n;
                    break
                }
                t[n].dts < e ? s = n + 1 : a = n - 1
            }
            return this._list[i]
        }
    }]), o);
    function o() {
        a(this, o),
        this._list = []
    }
    t.MediaSegmentInfoList = (r(l, [{
        key: "isEmpty",
        value: function() {
            return 0 === this._list.length
        }
    },
    {
        key: "clear",
        value: function() {
            this._list = [],
            this._lastAppendLocation = -1
        }
    },
    {
        key: "_searchNearestSegmentBefore",
        value: function(e) {
            var t = this._list;
            if (0 === t.length) return - 2;
            var i = t.length - 1,
            r = 0,
            n = 0,
            s = i,
            a = 0;
            if (e < t[0].originalBeginDts) return a = -1;
            for (; n <= s;) {
                if ((r = n + Math.floor((s - n) / 2)) === i || e > t[r].lastSample.originalDts && e < t[r + 1].originalBeginDts) {
                    a = r;
                    break
                }
                t[r].originalBeginDts < e ? n = r + 1 : s = r - 1
            }
            return a
        }
    },
    {
        key: "_searchNearestSegmentAfter",
        value: function(e) {
            return this._searchNearestSegmentBefore(e) + 1
        }
    },
    {
        key: "append",
        value: function(e) {
            var t = this._list,
            i = e,
            r = this._lastAppendLocation,
            n = 0; - 1 !== r && r < t.length && i.originalBeginDts >= t[r].lastSample.originalDts && (r === t.length - 1 || r < t.length - 1 && i.originalBeginDts < t[r + 1].originalBeginDts) ? n = r + 1 : 0 < t.length && (n = this._searchNearestSegmentBefore(i.originalBeginDts) + 1),
            this._lastAppendLocation = n,
            this._list.splice(n, 0, i)
        }
    },
    {
        key: "getLastSegmentBefore",
        value: function(e) {
            var t = this._searchNearestSegmentBefore(e);
            return 0 <= t ? this._list[t] : null
        }
    },
    {
        key: "getLastSampleBefore",
        value: function(e) {
            var t = this.getLastSegmentBefore(e);
            return null != t ? t.lastSample: null
        }
    },
    {
        key: "getLastSyncPointBefore",
        value: function(e) {
            for (var t = this._searchNearestSegmentBefore(e), i = this._list[t].syncPoints; 0 === i.length && 0 < t;) t--,
            i = this._list[t].syncPoints;
            return 0 < i.length ? i[i.length - 1] : null
        }
    },
    {
        key: "type",
        get: function() {
            return this._type
        }
    },
    {
        key: "length",
        get: function() {
            return this._list.length
        }
    }]), l);
    function l(e) {
        a(this, l),
        this._type = e,
        this._list = [],
        this._lastAppendLocation = -1
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var a = p(i(346)),
    s = p(i(371)),
    o = i(351),
    l = p(i(372)),
    u = p(i(373)),
    h = (p(i(374)), p(i(375))),
    d = p(i(376)),
    c = p(i(377)),
    f = p(i(378)),
    m = i(352);
    function p(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var v = (r(_, null, [{
        key: "isSupported",
        value: function() {
            return d.
        default.isSupported()
        }
    }]), r(_, [{
        key: "destroy",
        value: function() {
            this._loader && (this._loader.isWorking() && this._loader.abort(), this._loader.destroy(), this._loader = null),
            this._loaderClass = null,
            this._dataSource = null,
            this._stashBuffer = null,
            this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0,
            this._currentRange = null,
            this._speedSampler = null,
            this._isEarlyEofReconnecting = !1,
            this._onDataArrival = null,
            this._onSeeked = null,
            this._onError = null,
            this._onComplete = null,
            this._onCommand = null,
            this._onRedirect = null,
            this._onRecoveredEarlyEof = null,
            this._extraData = null
        }
    },
    {
        key: "isWorking",
        value: function() {
            return this._loader && this._loader.isWorking() && !this._paused
        }
    },
    {
        key: "isPaused",
        value: function() {
            return this._paused
        }
    },
    {
        key: "_selectSeekHandler",
        value: function() {
            if ("fmp4" !== this._mediaType) {
                var e = this._config;
                if ("range" === e.seekType) this._seekHandler = new c.
            default(this._config.rangeLoadZeroStart);
                else if ("param" === e.seekType) {
                    var t = e.seekParamStart || "bstart",
                    i = e.seekParamEnd || "bend";
                    this._seekHandler = new f.
                default(t, i)
                } else if ("custom" === e.seekType) {
                    if ("function" != typeof e.customSeekHandler) throw new m.InvalidArgumentException("Custom seekType specified in config but invalid customSeekHandler!");
                    this._seekHandler = new e.customSeekHandler
                }
            }
        }
    },
    {
        key: "_selectLoader",
        value: function() {
            if (null != this._config.customLoader) this._loaderClass = this._config.customLoader;
            else if (this._isWebSocketURL) {
                if (!d.
            default.isSupported()) throw new m.RuntimeException("Your browser doesn't support websocket !");
                this._loaderClass = d.
            default
            } else if (l.
        default.isSupported()) this._loaderClass = l.
        default;
            else if (u.
        default.isSupported()) this._loaderClass = u.
        default;
            else {
                if (!h.
            default.isSupported()) throw new m.RuntimeException("Your browser doesn't support xhr with arraybuffer responseType!");
                this._loaderClass = h.
            default
            }
        }
    },
    {
        key: "_createLoader",
        value: function() {
            this._loader = new this._loaderClass(this._seekHandler, this._config),
            !1 === this._loader.needStashBuffer && (this._enableStash = !1),
            this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this),
            this._loader.onURLRedirect = this._onURLRedirect.bind(this),
            this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this),
            this._loader.onComplete = this._onLoaderComplete.bind(this),
            this._loader.onError = this._onLoaderError.bind(this),
            this._loader.onCommand = this._onCmdResponse.bind(this)
        }
    },
    {
        key: "open",
        value: function(e) {
            this._currentRange = {
                from: 0,
                to: -1
            },
            e && (this._currentRange.from = e),
            this._loader ? (this._speedSampler.reset(), e || (this._fullRequestFlag = !0), this._loader.open(this._dataSource, Object.assign({},
            this._currentRange))) : this._onLoaderError(o.LoaderErrors.UNSUPPORT, {
                code: -1,
                msg: "unsupport websocket"
            })
        }
    },
    {
        key: "abort",
        value: function() {
            this._loader ? (this._loader.abort(), this._paused && (this._paused = !1, this._resumeFrom = 0)) : this._onLoaderError(o.LoaderErrors.UNSUPPORT, {
                code: -1,
                msg: "unsupport websocket"
            })
        }
    },
    {
        key: "sendcmd",
        value: function(e) {
            this._loader ? this._loader.send(e) : this._onLoaderError(o.LoaderErrors.UNSUPPORT, {
                code: -1,
                msg: "unsupport websocket"
            })
        }
    },
    {
        key: "pause",
        value: function() {
            this.isWorking() && ("fmp4" != this._mediaType && (this._loader.abort(), 0 !== this._stashUsed ? (this._resumeFrom = this._stashByteStart, this._currentRange.to = this._stashByteStart - 1) : this._resumeFrom = this._currentRange.to + 1, this._stashUsed = 0, this._stashByteStart = 0), this._paused = !0)
        }
    },
    {
        key: "resume",
        value: function() {
            if (this._paused && (this._paused = !1, "fmp4" != this._mediaType)) {
                var e = this._resumeFrom;
                this._resumeFrom = 0,
                this._internalSeek(e, !0)
            }
        }
    },
    {
        key: "seek",
        value: function(e) {
            this._paused = !1,
            "flv" === this._mediaType && (this._stashUsed = 0, this._stashByteStart = 0, this._internalSeek(e, !0))
        }
    },
    {
        key: "_internalSeek",
        value: function(e, t) {
            this._loader.isWorking() && this._loader.abort(),
            this._flushStashBuffer(t),
            this._loader.destroy(),
            this._loader = null;
            var i = {
                from: e,
                to: -1
            };
            this._currentRange = {
                from: i.from,
                to: -1
            },
            this._speedSampler.reset(),
            this._stashSize = this._stashInitialSize,
            this._createLoader(),
            this._loader.open(this._dataSource, i),
            this._onSeeked && this._onSeeked()
        }
    },
    {
        key: "updateUrl",
        value: function(e) {
            if (!e || "string" != typeof e || 0 === e.length) throw new m.InvalidArgumentException("Url must be a non-empty string!");
            this._dataSource.url = e
        }
    },
    {
        key: "_expandBuffer",
        value: function(e) {
            for (var t = this._stashSize; t + 1048576 < e;) t *= 2;
            if ((t += 1048576) !== this._bufferSize) {
                var i = new ArrayBuffer(t);
                if (0 < this._stashUsed) {
                    var r = new Uint8Array(this._stashBuffer, 0, this._stashUsed);
                    new Uint8Array(i, 0, t).set(r, 0)
                }
                this._stashBuffer = i,
                this._bufferSize = t
            }
        }
    },
    {
        key: "_normalizeSpeed",
        value: function(e) {
            var t = this._speedNormalizeList,
            i = t.length - 1,
            r = 0,
            n = 0,
            s = i;
            if (e < t[0]) return t[0];
            for (; n <= s;) {
                if ((r = n + Math.floor((s - n) / 2)) === i || e >= t[r] && e < t[r + 1]) return t[r];
                t[r] < e ? n = r + 1 : s = r - 1
            }
        }
    },
    {
        key: "_adjustStashSize",
        value: function(e) {
            var t = 0;
            8192 < (t = this._config.isLive ? e: e < 512 ? e: 512 <= e && e <= 1024 ? Math.floor(1.5 * e) : 2 * e) && (t = 8192);
            var i = 1024 * t + 1048576;
            this._bufferSize < i && this._expandBuffer(i),
            this._stashSize = 1024 * t
        }
    },
    {
        key: "_dispatchChunks",
        value: function(e, t) {
            return this._currentRange.to = t + e.byteLength - 1,
            this._onDataArrival(e, t)
        }
    },
    {
        key: "_onURLRedirect",
        value: function(e) {
            this._redirectedURL = e,
            this._onRedirect && this._onRedirect(e)
        }
    },
    {
        key: "_onContentLengthKnown",
        value: function(e) {
            e && this._fullRequestFlag && (this._totalLength = e, this._fullRequestFlag = !1)
        }
    },
    {
        key: "_onLoaderChunkArrival",
        value: function(e, t, i) {
            if (!this._onDataArrival) throw new m.IllegalStateException("IOController: No existing consumer (onDataArrival) callback!");
            if (this._speedSampler.addBytes(e.byteLength), "fmp4" != this._mediaType) {
                if (!this._paused) {
                    this._isEarlyEofReconnecting && (this._isEarlyEofReconnecting = !1, this._onRecoveredEarlyEof && this._onRecoveredEarlyEof());
                    var r = this._speedSampler.lastSecondKBps;
                    if (0 !== r) {
                        var n = this._normalizeSpeed(r);
                        this._speedNormalized !== n && (this._speedNormalized = n, this._adjustStashSize(n))
                    }
                    if (this._enableStash) if (0 === this._stashUsed && 0 === this._stashByteStart && (this._stashByteStart = t), this._stashUsed + e.byteLength <= this._stashSize) new Uint8Array(this._stashBuffer, 0, this._stashSize).set(new Uint8Array(e), this._stashUsed),
                    this._stashUsed += e.byteLength;
                    else {
                        var s = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
                        if (0 < this._stashUsed) {
                            var a = this._stashBuffer.slice(0, this._stashUsed),
                            o = this._dispatchChunks(a, this._stashByteStart);
                            if (o < a.byteLength) {
                                if (0 < o) {
                                    var l = new Uint8Array(a, o);
                                    s.set(l, 0),
                                    this._stashUsed = l.byteLength,
                                    this._stashByteStart += o
                                }
                            } else this._stashUsed = 0,
                            this._stashByteStart += o;
                            this._stashUsed + e.byteLength > this._bufferSize && (this._expandBuffer(this._stashUsed + e.byteLength), s = new Uint8Array(this._stashBuffer, 0, this._bufferSize)),
                            s.set(new Uint8Array(e), this._stashUsed),
                            this._stashUsed += e.byteLength
                        } else {
                            var u = this._dispatchChunks(e, t);
                            if (u < e.byteLength) {
                                var h = e.byteLength - u;
                                h > this._bufferSize && (this._expandBuffer(h), s = new Uint8Array(this._stashBuffer, 0, this._bufferSize)),
                                s.set(new Uint8Array(e, u), 0),
                                this._stashUsed += h,
                                this._stashByteStart = t + u
                            }
                        }
                    } else if (0 === this._stashUsed) {
                        var d = this._dispatchChunks(e, t);
                        if (d < e.byteLength) {
                            var c = e.byteLength - d;
                            c > this._bufferSize && this._expandBuffer(c),
                            new Uint8Array(this._stashBuffer, 0, this._bufferSize).set(new Uint8Array(e, d), 0),
                            this._stashUsed += c,
                            this._stashByteStart = t + d
                        }
                    } else {
                        this._stashUsed + e.byteLength > this._bufferSize && this._expandBuffer(this._stashUsed + e.byteLength);
                        var f = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
                        f.set(new Uint8Array(e), this._stashUsed),
                        this._stashUsed += e.byteLength;
                        var p = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart);
                        if (p < this._stashUsed && 0 < p) {
                            var v = new Uint8Array(this._stashBuffer, p);
                            f.set(v, 0)
                        }
                        this._stashUsed -= p,
                        this._stashByteStart += p
                    }
                }
            } else this._onDataArrival(e, t)
        }
    },
    {
        key: "_flushStashBuffer",
        value: function(e) {
            if (0 < this._stashUsed) {
                var t = this._stashBuffer.slice(0, this._stashUsed),
                i = this._dispatchChunks(t, this._stashByteStart),
                r = t.byteLength - i;
                if (i < t.byteLength) {
                    if (!e) {
                        if (0 < i) {
                            var n = new Uint8Array(this._stashBuffer, 0, this._bufferSize),
                            s = new Uint8Array(t, i);
                            n.set(s, 0),
                            this._stashUsed = s.byteLength,
                            this._stashByteStart += i
                        }
                        return 0
                    }
                    a.
                default.w(this.TAG, r + " bytes unconsumed data remain when flush buffer, dropped")
                }
                return this._stashUsed = 0,
                this._stashByteStart = 0,
                r
            }
            return 0
        }
    },
    {
        key: "_onLoaderComplete",
        value: function(e, t) {
            this._flushStashBuffer(!0),
            this._onComplete && this._onComplete(this._extraData)
        }
    },
    {
        key: "_onCmdResponse",
        value: function(e) {
            this._onCommand && this._onCommand(e)
        }
    },
    {
        key: "_onLoaderError",
        value: function(e, t) {
            switch (a.
        default.e(this.TAG, "Loader error, code = " + t.code + ", msg = " + t.msg), this._flushStashBuffer(!1), this._isEarlyEofReconnecting && (this._isEarlyEofReconnecting = !1, e = o.LoaderErrors.UNRECOVERABLE_EARLY_EOF), e) {
            case o.LoaderErrors.EARLY_EOF:
                if (!this._config.isLive && this._totalLength) {
                    var i = this._currentRange.to + 1;
                    return void(i < this._totalLength && (a.
                default.w(this.TAG, "Connection lost, trying reconnect..."), this._isEarlyEofReconnecting = !0, this._internalSeek(i, !1)))
                }
                e = o.LoaderErrors.UNRECOVERABLE_EARLY_EOF;
                break;
            case o.LoaderErrors.UNRECOVERABLE_EARLY_EOF:
            case o.LoaderErrors.CONNECTING_TIMEOUT:
            case o.LoaderErrors.HTTP_STATUS_CODE_INVALID:
            case o.LoaderErrors.EXCEPTION:
            }
            if (!this._onError) throw new m.RuntimeException("IOException: " + t.msg);
            this._onError(e, t)
        }
    },
    {
        key: "status",
        get: function() {
            return this._loader.status
        }
    },
    {
        key: "extraData",
        get: function() {
            return this._extraData
        },
        set: function(e) {
            this._extraData = e
        }
    },
    {
        key: "onDataArrival",
        get: function() {
            return this._onDataArrival
        },
        set: function(e) {
            this._onDataArrival = e
        }
    },
    {
        key: "onCommand",
        get: function() {
            return this._onCommand
        },
        set: function(e) {
            this._onCommand = e
        }
    },
    {
        key: "onSeeked",
        get: function() {
            return this._onSeeked
        },
        set: function(e) {
            this._onSeeked = e
        }
    },
    {
        key: "onError",
        get: function() {
            return this._onError
        },
        set: function(e) {
            this._onError = e
        }
    },
    {
        key: "onComplete",
        get: function() {
            return this._onComplete
        },
        set: function(e) {
            this._onComplete = e
        }
    },
    {
        key: "onRedirect",
        get: function() {
            return this._onRedirect
        },
        set: function(e) {
            this._onRedirect = e
        }
    },
    {
        key: "onRecoveredEarlyEof",
        get: function() {
            return this._onRecoveredEarlyEof
        },
        set: function(e) {
            this._onRecoveredEarlyEof = e
        }
    },
    {
        key: "currentURL",
        get: function() {
            return this._dataSource.url
        }
    },
    {
        key: "hasRedirect",
        get: function() {
            return null != this._redirectedURL || null != this._dataSource.redirectedURL
        }
    },
    {
        key: "currentRedirectedURL",
        get: function() {
            return this._redirectedURL || this._dataSource.redirectedURL
        }
    },
    {
        key: "currentSpeed",
        get: function() {
            return this._loaderClass === h.
        default ? this._loader.currentSpeed: this._speedSampler.lastSecondKBps
        }
    },
    {
        key: "loaderType",
        get: function() {
            return this._loader.type
        }
    }]), _);
    function _(e, t, i) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, _),
        this.TAG = "IOController",
        this._config = t,
        this._extraData = i,
        this._stashInitialSize = 393216,
        null != t.stashInitialSize && 0 < t.stashInitialSize && (this._stashInitialSize = t.stashInitialSize),
        this._stashUsed = 0,
        this._stashSize = this._stashInitialSize,
        this._bufferSize = 3145728,
        this._stashBuffer = new ArrayBuffer(this._bufferSize),
        this._stashByteStart = 0,
        !(this._enableStash = !0) === t.enableStashBuffer && (this._enableStash = !1),
        this._loader = null,
        this._loaderClass = null,
        this._seekHandler = null,
        this._dataSource = e,
        this._mediaType = "string" == typeof e.mediaType ? e.mediaType.toLowerCase() : "",
        "fmp4" != this._mediaType ? this._isWebSocketURL = /wss?:\/\/(.+?)/.test(e.url) : this._isWebSocketURL = !0,
        this._refTotalLength = e.filesize ? e.filesize: null,
        this._totalLength = this._refTotalLength,
        this._fullRequestFlag = !1,
        this._currentRange = null,
        this._redirectedURL = null,
        this._speedNormalized = 0,
        this._speedSampler = new s.
    default,
        this._speedNormalizeList = [64, 128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096],
        this._isEarlyEofReconnecting = !1,
        this._paused = !1,
        this._resumeFrom = 0,
        this._onDataArrival = null,
        this._onSeeked = null,
        this._onError = null,
        this._onComplete = null,
        this._onCommand = null,
        this._onRedirect = null,
        this._onRecoveredEarlyEof = null,
        this._selectSeekHandler(),
        this._selectLoader(),
        this._createLoader()
    }
    t.
default = v
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "reset",
        value: function() {
            this._firstCheckpoint = this._lastCheckpoint = 0,
            this._totalBytes = this._intervalBytes = 0,
            this._lastSecondBytes = 0
        }
    },
    {
        key: "addBytes",
        value: function(e) {
            0 === this._firstCheckpoint ? (this._firstCheckpoint = this._now(), this._lastCheckpoint = this._firstCheckpoint, this._intervalBytes += e, this._totalBytes += e) : this._now() - this._lastCheckpoint < 1e3 ? (this._intervalBytes += e, this._totalBytes += e) : (this._lastSecondBytes = this._intervalBytes, this._intervalBytes = e, this._totalBytes += e, this._lastCheckpoint = this._now())
        }
    },
    {
        key: "currentKBps",
        get: function() {
            this.addBytes(0);
            var e = (this._now() - this._lastCheckpoint) / 1e3;
            return 0 == e && (e = 1),
            this._intervalBytes / e / 1024
        }
    },
    {
        key: "lastSecondKBps",
        get: function() {
            return this.addBytes(0),
            0 !== this._lastSecondBytes ? this._lastSecondBytes / 1024 : 500 <= this._now() - this._lastCheckpoint ? this.currentKBps: 0
        }
    },
    {
        key: "averageKBps",
        get: function() {
            var e = (this._now() - this._firstCheckpoint) / 1e3;
            return this._totalBytes / e / 1024
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s),
        this._firstCheckpoint = 0,
        this._lastCheckpoint = 0,
        this._intervalBytes = 0,
        this._totalBytes = 0,
        this._lastSecondBytes = 0,
        self.performance && self.performance.now ? this._now = self.performance.now.bind(self.performance) : this._now = Date.now
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    s(i(346));
    var o = s(i(355)),
    d = i(351),
    c = i(352);
    function s(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var a = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (l, d.BaseLoader), r(l, null, [{
        key: "isSupported",
        value: function() {
            try {
                var e = o.
            default.msedge && 15048 <= o.
            default.version.minor,
                t = !o.
            default.msedge || e;
                return self.fetch && self.ReadableStream && t
            } catch(e) {
                return ! 1
            }
        }
    }]), r(l, [{
        key: "destroy",
        value: function() {
            this.isWorking() && this.abort(),
            function e(t, i, r) {
                null === t && (t = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(t, i);
                if (void 0 === n) {
                    var s = Object.getPrototypeOf(t);
                    return null === s ? void 0 : e(s, i, r)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                return void 0 !== a ? a.call(r) : void 0
            } (l.prototype.__proto__ || Object.getPrototypeOf(l.prototype), "destroy", this).call(this)
        }
    },
    {
        key: "open",
        value: function(e, t) {
            var r = this;
            this._dataSource = e,
            this._range = t;
            var i = e.url;
            this._config.reuseRedirectedURL && null != e.redirectedURL && (i = e.redirectedURL);
            var n = this._seekHandler.getConfig(i, t),
            s = new self.Headers;
            if ("object" === h(n.headers)) {
                var a = n.headers;
                for (var o in a) a.hasOwnProperty(o) && s.append(o, a[o])
            }
            var l = {
                method: "GET",
                headers: s,
                mode: "cors",
                cache: "default",
                referrerPolicy: "no-referrer-when-downgrade"
            };
            if ("object" === h(this._config.headers)) for (var u in this._config.headers) s.append(u, this._config.headers[u]); ! 1 === e.cors && (l.mode = "same-origin"),
            e.withCredentials && (l.credentials = "include"),
            e.referrerPolicy && (l.referrerPolicy = e.referrerPolicy),
            this._status = d.LoaderStatus.kConnecting,
            fetch,
            self.fetch(n.url, l).then(function(e) {
                if (r._requestAbort) return r._requestAbort = !1,
                void(r._status = d.LoaderStatus.kIdle);
                if (e.ok && 200 <= e.status && e.status <= 299) {
                    if (e.url !== n.url && r._onURLRedirect) {
                        var t = r._seekHandler.removeURLParameters(e.url);
                        r._onURLRedirect(t)
                    }
                    var i = e.headers.get("Content-Length");
                    return null != i && (r._contentLength = parseInt(i), 0 !== r._contentLength && r._onContentLengthKnown && r._onContentLengthKnown(r._contentLength)),
                    r._pump.call(r, e.body.getReader())
                }
                if (r._status = d.LoaderStatus.kError, !r._onError) throw new c.RuntimeException("FetchStreamLoader: Http code invalid, " + e.status + " " + e.statusText);
                r._onError(d.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
                    code: e.status,
                    msg: e.statusText
                })
            }).
            catch(function(e) {
                if (!r._abortController || !r._abortController.signal.aborted) {
                    if (r._status = d.LoaderStatus.kError, !r._onError) throw e;
                    r._onError(d.LoaderErrors.EXCEPTION, {
                        code: -1,
                        msg: e.message
                    })
                }
            })
        }
    },
    {
        key: "abort",
        value: function() {
            this._requestAbort = !0,
            this._abortController && this._abortController.abort(),
            this._pFetch && this._pFetch.abort()
        }
    },
    {
        key: "_pump",
        value: function(s) {
            var a = this;
            return s.read().then(function(e) {
                if (e.done) if (null !== a._contentLength && a._receivedLength < a._contentLength) {
                    a._status = d.LoaderStatus.kError;
                    var t = d.LoaderErrors.EARLY_EOF,
                    i = {
                        code: -1,
                        msg: "Fetch stream meet Early-EOF"
                    };
                    if (!a._onError) throw new c.RuntimeException(i.msg);
                    a._onError(t, i)
                } else a._status = d.LoaderStatus.kComplete,
                a._onComplete && a._onComplete(a._range.from, a._range.from + a._receivedLength - 1);
                else {
                    if (!0 === a._requestAbort) return a._requestAbort = !1,
                    a._status = d.LoaderStatus.kComplete,
                    s.cancel();
                    a._status = d.LoaderStatus.kBuffering;
                    var r = e.value.buffer,
                    n = a._range.from + a._receivedLength;
                    a._receivedLength += r.byteLength,
                    a._onDataArrival && a._onDataArrival(r, n, a._receivedLength),
                    a._pump(s)
                }
            }).
            catch(function(e) {
                if (11 !== e.code || !o.
            default.msedge) {
                    a._status = d.LoaderStatus.kError;
                    var t = 0,
                    i = null;
                    if (i = 19 !== e.code && "network error" !== e.message || !(null === a._contentLength || null !== a._contentLength && a._receivedLength < a._contentLength) ? (t = d.LoaderErrors.EXCEPTION, {
                        code: e.code,
                        msg: e.message
                    }) : (t = d.LoaderErrors.EARLY_EOF, {
                        code: e.code,
                        msg: "Fetch stream meet Early-EOF"
                    }), !a._onError) throw new c.RuntimeException(i.msg);
                    a._onError(t, i)
                }
            })
        }
    }]), l);
    function l(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, l);
        var i = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (l.__proto__ || Object.getPrototypeOf(l)).call(this, "fetch-stream-loader"));
        return i.TAG = "FetchStreamLoader",
        i._seekHandler = e,
        i._config = t,
        i._needStash = !0,
        i._requestAbort = !1,
        i._contentLength = null,
        i._receivedLength = 0,
        i._abortController = null,
        i._pFetch = null,
        i
    }
    t.
default = a
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s, a = i(346),
    o = (s = a) && s.__esModule ? s: {
    default:
        s
    },
    h = i(351),
    l = i(352);
    var d = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (c, h.BaseLoader), r(c, null, [{
        key: "isSupported",
        value: function() {
            try {
                var e = new XMLHttpRequest;
                return e.open("GET", "https://example.com", !0),
                (e.responseType = "moz-chunked-arraybuffer") === e.responseType
            } catch(e) {
                return o.
            default.w("MozChunkedLoader", e.message),
                !1
            }
        }
    }]), r(c, [{
        key: "destroy",
        value: function() {
            this.isWorking() && this.abort(),
            this._xhr && (this._xhr.onreadystatechange = null, this._xhr.onprogress = null, this._xhr.onloadend = null, this._xhr.onerror = null, this._xhr = null),
            function e(t, i, r) {
                null === t && (t = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(t, i);
                if (void 0 === n) {
                    var s = Object.getPrototypeOf(t);
                    return null === s ? void 0 : e(s, i, r)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                return void 0 !== a ? a.call(r) : void 0
            } (c.prototype.__proto__ || Object.getPrototypeOf(c.prototype), "destroy", this).call(this)
        }
    },
    {
        key: "open",
        value: function(e, t) {
            this._dataSource = e,
            this._range = t;
            var i = e.url;
            this._config.reuseRedirectedURL && null != e.redirectedURL && (i = e.redirectedURL);
            var r = this._seekHandler.getConfig(i, t);
            this._requestURL = r.url;
            var n = this._xhr = new XMLHttpRequest;
            if (n.open("GET", r.url, !0), n.responseType = "moz-chunked-arraybuffer", n.onreadystatechange = this._onReadyStateChange.bind(this), n.onprogress = this._onProgress.bind(this), n.onloadend = this._onLoadEnd.bind(this), n.onerror = this._onXhrError.bind(this), e.withCredentials && (n.withCredentials = !0), "object" === u(r.headers)) {
                var s = r.headers;
                for (var a in s) s.hasOwnProperty(a) && n.setRequestHeader(a, s[a])
            }
            if ("object" === u(this._config.headers)) {
                var o = this._config.headers;
                for (var l in o) o.hasOwnProperty(l) && n.setRequestHeader(l, o[l])
            }
            this._status = h.LoaderStatus.kConnecting,
            n.send()
        }
    },
    {
        key: "abort",
        value: function() {
            this._requestAbort = !0,
            this._xhr && this._xhr.abort(),
            this._status = h.LoaderStatus.kComplete
        }
    },
    {
        key: "_onReadyStateChange",
        value: function(e) {
            var t = e.target;
            if (2 === t.readyState) {
                if (null != t.responseURL && t.responseURL !== this._requestURL && this._onURLRedirect) {
                    var i = this._seekHandler.removeURLParameters(t.responseURL);
                    this._onURLRedirect(i)
                }
                if (0 !== t.status && (t.status < 200 || 299 < t.status)) {
                    if (this._status = h.LoaderStatus.kError, !this._onError) throw new l.RuntimeException("MozChunkedLoader: Http code invalid, " + t.status + " " + t.statusText);
                    this._onError(h.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
                        code: t.status,
                        msg: t.statusText
                    })
                } else this._status = h.LoaderStatus.kBuffering
            }
        }
    },
    {
        key: "_onProgress",
        value: function(e) {
            if (this._status !== h.LoaderStatus.kError) {
                null === this._contentLength && null !== e.total && 0 !== e.total && (this._contentLength = e.total, this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength));
                var t = e.target.response,
                i = this._range.from + this._receivedLength;
                this._receivedLength += t.byteLength,
                this._onDataArrival && this._onDataArrival(t, i, this._receivedLength)
            }
        }
    },
    {
        key: "_onLoadEnd",
        value: function(e) { ! 0 !== this._requestAbort ? this._status !== h.LoaderStatus.kError && (this._status = h.LoaderStatus.kComplete, this._onComplete && this._onComplete(this._range.from, this._range.from + this._receivedLength - 1)) : this._requestAbort = !1
        }
    },
    {
        key: "_onXhrError",
        value: function(e) {
            this._status = h.LoaderStatus.kError;
            var t = 0,
            i = null;
            if (i = this._contentLength && e.loaded < this._contentLength ? (t = h.LoaderErrors.EARLY_EOF, {
                code: -1,
                msg: "Moz-Chunked stream meet Early-Eof"
            }) : (t = h.LoaderErrors.EXCEPTION, {
                code: -1,
                msg: e.constructor.name + " " + e.type
            }), !this._onError) throw new l.RuntimeException(i.msg);
            this._onError(t, i)
        }
    }]), c);
    function c(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, c);
        var i = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (c.__proto__ || Object.getPrototypeOf(c)).call(this, "xhr-moz-chunked-loader"));
        return i.TAG = "MozChunkedLoader",
        i._seekHandler = e,
        i._config = t,
        i._needStash = !0,
        i._xhr = null,
        i._requestAbort = !1,
        i._contentLength = null,
        i._receivedLength = 0,
        i
    }
    t.
default = d
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s, a = i(346),
    o = (s = a) && s.__esModule ? s: {
    default:
        s
    },
    c = i(351),
    l = i(352);
    var u = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (h, c.BaseLoader), r(h, null, [{
        key: "isSupported",
        value: function() {
            try {
                if (void 0 === self.MSStream || void 0 === self.MSStreamReader) return ! 1;
                var e = new XMLHttpRequest;
                return e.open("GET", "https://example.com", !0),
                (e.responseType = "ms-stream") === e.responseType
            } catch(e) {
                return o.
            default.w("MSStreamLoader", e.message),
                !1
            }
        }
    }]), r(h, [{
        key: "destroy",
        value: function() {
            this.isWorking() && this.abort(),
            this._reader && (this._reader.onprogress = null, this._reader.onload = null, this._reader.onerror = null, this._reader = null),
            this._xhr && (this._xhr.onreadystatechange = null, this._xhr = null),
            function e(t, i, r) {
                null === t && (t = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(t, i);
                if (void 0 === n) {
                    var s = Object.getPrototypeOf(t);
                    return null === s ? void 0 : e(s, i, r)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                return void 0 !== a ? a.call(r) : void 0
            } (h.prototype.__proto__ || Object.getPrototypeOf(h.prototype), "destroy", this).call(this)
        }
    },
    {
        key: "open",
        value: function(e, t) {
            this._internalOpen(e, t, !1)
        }
    },
    {
        key: "_internalOpen",
        value: function(e, t, i) {
            this._dataSource = e,
            i ? this._currentRange = t: this._totalRange = t;
            var r = e.url;
            this._config.reuseRedirectedURL && (null != this._currentRedirectedURL ? r = this._currentRedirectedURL: null != e.redirectedURL && (r = e.redirectedURL));
            var n = this._seekHandler.getConfig(r, t);
            this._currentRequestURL = n.url;
            var s = this._reader = new self.MSStreamReader;
            s.onprogress = this._msrOnProgress.bind(this),
            s.onload = this._msrOnLoad.bind(this),
            s.onerror = this._msrOnError.bind(this);
            var a = this._xhr = new XMLHttpRequest;
            if (a.open("GET", n.url, !0), a.responseType = "ms-stream", a.onreadystatechange = this._xhrOnReadyStateChange.bind(this), a.onerror = this._xhrOnError.bind(this), e.withCredentials && (a.withCredentials = !0), "object" === d(n.headers)) {
                var o = n.headers;
                for (var l in o) o.hasOwnProperty(l) && a.setRequestHeader(l, o[l])
            }
            if ("object" === d(this._config.headers)) {
                var u = this._config.headers;
                for (var h in u) u.hasOwnProperty(h) && a.setRequestHeader(h, u[h])
            }
            this._isReconnecting ? this._isReconnecting = !1 : this._status = c.LoaderStatus.kConnecting,
            a.send()
        }
    },
    {
        key: "abort",
        value: function() {
            this._internalAbort(),
            this._status = c.LoaderStatus.kComplete
        }
    },
    {
        key: "_internalAbort",
        value: function() {
            this._reader && (1 === this._reader.readyState && this._reader.abort(), this._reader.onprogress = null, this._reader.onload = null, this._reader.onerror = null, this._reader = null),
            this._xhr && (this._xhr.abort(), this._xhr.onreadystatechange = null, this._xhr = null)
        }
    },
    {
        key: "_xhrOnReadyStateChange",
        value: function(e) {
            var t = e.target;
            if (2 === t.readyState) if (200 <= t.status && t.status <= 299) {
                if (this._status = c.LoaderStatus.kBuffering, null != t.responseURL) {
                    var i = this._seekHandler.removeURLParameters(t.responseURL);
                    t.responseURL !== this._currentRequestURL && i !== this._currentRedirectedURL && (this._currentRedirectedURL = i, this._onURLRedirect && this._onURLRedirect(i))
                }
                var r = t.getResponseHeader("Content-Length");
                if (null != r && null == this._contentLength) {
                    var n = parseInt(r);
                    0 < n && (this._contentLength = n, this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength))
                }
            } else {
                if (this._status = c.LoaderStatus.kError, !this._onError) throw new l.RuntimeException("MSStreamLoader: Http code invalid, " + t.status + " " + t.statusText);
                this._onError(c.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
                    code: t.status,
                    msg: t.statusText
                })
            } else if (3 === t.readyState && 200 <= t.status && t.status <= 299) {
                this._status = c.LoaderStatus.kBuffering;
                var s = t.response;
                this._reader.readAsArrayBuffer(s)
            }
        }
    },
    {
        key: "_xhrOnError",
        value: function(e) {
            this._status = c.LoaderStatus.kError;
            var t = c.LoaderErrors.EXCEPTION,
            i = {
                code: -1,
                msg: e.constructor.name + " " + e.type
            };
            if (!this._onError) throw new l.RuntimeException(i.msg);
            this._onError(t, i)
        }
    },
    {
        key: "_msrOnProgress",
        value: function(e) {
            var t = e.target.result;
            if (null != t) {
                var i = t.slice(this._lastTimeBufferSize);
                this._lastTimeBufferSize = t.byteLength;
                var r = this._totalRange.from + this._receivedLength;
                this._receivedLength += i.byteLength,
                this._onDataArrival && this._onDataArrival(i, r, this._receivedLength),
                t.byteLength >= this._bufferLimit && (o.
            default.v(this.TAG, "MSStream buffer exceeded max size near " + (r + i.byteLength) + ", reconnecting..."), this._doReconnectIfNeeded())
            } else this._doReconnectIfNeeded()
        }
    },
    {
        key: "_doReconnectIfNeeded",
        value: function() {
            if (null == this._contentLength || this._receivedLength < this._contentLength) {
                this._isReconnecting = !0,
                this._lastTimeBufferSize = 0,
                this._internalAbort();
                var e = {
                    from: this._totalRange.from + this._receivedLength,
                    to: -1
                };
                this._internalOpen(this._dataSource, e, !0)
            }
        }
    },
    {
        key: "_msrOnLoad",
        value: function(e) {
            this._status = c.LoaderStatus.kComplete,
            this._onComplete && this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1)
        }
    },
    {
        key: "_msrOnError",
        value: function(e) {
            this._status = c.LoaderStatus.kError;
            var t = 0,
            i = null;
            if (i = this._contentLength && this._receivedLength < this._contentLength ? (t = c.LoaderErrors.EARLY_EOF, {
                code: -1,
                msg: "MSStream meet Early-Eof"
            }) : (t = c.LoaderErrors.EARLY_EOF, {
                code: -1,
                msg: e.constructor.name + " " + e.type
            }), !this._onError) throw new l.RuntimeException(i.msg);
            this._onError(t, i)
        }
    }]), h);
    function h(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, h);
        var i = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (h.__proto__ || Object.getPrototypeOf(h)).call(this, "xhr-msstream-loader"));
        return i.TAG = "MSStreamLoader",
        i._seekHandler = e,
        i._config = t,
        i._needStash = !0,
        i._xhr = null,
        i._reader = null,
        i._totalRange = null,
        i._currentRange = null,
        i._currentRequestURL = null,
        i._currentRedirectedURL = null,
        i._contentLength = null,
        i._receivedLength = 0,
        i._bufferLimit = 16777216,
        i._lastTimeBufferSize = 0,
        i._isReconnecting = !1,
        i
    }
    t.
default = u
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
    function(e) {
        return typeof e
    }: function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
    },
    r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s = h(i(346)),
    a = h(i(371)),
    o = i(351),
    l = i(352);
    function h(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    var d = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (c, o.BaseLoader), r(c, null, [{
        key: "isSupported",
        value: function() {
            try {
                var e = new XMLHttpRequest;
                return e.open("GET", "https://example.com", !0),
                (e.responseType = "arraybuffer") === e.responseType
            } catch(e) {
                return s.
            default.w("RangeLoader", e.message),
                !1
            }
        }
    }]), r(c, [{
        key: "destroy",
        value: function() {
            this.isWorking() && this.abort(),
            this._xhr && (this._xhr.onreadystatechange = null, this._xhr.onprogress = null, this._xhr.onload = null, this._xhr.onerror = null, this._xhr = null),
            function e(t, i, r) {
                null === t && (t = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(t, i);
                if (void 0 === n) {
                    var s = Object.getPrototypeOf(t);
                    return null === s ? void 0 : e(s, i, r)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                return void 0 !== a ? a.call(r) : void 0
            } (c.prototype.__proto__ || Object.getPrototypeOf(c.prototype), "destroy", this).call(this)
        }
    },
    {
        key: "open",
        value: function(e, t) {
            this._dataSource = e,
            this._range = t,
            this._status = o.LoaderStatus.kConnecting;
            var i = !1;
            null != this._dataSource.filesize && 0 !== this._dataSource.filesize && (i = !0, this._totalLength = this._dataSource.filesize),
            this._totalLengthReceived || i ? this._openSubRange() : (this._waitForTotalLength = !0, this._internalOpen(this._dataSource, {
                from: 0,
                to: -1
            }))
        }
    },
    {
        key: "_openSubRange",
        value: function() {
            var e = 1024 * this._currentChunkSizeKB,
            t = this._range.from + this._receivedLength,
            i = t + e;
            null != this._contentLength && i - this._range.from >= this._contentLength && (i = this._range.from + this._contentLength - 1),
            this._currentRequestRange = {
                from: t,
                to: i
            },
            this._internalOpen(this._dataSource, this._currentRequestRange)
        }
    },
    {
        key: "_internalOpen",
        value: function(e, t) {
            this._lastTimeLoaded = 0;
            var i = e.url;
            this._config.reuseRedirectedURL && (null != this._currentRedirectedURL ? i = this._currentRedirectedURL: null != e.redirectedURL && (i = e.redirectedURL));
            var r = this._seekHandler.getConfig(i, t);
            this._currentRequestURL = r.url;
            var n = this._xhr = new XMLHttpRequest;
            if (n.open("GET", r.url, !0), n.responseType = "arraybuffer", n.onreadystatechange = this._onReadyStateChange.bind(this), n.onprogress = this._onProgress.bind(this), n.onload = this._onLoad.bind(this), n.onerror = this._onXhrError.bind(this), e.withCredentials && (n.withCredentials = !0), "object" === u(r.headers)) {
                var s = r.headers;
                for (var a in s) s.hasOwnProperty(a) && n.setRequestHeader(a, s[a])
            }
            if ("object" === u(this._config.headers)) {
                var o = this._config.headers;
                for (var l in o) o.hasOwnProperty(l) && n.setRequestHeader(l, o[l])
            }
            n.send()
        }
    },
    {
        key: "abort",
        value: function() {
            this._requestAbort = !0,
            this._internalAbort(),
            this._status = o.LoaderStatus.kComplete
        }
    },
    {
        key: "_internalAbort",
        value: function() {
            this._xhr && (this._xhr.onreadystatechange = null, this._xhr.onprogress = null, this._xhr.onload = null, this._xhr.onerror = null, this._xhr.abort(), this._xhr = null)
        }
    },
    {
        key: "_onReadyStateChange",
        value: function(e) {
            var t = e.target;
            if (2 === t.readyState) {
                if (null != t.responseURL) {
                    var i = this._seekHandler.removeURLParameters(t.responseURL);
                    t.responseURL !== this._currentRequestURL && i !== this._currentRedirectedURL && (this._currentRedirectedURL = i, this._onURLRedirect && this._onURLRedirect(i))
                }
                if (200 <= t.status && t.status <= 299) {
                    if (this._waitForTotalLength) return;
                    this._status = o.LoaderStatus.kBuffering
                } else {
                    if (this._status = o.LoaderStatus.kError, !this._onError) throw new l.RuntimeException("RangeLoader: Http code invalid, " + t.status + " " + t.statusText);
                    this._onError(o.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
                        code: t.status,
                        msg: t.statusText
                    })
                }
            }
        }
    },
    {
        key: "_onProgress",
        value: function(e) {
            if (this._status !== o.LoaderStatus.kError) {
                if (null === this._contentLength) {
                    var t = !1;
                    if (this._waitForTotalLength) {
                        this._waitForTotalLength = !1,
                        t = this._totalLengthReceived = !0;
                        var i = e.total;
                        this._internalAbort(),
                        null != i & 0 !== i && (this._totalLength = i)
                    }
                    if ( - 1 === this._range.to ? this._contentLength = this._totalLength - this._range.from: this._contentLength = this._range.to - this._range.from + 1, t) return void this._openSubRange();
                    this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength)
                }
                var r = e.loaded - this._lastTimeLoaded;
                this._lastTimeLoaded = e.loaded,
                this._speedSampler.addBytes(r)
            }
        }
    },
    {
        key: "_normalizeSpeed",
        value: function(e) {
            var t = this._chunkSizeKBList,
            i = t.length - 1,
            r = 0,
            n = 0,
            s = i;
            if (e < t[0]) return t[0];
            for (; n <= s;) {
                if ((r = n + Math.floor((s - n) / 2)) === i || e >= t[r] && e < t[r + 1]) return t[r];
                t[r] < e ? n = r + 1 : s = r - 1
            }
        }
    },
    {
        key: "_onLoad",
        value: function(e) {
            if (this._status !== o.LoaderStatus.kError) if (this._waitForTotalLength) this._waitForTotalLength = !1;
            else {
                this._lastTimeLoaded = 0;
                var t = this._speedSampler.lastSecondKBps;
                if (0 === t && (this._zeroSpeedChunkCount++, 3 <= this._zeroSpeedChunkCount && (t = this._speedSampler.currentKBps)), 0 !== t) {
                    var i = this._normalizeSpeed(t);
                    this._currentSpeedNormalized !== i && (this._currentSpeedNormalized = i, this._currentChunkSizeKB = i)
                }
                var r = e.target.response,
                n = this._range.from + this._receivedLength;
                this._receivedLength += r.byteLength;
                var s = !1;
                null != this._contentLength && this._receivedLength < this._contentLength ? this._openSubRange() : s = !0,
                this._onDataArrival && this._onDataArrival(r, n, this._receivedLength),
                s && (this._status = o.LoaderStatus.kComplete, this._onComplete && this._onComplete(this._range.from, this._range.from + this._receivedLength - 1))
            }
        }
    },
    {
        key: "_onXhrError",
        value: function(e) {
            this._status = o.LoaderStatus.kError;
            var t = 0,
            i = null;
            if (i = this._contentLength && 0 < this._receivedLength && this._receivedLength < this._contentLength ? (t = o.LoaderErrors.EARLY_EOF, {
                code: -1,
                msg: "RangeLoader meet Early-Eof"
            }) : (t = o.LoaderErrors.EXCEPTION, {
                code: -1,
                msg: e.constructor.name + " " + e.type
            }), !this._onError) throw new l.RuntimeException(i.msg);
            this._onError(t, i)
        }
    },
    {
        key: "currentSpeed",
        get: function() {
            return this._speedSampler.lastSecondKBps
        }
    }]), c);
    function c(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, c);
        var i = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (c.__proto__ || Object.getPrototypeOf(c)).call(this, "xhr-range-loader"));
        return i.TAG = "RangeLoader",
        i._seekHandler = e,
        i._config = t,
        i._needStash = !1,
        i._chunkSizeKBList = [128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192],
        i._currentChunkSizeKB = 384,
        i._currentSpeedNormalized = 0,
        i._zeroSpeedChunkCount = 0,
        i._xhr = null,
        i._speedSampler = new a.
    default,
        i._requestAbort = !1,
        i._waitForTotalLength = !1,
        i._totalLengthReceived = !1,
        i._currentRequestURL = null,
        i._currentRedirectedURL = null,
        i._currentRequestRange = null,
        i._totalLength = null,
        i._contentLength = null,
        i._receivedLength = 0,
        i._lastTimeLoaded = 0,
        i
    }
    t.
default = d
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    };
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    var s, a = i(346),
    o = ((s = a) && s.__esModule, i(351)),
    l = i(352);
    var u = (function(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    } (h, o.BaseLoader), r(h, null, [{
        key: "isSupported",
        value: function() {
            try {
                return void 0 === self.WebSocket && window && void 0 === window.WebSocket && (self.WebSocket = window.WebSocket),
                void 0 !== self.WebSocket
            } catch(e) {
                return ! 1
            }
        }
    }]), r(h, [{
        key: "destroy",
        value: function() {
            this._ws && this.abort(),
            this._status = o.LoaderStatus.kIdle,
            this._onDataArrival = null,
            this._onError = null,
            this._onComplete = null,
            this._onCommand = null,
            function e(t, i, r) {
                null === t && (t = Function.prototype);
                var n = Object.getOwnPropertyDescriptor(t, i);
                if (void 0 === n) {
                    var s = Object.getPrototypeOf(t);
                    return null === s ? void 0 : e(s, i, r)
                }
                if ("value" in n) return n.value;
                var a = n.get;
                return void 0 !== a ? a.call(r) : void 0
            } (h.prototype.__proto__ || Object.getPrototypeOf(h.prototype), "destroy", this).call(this)
        }
    },
    {
        key: "isWorking",
        value: function() {
            return this._status === o.LoaderStatus.kConnecting || this._status === o.LoaderStatus.kBuffering
        }
    },
    {
        key: "open",
        value: function(e) {
            try {
                var t = this._ws = new self.WebSocket(e.url);
                t.binaryType = "arraybuffer",
                t.onopen = this._onWebSocketOpen.bind(this),
                t.onclose = this._onWebSocketClose.bind(this),
                t.onmessage = this._onWebSocketMessage.bind(this),
                t.onerror = this._onWebSocketError.bind(this),
                "fmp4" == e.mediaType && (this._channelInfo = e.channelInfo),
                this._status = o.LoaderStatus.kConnecting
            } catch(e) {
                this._status = o.LoaderStatus.kError;
                var i = {
                    code: e.code,
                    msg: e.message
                };
                if (!this._onError) throw new l.RuntimeException(i.msg);
                this._onError(o.LoaderErrors.EXCEPTION, i)
            }
        }
    },
    {
        key: "send",
        value: function(e) {
            var t = this._ws;
            if (t && 1 === t.readyState)"string" == typeof e ? t.send(e) : t.send(JSON.stringify(e));
            else {
                this._status = o.LoaderStatus.kError;
                var i = {
                    code: -1,
                    msg: "Unsupported WebSocket readyState while sending"
                };
                if (!this._onError) throw new l.RuntimeException(i.msg);
                this._onError(o.LoaderErrors.EXCEPTION, i)
            }
        }
    },
    {
        key: "abort",
        value: function() {
            var e = this._ws; ! e || 0 !== e.readyState && 1 !== e.readyState || (this._requestAbort = !0, e.close()),
            this._ws = null,
            this._status = o.LoaderStatus.kComplete
        }
    },
    {
        key: "_onWebSocketOpen",
        value: function(e) {
            this._status = o.LoaderStatus.kBuffering;
            var t = this._channelInfo;
            t && t.devicetype && "flv" === t.devicetype.toLowerCase() || this.send({
                type: "command",
                name: "StartStream",
                param: t
            })
        }
    },
    {
        key: "_onWebSocketClose",
        value: function(e) { ! 0 !== this._requestAbort ? (this._onComplete && this._status != o.LoaderStatus.kError && this._onComplete(0, this._receivedLength - 1), this._status = o.LoaderStatus.kComplete) : this._requestAbort = !1
        }
    },
    {
        key: "_onWebSocketMessage",
        value: function(e) {
            var t = this;
            if (e.data instanceof ArrayBuffer) this._dispatchArrayBuffer(e.data);
            else if ("string" == typeof e.data) this._onCommandResponse(e.data);
            else if (e.data instanceof Blob) {
                var i = new FileReader;
                i.onload = function() {
                    t._dispatchArrayBuffer(i.result)
                },
                i.readAsArrayBuffer(e.data)
            } else {
                this._status = o.LoaderStatus.kError;
                var r = {
                    code: -1,
                    msg: "Unsupported WebSocket message type: " + e.data.constructor.name
                };
                if (!this._onError) throw new l.RuntimeException(r.msg);
                this._onError(o.LoaderErrors.EXCEPTION, r)
            }
        }
    },
    {
        key: "_onCommandResponse",
        value: function(e) {
            this._onCommand && this._onCommand(e)
        }
    },
    {
        key: "_dispatchArrayBuffer",
        value: function(e) {
            var t = this._receivedLength;
            this._receivedLength += e.byteLength,
            this._onDataArrival && this._onDataArrival(e, t, this._receivedLength)
        }
    },
    {
        key: "_onWebSocketError",
        value: function(e) {
            if (!this._requestAbort) {
                this._status = o.LoaderStatus.kError;
                var t = {
                    code: e.code,
                    msg: e.message
                };
                if (!this._onError) throw new l.RuntimeException(t.msg);
                this._onError(o.LoaderErrors.CONNECTING_ERROR, t)
            }
        }
    },
    {
        key: "type",
        get: function() {
            return this._type
        }
    },
    {
        key: "status",
        get: function() {
            return this._status
        }
    },
    {
        key: "onDataArrival",
        get: function() {
            return this._onDataArrival
        },
        set: function(e) {
            this._onDataArrival = e
        }
    },
    {
        key: "onCommand",
        get: function() {
            return this._onCommand
        },
        set: function(e) {
            this._onCommand = e
        }
    },
    {
        key: "onError",
        get: function() {
            return this._onError
        },
        set: function(e) {
            this._onError = e
        }
    },
    {
        key: "onComplete",
        get: function() {
            return this._onComplete
        },
        set: function(e) {
            this._onComplete = e
        }
    }]), h);
    function h() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, h);
        var e = function(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return ! t || "object" != typeof t && "function" != typeof t ? e: t
        } (this, (h.__proto__ || Object.getPrototypeOf(h)).call(this, "websocket-loader"));
        return e.TAG = "WebSocketLoader",
        e._type = "websocket-loader",
        e._needStash = !0,
        e._status = o.LoaderStatus.kIdle,
        e._onDataArrival = null,
        e._onError = null,
        e._onComplete = null,
        e._onCommand = null,
        e._ws = null,
        e._requestAbort = !1,
        e._receivedLength = 0,
        e._channelInfo = null,
        e
    }
    t.
default = u
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "getConfig",
        value: function(e, t) {
            var i = {};
            if (0 !== t.from || -1 !== t.to) {
                var r = void 0;
                r = -1 !== t.to ? "bytes=" + t.from.toString() + "-" + t.to.toString() : "bytes=" + t.from.toString() + "-",
                i.Range = r
            } else this._zeroStart && (i.Range = "bytes=0-");
            return {
                url: e,
                headers: i
            }
        }
    },
    {
        key: "removeURLParameters",
        value: function(e) {
            return e
        }
    }]), s);
    function s(e) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s),
        this._zeroStart = e || !1
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, [{
        key: "getConfig",
        value: function(e, t) {
            var i = e;
            if (0 !== t.from || -1 !== t.to) {
                var r = !0; - 1 === i.indexOf("?") && (i += "?", r = !1),
                r && (i += "&"),
                i += this._startName + "=" + t.from.toString(),
                -1 !== t.to && (i += "&" + this._endName + "=" + t.to.toString())
            }
            return {
                url: i,
                headers: {}
            }
        }
    },
    {
        key: "removeURLParameters",
        value: function(e) {
            var t = e.split("?")[0],
            i = void 0,
            r = e.indexOf("?"); - 1 !== r && (i = e.substring(r + 1));
            var n = "";
            if (null != i && 0 < i.length) for (var s = i.split("&"), a = 0; a < s.length; a++) {
                var o = s[a].split("="),
                l = 0 < a;
                o[0] !== this._startName && o[0] !== this._endName && (l && (n += "&"), n += s[a])
            }
            return 0 === n.length ? t: t + "?" + n
        }
    }]), s);
    function s(e, t) { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s),
        this._startName = e,
        this._endName = t
    }
    t.
default = n
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.
default = {
        IO_ERROR: "io_error",
        DEMUX_ERROR: "demux_error",
        INIT_SEGMENT: "init_segment",
        MEDIA_SEGMENT: "media_segment",
        LOADING_COMPLETE: "loading_complete",
        RECOVERED_EARLY_EOF: "recovered_early_eof",
        MEDIA_INFO: "media_info",
        METADATA_ARRIVED: "metadata_arrived",
        SCRIPTDATA_ARRIVED: "scriptdata_arrived",
        STATISTICS_INFO: "statistics_info",
        RECOMMEND_SEEKPOINT: "recommend_seekpoint",
        COMMAND_RESPONSE: "command_response",
        ESDATA_ARRIVED: "esdata_arrived",
        OBJECTINFODATA_ARRIVED: "objectinfodata_arrived",
        OBJECTINFO_ARRIVED: "objectinfo_arrived",
        ESSCRIPTDATA_ARRIVED: "esscriptdata_arrived"
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r, n = {};
    r = {
        rPath: function() {
            for (var e, t, i = new RegExp("(^|(.*?))\\/(H5Player.js)(\\?|$)"), r = document.getElementsByTagName("script"), n = "", s = 0, a = r.length; s < a; s++) if ((e = r[s].src) && (t = e.match(i))) {
                n = t[1];
                break
            }
            return n
        } ()
    },
    Object.assign(n, r),
    t.
default = n
},
function(e, t, f) {
    function l(i) {
        var r = {};
        function n(e) {
            if (r[e]) return r[e].exports;
            var t = r[e] = {
                i: e,
                l: !1,
                exports: {}
            };
            return i[e].call(t.exports, t, t.exports, n),
            t.l = !0,
            t.exports
        }
        n.m = i,
        n.c = r,
        n.i = function(e) {
            return e
        },
        n.d = function(e, t, i) {
            n.o(e, t) || Object.defineProperty(e, t, {
                configurable: !1,
                enumerable: !0,
                get: i
            })
        },
        n.r = function(e) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        },
        n.n = function(e) {
            var t = e && e.__esModule ?
            function() {
                return e.
            default
            }:
            function() {
                return e
            };
            return n.d(t, "a", t),
            t
        },
        n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        },
        n.p = "/",
        n.oe = function(e) {
            throw console.error(e),
            e
        };
        var e = n(n.s = ENTRY_MODULE);
        return e.
    default || e
    }
    var p = "[\\.|\\-|\\+|\\w|/|@]+",
    v = "\\(\\s*(/\\*.*?\\*/)?\\s*.*?(" + p + ").*?\\)";
    function m(e) {
        return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
    }
    function c(e, t, i) {
        var r = {};
        r[i] = [];
        var n = t.toString(),
        s = n.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);
        if (!s) return r;
        for (var a, o = s[1], l = new RegExp("(\\\\n|\\W)" + m(o) + v, "g"); a = l.exec(n);)"dll-reference" !== a[3] && r[i].push(a[3]);
        for (l = new RegExp("\\(" + m(o) + '\\("(dll-reference\\s(' + p + '))"\\)\\)' + v, "g"); a = l.exec(n);) e[a[2]] || (r[i].push(a[1]), e[a[2]] = f(a[1]).m),
        r[a[2]] = r[a[2]] || [],
        r[a[2]].push(a[4]);
        for (var u, h = Object.keys(r), d = 0; d < h.length; d++) for (var c = 0; c < r[h[d]].length; c++) u = r[h[d]][c],
        isNaN(1 * u) || (r[h[d]][c] = 1 * r[h[d]][c]);
        return r
    }
    function _(i) {
        return Object.keys(i).reduce(function(e, t) {
            return e || 0 < i[t].length
        },
        !1)
    }
    e.exports = function(e, t) {
        t = t || {};
        var i = {
            main: f.m
        },
        r = t.all ? {
            main: Object.keys(i.main)
        }: function(e, t) {
            for (var i = {
                main: [t]
            },
            r = {
                main: []
            },
            n = {
                main: {}
            }; _(i);) for (var s = Object.keys(i), a = 0; a < s.length; a++) {
                var o = s[a],
                l = i[o].pop();
                if (n[o] = n[o] || {},
                !n[o][l] && e[o][l]) {
                    n[o][l] = !0,
                    r[o] = r[o] || [],
                    r[o].push(l);
                    for (var u = c(e, e[o][l], o), h = Object.keys(u), d = 0; d < h.length; d++) i[h[d]] = i[h[d]] || [],
                    i[h[d]] = i[h[d]].concat(u[h[d]])
                }
            }
            return r
        } (i, e),
        n = "";
        Object.keys(r).filter(function(e) {
            return "main" !== e
        }).forEach(function(t) {
            for (var e = 0; r[t][e];) e++;
            r[t].push(e),
            i[t][e] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })",
            n = n + "var " + t + " = (" + l.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + r[t].map(function(e) {
                return JSON.stringify(e) + ": " + i[t][e].toString()
            }).join(",") + "});\n"
        }),
        n = n + "new ((" + l.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + r.main.map(function(e) {
            return JSON.stringify(e) + ": " + i.main[e].toString()
        }).join(",") + "}))(self);";
        var s = new window.Blob([n], {
            type: "text/javascript"
        });
        if (t.bare) return s;
        var a = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(s),
        o = new window.Worker(a);
        return o.objectURL = a,
        o
    }
},
function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    n(i(346));
    var T = n(i(358)),
    r = n(i(383)),
    A = (n(i(379)), n(i(386)));
    function n(e) {
        return e && e.__esModule ? e: {
        default:
            e
        }
    }
    t.
default = function(E) {
        var k = function(e, t) {
            E.postMessage({
                msg: "logcat_callback",
                data: {
                    type: e,
                    logcat: t
                }
            })
        }.bind(this),
        w = null;
        r.
    default.install(),
        E.addEventListener("message",
        function(e) {
            switch (e.data.cmd) {
            case "init":
                A.
            default.load(e.data.param.path + "/static/ExtendInfo.proto",
                function(e, t) {
                    e || (!0, w = t.lookup("extend.StructData_t"), E.postMessage({
                        msg: "init",
                        data: "success"
                    }))
                });
                break;
            case "destroy":
                E.postMessage({
                    msg:
                    "destroyed"
                });
                break;
            case "input":
                var t = e.data.param,
                i = w.decode(t.data);
                if (0 < i.objects.length) {
                    for (var r = i.objects,
                    n = [], s = 0, a = r.length; s < a; s++) {
                        for (var o = r[s], l = [], u = [], h = [], d = o.attributes, c = 0, f = o.points, p = f.length; c < p; c++) {
                            var v = f[c];
                            l.push({
                                x: v.x,
                                y: v.y
                            })
                        }
                        for (var m = 0,
                        _ = o.attribute,
                        g = _.length; m < g; m++) u.push(_[m]);
                        for (var y in d) {
                            var b = d[y];
                            h.push({
                                key: y,
                                id: b.Id,
                                name: b.Name,
                                value: b.Value,
                                valueType: b.valueType,
                                confidence: b.Confidence
                            })
                        }
                        h.sort(function(e, t) {
                            return e.key > t.key ? 1 : e.key < t.key ? -1 : 0
                        }),
                        n.push({
                            type: o.type,
                            id: o.trackId,
                            score: o.score,
                            rect: {
                                left: o.rect.topLeft.x,
                                top: o.rect.topLeft.y,
                                right: o.rect.bottomRight.x,
                                bottom: o.rect.bottomRight.y
                            },
                            points: l,
                            attribute: u,
                            attributes: h
                        })
                    }
                    E.postMessage({
                        msg: "output",
                        data: {
                            index: t.frameindex,
                            pts: t.pts,
                            objects: n
                        }
                    })
                }
                break;
            case "logging_config":
                var S = e.data.param;
                T.
            default.applyConfig(S),
                !0 === S.enableCallback ? T.
            default.addLogListener(k):
                T.
            default.removeLogListener(k)
            }
        })
    }
},
function(e, t, i) {
    "use strict";
    function r(e, t) {
        for (var i = 0; i < t.length; i++) {
            var r = t[i];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (function(e, t, i) {
        return t && r(e.prototype, t),
        i && r(e, i),
        e
    } (s, null, [{
        key: "install",
        value: function() {
            Object.setPrototypeOf = Object.setPrototypeOf ||
            function(e, t) {
                return e.__proto__ = t,
                e
            },
            Object.assign = Object.assign ||
            function(e) {
                if (null == e) throw new TypeError("Cannot convert undefined or null to object");
                for (var t = Object(e), i = 1; i < arguments.length; i++) {
                    var r = arguments[i];
                    if (null != r) for (var n in r) r.hasOwnProperty(n) && (t[n] = r[n])
                }
                return t
            },
            "function" != typeof self.Promise && i(384).polyfill()
        }
    }]), s);
    function s() { !
        function(e, t) {
            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
        } (this, s)
    }
    n.install(),
    t.
default = n
},
function(e, t, i) { (function(N, B) {
        /*!
         * @overview es6-promise - a tiny implementation of Promises/A+.
         * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
         * @license   Licensed under MIT license
         *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
         * @version   v4.2.6+9869a4bc
         */
        e.exports = function() {
            "use strict";
            function u(e) {
                return "function" == typeof e
            }
            var i = Array.isArray ? Array.isArray: function(e) {
                return "[object Array]" === Object.prototype.toString.call(e)
            },
            r = 0,
            t = void 0,
            n = void 0,
            a = function(e, t) {
                c[r] = e,
                c[r + 1] = t,
                2 === (r += 2) && (n ? n(f) : p())
            };
            var e = "undefined" != typeof window ? window: void 0,
            s = e || {},
            o = s.MutationObserver || s.WebKitMutationObserver,
            l = "undefined" == typeof self && void 0 !== N && "[object process]" === {}.toString.call(N),
            h = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
            function d() {
                var e = setTimeout;
                return function() {
                    return e(f, 1)
                }
            }
            var c = new Array(1e3);
            function f() {
                for (var e = 0; e < r; e += 2) {
                    var t = c[e],
                    i = c[e + 1];
                    t(i),
                    c[e] = void 0,
                    c[e + 1] = void 0
                }
                r = 0
            }
            var p = void 0;
            function v(e, t) {
                var i = this,
                r = new this.constructor(g);
                void 0 === r[_] && P(r);
                var n = i._state;
                if (n) {
                    var s = arguments[n - 1];
                    a(function() {
                        return L(n, r, s, i._result)
                    })
                } else O(i, r, e, t);
                return r
            }
            function m(e) {
                if (e && "object" == typeof e && e.constructor === this) return e;
                var t = new this(g);
                return A(t, e),
                t
            }
            p = l ?
            function() {
                return N.nextTick(f)
            }: o ?
            function() {
                var e = 0,
                t = new o(f),
                i = document.createTextNode("");
                return t.observe(i, {
                    characterData: !0
                }),
                function() {
                    i.data = e = ++e % 2
                }
            } () : h ?
            function() {
                var e = new MessageChannel;
                return e.port1.onmessage = f,
                function() {
                    return e.port2.postMessage(0)
                }
            } () : void 0 === e ?
            function() {
                try {
                    var e = Function("return this")().require("vertx");
                    return void 0 === (t = e.runOnLoop || e.runOnContext) ? d() : function() {
                        t(f)
                    }
                } catch(e) {
                    return d()
                }
            } () : d();
            var _ = Math.random().toString(36).substring(2);
            function g() {}
            var y = void 0,
            b = 1,
            S = 2,
            E = {
                error: null
            };
            function k(e) {
                try {
                    return e.then
                } catch(e) {
                    return E.error = e,
                    E
                }
            }
            function w(e, t, i, r) {
                try {
                    e.call(t, i, r)
                } catch(e) {
                    return e
                }
            }
            function T(e, t, i) {
                t.constructor === e.constructor && i === v && t.constructor.resolve === m ?
                function(t, e) {
                    e._state === b ? I(t, e._result) : e._state === S ? x(t, e._result) : O(e, void 0,
                    function(e) {
                        return A(t, e)
                    },
                    function(e) {
                        return x(t, e)
                    })
                } (e, t) : i === E ? (x(e, E.error), E.error = null) : void 0 === i ? I(e, t) : u(i) ?
                function(e, r, n) {
                    a(function(t) {
                        var i = !1,
                        e = w(n, r,
                        function(e) {
                            i || (i = !0, r !== e ? A(t, e) : I(t, e))
                        },
                        function(e) {
                            i || (i = !0, x(t, e))
                        },
                        t._label); ! i && e && (i = !0, x(t, e))
                    },
                    e)
                } (e, t, i) : I(e, t)
            }
            function A(e, t) {
                e === t ? x(e, new TypeError("You cannot resolve a promise with itself")) : !
                function(e) {
                    var t = typeof e;
                    return null !== e && ("object" == t || "function" == t)
                } (t) ? I(e, t) : T(e, t, k(t))
            }
            function R(e) {
                e._onerror && e._onerror(e._result),
                C(e)
            }
            function I(e, t) {
                e._state === y && (e._result = t, e._state = b, 0 !== e._subscribers.length && a(C, e))
            }
            function x(e, t) {
                e._state === y && (e._state = S, e._result = t, a(R, e))
            }
            function O(e, t, i, r) {
                var n = e._subscribers,
                s = n.length;
                e._onerror = null,
                n[s] = t,
                n[s + b] = i,
                n[s + S] = r,
                0 === s && e._state && a(C, e)
            }
            function C(e) {
                var t = e._subscribers,
                i = e._state;
                if (0 !== t.length) {
                    for (var r = void 0,
                    n = void 0,
                    s = e._result,
                    a = 0; a < t.length; a += 3) r = t[a],
                    n = t[a + i],
                    r ? L(i, r, n, s) : n(s);
                    e._subscribers.length = 0
                }
            }
            function L(e, t, i, r) {
                var n = u(i),
                s = void 0,
                a = void 0,
                o = void 0,
                l = void 0;
                if (n) {
                    if ((s = function(e, t) {
                        try {
                            return e(t)
                        } catch(e) {
                            return E.error = e,
                            E
                        }
                    } (i, r)) === E ? (l = !0, a = s.error, s.error = null) : o = !0, t === s) return void x(t, new TypeError("A promises callback cannot return that same promise."))
                } else s = r,
                o = !0;
                t._state !== y || (n && o ? A(t, s) : l ? x(t, a) : e === b ? I(t, s) : e === S && x(t, s))
            }
            var D = 0;
            function P(e) {
                e[_] = D++,
                e._state = void 0,
                e._result = void 0,
                e._subscribers = []
            }
            var M = function() {
                function e(e, t) {
                    this._instanceConstructor = e,
                    this.promise = new e(g),
                    this.promise[_] || P(this.promise),
                    i(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? I(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(t), 0 === this._remaining && I(this.promise, this._result))) : x(this.promise, new Error("Array Methods must be provided an Array"))
                }
                return e.prototype._enumerate = function(e) {
                    for (var t = 0; this._state === y && t < e.length; t++) this._eachEntry(e[t], t)
                },
                e.prototype._eachEntry = function(t, e) {
                    var i = this._instanceConstructor,
                    r = i.resolve;
                    if (r === m) {
                        var n = k(t);
                        if (n === v && t._state !== y) this._settledAt(t._state, e, t._result);
                        else if ("function" != typeof n) this._remaining--,
                        this._result[e] = t;
                        else if (i === F) {
                            var s = new i(g);
                            T(s, t, n),
                            this._willSettleAt(s, e)
                        } else this._willSettleAt(new i(function(e) {
                            return e(t)
                        }), e)
                    } else this._willSettleAt(r(t), e)
                },
                e.prototype._settledAt = function(e, t, i) {
                    var r = this.promise;
                    r._state === y && (this._remaining--, e === S ? x(r, i) : this._result[t] = i),
                    0 === this._remaining && I(r, this._result)
                },
                e.prototype._willSettleAt = function(e, t) {
                    var i = this;
                    O(e, void 0,
                    function(e) {
                        return i._settledAt(b, t, e)
                    },
                    function(e) {
                        return i._settledAt(S, t, e)
                    })
                },
                e
            } ();
            var F = function() {
                function t(e) {
                    this[_] = D++,
                    this._result = this._state = void 0,
                    this._subscribers = [],
                    g !== e && ("function" != typeof e &&
                    function() {
                        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
                    } (), this instanceof t ?
                    function(t, e) {
                        try {
                            e(function(e) {
                                A(t, e)
                            },
                            function(e) {
                                x(t, e)
                            })
                        } catch(e) {
                            x(t, e)
                        }
                    } (this, e) : function() {
                        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
                    } ())
                }
                return t.prototype.
                catch = function(e) {
                    return this.then(null, e)
                },
                t.prototype.
                finally = function(t) {
                    var i = this.constructor;
                    return u(t) ? this.then(function(e) {
                        return i.resolve(t()).then(function() {
                            return e
                        })
                    },
                    function(e) {
                        return i.resolve(t()).then(function() {
                            throw e
                        })
                    }) : this.then(t, t)
                },
                t
            } ();
            return F.prototype.then = v,
            F.all = function(e) {
                return new M(this, e).promise
            },
            F.race = function(n) {
                var s = this;
                return i(n) ? new s(function(e, t) {
                    for (var i = n.length,
                    r = 0; r < i; r++) s.resolve(n[r]).then(e, t)
                }) : new s(function(e, t) {
                    return t(new TypeError("You must pass an array to race."))
                })
            },
            F.resolve = m,
            F.reject = function(e) {
                var t = new this(g);
                return x(t, e),
                t
            },
            F._setScheduler = function(e) {
                n = e
            },
            F._setAsap = function(e) {
                a = e
            },
            F._asap = a,
            F.polyfill = function() {
                var e = void 0;
                if (void 0 !== B) e = B;
                else if ("undefined" != typeof self) e = self;
                else try {
                    e = Function("return this")()
                } catch(e) {
                    throw new Error("polyfill failed because global object is unavailable in this environment")
                }
                var t = e.Promise;
                if (t) {
                    var i = null;
                    try {
                        i = Object.prototype.toString.call(t.resolve())
                    } catch(e) {}
                    if ("[object Promise]" === i && !t.cast) return
                }
                e.Promise = F
            },
            F.Promise = F
        } ()
    }).call(this, i(385), i(2))
},
function(e, t) {
    var i, r, n = e.exports = {};
    function s() {
        throw new Error("setTimeout has not been defined")
    }
    function a() {
        throw new Error("clearTimeout has not been defined")
    }
    function o(t) {
        if (i === setTimeout) return setTimeout(t, 0);
        if ((i === s || !i) && setTimeout) return i = setTimeout,
        setTimeout(t, 0);
        try {
            return i(t, 0)
        } catch(e) {
            try {
                return i.call(null, t, 0)
            } catch(e) {
                return i.call(this, t, 0)
            }
        }
    } !
    function() {
        try {
            i = "function" == typeof setTimeout ? setTimeout: s
        } catch(e) {
            i = s
        }
        try {
            r = "function" == typeof clearTimeout ? clearTimeout: a
        } catch(e) {
            r = a
        }
    } ();
    var l, u = [],
    h = !1,
    d = -1;
    function c() {
        h && l && (h = !1, l.length ? u = l.concat(u) : d = -1, u.length && f())
    }
    function f() {
        if (!h) {
            var e = o(c);
            h = !0;
            for (var t = u.length; t;) {
                for (l = u, u = []; ++d < t;) l && l[d].run();
                d = -1,
                t = u.length
            }
            l = null,
            h = !1,
            function(t) {
                if (r === clearTimeout) return clearTimeout(t);
                if ((r === a || !r) && clearTimeout) return r = clearTimeout,
                clearTimeout(t);
                try {
                    r(t)
                } catch(e) {
                    try {
                        return r.call(null, t)
                    } catch(e) {
                        return r.call(this, t)
                    }
                }
            } (e)
        }
    }
    function p(e, t) {
        this.fun = e,
        this.array = t
    }
    function v() {}
    n.nextTick = function(e) {
        var t = new Array(arguments.length - 1);
        if (1 < arguments.length) for (var i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
        u.push(new p(e, t)),
        1 !== u.length || h || o(f)
    },
    p.prototype.run = function() {
        this.fun.apply(null, this.array)
    },
    n.title = "browser",
    n.browser = !0,
    n.env = {},
    n.argv = [],
    n.version = "",
    n.versions = {},
    n.on = v,
    n.addListener = v,
    n.once = v,
    n.off = v,
    n.removeListener = v,
    n.removeAllListeners = v,
    n.emit = v,
    n.prependListener = v,
    n.prependOnceListener = v,
    n.listeners = function(e) {
        return []
    },
    n.binding = function(e) {
        throw new Error("process.binding is not supported")
    },
    n.cwd = function() {
        return "/"
    },
    n.chdir = function(e) {
        throw new Error("process.chdir is not supported")
    },
    n.umask = function() {
        return 0
    }
},
function(module, exports, __webpack_require__) { (function(global, module) {
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
 * protobuf.js v6.8.8 (c) 2016, daniel wirtz
 * compiled thu, 19 jul 2018 00:33:26 utc
 * licensed under the bsd-3-clause license
 * see: https://github.com/dcodeio/protobuf.js for details
 */
        !
        function(tt) {
            "use strict";
            var r, e, t, i;
            r = {
                1 : [function(e, t) {
                    t.exports = function(e, t) {
                        for (var i = Array(arguments.length - 1), s = 0, r = 2, a = !0; r < arguments.length;) i[s++] = arguments[r++];
                        return new Promise(function(r, n) {
                            i[s] = function(e) {
                                if (a) if (a = !1, e) n(e);
                                else {
                                    for (var t = Array(arguments.length - 1), i = 0; i < t.length;) t[i++] = arguments[i];
                                    r.apply(null, t)
                                }
                            };
                            try {
                                e.apply(t || null, i)
                            } catch(e) {
                                a && (a = !1, n(e))
                            }
                        })
                    }
                },
                {}],
                2 : [function(e, t, i) {
                    var r = i;
                    r.length = function(e) {
                        var t = e.length;
                        if (!t) return 0;
                        for (var i = 0; 1 < --t % 4 && "=" === e.charAt(t);)++i;
                        return Math.ceil(3 * e.length) / 4 - i
                    };
                    for (var u = Array(64), l = Array(123), n = 0; n < 64;) l[u[n] = n < 26 ? n + 65 : n < 52 ? n + 71 : n < 62 ? n - 4 : n - 59 | 43] = n++;
                    r.encode = function(e, t, i) {
                        for (var r, n = null,
                        s = [], a = 0, o = 0; t < i;) {
                            var l = e[t++];
                            switch (o) {
                            case 0:
                                s[a++] = u[l >> 2],
                                r = (3 & l) << 4,
                                o = 1;
                                break;
                            case 1:
                                s[a++] = u[r | l >> 4],
                                r = (15 & l) << 2,
                                o = 2;
                                break;
                            case 2:
                                s[a++] = u[r | l >> 6],
                                s[a++] = u[63 & l],
                                o = 0
                            }
                            8191 < a && ((n = n || []).push(String.fromCharCode.apply(String, s)), a = 0)
                        }
                        return o && (s[a++] = u[r], s[a++] = 61, 1 === o && (s[a++] = 61)),
                        n ? (a && n.push(String.fromCharCode.apply(String, s.slice(0, a))), n.join("")) : String.fromCharCode.apply(String, s.slice(0, a))
                    };
                    var h = "invalid encoding";
                    r.decode = function(e, t, i) {
                        for (var r, n = i,
                        s = 0,
                        a = 0; a < e.length;) {
                            var o = e.charCodeAt(a++);
                            if (61 === o && 1 < s) break;
                            if ((o = l[o]) === tt) throw Error(h);
                            switch (s) {
                            case 0:
                                r = o,
                                s = 1;
                                break;
                            case 1:
                                t[i++] = r << 2 | (48 & o) >> 4,
                                r = o,
                                s = 2;
                                break;
                            case 2:
                                t[i++] = (15 & r) << 4 | (60 & o) >> 2,
                                r = o,
                                s = 3;
                                break;
                            case 3:
                                t[i++] = (3 & r) << 6 | o,
                                s = 0
                            }
                        }
                        if (1 === s) throw Error(h);
                        return i - n
                    },
                    r.test = function(e) {
                        return /^(?:[A-Za-z0-9+/] {
                            4
                        }) * ( ? :[A - Za - z0 - 9 + /]{2}==|[A-Za-z0-9+/] {
                            3
                        } = ) ? $ / .test(e)
                    }
                },
                {}],
                3 : [function(e, t) { (t.exports = function l(t, i) {
                        "string" == typeof t && (i = t, t = tt);
                        var u = [];
                        function h(e) {
                            if ("string" != typeof e) {
                                var t = d();
                                if (l.verbose && console.log("codegen: " + t), t = "return " + t, e) {
                                    for (var i = Object.keys(e), r = Array(i.length + 1), n = Array(i.length), s = 0; s < i.length;) r[s] = i[s],
                                    n[s] = e[i[s++]];
                                    return r[s] = t,
                                    Function.apply(null, r).apply(null, n)
                                }
                                return Function(t)()
                            }
                            for (var a = Array(arguments.length - 1), o = 0; o < a.length;) a[o] = arguments[++o];
                            if (o = 0, e = e.replace(/%([%dfijs])/g,
                            function(e, t) {
                                var i = a[o++];
                                switch (t) {
                                case "d":
                                case "f":
                                    return + i + "";
                                case "i":
                                    return Math.floor(i) + "";
                                case "j":
                                    return JSON.stringify(i);
                                case "s":
                                    return i + ""
                                }
                                return "%"
                            }), o !== a.length) throw Error("parameter count mismatch");
                            return u.push(e),
                            h
                        }
                        function d(e) {
                            return "function " + (e || i || "") + "(" + (t && t.join(",") || "") + "){\n  " + u.join("\n  ") + "\n}"
                        }
                        return h.toString = d,
                        h
                    }).verbose = !1
                },
                {}],
                4 : [function(e, t) {
                    function i() {
                        this.i = {}
                    } (t.exports = i).prototype.on = function(e, t, i) {
                        return (this.i[e] || (this.i[e] = [])).push({
                            fn: t,
                            ctx: i || this
                        }),
                        this
                    },
                    i.prototype.off = function(e, t) {
                        if (e === tt) this.i = {};
                        else if (t === tt) this.i[e] = [];
                        else for (var i = this.i[e], r = 0; r < i.length;) i[r].fn === t ? i.splice(r, 1) : ++r;
                        return this
                    },
                    i.prototype.emit = function(e) {
                        var t = this.i[e];
                        if (t) {
                            for (var i = [], r = 1; r < arguments.length;) i.push(arguments[r++]);
                            for (r = 0; r < t.length;) t[r].fn.apply(t[r++].ctx, i)
                        }
                        return this
                    }
                },
                {}],
                5 : [function(e, t) {
                    t.exports = o;
                    var s = e(1),
                    a = e(7)("fs");
                    function o(i, r, n) {
                        return r = "function" == typeof r ? (n = r, {}) : r || {},
                        n ? !r.xhr && a && a.readFile ? a.readFile(i,
                        function(e, t) {
                            return e && "undefined" != typeof XMLHttpRequest ? o.xhr(i, r, n) : e ? n(e) : n(null, r.binary ? t: t.toString("utf8"))
                        }) : o.xhr(i, r, n) : s(o, this, i, r)
                    }
                    o.xhr = function(e, i, r) {
                        var n = new XMLHttpRequest;
                        n.onreadystatechange = function() {
                            if (4 !== n.readyState) return tt;
                            if (0 !== n.status && 200 !== n.status) return r(Error("status " + n.status));
                            if (i.binary) {
                                var e = n.response;
                                if (!e) {
                                    e = [];
                                    for (var t = 0; t < n.responseText.length; ++t) e.push(255 & n.responseText.charCodeAt(t))
                                }
                                return r(null, "undefined" != typeof Uint8Array ? new Uint8Array(e) : e)
                            }
                            return r(null, n.responseText)
                        },
                        i.binary && ("overrideMimeType" in n && n.overrideMimeType("text/plain; charset=x-user-defined"), n.responseType = "arraybuffer"),
                        n.open("GET", e),
                        n.send()
                    }
                },
                {
                    1 : 1,
                    7 : 7
                }],
                6 : [function(e, t) {
                    function i(e) {
                        return "undefined" != typeof Float32Array ? (h = new Float32Array([ - 0]), d = new Uint8Array(h.buffer), c = 128 === d[3], e.writeFloatLE = c ? v: m, e.writeFloatBE = c ? m: v, e.readFloatLE = c ? _: g, e.readFloatBE = c ? g: _) : (e.writeFloatLE = f.bind(null, y), e.writeFloatBE = f.bind(null, b), e.readFloatLE = p.bind(null, S), e.readFloatBE = p.bind(null, E)),
                        "undefined" != typeof Float64Array ? (o = new Float64Array([ - 0]), l = new Uint8Array(o.buffer), u = 128 === l[7], e.writeDoubleLE = u ? r: n, e.writeDoubleBE = u ? n: r, e.readDoubleLE = u ? s: a, e.readDoubleBE = u ? a: s) : (e.writeDoubleLE = t.bind(null, y, 0, 4), e.writeDoubleBE = t.bind(null, b, 4, 0), e.readDoubleLE = i.bind(null, S, 0, 4), e.readDoubleBE = i.bind(null, E, 4, 0)),
                        e;
                        function t(e, t, i, r, n, s) {
                            var a = r < 0 ? 1 : 0;
                            if (a && (r = -r), 0 === r) e(0, n, s + t),
                            e(0 < 1 / r ? 0 : 2147483648, n, s + i);
                            else if (isNaN(r)) e(0, n, s + t),
                            e(2146959360, n, s + i);
                            else if (17976931348623157e292 < r) e(0, n, s + t),
                            e((a << 31 | 2146435072) >>> 0, n, s + i);
                            else {
                                var o;
                                if (r < 22250738585072014e-324) e((o = r / 5e-324) >>> 0, n, s + t),
                                e((a << 31 | o / 4294967296) >>> 0, n, s + i);
                                else {
                                    var l = Math.floor(Math.log(r) / Math.LN2);
                                    1024 === l && (l = 1023),
                                    e(4503599627370496 * (o = r * Math.pow(2, -l)) >>> 0, n, s + t),
                                    e((a << 31 | l + 1023 << 20 | 1048576 * o & 1048575) >>> 0, n, s + i)
                                }
                            }
                        }
                        function i(e, t, i, r, n) {
                            var s = e(r, n + t),
                            a = e(r, n + i),
                            o = 2 * (a >> 31) + 1,
                            l = a >>> 20 & 2047,
                            u = 4294967296 * (1048575 & a) + s;
                            return 2047 == l ? u ? NaN: 1 / 0 * o: 0 == l ? 5e-324 * o * u: o * Math.pow(2, l - 1075) * (u + 4503599627370496)
                        }
                        function r(e, t, i) {
                            o[0] = e,
                            t[i] = l[0],
                            t[i + 1] = l[1],
                            t[i + 2] = l[2],
                            t[i + 3] = l[3],
                            t[i + 4] = l[4],
                            t[i + 5] = l[5],
                            t[i + 6] = l[6],
                            t[i + 7] = l[7]
                        }
                        function n(e, t, i) {
                            o[0] = e,
                            t[i] = l[7],
                            t[i + 1] = l[6],
                            t[i + 2] = l[5],
                            t[i + 3] = l[4],
                            t[i + 4] = l[3],
                            t[i + 5] = l[2],
                            t[i + 6] = l[1],
                            t[i + 7] = l[0]
                        }
                        function s(e, t) {
                            return l[0] = e[t],
                            l[1] = e[t + 1],
                            l[2] = e[t + 2],
                            l[3] = e[t + 3],
                            l[4] = e[t + 4],
                            l[5] = e[t + 5],
                            l[6] = e[t + 6],
                            l[7] = e[t + 7],
                            o[0]
                        }
                        function a(e, t) {
                            return l[7] = e[t],
                            l[6] = e[t + 1],
                            l[5] = e[t + 2],
                            l[4] = e[t + 3],
                            l[3] = e[t + 4],
                            l[2] = e[t + 5],
                            l[1] = e[t + 6],
                            l[0] = e[t + 7],
                            o[0]
                        }
                        var o, l, u, h, d, c;
                        function f(e, t, i, r) {
                            var n = t < 0 ? 1 : 0;
                            if (n && (t = -t), 0 === t) e(0 < 1 / t ? 0 : 2147483648, i, r);
                            else if (isNaN(t)) e(2143289344, i, r);
                            else if (34028234663852886e22 < t) e((n << 31 | 2139095040) >>> 0, i, r);
                            else if (t < 11754943508222875e-54) e((n << 31 | Math.round(t / 1401298464324817e-60)) >>> 0, i, r);
                            else {
                                var s = Math.floor(Math.log(t) / Math.LN2);
                                e((n << 31 | s + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -s) * 8388608)) >>> 0, i, r)
                            }
                        }
                        function p(e, t, i) {
                            var r = e(t, i),
                            n = 2 * (r >> 31) + 1,
                            s = r >>> 23 & 255,
                            a = 8388607 & r;
                            return 255 == s ? a ? NaN: 1 / 0 * n: 0 == s ? 1401298464324817e-60 * n * a: n * Math.pow(2, s - 150) * (8388608 + a)
                        }
                        function v(e, t, i) {
                            h[0] = e,
                            t[i] = d[0],
                            t[i + 1] = d[1],
                            t[i + 2] = d[2],
                            t[i + 3] = d[3]
                        }
                        function m(e, t, i) {
                            h[0] = e,
                            t[i] = d[3],
                            t[i + 1] = d[2],
                            t[i + 2] = d[1],
                            t[i + 3] = d[0]
                        }
                        function _(e, t) {
                            return d[0] = e[t],
                            d[1] = e[t + 1],
                            d[2] = e[t + 2],
                            d[3] = e[t + 3],
                            h[0]
                        }
                        function g(e, t) {
                            return d[3] = e[t],
                            d[2] = e[t + 1],
                            d[1] = e[t + 2],
                            d[0] = e[t + 3],
                            h[0]
                        }
                    }
                    function y(e, t, i) {
                        t[i] = 255 & e,
                        t[i + 1] = e >>> 8 & 255,
                        t[i + 2] = e >>> 16 & 255,
                        t[i + 3] = e >>> 24
                    }
                    function b(e, t, i) {
                        t[i] = e >>> 24,
                        t[i + 1] = e >>> 16 & 255,
                        t[i + 2] = e >>> 8 & 255,
                        t[i + 3] = 255 & e
                    }
                    function S(e, t) {
                        return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0
                    }
                    function E(e, t) {
                        return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0
                    }
                    t.exports = i(i)
                },
                {}],
                7 : [function(t, i, n) {
                    function r(t) {
                        try {
                            var i = eval("require")(t);
                            if (i && (i.length || Object.keys(i).length)) return i
                        } catch(t) {}
                        return null
                    }
                    i.exports = r
                },
                {}],
                8 : [function(e, t, i) {
                    var r = i,
                    s = r.isAbsolute = function(e) {
                        return /^(?:\/|\w+:)/.test(e)
                    },
                    n = r.normalize = function(e) {
                        var t = (e = e.replace(/\\/g, "/").replace(/\/{2,}/g, "/")).split("/"),
                        i = s(e),
                        r = "";
                        i && (r = t.shift() + "/");
                        for (var n = 0; n < t.length;)".." === t[n] ? 0 < n && ".." !== t[n - 1] ? t.splice(--n, 2) : i ? t.splice(n, 1) : ++n: "." === t[n] ? t.splice(n, 1) : ++n;
                        return r + t.join("/")
                    };
                    r.resolve = function(e, t, i) {
                        return i || (t = n(t)),
                        s(t) ? t: (i || (e = n(e)), (e = e.replace(/(?:\/|^)[^/] + $ / , "")).length ? n(e + "/" + t) : t)
                    }
                },
                {}], 9 : [function(e, t) {
                    t.exports = function(i, r, e) {
                        var n = e || 8192,
                        s = n >>> 1,
                        a = null,
                        o = n;
                        return function(e) {
                            if (e < 1 || s < e) return i(e);
                            n < o + e && (a = i(n), o = 0);
                            var t = r.call(a, o, o += e);
                            return 7 & o && (o = 1 + (7 | o)),
                            t
                        }
                    }
                },
                {}], 10 : [function(e, t, i) {
                    var r = i;
                    r.length = function(e) {
                        for (var t = 0,
                        i = 0,
                        r = 0; r < e.length; ++r)(i = e.charCodeAt(r)) < 128 ? t += 1 : i < 2048 ? t += 2 : 55296 == (64512 & i) && 56320 == (64512 & e.charCodeAt(r + 1)) ? (++r, t += 4) : t += 3;
                        return t
                    },
                    r.read = function(e, t, i) {
                        if (i - t < 1) return "";
                        for (var r, n = null,
                        s = [], a = 0; t < i;)(r = e[t++]) < 128 ? s[a++] = r: 191 < r && r < 224 ? s[a++] = (31 & r) << 6 | 63 & e[t++] : 239 < r && r < 365 ? (r = ((7 & r) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, s[a++] = 55296 + (r >> 10), s[a++] = 56320 + (1023 & r)) : s[a++] = (15 & r) << 12 | (63 & e[t++]) << 6 | 63 & e[t++],
                        8191 < a && ((n = n || []).push(String.fromCharCode.apply(String, s)), a = 0);
                        return n ? (a && n.push(String.fromCharCode.apply(String, s.slice(0, a))), n.join("")) : String.fromCharCode.apply(String, s.slice(0, a))
                    },
                    r.write = function(e, t, i) {
                        for (var r, n, s = i,
                        a = 0; a < e.length; ++a)(r = e.charCodeAt(a)) < 128 ? t[i++] = r: (r < 2048 ? t[i++] = r >> 6 | 192 : (55296 == (64512 & r) && 56320 == (64512 & (n = e.charCodeAt(a + 1))) ? (r = 65536 + ((1023 & r) << 10) + (1023 & n), ++a, t[i++] = r >> 18 | 240, t[i++] = r >> 12 & 63 | 128) : t[i++] = r >> 12 | 224, t[i++] = r >> 6 & 63 | 128), t[i++] = 63 & r | 128);
                        return i - s
                    }
                },
                {}], 11 : [function(e, t) {
                    t.exports = n;
                    var i, r = /\/|\./;
                    function n(e, t) {
                        r.test(e) || (e = "google/protobuf/" + e + ".proto", t = {
                            nested: {
                                google: {
                                    nested: {
                                        protobuf: {
                                            nested: t
                                        }
                                    }
                                }
                            }
                        }),
                        n[e] = t
                    }
                    n("any", {
                        Any: {
                            fields: {
                                type_url: {
                                    type: "string",
                                    id: 1
                                },
                                value: {
                                    type: "bytes",
                                    id: 2
                                }
                            }
                        }
                    }),
                    n("duration", {
                        Duration: i = {
                            fields: {
                                seconds: {
                                    type: "int64",
                                    id: 1
                                },
                                nanos: {
                                    type: "int32",
                                    id: 2
                                }
                            }
                        }
                    }),
                    n("timestamp", {
                        Timestamp: i
                    }),
                    n("empty", {
                        Empty: {
                            fields: {}
                        }
                    }),
                    n("struct", {
                        Struct: {
                            fields: {
                                fields: {
                                    keyType: "string",
                                    type: "Value",
                                    id: 1
                                }
                            }
                        },
                        Value: {
                            oneofs: {
                                kind: {
                                    oneof: ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]
                                }
                            },
                            fields: {
                                nullValue: {
                                    type: "NullValue",
                                    id: 1
                                },
                                numberValue: {
                                    type: "double",
                                    id: 2
                                },
                                stringValue: {
                                    type: "string",
                                    id: 3
                                },
                                boolValue: {
                                    type: "bool",
                                    id: 4
                                },
                                structValue: {
                                    type: "Struct",
                                    id: 5
                                },
                                listValue: {
                                    type: "ListValue",
                                    id: 6
                                }
                            }
                        },
                        NullValue: {
                            values: {
                                NULL_VALUE: 0
                            }
                        },
                        ListValue: {
                            fields: {
                                values: {
                                    rule: "repeated",
                                    type: "Value",
                                    id: 1
                                }
                            }
                        }
                    }),
                    n("wrappers", {
                        DoubleValue: {
                            fields: {
                                value: {
                                    type: "double",
                                    id: 1
                                }
                            }
                        },
                        FloatValue: {
                            fields: {
                                value: {
                                    type: "float",
                                    id: 1
                                }
                            }
                        },
                        Int64Value: {
                            fields: {
                                value: {
                                    type: "int64",
                                    id: 1
                                }
                            }
                        },
                        UInt64Value: {
                            fields: {
                                value: {
                                    type: "uint64",
                                    id: 1
                                }
                            }
                        },
                        Int32Value: {
                            fields: {
                                value: {
                                    type: "int32",
                                    id: 1
                                }
                            }
                        },
                        UInt32Value: {
                            fields: {
                                value: {
                                    type: "uint32",
                                    id: 1
                                }
                            }
                        },
                        BoolValue: {
                            fields: {
                                value: {
                                    type: "bool",
                                    id: 1
                                }
                            }
                        },
                        StringValue: {
                            fields: {
                                value: {
                                    type: "string",
                                    id: 1
                                }
                            }
                        },
                        BytesValue: {
                            fields: {
                                value: {
                                    type: "bytes",
                                    id: 1
                                }
                            }
                        }
                    }),
                    n("field_mask", {
                        FieldMask: {
                            fields: {
                                paths: {
                                    rule: "repeated",
                                    type: "string",
                                    id: 1
                                }
                            }
                        }
                    }),
                    n.get = function(e) {
                        return n[e] || null
                    }
                },
                {}], 12 : [function(e, t, i) {
                    var r = i,
                    c = e(15),
                    f = e(37);
                    function a(e, t, i, r) {
                        if (t.resolvedType) if (t.resolvedType instanceof c) {
                            e("switch(d%s){", r);
                            for (var n = t.resolvedType.values,
                            s = Object.keys(n), a = 0; a < s.length; ++a) t.repeated && n[s[a]] === t.typeDefault && e("default:"),
                            e("case%j:", s[a])("case %i:", n[s[a]])("m%s=%j", r, n[s[a]])("break");
                            e("}")
                        } else e('if(typeof d%s!=="object")', r)("throw TypeError(%j)", t.fullName + ": object expected")("m%s=types[%i].fromObject(d%s)", r, i, r);
                        else {
                            var o = !1;
                            switch (t.type) {
                            case "double":
                            case "float":
                                e("m%s=Number(d%s)", r, r);
                                break;
                            case "uint32":
                            case "fixed32":
                                e("m%s=d%s>>>0", r, r);
                                break;
                            case "int32":
                            case "sint32":
                            case "sfixed32":
                                e("m%s=d%s|0", r, r);
                                break;
                            case "uint64":
                                o = !0;
                            case "int64":
                            case "sint64":
                            case "fixed64":
                            case "sfixed64":
                                e("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j", r, r, o)('else if(typeof d%s==="string")', r)("m%s=parseInt(d%s,10)", r, r)('else if(typeof d%s==="number")', r)("m%s=d%s", r, r)('else if(typeof d%s==="object")', r)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", r, r, r, o ? "true": "");
                                break;
                            case "bytes":
                                e('if(typeof d%s==="string")', r)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", r, r, r)("else if(d%s.length)", r)("m%s=d%s", r, r);
                                break;
                            case "string":
                                e("m%s=String(d%s)", r, r);
                                break;
                            case "bool":
                                e("m%s=Boolean(d%s)", r, r)
                            }
                        }
                        return e
                    }
                    function p(e, t, i, r) {
                        if (t.resolvedType) t.resolvedType instanceof c ? e("d%s=o.enums===String?types[%i].values[m%s]:m%s", r, i, r, r) : e("d%s=types[%i].toObject(m%s,o)", r, i, r);
                        else {
                            var n = !1;
                            switch (t.type) {
                            case "double":
                            case "float":
                                e("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", r, r, r, r);
                                break;
                            case "uint64":
                                n = !0;
                            case "int64":
                            case "sint64":
                            case "fixed64":
                            case "sfixed64":
                                e('if(typeof m%s==="number")', r)("d%s=o.longs===String?String(m%s):m%s", r, r, r)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", r, r, r, r, n ? "true": "", r);
                                break;
                            case "bytes":
                                e("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", r, r, r, r, r);
                                break;
                            default:
                                e("d%s=m%s", r, r)
                            }
                        }
                        return e
                    }
                    r.fromObject = function(e) {
                        var t = e.fieldsArray,
                        i = f.codegen(["d"], e.name + "$fromObject")("if(d instanceof this.ctor)")("return d");
                        if (!t.length) return i("return new this.ctor");
                        i("var m=new this.ctor");
                        for (var r = 0; r < t.length; ++r) {
                            var n = t[r].resolve(),
                            s = f.safeProp(n.name);
                            n.map ? (i("if(d%s){", s)('if(typeof d%s!=="object")', s)("throw TypeError(%j)", n.fullName + ": object expected")("m%s={}", s)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", s), a(i, n, r, s + "[ks[i]]")("}")("}")) : n.repeated ? (i("if(d%s){", s)("if(!Array.isArray(d%s))", s)("throw TypeError(%j)", n.fullName + ": array expected")("m%s=[]", s)("for(var i=0;i<d%s.length;++i){", s), a(i, n, r, s + "[i]")("}")("}")) : (n.resolvedType instanceof c || i("if(d%s!=null){", s), a(i, n, r, s), n.resolvedType instanceof c || i("}"))
                        }
                        return i("return m")
                    },
                    r.toObject = function(e) {
                        var t = e.fieldsArray.slice().sort(f.compareFieldsById);
                        if (!t.length) return f.codegen()("return {}");
                        for (var i = f.codegen(["m", "o"], e.name + "$toObject")("if(!o)")("o={}")("var d={}"), r = [], n = [], s = [], a = 0; a < t.length; ++a) t[a].partOf || (t[a].resolve().repeated ? r: t[a].map ? n: s).push(t[a]);
                        if (r.length) {
                            for (i("if(o.arrays||o.defaults){"), a = 0; a < r.length; ++a) i("d%s=[]", f.safeProp(r[a].name));
                            i("}")
                        }
                        if (n.length) {
                            for (i("if(o.objects||o.defaults){"), a = 0; a < n.length; ++a) i("d%s={}", f.safeProp(n[a].name));
                            i("}")
                        }
                        if (s.length) {
                            for (i("if(o.defaults){"), a = 0; a < s.length; ++a) {
                                var o = s[a],
                                l = f.safeProp(o.name);
                                if (o.resolvedType instanceof c) i("d%s=o.enums===String?%j:%j", l, o.resolvedType.valuesById[o.typeDefault], o.typeDefault);
                                else if (o.long) i("if(util.Long){")("var n=new util.Long(%i,%i,%j)", o.typeDefault.low, o.typeDefault.high, o.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", l)("}else")("d%s=o.longs===String?%j:%i", l, o.typeDefault.toString(), o.typeDefault.toNumber());
                                else if (o.bytes) {
                                    var u = "[" + Array.prototype.slice.call(o.typeDefault).join(",") + "]";
                                    i("if(o.bytes===String)d%s=%j", l, String.fromCharCode.apply(String, o.typeDefault))("else{")("d%s=%s", l, u)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)", l, l)("}")
                                } else i("d%s=%j", l, o.typeDefault)
                            }
                            i("}")
                        }
                        var h = !1;
                        for (a = 0; a < t.length; ++a) {
                            o = t[a];
                            var d = e.e.indexOf(o);
                            l = f.safeProp(o.name),
                            o.map ? (h || (h = !0, i("var ks2")), i("if(m%s&&(ks2=Object.keys(m%s)).length){", l, l)("d%s={}", l)("for(var j=0;j<ks2.length;++j){"), p(i, o, d, l + "[ks2[j]]")("}")) : o.repeated ? (i("if(m%s&&m%s.length){", l, l)("d%s=[]", l)("for(var j=0;j<m%s.length;++j){", l), p(i, o, d, l + "[j]")("}")) : (i("if(m%s!=null&&m.hasOwnProperty(%j)){", l, o.name), p(i, o, d, l), o.partOf && i("if(o.oneofs)")("d%s=%j", f.safeProp(o.partOf.name), o.name)),
                            i("}")
                        }
                        return i("return d")
                    }
                },
                {
                    15 : 15,
                    37 : 37
                }], 13 : [function(e, t) {
                    t.exports = function(e) {
                        var t = u.codegen(["r", "l"], e.name + "$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (e.fieldsArray.filter(function(e) {
                            return e.map
                        }).length ? ",k": ""))("while(r.pos<c){")("var t=r.uint32()");
                        e.group && t("if((t&7)===4)")("break"),
                        t("switch(t>>>3){");
                        for (var i = 0; i < e.fieldsArray.length; ++i) {
                            var r = e.e[i].resolve(),
                            n = r.resolvedType instanceof o ? "int32": r.type,
                            s = "m" + u.safeProp(r.name);
                            t("case %i:", r.id),
                            r.map ? (t("r.skip().pos++")("if(%s===util.emptyObject)", s)("%s={}", s)("k=r.%s()", r.keyType)("r.pos++"), l.long[r.keyType] !== tt ? l.basic[n] === tt ? t('%s[typeof k==="object"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())', s, i) : t('%s[typeof k==="object"?util.longToHash(k):k]=r.%s()', s, n) : l.basic[n] === tt ? t("%s[k]=types[%i].decode(r,r.uint32())", s, i) : t("%s[k]=r.%s()", s, n)) : r.repeated ? (t("if(!(%s&&%s.length))", s, s)("%s=[]", s), l.packed[n] !== tt && t("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())", s, n)("}else"), l.basic[n] === tt ? t(r.resolvedType.group ? "%s.push(types[%i].decode(r))": "%s.push(types[%i].decode(r,r.uint32()))", s, i) : t("%s.push(r.%s())", s, n)) : l.basic[n] === tt ? t(r.resolvedType.group ? "%s=types[%i].decode(r)": "%s=types[%i].decode(r,r.uint32())", s, i) : t("%s=r.%s()", s, n),
                            t("break")
                        }
                        for (t("default:")("r.skipType(t&7)")("break")("}")("}"), i = 0; i < e.e.length; ++i) {
                            var a = e.e[i];
                            a.required && t("if(!m.hasOwnProperty(%j))", a.name)("throw util.ProtocolError(%j,{instance:m})", "missing required '" + a.name + "'")
                        }
                        return t("return m")
                    };
                    var o = e(15),
                    l = e(36),
                    u = e(37)
                },
                {
                    15 : 15,
                    36 : 36,
                    37 : 37
                }], 14 : [function(e, t) {
                    t.exports = function(e) {
                        for (var t, i = d.codegen(["m", "w"], e.name + "$encode")("if(!w)")("w=Writer.create()"), r = e.fieldsArray.slice().sort(d.compareFieldsById), n = 0; n < r.length; ++n) {
                            var s = r[n].resolve(),
                            a = e.e.indexOf(s),
                            o = s.resolvedType instanceof u ? "int32": s.type,
                            l = h.basic[o];
                            t = "m" + d.safeProp(s.name),
                            s.map ? (i("if(%s!=null&&m.hasOwnProperty(%j)){", t, s.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", t)("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (s.id << 3 | 2) >>> 0, 8 | h.mapKey[s.keyType], s.keyType), l === tt ? i("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", a, t) : i(".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | l, o, t), i("}")("}")) : s.repeated ? (i("if(%s!=null&&%s.length){", t, t), s.packed && h.packed[o] !== tt ? i("w.uint32(%i).fork()", (s.id << 3 | 2) >>> 0)("for(var i=0;i<%s.length;++i)", t)("w.%s(%s[i])", o, t)("w.ldelim()") : (i("for(var i=0;i<%s.length;++i)", t), l === tt ? c(i, s, a, t + "[i]") : i("w.uint32(%i).%s(%s[i])", (s.id << 3 | l) >>> 0, o, t)), i("}")) : (s.optional && i("if(%s!=null&&m.hasOwnProperty(%j))", t, s.name), l === tt ? c(i, s, a, t) : i("w.uint32(%i).%s(%s)", (s.id << 3 | l) >>> 0, o, t))
                        }
                        return i("return w")
                    };
                    var u = e(15),
                    h = e(36),
                    d = e(37);
                    function c(e, t, i, r) {
                        return t.resolvedType.group ? e("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", i, r, (t.id << 3 | 3) >>> 0, (t.id << 3 | 4) >>> 0) : e("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", i, r, (t.id << 3 | 2) >>> 0)
                    }
                },
                {
                    15 : 15,
                    36 : 36,
                    37 : 37
                }], 15 : [function(e, t) {
                    t.exports = n;
                    var o = e(24); ((n.prototype = Object.create(o.prototype)).constructor = n).className = "Enum";
                    var i = e(23),
                    r = e(37);
                    function n(e, t, i, r, n) {
                        if (o.call(this, e, i), t && "object" != typeof t) throw TypeError("values must be an object");
                        if (this.valuesById = {},
                        this.values = Object.create(this.valuesById), this.comment = r, this.comments = n || {},
                        this.reserved = tt, t) for (var s = Object.keys(t), a = 0; a < s.length; ++a)"number" == typeof t[s[a]] && (this.valuesById[this.values[s[a]] = t[s[a]]] = s[a])
                    }
                    n.fromJSON = function(e, t) {
                        var i = new n(e, t.values, t.options, t.comment, t.comments);
                        return i.reserved = t.reserved,
                        i
                    },
                    n.prototype.toJSON = function(e) {
                        var t = !!e && !!e.keepComments;
                        return r.toObject(["options", this.options, "values", this.values, "reserved", this.reserved && this.reserved.length ? this.reserved: tt, "comment", t ? this.comment: tt, "comments", t ? this.comments: tt])
                    },
                    n.prototype.add = function(e, t, i) {
                        if (!r.isString(e)) throw TypeError("name must be a string");
                        if (!r.isInteger(t)) throw TypeError("id must be an integer");
                        if (this.values[e] !== tt) throw Error("duplicate name '" + e + "' in " + this);
                        if (this.isReservedId(t)) throw Error("id " + t + " is reserved in " + this);
                        if (this.isReservedName(e)) throw Error("name '" + e + "' is reserved in " + this);
                        if (this.valuesById[t] !== tt) {
                            if (!this.options || !this.options.allow_alias) throw Error("duplicate id " + t + " in " + this);
                            this.values[e] = t
                        } else this.valuesById[this.values[e] = t] = e;
                        return this.comments[e] = i || null,
                        this
                    },
                    n.prototype.remove = function(e) {
                        if (!r.isString(e)) throw TypeError("name must be a string");
                        var t = this.values[e];
                        if (null == t) throw Error("name '" + e + "' does not exist in " + this);
                        return delete this.valuesById[t],
                        delete this.values[e],
                        delete this.comments[e],
                        this
                    },
                    n.prototype.isReservedId = function(e) {
                        return i.isReservedId(this.reserved, e)
                    },
                    n.prototype.isReservedName = function(e) {
                        return i.isReservedName(this.reserved, e)
                    }
                },
                {
                    23 : 23,
                    24 : 24,
                    37 : 37
                }], 16 : [function(e, t) {
                    t.exports = a;
                    var o = e(24); ((a.prototype = Object.create(o.prototype)).constructor = a).className = "Field";
                    var i, r = e(15),
                    l = e(36),
                    u = e(37),
                    h = /^required|optional|repeated$/;
                    function a(e, t, i, r, n, s, a) {
                        if (u.isObject(r) ? (a = n, s = r, r = n = tt) : u.isObject(n) && (a = s, s = n, n = tt), o.call(this, e, s), !u.isInteger(t) || t < 0) throw TypeError("id must be a non-negative integer");
                        if (!u.isString(i)) throw TypeError("type must be a string");
                        if (r !== tt && !h.test(r = r.toString().toLowerCase())) throw TypeError("rule must be a string rule");
                        if (n !== tt && !u.isString(n)) throw TypeError("extend must be a string");
                        this.rule = r && "optional" !== r ? r: tt,
                        this.type = i,
                        this.id = t,
                        this.extend = n || tt,
                        this.required = "required" === r,
                        this.optional = !this.required,
                        this.repeated = "repeated" === r,
                        this.map = !1,
                        this.message = null,
                        this.partOf = null,
                        this.typeDefault = null,
                        this.defaultValue = null,
                        this.long = !!u.Long && l.long[i] !== tt,
                        this.bytes = "bytes" === i,
                        this.resolvedType = null,
                        this.extensionField = null,
                        this.declaringField = null,
                        this.u = null,
                        this.comment = a
                    }
                    a.fromJSON = function(e, t) {
                        return new a(e, t.id, t.type, t.rule, t.extend, t.options, t.comment)
                    },
                    Object.defineProperty(a.prototype, "packed", {
                        get: function() {
                            return null === this.u && (this.u = !1 !== this.getOption("packed")),
                            this.u
                        }
                    }),
                    a.prototype.setOption = function(e, t, i) {
                        return "packed" === e && (this.u = null),
                        o.prototype.setOption.call(this, e, t, i)
                    },
                    a.prototype.toJSON = function(e) {
                        var t = !!e && !!e.keepComments;
                        return u.toObject(["rule", "optional" !== this.rule && this.rule || tt, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", t ? this.comment: tt])
                    },
                    a.prototype.resolve = function() {
                        if (this.resolved) return this;
                        if ((this.typeDefault = l.defaults[this.type]) === tt && (this.resolvedType = (this.declaringField ? this.declaringField.parent: this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof i ? this.typeDefault = null: this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]), this.options && null != this.options.
                    default && (this.typeDefault = this.options.
                    default, this.resolvedType instanceof r && "string" == typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault])), this.options && (!0 !== this.options.packed && (this.options.packed === tt || !this.resolvedType || this.resolvedType instanceof r) || delete this.options.packed, Object.keys(this.options).length || (this.options = tt)), this.long) this.typeDefault = u.Long.fromNumber(this.typeDefault, "u" === this.type.charAt(0)),
                        Object.freeze && Object.freeze(this.typeDefault);
                        else if (this.bytes && "string" == typeof this.typeDefault) {
                            var e;
                            u.base64.test(this.typeDefault) ? u.base64.decode(this.typeDefault, e = u.newBuffer(u.base64.length(this.typeDefault)), 0) : u.utf8.write(this.typeDefault, e = u.newBuffer(u.utf8.length(this.typeDefault)), 0),
                            this.typeDefault = e
                        }
                        return this.map ? this.defaultValue = u.emptyObject: this.repeated ? this.defaultValue = u.emptyArray: this.defaultValue = this.typeDefault,
                        this.parent instanceof i && (this.parent.ctor.prototype[this.name] = this.defaultValue),
                        o.prototype.resolve.call(this)
                    },
                    a.d = function(i, r, n, s) {
                        return "function" == typeof r ? r = u.decorateType(r).name: r && "object" == typeof r && (r = u.decorateEnum(r).name),
                        function(e, t) {
                            u.decorateType(e.constructor).add(new a(t, i, r, n, {
                            default:
                                s
                            }))
                        }
                    },
                    a.o = function(e) {
                        i = e
                    }
                },
                {
                    15 : 15,
                    24 : 24,
                    36 : 36,
                    37 : 37
                }], 17 : [function(e, t) {
                    var r = t.exports = e(18);
                    r.build = "light",
                    r.load = function(e, t, i) {
                        return (t = "function" == typeof t ? (i = t, new r.Root) : t || new r.Root).load(e, i)
                    },
                    r.loadSync = function(e, t) {
                        return (t = t || new r.Root).loadSync(e)
                    },
                    r.encoder = e(14),
                    r.decoder = e(13),
                    r.verifier = e(40),
                    r.converter = e(12),
                    r.ReflectionObject = e(24),
                    r.Namespace = e(23),
                    r.Root = e(29),
                    r.Enum = e(15),
                    r.Type = e(35),
                    r.Field = e(16),
                    r.OneOf = e(25),
                    r.MapField = e(20),
                    r.Service = e(33),
                    r.Method = e(22),
                    r.Message = e(21),
                    r.wrappers = e(41),
                    r.types = e(36),
                    r.util = e(37),
                    r.ReflectionObject.o(r.Root),
                    r.Namespace.o(r.Type, r.Service, r.Enum),
                    r.Root.o(r.Type),
                    r.Field.o(r.Type)
                },
                {
                    12 : 12,
                    13 : 13,
                    14 : 14,
                    15 : 15,
                    16 : 16,
                    18 : 18,
                    20 : 20,
                    21 : 21,
                    22 : 22,
                    23 : 23,
                    24 : 24,
                    25 : 25,
                    29 : 29,
                    33 : 33,
                    35 : 35,
                    36 : 36,
                    37 : 37,
                    40 : 40,
                    41 : 41
                }], 18 : [function(e, t, i) {
                    var r = i;
                    function n() {
                        r.Reader.o(r.BufferReader),
                        r.util.o()
                    }
                    r.build = "minimal",
                    r.Writer = e(42),
                    r.BufferWriter = e(43),
                    r.Reader = e(27),
                    r.BufferReader = e(28),
                    r.util = e(39),
                    r.rpc = e(31),
                    r.roots = e(30),
                    r.configure = n,
                    r.Writer.o(r.BufferWriter),
                    n()
                },
                {
                    27 : 27,
                    28 : 28,
                    30 : 30,
                    31 : 31,
                    39 : 39,
                    42 : 42,
                    43 : 43
                }], 19 : [function(e, t) {
                    var i = t.exports = e(17);
                    i.build = "full",
                    i.tokenize = e(34),
                    i.parse = e(26),
                    i.common = e(11),
                    i.Root.o(i.Type, i.parse, i.common)
                },
                {
                    11 : 11,
                    17 : 17,
                    26 : 26,
                    34 : 34
                }], 20 : [function(e, t) {
                    t.exports = s;
                    var a = e(16); ((s.prototype = Object.create(a.prototype)).constructor = s).className = "MapField";
                    var i = e(36),
                    o = e(37);
                    function s(e, t, i, r, n, s) {
                        if (a.call(this, e, t, r, tt, tt, n, s), !o.isString(i)) throw TypeError("keyType must be a string");
                        this.keyType = i,
                        this.resolvedKeyType = null,
                        this.map = !0
                    }
                    s.fromJSON = function(e, t) {
                        return new s(e, t.id, t.keyType, t.type, t.options, t.comment)
                    },
                    s.prototype.toJSON = function(e) {
                        var t = !!e && !!e.keepComments;
                        return o.toObject(["keyType", this.keyType, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", t ? this.comment: tt])
                    },
                    s.prototype.resolve = function() {
                        if (this.resolved) return this;
                        if (i.mapKey[this.keyType] === tt) throw Error("invalid key type: " + this.keyType);
                        return a.prototype.resolve.call(this)
                    },
                    s.d = function(i, r, n) {
                        return "function" == typeof n ? n = o.decorateType(n).name: n && "object" == typeof n && (n = o.decorateEnum(n).name),
                        function(e, t) {
                            o.decorateType(e.constructor).add(new s(t, i, r, n))
                        }
                    }
                },
                {
                    16 : 16,
                    36 : 36,
                    37 : 37
                }], 21 : [function(e, t) {
                    t.exports = r;
                    var i = e(39);
                    function r(e) {
                        if (e) for (var t = Object.keys(e), i = 0; i < t.length; ++i) this[t[i]] = e[t[i]]
                    }
                    r.create = function(e) {
                        return this.$type.create(e)
                    },
                    r.encode = function(e, t) {
                        return this.$type.encode(e, t)
                    },
                    r.encodeDelimited = function(e, t) {
                        return this.$type.encodeDelimited(e, t)
                    },
                    r.decode = function(e) {
                        return this.$type.decode(e)
                    },
                    r.decodeDelimited = function(e) {
                        return this.$type.decodeDelimited(e)
                    },
                    r.verify = function(e) {
                        return this.$type.verify(e)
                    },
                    r.fromObject = function(e) {
                        return this.$type.fromObject(e)
                    },
                    r.toObject = function(e, t) {
                        return this.$type.toObject(e, t)
                    },
                    r.prototype.toJSON = function() {
                        return this.$type.toObject(this, i.toJSONOptions)
                    }
                },
                {
                    39 : 39
                }], 22 : [function(e, t) {
                    t.exports = i;
                    var l = e(24); ((i.prototype = Object.create(l.prototype)).constructor = i).className = "Method";
                    var u = e(37);
                    function i(e, t, i, r, n, s, a, o) {
                        if (u.isObject(n) ? (a = n, n = s = tt) : u.isObject(s) && (a = s, s = tt), t !== tt && !u.isString(t)) throw TypeError("type must be a string");
                        if (!u.isString(i)) throw TypeError("requestType must be a string");
                        if (!u.isString(r)) throw TypeError("responseType must be a string");
                        l.call(this, e, a),
                        this.type = t || "rpc",
                        this.requestType = i,
                        this.requestStream = !!n || tt,
                        this.responseType = r,
                        this.responseStream = !!s || tt,
                        this.resolvedRequestType = null,
                        this.resolvedResponseType = null,
                        this.comment = o
                    }
                    i.fromJSON = function(e, t) {
                        return new i(e, t.type, t.requestType, t.responseType, t.requestStream, t.responseStream, t.options, t.comment)
                    },
                    i.prototype.toJSON = function(e) {
                        var t = !!e && !!e.keepComments;
                        return u.toObject(["type", "rpc" !== this.type && this.type || tt, "requestType", this.requestType, "requestStream", this.requestStream, "responseType", this.responseType, "responseStream", this.responseStream, "options", this.options, "comment", t ? this.comment: tt])
                    },
                    i.prototype.resolve = function() {
                        return this.resolved ? this: (this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), l.prototype.resolve.call(this))
                    }
                },
                {
                    24 : 24,
                    37 : 37
                }], 23 : [function(e, t) {
                    t.exports = u;
                    var i = e(24); ((u.prototype = Object.create(i.prototype)).constructor = u).className = "Namespace";
                    var n, s, a, o = e(16),
                    l = e(37);
                    function r(e, t) {
                        if (!e || !e.length) return tt;
                        for (var i = {},
                        r = 0; r < e.length; ++r) i[e[r].name] = e[r].toJSON(t);
                        return i
                    }
                    function u(e, t) {
                        i.call(this, e, t),
                        this.nested = tt,
                        this.f = null
                    }
                    function h(e) {
                        return e.f = null,
                        e
                    }
                    u.fromJSON = function(e, t) {
                        return new u(e, t.options).addJSON(t.nested)
                    },
                    u.arrayToJSON = r,
                    u.isReservedId = function(e, t) {
                        if (e) for (var i = 0; i < e.length; ++i) if ("string" != typeof e[i] && e[i][0] <= t && e[i][1] >= t) return ! 0;
                        return ! 1
                    },
                    u.isReservedName = function(e, t) {
                        if (e) for (var i = 0; i < e.length; ++i) if (e[i] === t) return ! 0;
                        return ! 1
                    },
                    Object.defineProperty(u.prototype, "nestedArray", {
                        get: function() {
                            return this.f || (this.f = l.toArray(this.nested))
                        }
                    }),
                    u.prototype.toJSON = function(e) {
                        return l.toObject(["options", this.options, "nested", r(this.nestedArray, e)])
                    },
                    u.prototype.addJSON = function(e) {
                        if (e) for (var t, i = Object.keys(e), r = 0; r < i.length; ++r) t = e[i[r]],
                        this.add((t.fields !== tt ? n.fromJSON: t.values !== tt ? a.fromJSON: t.methods !== tt ? s.fromJSON: t.id !== tt ? o.fromJSON: u.fromJSON)(i[r], t));
                        return this
                    },
                    u.prototype.get = function(e) {
                        return this.nested && this.nested[e] || null
                    },
                    u.prototype.getEnum = function(e) {
                        if (this.nested && this.nested[e] instanceof a) return this.nested[e].values;
                        throw Error("no such enum: " + e)
                    },
                    u.prototype.add = function(e) {
                        if (! (e instanceof o && e.extend !== tt || e instanceof n || e instanceof a || e instanceof s || e instanceof u)) throw TypeError("object must be a valid nested object");
                        if (this.nested) {
                            var t = this.get(e.name);
                            if (t) {
                                if (! (t instanceof u && e instanceof u) || t instanceof n || t instanceof s) throw Error("duplicate name '" + e.name + "' in " + this);
                                for (var i = t.nestedArray,
                                r = 0; r < i.length; ++r) e.add(i[r]);
                                this.remove(t),
                                this.nested || (this.nested = {}),
                                e.setOptions(t.options, !0)
                            }
                        } else this.nested = {};
                        return (this.nested[e.name] = e).onAdd(this),
                        h(this)
                    },
                    u.prototype.remove = function(e) {
                        if (! (e instanceof i)) throw TypeError("object must be a ReflectionObject");
                        if (e.parent !== this) throw Error(e + " is not a member of " + this);
                        return delete this.nested[e.name],
                        Object.keys(this.nested).length || (this.nested = tt),
                        e.onRemove(this),
                        h(this)
                    },
                    u.prototype.define = function(e, t) {
                        if (l.isString(e)) e = e.split(".");
                        else if (!Array.isArray(e)) throw TypeError("illegal path");
                        if (e && e.length && "" === e[0]) throw Error("path must be relative");
                        for (var i = this; 0 < e.length;) {
                            var r = e.shift();
                            if (i.nested && i.nested[r]) {
                                if (! ((i = i.nested[r]) instanceof u)) throw Error("path conflicts with non-namespace objects")
                            } else i.add(i = new u(r))
                        }
                        return t && i.addJSON(t),
                        i
                    },
                    u.prototype.resolveAll = function() {
                        for (var e = this.nestedArray,
                        t = 0; t < e.length;) e[t] instanceof u ? e[t++].resolveAll() : e[t++].resolve();
                        return this.resolve()
                    },
                    u.prototype.lookup = function(e, t, i) {
                        if ("boolean" == typeof t ? (i = t, t = tt) : t && !Array.isArray(t) && (t = [t]), l.isString(e) && e.length) {
                            if ("." === e) return this.root;
                            e = e.split(".")
                        } else if (!e.length) return this;
                        if ("" === e[0]) return this.root.lookup(e.slice(1), t);
                        var r = this.get(e[0]);
                        if (r) {
                            if (1 === e.length) {
                                if (!t || -1 < t.indexOf(r.constructor)) return r
                            } else if (r instanceof u && (r = r.lookup(e.slice(1), t, !0))) return r
                        } else for (var n = 0; n < this.nestedArray.length; ++n) if (this.f[n] instanceof u && (r = this.f[n].lookup(e, t, !0))) return r;
                        return null === this.parent || i ? null: this.parent.lookup(e, t)
                    },
                    u.prototype.lookupType = function(e) {
                        var t = this.lookup(e, [n]);
                        if (!t) throw Error("no such type: " + e);
                        return t
                    },
                    u.prototype.lookupEnum = function(e) {
                        var t = this.lookup(e, [a]);
                        if (!t) throw Error("no such Enum '" + e + "' in " + this);
                        return t
                    },
                    u.prototype.lookupTypeOrEnum = function(e) {
                        var t = this.lookup(e, [n, a]);
                        if (!t) throw Error("no such Type or Enum '" + e + "' in " + this);
                        return t
                    },
                    u.prototype.lookupService = function(e) {
                        var t = this.lookup(e, [s]);
                        if (!t) throw Error("no such Service '" + e + "' in " + this);
                        return t
                    },
                    u.o = function(e, t, i) {
                        n = e,
                        s = t,
                        a = i
                    }
                },
                {
                    16 : 16,
                    24 : 24,
                    37 : 37
                }], 24 : [function(e, t) { (t.exports = n).className = "ReflectionObject";
                    var i, r = e(37);
                    function n(e, t) {
                        if (!r.isString(e)) throw TypeError("name must be a string");
                        if (t && !r.isObject(t)) throw TypeError("options must be an object");
                        this.options = t,
                        this.name = e,
                        this.parent = null,
                        this.resolved = !1,
                        this.comment = null,
                        this.filename = null
                    }
                    Object.defineProperties(n.prototype, {
                        root: {
                            get: function() {
                                for (var e = this; null !== e.parent;) e = e.parent;
                                return e
                            }
                        },
                        fullName: {
                            get: function() {
                                for (var e = [this.name], t = this.parent; t;) e.unshift(t.name),
                                t = t.parent;
                                return e.join(".")
                            }
                        }
                    }),
                    n.prototype.toJSON = function() {
                        throw Error()
                    },
                    n.prototype.onAdd = function(e) {
                        this.parent && this.parent !== e && this.parent.remove(this),
                        this.parent = e,
                        this.resolved = !1;
                        var t = e.root;
                        t instanceof i && t.h(this)
                    },
                    n.prototype.onRemove = function(e) {
                        var t = e.root;
                        t instanceof i && t.a(this),
                        this.parent = null,
                        this.resolved = !1
                    },
                    n.prototype.resolve = function() {
                        return this.resolved || this.root instanceof i && (this.resolved = !0),
                        this
                    },
                    n.prototype.getOption = function(e) {
                        return this.options ? this.options[e] : tt
                    },
                    n.prototype.setOption = function(e, t, i) {
                        return i && this.options && this.options[e] !== tt || ((this.options || (this.options = {}))[e] = t),
                        this
                    },
                    n.prototype.setOptions = function(e, t) {
                        if (e) for (var i = Object.keys(e), r = 0; r < i.length; ++r) this.setOption(i[r], e[i[r]], t);
                        return this
                    },
                    n.prototype.toString = function() {
                        var e = this.constructor.className,
                        t = this.fullName;
                        return t.length ? e + " " + t: e
                    },
                    n.o = function(e) {
                        i = e
                    }
                },
                {
                    37 : 37
                }], 25 : [function(e, t) {
                    t.exports = s;
                    var n = e(24); ((s.prototype = Object.create(n.prototype)).constructor = s).className = "OneOf";
                    var i = e(16),
                    r = e(37);
                    function s(e, t, i, r) {
                        if (Array.isArray(t) || (i = t, t = tt), n.call(this, e, i), t !== tt && !Array.isArray(t)) throw TypeError("fieldNames must be an Array");
                        this.oneof = t || [],
                        this.fieldsArray = [],
                        this.comment = r
                    }
                    function a(e) {
                        if (e.parent) for (var t = 0; t < e.fieldsArray.length; ++t) e.fieldsArray[t].parent || e.parent.add(e.fieldsArray[t])
                    }
                    s.fromJSON = function(e, t) {
                        return new s(e, t.oneof, t.options, t.comment)
                    },
                    s.prototype.toJSON = function(e) {
                        var t = !!e && !!e.keepComments;
                        return r.toObject(["options", this.options, "oneof", this.oneof, "comment", t ? this.comment: tt])
                    },
                    s.prototype.add = function(e) {
                        if (! (e instanceof i)) throw TypeError("field must be a Field");
                        return e.parent && e.parent !== this.parent && e.parent.remove(e),
                        this.oneof.push(e.name),
                        this.fieldsArray.push(e),
                        a(e.partOf = this),
                        this
                    },
                    s.prototype.remove = function(e) {
                        if (! (e instanceof i)) throw TypeError("field must be a Field");
                        var t = this.fieldsArray.indexOf(e);
                        if (t < 0) throw Error(e + " is not a member of " + this);
                        return this.fieldsArray.splice(t, 1),
                        -1 < (t = this.oneof.indexOf(e.name)) && this.oneof.splice(t, 1),
                        e.partOf = null,
                        this
                    },
                    s.prototype.onAdd = function(e) {
                        n.prototype.onAdd.call(this, e);
                        for (var t = 0; t < this.oneof.length; ++t) {
                            var i = e.get(this.oneof[t]);
                            i && !i.partOf && (i.partOf = this).fieldsArray.push(i)
                        }
                        a(this)
                    },
                    s.prototype.onRemove = function(e) {
                        for (var t, i = 0; i < this.fieldsArray.length; ++i)(t = this.fieldsArray[i]).parent && t.parent.remove(t);
                        n.prototype.onRemove.call(this, e)
                    },
                    s.d = function() {
                        for (var i = Array(arguments.length), e = 0; e < arguments.length;) i[e] = arguments[e++];
                        return function(e, t) {
                            r.decorateType(e.constructor).add(new s(t, i)),
                            Object.defineProperty(e, t, {
                                get: r.oneOfGetter(i),
                                set: r.oneOfSetter(i)
                            })
                        }
                    }
                },
                {
                    16 : 16,
                    24 : 24,
                    37 : 37
                }], 26 : [function(e, t) { (t.exports = Q).filename = null,
                    Q.defaults = {
                        keepCase: !1
                    };
                    var L = e(34),
                    D = e(29),
                    P = e(35),
                    M = e(16),
                    F = e(20),
                    N = e(25),
                    B = e(15),
                    U = e(33),
                    j = e(22),
                    z = e(36),
                    G = e(37),
                    V = /^[1-9][0-9]*$/,
                    W = /^-?[1-9][0-9]*$/,
                    H = /^0[x][0-9a-fA-F]+$/,
                    K = /^-?0[x][0-9a-fA-F]+$/,
                    q = /^0[0-7]+$/,
                    Y = /^-?0[0-7]+$/,
                    Z = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,
                    X = /^[a-zA-Z_][a-zA-Z_0-9]*$/,
                    J = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,
                    $ = /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;
                    function Q(e, t, i) {
                        t instanceof D || (i = t, t = new D);
                        var r, n, s, a, o, l = L(e, (i = i || Q.defaults).alternateCommentMode || !1),
                        u = l.next,
                        h = l.push,
                        d = l.peek,
                        c = l.skip,
                        f = l.cmnt,
                        p = !0,
                        v = !1,
                        m = t,
                        _ = i.keepCase ?
                        function(e) {
                            return e
                        }: G.camelCase;
                        function g(e, t, i) {
                            var r = Q.filename;
                            return i || (Q.filename = null),
                            Error("illegal " + (t || "token") + " '" + e + "' (" + (r ? r + ", ": "") + "line " + l.line + ")")
                        }
                        function y() {
                            var e, t = [];
                            do {
                                if ('"' !== (e = u()) && "'" !== e) throw g(e);
                                t.push(u()), c(e), e = d()
                            } while ('"' === e || "'" === e );
                            return t.join("")
                        }
                        function b(t) {
                            var i = u();
                            switch (i) {
                            case "'":
                            case '"':
                                return h(i),
                                y();
                            case "true":
                            case "TRUE":
                                return ! 0;
                            case "false":
                            case "FALSE":
                                return ! 1
                            }
                            try {
                                return function(e) {
                                    var t = 1;
                                    switch ("-" === e.charAt(0) && (t = -1, e = e.substring(1)), e) {
                                    case "inf":
                                    case "INF":
                                    case "Inf":
                                        return t * (1 / 0);
                                    case "nan":
                                    case "NAN":
                                    case "Nan":
                                    case "NaN":
                                        return NaN;
                                    case "0":
                                        return 0
                                    }
                                    if (V.test(e)) return t * parseInt(e, 10);
                                    if (H.test(e)) return t * parseInt(e, 16);
                                    if (q.test(e)) return t * parseInt(e, 8);
                                    if (Z.test(e)) return t * parseFloat(e);
                                    throw g(e, "number", !0)
                                } (i)
                            } catch(e) {
                                if (t && J.test(i)) return i;
                                throw g(i, "value")
                            }
                        }
                        function S(e, t) {
                            for (var i, r; ! t || '"' !== (i = d()) && "'" !== i ? e.push([r = E(u()), c("to", !0) ? E(u()) : r]) : e.push(y()), c(",", !0););
                            c(";")
                        }
                        function E(e, t) {
                            switch (e) {
                            case "max":
                            case "MAX":
                            case "Max":
                                return 536870911;
                            case "0":
                                return 0
                            }
                            if (!t && "-" === e.charAt(0)) throw g(e, "id");
                            if (W.test(e)) return parseInt(e, 10);
                            if (K.test(e)) return parseInt(e, 16);
                            if (Y.test(e)) return parseInt(e, 8);
                            throw g(e, "id")
                        }
                        function k() {
                            if (r !== tt) throw g("package");
                            if (r = u(), !J.test(r)) throw g(r, "name");
                            m = m.define(r),
                            c(";")
                        }
                        function w() {
                            var e, t = d();
                            switch (t) {
                            case "weak":
                                e = s = s || [],
                                u();
                                break;
                            case "public":
                                u();
                            default:
                                e = n = n || []
                            }
                            t = y(),
                            c(";"),
                            e.push(t)
                        }
                        function T() {
                            if (c("="), a = y(), !(v = "proto3" === a) && "proto2" !== a) throw g(a, "syntax");
                            c(";")
                        }
                        function A(e, t) {
                            switch (t) {
                            case "option":
                                return x(e, t),
                                c(";"),
                                !0;
                            case "message":
                                return function(e, t) {
                                    if (!X.test(t = u())) throw g(t, "type name");
                                    var i = new P(t);
                                    R(i,
                                    function(e) {
                                        if (!A(i, e)) switch (e) {
                                        case "map":
                                            !
                                            function(e) {
                                                c("<");
                                                var t = u();
                                                if (z.mapKey[t] === tt) throw g(t, "type");
                                                c(",");
                                                var i = u();
                                                if (!J.test(i)) throw g(i, "type");
                                                c(">");
                                                var r = u();
                                                if (!X.test(r)) throw g(r, "name");
                                                c("=");
                                                var n = new F(_(r), E(u()), t, i);
                                                R(n,
                                                function(e) {
                                                    if ("option" !== e) throw g(e);
                                                    x(n, e),
                                                    c(";")
                                                },
                                                function() {
                                                    C(n)
                                                }),
                                                e.add(n)
                                            } (i);
                                            break;
                                        case "required":
                                        case "optional":
                                        case "repeated":
                                            I(i, e);
                                            break;
                                        case "oneof":
                                            !
                                            function(e, t) {
                                                if (!X.test(t = u())) throw g(t, "name");
                                                var i = new N(_(t));
                                                R(i,
                                                function(e) {
                                                    "option" === e ? (x(i, e), c(";")) : (h(e), I(i, "optional"))
                                                }),
                                                e.add(i)
                                            } (i, e);
                                            break;
                                        case "extensions":
                                            S(i.extensions || (i.extensions = []));
                                            break;
                                        case "reserved":
                                            S(i.reserved || (i.reserved = []), !0);
                                            break;
                                        default:
                                            if (!v || !J.test(e)) throw g(e);
                                            h(e),
                                            I(i, "optional")
                                        }
                                    }),
                                    e.add(i)
                                } (e, t),
                                !0;
                            case "enum":
                                return function(e, t) {
                                    if (!X.test(t = u())) throw g(t, "name");
                                    var i = new B(t);
                                    R(i,
                                    function(e) {
                                        switch (e) {
                                        case "option":
                                            x(i, e),
                                            c(";");
                                            break;
                                        case "reserved":
                                            S(i.reserved || (i.reserved = []), !0);
                                            break;
                                        default:
                                            !
                                            function(e, t) {
                                                if (!X.test(t)) throw g(t, "name");
                                                c("=");
                                                var i = E(u(), !0),
                                                r = {};
                                                R(r,
                                                function(e) {
                                                    if ("option" !== e) throw g(e);
                                                    x(r, e),
                                                    c(";")
                                                },
                                                function() {
                                                    C(r)
                                                }),
                                                e.add(t, i, r.comment)
                                            } (i, e)
                                        }
                                    }),
                                    e.add(i)
                                } (e, t),
                                !0;
                            case "service":
                                return function(e, t) {
                                    if (!X.test(t = u())) throw g(t, "service name");
                                    var i = new U(t);
                                    R(i,
                                    function(e) {
                                        if (!A(i, e)) {
                                            if ("rpc" !== e) throw g(e); !
                                            function(e, t) {
                                                var i = t;
                                                if (!X.test(t = u())) throw g(t, "name");
                                                var r, n, s, a, o = t;
                                                if (c("("), c("stream", !0) && (n = !0), !J.test(t = u())) throw g(t);
                                                if (r = t, c(")"), c("returns"), c("("), c("stream", !0) && (a = !0), !J.test(t = u())) throw g(t);
                                                s = t,
                                                c(")");
                                                var l = new j(o, i, r, s, n, a);
                                                R(l,
                                                function(e) {
                                                    if ("option" !== e) throw g(e);
                                                    x(l, e),
                                                    c(";")
                                                }),
                                                e.add(l)
                                            } (i, e)
                                        }
                                    }),
                                    e.add(i)
                                } (e, t),
                                !0;
                            case "extend":
                                return function(t, e) {
                                    if (!J.test(e = u())) throw g(e, "reference");
                                    var i = e;
                                    R(null,
                                    function(e) {
                                        switch (e) {
                                        case "required":
                                        case "repeated":
                                        case "optional":
                                            I(t, e, i);
                                            break;
                                        default:
                                            if (!v || !J.test(e)) throw g(e);
                                            h(e),
                                            I(t, "optional", i)
                                        }
                                    })
                                } (e, t),
                                !0
                            }
                            return ! 1
                        }
                        function R(e, t, i) {
                            var r = l.line;
                            if (e && (e.comment = f(), e.filename = Q.filename), c("{", !0)) {
                                for (var n;
                                "}" !== (n = u());) t(n);
                                c(";", !0)
                            } else i && i(),
                            c(";"),
                            e && "string" != typeof e.comment && (e.comment = f(r))
                        }
                        function I(e, t, i) {
                            var r = u();
                            if ("group" !== r) {
                                if (!J.test(r)) throw g(r, "type");
                                var n = u();
                                if (!X.test(n)) throw g(n, "name");
                                n = _(n),
                                c("=");
                                var s = new M(n, E(u()), r, t, i);
                                R(s,
                                function(e) {
                                    if ("option" !== e) throw g(e);
                                    x(s, e),
                                    c(";")
                                },
                                function() {
                                    C(s)
                                }),
                                e.add(s),
                                v || !s.repeated || z.packed[r] === tt && z.basic[r] !== tt || s.setOption("packed", !1, !0)
                            } else !
                            function(e, t) {
                                var i = u();
                                if (!X.test(i)) throw g(i, "name");
                                var r = G.lcFirst(i);
                                i === r && (i = G.ucFirst(i)),
                                c("=");
                                var n = E(u()),
                                s = new P(i);
                                s.group = !0;
                                var a = new M(r, n, i, t);
                                a.filename = Q.filename,
                                R(s,
                                function(e) {
                                    switch (e) {
                                    case "option":
                                        x(s, e),
                                        c(";");
                                        break;
                                    case "required":
                                    case "optional":
                                    case "repeated":
                                        I(s, e);
                                        break;
                                    default:
                                        throw g(e)
                                    }
                                }),
                                e.add(s).add(a)
                            } (e, t)
                        }
                        function x(e, t) {
                            var i = c("(", !0);
                            if (!J.test(t = u())) throw g(t, "name");
                            var r = t;
                            i && (c(")"), r = "(" + r + ")", t = d(), $.test(t) && (r += t, u())),
                            c("="),
                            function e(t, i) {
                                if (c("{", !0)) do {
                                    if (!X.test(o = u())) throw g(o, "name");
                                    "{" === d() ? e(t, i + "." + o) : (c(":"), "{" === d() ? e(t, i + "." + o) : O(t, i + "." + o, b(!0))), c(",", !0)
                                } while (! c ("}", ! 0 ));
                                else O(t, i, b(!0))
                            } (e, r)
                        }
                        function O(e, t, i) {
                            e.setOption && e.setOption(t, i)
                        }
                        function C(e) {
                            if (c("[", !0)) {
                                for (; x(e, "option"), c(",", !0););
                                c("]")
                            }
                            return e
                        }
                        for (; null !== (o = u());) switch (o) {
                        case "package":
                            if (!p) throw g(o);
                            k();
                            break;
                        case "import":
                            if (!p) throw g(o);
                            w();
                            break;
                        case "syntax":
                            if (!p) throw g(o);
                            T();
                            break;
                        case "option":
                            if (!p) throw g(o);
                            x(m, o),
                            c(";");
                            break;
                        default:
                            if (A(m, o)) {
                                p = !1;
                                continue
                            }
                            throw g(o)
                        }
                        return Q.filename = null,
                        {
                            package: r,
                            imports: n,
                            weakImports: s,
                            syntax: a,
                            root: t
                        }
                    }
                },
                {
                    15 : 15,
                    16 : 16,
                    20 : 20,
                    22 : 22,
                    25 : 25,
                    29 : 29,
                    33 : 33,
                    34 : 34,
                    35 : 35,
                    36 : 36,
                    37 : 37
                }], 27 : [function(e, t) {
                    t.exports = o;
                    var i, r = e(39),
                    n = r.LongBits,
                    s = r.utf8;
                    function a(e, t) {
                        return RangeError("index out of range: " + e.pos + " + " + (t || 1) + " > " + e.len)
                    }
                    function o(e) {
                        this.buf = e,
                        this.pos = 0,
                        this.len = e.length
                    }
                    var l, u = "undefined" != typeof Uint8Array ?
                    function(e) {
                        if (e instanceof Uint8Array || Array.isArray(e)) return new o(e);
                        throw Error("illegal buffer")
                    }: function(e) {
                        if (Array.isArray(e)) return new o(e);
                        throw Error("illegal buffer")
                    };
                    function h() {
                        var e = new n(0, 0),
                        t = 0;
                        if (! (4 < this.len - this.pos)) {
                            for (; t < 3; ++t) {
                                if (this.pos >= this.len) throw a(this);
                                if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e
                            }
                            return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0,
                            e
                        }
                        for (; t < 4; ++t) if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;
                        if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e;
                        if (t = 0, 4 < this.len - this.pos) {
                            for (; t < 5; ++t) if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e
                        } else for (; t < 5; ++t) {
                            if (this.pos >= this.len) throw a(this);
                            if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e
                        }
                        throw Error("invalid varint encoding")
                    }
                    function d(e, t) {
                        return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0
                    }
                    function c() {
                        if (this.pos + 8 > this.len) throw a(this, 8);
                        return new n(d(this.buf, this.pos += 4), d(this.buf, this.pos += 4))
                    }
                    o.create = r.Buffer ?
                    function(e) {
                        return (o.create = function(e) {
                            return r.Buffer.isBuffer(e) ? new i(e) : u(e)
                        })(e)
                    }: u,
                    o.prototype.c = r.Array.prototype.subarray || r.Array.prototype.slice,
                    o.prototype.uint32 = (l = 4294967295,
                    function() {
                        if (l = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return l;
                        if (l = (l | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return l;
                        if (l = (l | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return l;
                        if (l = (l | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return l;
                        if (l = (l | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return l;
                        if ((this.pos += 5) > this.len) throw this.pos = this.len,
                        a(this, 10);
                        return l
                    }),
                    o.prototype.int32 = function() {
                        return 0 | this.uint32()
                    },
                    o.prototype.sint32 = function() {
                        var e = this.uint32();
                        return e >>> 1 ^ -(1 & e) | 0
                    },
                    o.prototype.bool = function() {
                        return 0 !== this.uint32()
                    },
                    o.prototype.fixed32 = function() {
                        if (this.pos + 4 > this.len) throw a(this, 4);
                        return d(this.buf, this.pos += 4)
                    },
                    o.prototype.sfixed32 = function() {
                        if (this.pos + 4 > this.len) throw a(this, 4);
                        return 0 | d(this.buf, this.pos += 4)
                    },
                    o.prototype.float = function() {
                        if (this.pos + 4 > this.len) throw a(this, 4);
                        var e = r.float.readFloatLE(this.buf, this.pos);
                        return this.pos += 4,
                        e
                    },
                    o.prototype.double = function() {
                        if (this.pos + 8 > this.len) throw a(this, 4);
                        var e = r.float.readDoubleLE(this.buf, this.pos);
                        return this.pos += 8,
                        e
                    },
                    o.prototype.bytes = function() {
                        var e = this.uint32(),
                        t = this.pos,
                        i = this.pos + e;
                        if (i > this.len) throw a(this, e);
                        return this.pos += e,
                        Array.isArray(this.buf) ? this.buf.slice(t, i) : t === i ? new this.buf.constructor(0) : this.c.call(this.buf, t, i)
                    },
                    o.prototype.string = function() {
                        var e = this.bytes();
                        return s.read(e, 0, e.length)
                    },
                    o.prototype.skip = function(e) {
                        if ("number" == typeof e) {
                            if (this.pos + e > this.len) throw a(this, e);
                            this.pos += e
                        } else do {
                            if (this.pos >= this.len) throw a(this)
                        } while ( 128 & this . buf [ this . pos ++]);
                        return this
                    },
                    o.prototype.skipType = function(e) {
                        switch (e) {
                        case 0:
                            this.skip();
                            break;
                        case 1:
                            this.skip(8);
                            break;
                        case 2:
                            this.skip(this.uint32());
                            break;
                        case 3:
                            for (; 4 != (e = 7 & this.uint32());) this.skipType(e);
                            break;
                        case 5:
                            this.skip(4);
                            break;
                        default:
                            throw Error("invalid wire type " + e + " at offset " + this.pos)
                        }
                        return this
                    },
                    o.o = function(e) {
                        i = e;
                        var t = r.Long ? "toLong": "toNumber";
                        r.merge(o.prototype, {
                            int64: function() {
                                return h.call(this)[t](!1)
                            },
                            uint64: function() {
                                return h.call(this)[t](!0)
                            },
                            sint64: function() {
                                return h.call(this).zzDecode()[t](!1)
                            },
                            fixed64: function() {
                                return c.call(this)[t](!0)
                            },
                            sfixed64: function() {
                                return c.call(this)[t](!1)
                            }
                        })
                    }
                },
                {
                    39 : 39
                }], 28 : [function(e, t) {
                    t.exports = n;
                    var i = e(27); (n.prototype = Object.create(i.prototype)).constructor = n;
                    var r = e(39);
                    function n(e) {
                        i.call(this, e)
                    }
                    r.Buffer && (n.prototype.c = r.Buffer.prototype.slice),
                    n.prototype.string = function() {
                        var e = this.uint32();
                        return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len))
                    }
                },
                {
                    27 : 27,
                    39 : 39
                }], 29 : [function(e, t) {
                    t.exports = i;
                    var r = e(23); ((i.prototype = Object.create(r.prototype)).constructor = i).className = "Root";
                    var n, f, p, s = e(16),
                    a = e(15),
                    o = e(25),
                    v = e(37);
                    function i(e) {
                        r.call(this, "", e),
                        this.deferred = [],
                        this.files = []
                    }
                    function m() {}
                    i.fromJSON = function(e, t) {
                        return t = t || new i,
                        e.options && t.setOptions(e.options),
                        t.addJSON(e.nested)
                    },
                    i.prototype.resolvePath = v.path.resolve,
                    i.prototype.load = function e(t, s, a) {
                        "function" == typeof s && (a = s, s = tt);
                        var o = this;
                        if (!a) return v.asPromise(e, o, t, s);
                        var l = a === m;
                        function u(e, t) {
                            if (a) {
                                var i = a;
                                if (a = null, l) throw e;
                                i(e, t)
                            }
                        }
                        function h(e, t) {
                            try {
                                if (v.isString(t) && "{" === t.charAt(0) && (t = JSON.parse(t)), v.isString(t)) {
                                    f.filename = e;
                                    var i, r = f(t, o, s),
                                    n = 0;
                                    if (r.imports) for (; n < r.imports.length; ++n)(i = o.resolvePath(e, r.imports[n])) && d(i);
                                    if (r.weakImports) for (n = 0; n < r.weakImports.length; ++n)(i = o.resolvePath(e, r.weakImports[n])) && d(i, !0)
                                } else o.setOptions(t.options).addJSON(t.nested)
                            } catch(e) {
                                u(e)
                            }
                            l || c || u(null, o)
                        }
                        function d(i, r) {
                            var e = i.lastIndexOf("google/protobuf/");
                            if ( - 1 < e) {
                                var t = i.substring(e);
                                t in p && (i = t)
                            }
                            if (! ( - 1 < o.files.indexOf(i))) if (o.files.push(i), i in p) l ? h(i, p[i]) : (++c, setTimeout(function() {--c,
                                h(i, p[i])
                            }));
                            else if (l) {
                                var n;
                                try {
                                    n = v.fs.readFileSync(i).toString("utf8")
                                } catch(e) {
                                    return void(r || u(e))
                                }
                                h(i, n)
                            } else++c,
                            v.fetch(i,
                            function(e, t) {--c,
                                a && (e ? r ? c || u(null, o) : u(e) : h(i, t))
                            })
                        }
                        var c = 0;
                        v.isString(t) && (t = [t]);
                        for (var i, r = 0; r < t.length; ++r)(i = o.resolvePath("", t[r])) && d(i);
                        return l ? o: (c || u(null, o), tt)
                    },
                    i.prototype.loadSync = function(e, t) {
                        if (!v.isNode) throw Error("not supported");
                        return this.load(e, t, m)
                    },
                    i.prototype.resolveAll = function() {
                        if (this.deferred.length) throw Error("unresolvable extensions: " + this.deferred.map(function(e) {
                            return "'extend " + e.extend + "' in " + e.parent.fullName
                        }).join(", "));
                        return r.prototype.resolveAll.call(this)
                    };
                    var l = /^[A-Z]/;
                    function u(e, t) {
                        var i = t.parent.lookup(t.extend);
                        if (i) {
                            var r = new s(t.fullName, t.id, t.type, t.rule, tt, t.options);
                            return (r.declaringField = t).extensionField = r,
                            i.add(r),
                            !0
                        }
                        return ! 1
                    }
                    i.prototype.h = function(e) {
                        if (e instanceof s) e.extend === tt || e.extensionField || u(0, e) || this.deferred.push(e);
                        else if (e instanceof a) l.test(e.name) && (e.parent[e.name] = e.values);
                        else if (! (e instanceof o)) {
                            if (e instanceof n) for (var t = 0; t < this.deferred.length;) u(0, this.deferred[t]) ? this.deferred.splice(t, 1) : ++t;
                            for (var i = 0; i < e.nestedArray.length; ++i) this.h(e.f[i]);
                            l.test(e.name) && (e.parent[e.name] = e)
                        }
                    },
                    i.prototype.a = function(e) {
                        if (e instanceof s) {
                            if (e.extend !== tt) if (e.extensionField) e.extensionField.parent.remove(e.extensionField),
                            e.extensionField = null;
                            else {
                                var t = this.deferred.indexOf(e); - 1 < t && this.deferred.splice(t, 1)
                            }
                        } else if (e instanceof a) l.test(e.name) && delete e.parent[e.name];
                        else if (e instanceof r) {
                            for (var i = 0; i < e.nestedArray.length; ++i) this.a(e.f[i]);
                            l.test(e.name) && delete e.parent[e.name]
                        }
                    },
                    i.o = function(e, t, i) {
                        n = e,
                        f = t,
                        p = i
                    }
                },
                {
                    15 : 15,
                    16 : 16,
                    23 : 23,
                    25 : 25,
                    37 : 37
                }], 30 : [function(e, t) {
                    t.exports = {}
                },
                {}], 31 : [function(e, t, i) {
                    i.Service = e(32)
                },
                {
                    32 : 32
                }], 32 : [function(e, t) {
                    t.exports = i;
                    var o = e(39);
                    function i(e, t, i) {
                        if ("function" != typeof e) throw TypeError("rpcImpl must be a function");
                        o.EventEmitter.call(this),
                        this.rpcImpl = e,
                        this.requestDelimited = !!t,
                        this.responseDelimited = !!i
                    } ((i.prototype = Object.create(o.EventEmitter.prototype)).constructor = i).prototype.rpcCall = function e(i, t, r, n, s) {
                        if (!n) throw TypeError("request must be specified");
                        var a = this;
                        if (!s) return o.asPromise(e, a, i, t, r, n);
                        if (!a.rpcImpl) return setTimeout(function() {
                            s(Error("already ended"))
                        },
                        0),
                        tt;
                        try {
                            return a.rpcImpl(i, t[a.requestDelimited ? "encodeDelimited": "encode"](n).finish(),
                            function(e, t) {
                                if (e) return a.emit("error", e, i),
                                s(e);
                                if (null === t) return a.end(!0),
                                tt;
                                if (! (t instanceof r)) try {
                                    t = r[a.responseDelimited ? "decodeDelimited": "decode"](t)
                                } catch(e) {
                                    return a.emit("error", e, i),
                                    s(e)
                                }
                                return a.emit("data", t, i),
                                s(null, t)
                            })
                        } catch(e) {
                            return a.emit("error", e, i),
                            setTimeout(function() {
                                s(e)
                            },
                            0),
                            tt
                        }
                    },
                    i.prototype.end = function(e) {
                        return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()),
                        this
                    }
                },
                {
                    39 : 39
                }], 33 : [function(e, t) {
                    t.exports = a;
                    var r = e(23); ((a.prototype = Object.create(r.prototype)).constructor = a).className = "Service";
                    var s = e(22),
                    o = e(37),
                    l = e(31);
                    function a(e, t) {
                        r.call(this, e, t),
                        this.methods = {},
                        this.l = null
                    }
                    function i(e) {
                        return e.l = null,
                        e
                    }
                    a.fromJSON = function(e, t) {
                        var i = new a(e, t.options);
                        if (t.methods) for (var r = Object.keys(t.methods), n = 0; n < r.length; ++n) i.add(s.fromJSON(r[n], t.methods[r[n]]));
                        return t.nested && i.addJSON(t.nested),
                        i.comment = t.comment,
                        i
                    },
                    a.prototype.toJSON = function(e) {
                        var t = r.prototype.toJSON.call(this, e),
                        i = !!e && !!e.keepComments;
                        return o.toObject(["options", t && t.options || tt, "methods", r.arrayToJSON(this.methodsArray, e) || {},
                        "nested", t && t.nested || tt, "comment", i ? this.comment: tt])
                    },
                    Object.defineProperty(a.prototype, "methodsArray", {
                        get: function() {
                            return this.l || (this.l = o.toArray(this.methods))
                        }
                    }),
                    a.prototype.get = function(e) {
                        return this.methods[e] || r.prototype.get.call(this, e)
                    },
                    a.prototype.resolveAll = function() {
                        for (var e = this.methodsArray,
                        t = 0; t < e.length; ++t) e[t].resolve();
                        return r.prototype.resolve.call(this)
                    },
                    a.prototype.add = function(e) {
                        if (this.get(e.name)) throw Error("duplicate name '" + e.name + "' in " + this);
                        return e instanceof s ? i((this.methods[e.name] = e).parent = this) : r.prototype.add.call(this, e)
                    },
                    a.prototype.remove = function(e) {
                        if (e instanceof s) {
                            if (this.methods[e.name] !== e) throw Error(e + " is not a member of " + this);
                            return delete this.methods[e.name],
                            e.parent = null,
                            i(this)
                        }
                        return r.prototype.remove.call(this, e)
                    },
                    a.prototype.create = function(e, t, i) {
                        for (var r, n = new l.Service(e, t, i), s = 0; s < this.methodsArray.length; ++s) {
                            var a = o.lcFirst((r = this.l[s]).resolve().name).replace(/[^$\w_]/g, "");
                            n[a] = o.codegen(["r", "c"], o.isReserved(a) ? a + "_": a)("return this.rpcCall(m,q,s,r,c)")({
                                m: r,
                                q: r.resolvedRequestType.ctor,
                                s: r.resolvedResponseType.ctor
                            })
                        }
                        return n
                    }
                },
                {
                    22 : 22,
                    23 : 23,
                    31 : 31,
                    37 : 37
                }], 34 : [function(e, t) {
                    t.exports = n;
                    var k = /[\s{}=;:[\],'"()<>]/g,
                    w = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
                    T = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,
                    A = /^ *[*/] + */, R = / ^ \s * \ * ?\
                    /*/, I = /\n/g, x = /\s/, i = /\\(.?)/g, r = { 0: "\0", r: "\r", n: "\n", t: "\t" }; function O(e) { return e.replace(i, function (e, t) { switch (t) { case "\\": case "": return t; default: return r[t] || "" } }) } function n(o, l) { o = o.toString(); var u = 0, h = o.length, d = 1, a = null, c = null, f = 0, p = !1, v = [], m = null; function _(e) { return Error("illegal " + e + " (line " + d + ")") } function g(e) { return o.charAt(e) } function y(e, t) { a = o.charAt(e++), f = d, p = !1; var i, r = e - (l ? 2 : 3); do { if (--r < 0 || "\n" === (i = o.charAt(r))) { p = !0; break } } while (" " === i || "\t" === i); for (var n = o.substring(e, t).split(I), s = 0; s < n.length; ++s)n[s] = n[s].replace(l ? R : A, "").trim(); c = n.join("\n").trim() } function b(e) { var t = S(e), i = o.substring(e, t); return /^\s*\/{1,2}/.test(i) } function S(e) { for (var t = e; t < h && "\n" !== g(t);)t++; return t } function r() { if (0 < v.length) return v.shift(); if (m) return function () { var e = "'" === m ? T : w; e.lastIndex = u - 1; var t = e.exec(o); if (!t) throw _("string"); return u = e.lastIndex, E(m), m = null, O(t[1]) }(); var e, t, i, r, n; do { if (u === h) return null; for (e = !1; x.test(i = g(u));)if ("\n" === i && ++d, ++u === h) return null; if ("/" === g(u)) { if (++u === h) throw _("comment"); if ("/" === g(u)) if (l) { if (n = !1, b(r = u)) { n = !0; do { if ((u = S(u)) === h) break; u++ } while (b(u)) } else u = Math.min(h, S(u) + 1); n && y(r, u), d++, e = !0 } else { for (n = "/" === g(r = u + 1); "\n" !== g(++u);)if (u === h) return null; ++u, n && y(r, u - 1), ++d, e = !0 } else { if ("*" !== (i = g(u))) return "/"; r = u + 1, n = l || "*" === g(r); do { if ("\n" === i && ++d, ++u === h) throw _("comment"); t = i, i = g(u) } while ("*" !== t || "/" !== i); ++u, n && y(r, u - 2), e = !0 } } } while (e); var s = u; if (k.lastIndex = 0, !k.test(g(s++))) for (; s < h && !k.test(g(s));)++s; var a = o.substring(u, u = s); return '"' !== a && "'" !== a || (m = a), a } function E(e) { v.push(e) } function n() { if (!v.length) { var e = r(); if (null === e) return null; E(e) } return v[0] } return Object.defineProperty({ next: r, peek: n, push: E, skip: function (e, t) { var i = n(); if (i === e) return r(), !0; if (!t) throw _("token '" + i + "', '" + e + "' expected"); return !1 }, cmnt: function (e) { var t = null; return e === tt ? f === d - 1 && (l || "*" === a || p) && (t = c) : (f < e && n(), f !== e || p || !l && "/" !== a || (t = c)), t } }, "line", { get: function () { return d } }) } n.unescape = O }, {}], 35: [function (e, t) { t.exports = y; var a = e(23); ((y.prototype = Object.create(a.prototype)).constructor = y).className = "Type"; var o = e(15), l = e(25), u = e(16), h = e(20), d = e(33), n = e(21), s = e(27), c = e(42), f = e(37), p = e(14), v = e(13), m = e(40), _ = e(12), g = e(41); function y(e, t) { a.call(this, e, t), this.fields = {}, this.oneofs = tt, this.extensions = tt, this.reserved = tt, this.group = tt, this.v = null, this.e = null, this.p = null, this.w = null } function i(e) { return e.v = e.e = e.p = null, delete e.encode, delete e.decode, delete e.verify, e } Object.defineProperties(y.prototype, { fieldsById: { get: function () { if (this.v) return this.v; this.v = {}; for (var e = Object.keys(this.fields), t = 0; t < e.length; ++t) { var i = this.fields[e[t]], r = i.id; if (this.v[r]) throw Error("duplicate id " + r + " in " + this); this.v[r] = i } return this.v } }, fieldsArray: { get: function () { return this.e || (this.e = f.toArray(this.fields)) } }, oneofsArray: { get: function () { return this.p || (this.p = f.toArray(this.oneofs)) } }, ctor: { get: function () { return this.w || (this.ctor = y.generateConstructor(this)()) }, set: function (e) { var t = e.prototype; t instanceof n || ((e.prototype = new n).constructor = e, f.merge(e.prototype, t)), e.$type = e.prototype.$type = this, f.merge(e, n, !0), this.w = e; for (var i = 0; i < this.fieldsArray.length; ++i)this.e[i].resolve(); var r = {}; for (i = 0; i < this.oneofsArray.length; ++i)r[this.p[i].resolve().name] = { get: f.oneOfGetter(this.p[i].oneof), set: f.oneOfSetter(this.p[i].oneof) }; i && Object.defineProperties(e.prototype, r) } } }), y.generateConstructor = function (e) { for (var t, i = f.codegen(["p"], e.name), r = 0; r < e.fieldsArray.length; ++r)(t = e.e[r]).map ? i("this%s={}", f.safeProp(t.name)) : t.repeated && i("this%s=[]", f.safeProp(t.name)); return i("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]") }, y.fromJSON = function (e, t) { var i = new y(e, t.options); i.extensions = t.extensions, i.reserved = t.reserved; for (var r = Object.keys(t.fields), n = 0; n < r.length; ++n)i.add((void 0 !== t.fields[r[n]].keyType ? h.fromJSON : u.fromJSON)(r[n], t.fields[r[n]])); if (t.oneofs) for (r = Object.keys(t.oneofs), n = 0; n < r.length; ++n)i.add(l.fromJSON(r[n], t.oneofs[r[n]])); if (t.nested) for (r = Object.keys(t.nested), n = 0; n < r.length; ++n) { var s = t.nested[r[n]]; i.add((s.id !== tt ? u.fromJSON : s.fields !== tt ? y.fromJSON : s.values !== tt ? o.fromJSON : s.methods !== tt ? d.fromJSON : a.fromJSON)(r[n], s)) } return t.extensions && t.extensions.length && (i.extensions = t.extensions), t.reserved && t.reserved.length && (i.reserved = t.reserved), t.group && (i.group = !0), t.comment && (i.comment = t.comment), i }, y.prototype.toJSON = function (e) { var t = a.prototype.toJSON.call(this, e), i = !!e && !!e.keepComments; return f.toObject(["options", t && t.options || tt, "oneofs", a.arrayToJSON(this.oneofsArray, e), "fields", a.arrayToJSON(this.fieldsArray.filter(function (e) { return !e.declaringField }), e) || {}, "extensions", this.extensions && this.extensions.length ? this.extensions : tt, "reserved", this.reserved && this.reserved.length ? this.reserved : tt, "group", this.group || tt, "nested", t && t.nested || tt, "comment", i ? this.comment : tt]) }, y.prototype.resolveAll = function () { for (var e = this.fieldsArray, t = 0; t < e.length;)e[t++].resolve(); var i = this.oneofsArray; for (t = 0; t < i.length;)i[t++].resolve(); return a.prototype.resolveAll.call(this) }, y.prototype.get = function (e) { return this.fields[e] || this.oneofs && this.oneofs[e] || this.nested && this.nested[e] || null }, y.prototype.add = function (e) { if (this.get(e.name)) throw Error("duplicate name '" + e.name + "' in " + this); if (e instanceof u && e.extend === tt) { if (this.v ? this.v[e.id] : this.fieldsById[e.id]) throw Error("duplicate id " + e.id + " in " + this); if (this.isReservedId(e.id)) throw Error("id " + e.id + " is reserved in " + this); if (this.isReservedName(e.name)) throw Error("name '" + e.name + "' is reserved in " + this); return e.parent && e.parent.remove(e), (this.fields[e.name] = e).message = this, e.onAdd(this), i(this) } return e instanceof l ? (this.oneofs || (this.oneofs = {}), (this.oneofs[e.name] = e).onAdd(this), i(this)) : a.prototype.add.call(this, e) }, y.prototype.remove = function (e) { if (e instanceof u && e.extend === tt) { if (!this.fields || this.fields[e.name] !== e) throw Error(e + " is not a member of " + this); return delete this.fields[e.name], e.parent = null, e.onRemove(this), i(this) } if (e instanceof l) { if (!this.oneofs || this.oneofs[e.name] !== e) throw Error(e + " is not a member of " + this); return delete this.oneofs[e.name], e.parent = null, e.onRemove(this), i(this) } return a.prototype.remove.call(this, e) }, y.prototype.isReservedId = function (e) { return a.isReservedId(this.reserved, e) }, y.prototype.isReservedName = function (e) { return a.isReservedName(this.reserved, e) }, y.prototype.create = function (e) { return new this.ctor(e) }, y.prototype.setup = function () { for (var e = this.fullName, t = [], i = 0; i < this.fieldsArray.length; ++i)t.push(this.e[i].resolve().resolvedType); this.encode = p(this)({ Writer: c, types: t, util: f }), this.decode = v(this)({ Reader: s, types: t, util: f }), this.verify = m(this)({ types: t, util: f }), this.fromObject = _.fromObject(this)({ types: t, util: f }), this.toObject = _.toObject(this)({ types: t, util: f }); var r = g[e]; if (r) { var n = Object.create(this); n.fromObject = this.fromObject, this.fromObject = r.fromObject.bind(n), n.toObject = this.toObject, this.toObject = r.toObject.bind(n) } return this }, y.prototype.encode = function (e, t) { return this.setup().encode(e, t) }, y.prototype.encodeDelimited = function (e, t) { return this.encode(e, t && t.len ? t.fork() : t).ldelim() }, y.prototype.decode = function (e, t) { return this.setup().decode(e, t) }, y.prototype.decodeDelimited = function (e) { return e instanceof s || (e = s.create(e)), this.decode(e, e.uint32()) }, y.prototype.verify = function (e) { return this.setup().verify(e) }, y.prototype.fromObject = function (e) { return this.setup().fromObject(e) }, y.prototype.toObject = function (e, t) { return this.setup().toObject(e, t) }, y.d = function (t) { return function (e) { f.decorateType(e, t) } } }, { 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 20: 20, 21: 21, 23: 23, 25: 25, 27: 27, 33: 33, 37: 37, 40: 40, 41: 41, 42: 42 }], 36: [function (e, t, i) { var r = i, n = e(37), s = ["double", "float", "int32", "uint32", "sint32", "fixed32", "sfixed32", "int64", "uint64", "sint64", "fixed64", "sfixed64", "bool", "string", "bytes"]; function a(e, t) { var i = 0, r = {}; for (t |= 0; i < e.length;)r[s[i + t]] = e[i++]; return r } r.basic = a([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]), r.defaults = a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !1, "", n.emptyArray, null]), r.long = a([0, 0, 0, 1, 1], 7), r.mapKey = a([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2), r.packed = a([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0]) }, { 37: 37 }], 37: [function (r, e) { var n, i, s = e.exports = r(39), t = r(30); s.codegen = r(3), s.fetch = r(5), s.path = r(8), s.fs = s.inquire("fs"), s.toArray = function (e) { if (e) { for (var t = Object.keys(e), i = Array(t.length), r = 0; r < t.length;)i[r] = e[t[r++]]; return i } return [] }, s.toObject = function (e) { for (var t = {}, i = 0; i < e.length;) { var r = e[i++], n = e[i++]; n !== tt && (t[r] = n) } return t }; var a = /\\/g, o = /"/g; s.isReserved = function (e) { return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e) }, s.safeProp = function (e) { return !/^[$\w_]+$/.test(e) || s.isReserved(e) ? '["' + e.replace(a, "\\\\").replace(o, '\\"') + '"]' : "." + e }, s.ucFirst = function (e) { return e.charAt(0).toUpperCase() + e.substring(1) }; var l = /_([a-z])/g; s.camelCase = function (e) { return e.substring(0, 1) + e.substring(1).replace(l, function (e, t) { return t.toUpperCase() }) }, s.compareFieldsById = function (e, t) { return e.id - t.id }, s.decorateType = function (e, t) { if (e.$type) return t && e.$type.name !== t && (s.decorateRoot.remove(e.$type), e.$type.name = t, s.decorateRoot.add(e.$type)), e.$type; var i = new (n = n || r(35))(t || e.name); return s.decorateRoot.add(i), i.ctor = e, Object.defineProperty(e, "$type", { value: i, enumerable: !1 }), Object.defineProperty(e.prototype, "$type", { value: i, enumerable: !1 }), i }; var u = 0; s.decorateEnum = function (e) { if (e.$type) return e.$type; var t = new (i = i || r(15))("Enum" + u++, e); return s.decorateRoot.add(t), Object.defineProperty(e, "$type", { value: t, enumerable: !1 }), t }, Object.defineProperty(s, "decorateRoot", { get: function () { return t.decorated || (t.decorated = new (r(29))) } }) }, { 15: 15, 29: 29, 3: 3, 30: 30, 35: 35, 39: 39, 5: 5, 8: 8 }], 38: [function (e, t) { t.exports = n; var i = e(39); function n(e, t) { this.lo = e >>> 0, this.hi = t >>> 0 } var s = n.zero = new n(0, 0); s.toNumber = function () { return 0 }, s.zzEncode = s.zzDecode = function () { return this }, s.length = function () { return 1 }; var r = n.zeroHash = "\0\0\0\0\0\0\0\0"; n.fromNumber = function (e) { if (0 === e) return s; var t = e < 0; t && (e = -e); var i = e >>> 0, r = (e - i) / 4294967296 >>> 0; return t && (r = ~r >>> 0, i = ~i >>> 0, 4294967295 < ++i && (i = 0, 4294967295 < ++r && (r = 0))), new n(i, r) }, n.from = function (e) { if ("number" == typeof e) return n.fromNumber(e); if (i.isString(e)) { if (!i.Long) return n.fromNumber(parseInt(e, 10)); e = i.Long.fromString(e) } return e.low || e.high ? new n(e.low >>> 0, e.high >>> 0) : s }, n.prototype.toNumber = function (e) { if (!e && this.hi >>> 31) { var t = 1 + ~this.lo >>> 0, i = ~this.hi >>> 0; return t || (i = i + 1 >>> 0), -(t + 4294967296 * i) } return this.lo + 4294967296 * this.hi }, n.prototype.toLong = function (e) { return i.Long ? new i.Long(0 | this.lo, 0 | this.hi, !!e) : { low: 0 | this.lo, high: 0 | this.hi, unsigned: !!e } }; var a = String.prototype.charCodeAt; n.fromHash = function (e) { return e === r ? s : new n((a.call(e, 0) | a.call(e, 1) << 8 | a.call(e, 2) << 16 | a.call(e, 3) << 24) >>> 0, (a.call(e, 4) | a.call(e, 5) << 8 | a.call(e, 6) << 16 | a.call(e, 7) << 24) >>> 0) }, n.prototype.toHash = function () { return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24) }, n.prototype.zzEncode = function () { var e = this.hi >> 31; return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this }, n.prototype.zzDecode = function () { var e = -(1 & this.lo); return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this }, n.prototype.length = function () { var e = this.lo, t = (this.lo >>> 28 | this.hi << 4) >>> 0, i = this.hi >>> 24; return 0 == i ? 0 == t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : i < 128 ? 9 : 10 } }, { 39: 39 }], 39: [function (e, t, i) { var r = i; function n(e, t, i) { for (var r = Object.keys(t), n = 0; n < r.length; ++n)e[r[n]] !== tt && i || (e[r[n]] = t[r[n]]); return e } function s(e) { function i(e, t) { if (!(this instanceof i)) return new i(e, t); Object.defineProperty(this, "message", { get: function () { return e } }), Error.captureStackTrace ? Error.captureStackTrace(this, i) : Object.defineProperty(this, "stack", { value: Error().stack || "" }), t && n(this, t) } return (i.prototype = Object.create(Error.prototype)).constructor = i, Object.defineProperty(i.prototype, "name", { get: function () { return e } }), i.prototype.toString = function () { return this.name + ": " + this.message }, i } r.asPromise = e(1), r.base64 = e(2), r.EventEmitter = e(4), r.float = e(6), r.inquire = e(7), r.utf8 = e(10), r.pool = e(9), r.LongBits = e(38), r.global = "undefined" != typeof window && window || void 0 !== global && global || "undefined" != typeof self && self || this, r.emptyArray = Object.freeze ? Object.freeze([]) : [], r.emptyObject = Object.freeze ? Object.freeze({}) : {}, r.isNode = !!(r.global.process && r.global.process.versions && r.global.process.versions.node), r.isInteger = Number.isInteger || function (e) { return "number" == typeof e && isFinite(e) && Math.floor(e) === e }, r.isString = function (e) { return "string" == typeof e || e instanceof String }, r.isObject = function (e) { return e && "object" == typeof e }, r.isset = r.isSet = function (e, t) { var i = e[t]; return !(null == i || !e.hasOwnProperty(t)) && ("object" != typeof i || 0 < (Array.isArray(i) ? i.length : Object.keys(i).length)) }, r.Buffer = function () { try { var e = r.inquire("buffer").Buffer; return e.prototype.utf8Write ? e : null } catch (e) { return null } }(), r.y = null, r.b = null, r.newBuffer = function (e) { return "number" == typeof e ? r.Buffer ? r.b(e) : new r.Array(e) : r.Buffer ? r.y(e) : "undefined" == typeof Uint8Array ? e : new Uint8Array(e) }, r.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array, r.Long = r.global.dcodeIO && r.global.dcodeIO.Long || r.global.Long || r.inquire("long"), r.key2Re = /^true|false|0|1$/, r.key32Re = /^-?(?:0|[1-9][0-9]*)$/, r.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, r.longToHash = function (e) { return e ? r.LongBits.from(e).toHash() : r.LongBits.zeroHash }, r.longFromHash = function (e, t) { var i = r.LongBits.fromHash(e); return r.Long ? r.Long.fromBits(i.lo, i.hi, t) : i.toNumber(!!t) }, r.merge = n, r.lcFirst = function (e) { return e.charAt(0).toLowerCase() + e.substring(1) }, r.newError = s, r.ProtocolError = s("ProtocolError"), r.oneOfGetter = function (e) { for (var i = {}, t = 0; t < e.length; ++t)i[e[t]] = 1; return function () { for (var e = Object.keys(this), t = e.length - 1; -1 < t; --t)if (1 === i[e[t]] && this[e[t]] !== tt && null !== this[e[t]]) return e[t] } }, r.oneOfSetter = function (i) { return function (e) { for (var t = 0; t < i.length; ++t)i[t] !== e && delete this[i[t]] } }, r.toJSONOptions = { longs: String, enums: String, bytes: String, json: !0 }, r.o = function () { var i = r.Buffer; i ? (r.y = i.from !== Uint8Array.from && i.from || function (e, t) { return new i(e, t) }, r.b = i.allocUnsafe || function (e) { return new i(e) }) : r.y = r.b = null } }, { 1: 1, 10: 10, 2: 2, 38: 38, 4: 4, 6: 6, 7: 7, 9: 9 }], 40: [function (e, t) { t.exports = function (e) { var t = o.codegen(["m"], e.name + "$verify")('if(typeof m!=="object"||m===null)')("return%j", "object expected"), i = {}; e.oneofsArray.length && t("var p={}"); for (var r = 0; r < e.fieldsArray.length; ++r) { var n = e.e[r].resolve(), s = "m" + o.safeProp(n.name); if (n.optional && t("if(%s!=null&&m.hasOwnProperty(%j)){", s, n.name), n.map) t("if(!util.isObject(%s))", s)("return%j", l(n, "object"))("var k=Object.keys(%s)", s)("for(var i=0;i<k.length;++i){"), h(t, n, "k[i]"), u(t, n, r, s + "[k[i]]")("}"); else if (n.repeated) t("if(!Array.isArray(%s))", s)("return%j", l(n, "array"))("for(var i=0;i<%s.length;++i){", s), u(t, n, r, s + "[i]")("}"); else { if (n.partOf) { var a = o.safeProp(n.partOf.name); 1 === i[n.partOf.name] && t("if(p%s===1)", a)("return%j", n.partOf.name + ": multiple values"), i[n.partOf.name] = 1, t("p%s=1", a) } u(t, n, r, s) } n.optional && t("}") } return t("return null") }; var a = e(15), o = e(37); function l(e, t) { return e.name + ": " + t + (e.repeated && "array" !== t ? "[]" : e.map && "object" !== t ? "{k:" + e.keyType + "}" : "") + " expected" } function u(e, t, i, r) { if (t.resolvedType) if (t.resolvedType instanceof a) { e("switch(%s){", r)("default:")("return%j", l(t, "enum value")); for (var n = Object.keys(t.resolvedType.values), s = 0; s < n.length; ++s)e("case %i:", t.resolvedType.values[n[s]]); e("break")("}") } else e("{")("var e=types[%i].verify(%s);", i, r)("if(e)")("return%j+e", t.name + ".")("}"); else switch (t.type) { case "int32": case "uint32": case "sint32": case "fixed32": case "sfixed32": e("if(!util.isInteger(%s))", r)("return%j", l(t, "integer")); break; case "int64": case "uint64": case "sint64": case "fixed64": case "sfixed64": e("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", r, r, r, r)("return%j", l(t, "integer|Long")); break; case "float": case "double": e('if(typeof %s!=="number")', r)("return%j", l(t, "number")); break; case "bool": e('if(typeof %s!=="boolean")', r)("return%j", l(t, "boolean")); break; case "string": e("if(!util.isString(%s))", r)("return%j", l(t, "string")); break; case "bytes": e('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))', r, r, r)("return%j", l(t, "buffer")) }return e } function h(e, t, i) { switch (t.keyType) { case "int32": case "uint32": case "sint32": case "fixed32": case "sfixed32": e("if(!util.key32Re.test(%s))", i)("return%j", l(t, "integer key")); break; case "int64": case "uint64": case "sint64": case "fixed64": case "sfixed64": e("if(!util.key64Re.test(%s))", i)("return%j", l(t, "integer|Long key")); break; case "bool": e("if(!util.key2Re.test(%s))", i)("return%j", l(t, "boolean key")) }return e } }, { 15: 15, 37: 37 }], 41: [function (e, t, i) { var r = i, s = e(21); r[".google.protobuf.Any"] = { fromObject: function (e) { if (e && e["@type"]) { var t = this.lookup(e["@type"]); if (t) { var i = "." === e["@type"].charAt(0) ? e["@type"].substr(1) : e["@type"]; return this.create({ type_url: "/" + i, value: t.encode(t.fromObject(e)).finish() }) } } return this.fromObject(e) }, toObject: function (e, t) { if (t && t.json && e.type_url && e.value) { var i = e.type_url.substring(e.type_url.lastIndexOf("/") + 1), r = this.lookup(i); r && (e = r.decode(e.value)) } if (e instanceof this.ctor || !(e instanceof s)) return this.toObject(e, t); var n = e.$type.toObject(e, t); return n["@type"] = e.$type.fullName, n } } }, { 21: 21 }], 42: [function (e, t) { t.exports = h; var i, r = e(39), n = r.LongBits, s = r.base64, a = r.utf8; function o(e, t, i) { this.fn = e, this.len = t, this.next = tt, this.val = i } function l() { } function u(e) { this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states } function h() { this.len = 0, this.head = new o(l, 0, 0), this.tail = this.head, this.states = null } function d(e, t, i) { t[i] = 255 & e } function c(e, t) { this.len = e, this.next = tt, this.val = t } function f(e, t, i) { for (; e.hi;)t[i++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, e.hi >>>= 7; for (; 127 < e.lo;)t[i++] = 127 & e.lo | 128, e.lo = e.lo >>> 7; t[i++] = e.lo } function p(e, t, i) { t[i] = 255 & e, t[i + 1] = e >>> 8 & 255, t[i + 2] = e >>> 16 & 255, t[i + 3] = e >>> 24 } h.create = r.Buffer ? function () { return (h.create = function () { return new i })() } : function () { return new h }, h.alloc = function (e) { return new r.Array(e) }, r.Array !== Array && (h.alloc = r.pool(h.alloc, r.Array.prototype.subarray)), h.prototype.g = function (e, t, i) { return this.tail = this.tail.next = new o(e, t, i), this.len += t, this }, (c.prototype = Object.create(o.prototype)).fn = function (e, t, i) { for (; 127 < e;)t[i++] = 127 & e | 128, e >>>= 7; t[i] = e }, h.prototype.uint32 = function (e) { return this.len += (this.tail = this.tail.next = new c((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this }, h.prototype.int32 = function (e) { return e < 0 ? this.g(f, 10, n.fromNumber(e)) : this.uint32(e) }, h.prototype.sint32 = function (e) { return this.uint32((e << 1 ^ e >> 31) >>> 0) }, h.prototype.int64 = h.prototype.uint64 = function (e) { var t = n.from(e); return this.g(f, t.length(), t) }, h.prototype.sint64 = function (e) { var t = n.from(e).zzEncode(); return this.g(f, t.length(), t) }, h.prototype.bool = function (e) { return this.g(d, 1, e ? 1 : 0) }, h.prototype.sfixed32 = h.prototype.fixed32 = function (e) { return this.g(p, 4, e >>> 0) }, h.prototype.sfixed64 = h.prototype.fixed64 = function (e) { var t = n.from(e); return this.g(p, 4, t.lo).g(p, 4, t.hi) }, h.prototype.float = function (e) { return this.g(r.float.writeFloatLE, 4, e) }, h.prototype.double = function (e) { return this.g(r.float.writeDoubleLE, 8, e) }; var v = r.Array.prototype.set ? function (e, t, i) { t.set(e, i) } : function (e, t, i) { for (var r = 0; r < e.length; ++r)t[i + r] = e[r] }; h.prototype.bytes = function (e) { var t = e.length >>> 0; if (!t) return this.g(d, 1, 0); if (r.isString(e)) { var i = h.alloc(t = s.length(e)); s.decode(e, i, 0), e = i } return this.uint32(t).g(v, t, e) }, h.prototype.string = function (e) { var t = a.length(e); return t ? this.uint32(t).g(a.write, t, e) : this.g(d, 1, 0) }, h.prototype.fork = function () { return this.states = new u(this), this.head = this.tail = new o(l, 0, 0), this.len = 0, this }, h.prototype.reset = function () { return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new o(l, 0, 0), this.len = 0), this }, h.prototype.ldelim = function () { var e = this.head, t = this.tail, i = this.len; return this.reset().uint32(i), i && (this.tail.next = e.next, this.tail = t, this.len += i), this }, h.prototype.finish = function () { for (var e = this.head.next, t = this.constructor.alloc(this.len), i = 0; e;)e.fn(e.val, t, i), i += e.len, e = e.next; return t }, h.o = function (e) { i = e } }, { 39: 39 }], 43: [function (e, t) { t.exports = s; var i = e(42); (s.prototype = Object.create(i.prototype)).constructor = s; var r = e(39), n = r.Buffer; function s() { i.call(this) } s.alloc = function (e) { return (s.alloc = r.b)(e) }; var a = n && n.prototype instanceof Uint8Array && "set" === n.prototype.set.name ? function (e, t, i) { t.set(e, i) } : function (e, t, i) { if (e.copy) e.copy(t, i, 0, e.length); else for (var r = 0; r < e.length;)t[i++] = e[r++] }; function o(e, t, i) { e.length < 40 ? r.utf8.write(e, t, i) : t.utf8Write(e, i) } s.prototype.bytes = function (e) { r.isString(e) && (e = r.y(e, "base64")); var t = e.length >>> 0; return this.uint32(t), t && this.g(a, t, e), this }, s.prototype.string = function (e) { var t = n.byteLength(e); return this.uint32(t), t && this.g(o, t, e), this } }, { 39: 39, 42: 42 }] }, e = {}, t = [19], i = function t(i) { var n = e[i]; return n || r[i][0].call(n = e[i] = { exports: {} }, t, n, n.exports), n.exports }(t[0]), i.util.global.protobuf = i, __WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(388)], __WEBPACK_AMD_DEFINE_RESULT__ = function (e) { return e && e.isLong && (i.util.Long = e, i.configure()), i }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__), module && module.exports && (module.exports = i) }()
    }).call(this, __webpack_require__(2), __webpack_require__(387)(module))
}, function (e, t) { e.exports = function (e) { return e.webpackPolyfill || (e.deprecate = function () { }, e.paths = [], e.children || (e.children = []), Object.defineProperty(e, "loaded", { enumerable: !0, get: function () { return e.l } }), Object.defineProperty(e, "id", { enumerable: !0, get: function () { return e.i } }), e.webpackPolyfill = 1), e } }, function (e, t, i) {
    var r, n, s;
/**
 * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/long.js for details
 */
                    n = [], void 0 === (s = "function" == typeof(r = function() {
                        "use strict";
                        function r(e, t, i) {
                            this.low = 0 | e,
                            this.high = 0 | t,
                            this.unsigned = !!i
                        }
                        function f(e) {
                            return ! 0 === (e && e.__isLong__)
                        }
                        Object.defineProperty(r.prototype, "__isLong__", {
                            value: !0,
                            enumerable: !1,
                            configurable: !1
                        }),
                        r.isLong = f;
                        var s = {},
                        a = {};
                        function e(e, t) {
                            var i, r, n;
                            return t ? (n = 0 <= (e >>>= 0) && e < 256) && (r = a[e]) ? r: (i = v(e, (0 | e) < 0 ? -1 : 0, !0), n && (a[e] = i), i) : (n = -128 <= (e |= 0) && e < 128) && (r = s[e]) ? r: (i = v(e, e < 0 ? -1 : 0, !1), n && (s[e] = i), i)
                        }
                        function p(e, t) {
                            if (isNaN(e) || !isFinite(e)) return t ? l: g;
                            if (t) {
                                if (e < 0) return l;
                                if (n <= e) return S
                            } else {
                                if (e <= -o) return E;
                                if (o <= e + 1) return b
                            }
                            return e < 0 ? p( - e, t).neg() : v(e % i | 0, e / i | 0, t)
                        }
                        function v(e, t, i) {
                            return new r(e, t, i)
                        }
                        r.fromInt = e,
                        r.fromNumber = p,
                        r.fromBits = v;
                        var h = Math.pow;
                        function d(e, t, i) {
                            if (0 === e.length) throw Error("empty string");
                            if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e) return g;
                            if (t = "number" == typeof t ? (i = t, !1) : !!t, (i = i || 10) < 2 || 36 < i) throw RangeError("radix");
                            var r;
                            if (0 < (r = e.indexOf("-"))) throw Error("interior hyphen");
                            if (0 === r) return d(e.substring(1), t, i).neg();
                            for (var n = p(h(i, 8)), s = g, a = 0; a < e.length; a += 8) {
                                var o = Math.min(8, e.length - a),
                                l = parseInt(e.substring(a, a + o), i);
                                if (o < 8) {
                                    var u = p(h(i, o));
                                    s = s.mul(u).add(p(l))
                                } else s = (s = s.mul(n)).add(p(l))
                            }
                            return s.unsigned = t,
                            s
                        }
                        function m(e) {
                            return e instanceof r ? e: "number" == typeof e ? p(e) : "string" == typeof e ? d(e) : v(e.low, e.high, e.unsigned)
                        }
                        r.fromString = d,
                        r.fromValue = m;
                        var i = 4294967296,
                        n = i * i,
                        o = n / 2,
                        _ = e(1 << 24),
                        g = e(0);
                        r.ZERO = g;
                        var l = e(0, !0);
                        r.UZERO = l;
                        var u = e(1);
                        r.ONE = u;
                        var c = e(1, !0);
                        r.UONE = c;
                        var y = e( - 1);
                        r.NEG_ONE = y;
                        var b = v( - 1, 2147483647, !1);
                        r.MAX_VALUE = b;
                        var S = v( - 1, -1, !0);
                        r.MAX_UNSIGNED_VALUE = S;
                        var E = v(0, -2147483648, !1);
                        r.MIN_VALUE = E;
                        var t = r.prototype;
                        return t.toInt = function() {
                            return this.unsigned ? this.low >>> 0 : this.low
                        },
                        t.toNumber = function() {
                            return this.unsigned ? (this.high >>> 0) * i + (this.low >>> 0) : this.high * i + (this.low >>> 0)
                        },
                        t.toString = function(e) {
                            if ((e = e || 10) < 2 || 36 < e) throw RangeError("radix");
                            if (this.isZero()) return "0";
                            if (this.isNegative()) {
                                if (this.eq(E)) {
                                    var t = p(e),
                                    i = this.div(t),
                                    r = i.mul(t).sub(this);
                                    return i.toString(e) + r.toInt().toString(e)
                                }
                                return "-" + this.neg().toString(e)
                            }
                            for (var n = p(h(e, 6), this.unsigned), s = this, a = "";;) {
                                var o = s.div(n),
                                l = (s.sub(o.mul(n)).toInt() >>> 0).toString(e);
                                if ((s = o).isZero()) return l + a;
                                for (; l.length < 6;) l = "0" + l;
                                a = "" + l + a
                            }
                        },
                        t.getHighBits = function() {
                            return this.high
                        },
                        t.getHighBitsUnsigned = function() {
                            return this.high >>> 0
                        },
                        t.getLowBits = function() {
                            return this.low
                        },
                        t.getLowBitsUnsigned = function() {
                            return this.low >>> 0
                        },
                        t.getNumBitsAbs = function() {
                            if (this.isNegative()) return this.eq(E) ? 64 : this.neg().getNumBitsAbs();
                            for (var e = 0 != this.high ? this.high: this.low, t = 31; 0 < t && 0 == (e & 1 << t); t--);
                            return 0 != this.high ? t + 33 : t + 1
                        },
                        t.isZero = function() {
                            return 0 === this.high && 0 === this.low
                        },
                        t.isNegative = function() {
                            return ! this.unsigned && this.high < 0
                        },
                        t.isPositive = function() {
                            return this.unsigned || 0 <= this.high
                        },
                        t.isOdd = function() {
                            return 1 == (1 & this.low)
                        },
                        t.isEven = function() {
                            return 0 == (1 & this.low)
                        },
                        t.equals = function(e) {
                            return f(e) || (e = m(e)),
                            (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low
                        },
                        t.eq = t.equals,
                        t.notEquals = function(e) {
                            return ! this.eq(e)
                        },
                        t.neq = t.notEquals,
                        t.lessThan = function(e) {
                            return this.comp(e) < 0
                        },
                        t.lt = t.lessThan,
                        t.lessThanOrEqual = function(e) {
                            return this.comp(e) <= 0
                        },
                        t.lte = t.lessThanOrEqual,
                        t.greaterThan = function(e) {
                            return 0 < this.comp(e)
                        },
                        t.gt = t.greaterThan,
                        t.greaterThanOrEqual = function(e) {
                            return 0 <= this.comp(e)
                        },
                        t.gte = t.greaterThanOrEqual,
                        t.compare = function(e) {
                            if (f(e) || (e = m(e)), this.eq(e)) return 0;
                            var t = this.isNegative(),
                            i = e.isNegative();
                            return t && !i ? -1 : !t && i ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1
                        },
                        t.comp = t.compare,
                        t.negate = function() {
                            return ! this.unsigned && this.eq(E) ? E: this.not().add(u)
                        },
                        t.neg = t.negate,
                        t.add = function(e) {
                            f(e) || (e = m(e));
                            var t = this.high >>> 16,
                            i = 65535 & this.high,
                            r = this.low >>> 16,
                            n = 65535 & this.low,
                            s = e.high >>> 16,
                            a = 65535 & e.high,
                            o = e.low >>> 16,
                            l = 0,
                            u = 0,
                            h = 0,
                            d = 0;
                            return h += (d += n + (65535 & e.low)) >>> 16,
                            u += (h += r + o) >>> 16,
                            l += (u += i + a) >>> 16,
                            l += t + s,
                            v((h &= 65535) << 16 | (d &= 65535), (l &= 65535) << 16 | (u &= 65535), this.unsigned)
                        },
                        t.subtract = function(e) {
                            return f(e) || (e = m(e)),
                            this.add(e.neg())
                        },
                        t.sub = t.subtract,
                        t.multiply = function(e) {
                            if (this.isZero()) return g;
                            if (f(e) || (e = m(e)), e.isZero()) return g;
                            if (this.eq(E)) return e.isOdd() ? E: g;
                            if (e.eq(E)) return this.isOdd() ? E: g;
                            if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
                            if (e.isNegative()) return this.mul(e.neg()).neg();
                            if (this.lt(_) && e.lt(_)) return p(this.toNumber() * e.toNumber(), this.unsigned);
                            var t = this.high >>> 16,
                            i = 65535 & this.high,
                            r = this.low >>> 16,
                            n = 65535 & this.low,
                            s = e.high >>> 16,
                            a = 65535 & e.high,
                            o = e.low >>> 16,
                            l = 65535 & e.low,
                            u = 0,
                            h = 0,
                            d = 0,
                            c = 0;
                            return d += (c += n * l) >>> 16,
                            h += (d += r * l) >>> 16,
                            d &= 65535,
                            h += (d += n * o) >>> 16,
                            u += (h += i * l) >>> 16,
                            h &= 65535,
                            u += (h += r * o) >>> 16,
                            h &= 65535,
                            u += (h += n * a) >>> 16,
                            u += t * l + i * o + r * a + n * s,
                            v((d &= 65535) << 16 | (c &= 65535), (u &= 65535) << 16 | (h &= 65535), this.unsigned)
                        },
                        t.mul = t.multiply,
                        t.divide = function(e) {
                            if (f(e) || (e = m(e)), e.isZero()) throw Error("division by zero");
                            if (this.isZero()) return this.unsigned ? l: g;
                            var t, i, r;
                            if (this.unsigned) {
                                if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return l;
                                if (e.gt(this.shru(1))) return c;
                                r = l
                            } else {
                                if (this.eq(E)) return e.eq(u) || e.eq(y) ? E: e.eq(E) ? u: (t = this.shr(1).div(e).shl(1)).eq(g) ? e.isNegative() ? u: y: (i = this.sub(e.mul(t)), r = t.add(i.div(e)));
                                if (e.eq(E)) return this.unsigned ? l: g;
                                if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
                                if (e.isNegative()) return this.div(e.neg()).neg();
                                r = g
                            }
                            for (i = this; i.gte(e);) {
                                t = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));
                                for (var n = Math.ceil(Math.log(t) / Math.LN2), s = n <= 48 ? 1 : h(2, n - 48), a = p(t), o = a.mul(e); o.isNegative() || o.gt(i);) o = (a = p(t -= s, this.unsigned)).mul(e);
                                a.isZero() && (a = u),
                                r = r.add(a),
                                i = i.sub(o)
                            }
                            return r
                        },
                        t.div = t.divide,
                        t.modulo = function(e) {
                            return f(e) || (e = m(e)),
                            this.sub(this.div(e).mul(e))
                        },
                        t.mod = t.modulo,
                        t.not = function() {
                            return v(~this.low, ~this.high, this.unsigned)
                        },
                        t.and = function(e) {
                            return f(e) || (e = m(e)),
                            v(this.low & e.low, this.high & e.high, this.unsigned)
                        },
                        t.or = function(e) {
                            return f(e) || (e = m(e)),
                            v(this.low | e.low, this.high | e.high, this.unsigned)
                        },
                        t.xor = function(e) {
                            return f(e) || (e = m(e)),
                            v(this.low ^ e.low, this.high ^ e.high, this.unsigned)
                        },
                        t.shiftLeft = function(e) {
                            return f(e) && (e = e.toInt()),
                            0 == (e &= 63) ? this: e < 32 ? v(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : v(0, this.low << e - 32, this.unsigned)
                        },
                        t.shl = t.shiftLeft,
                        t.shiftRight = function(e) {
                            return f(e) && (e = e.toInt()),
                            0 == (e &= 63) ? this: e < 32 ? v(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : v(this.high >> e - 32, 0 <= this.high ? 0 : -1, this.unsigned)
                        },
                        t.shr = t.shiftRight,
                        t.shiftRightUnsigned = function(e) {
                            if (f(e) && (e = e.toInt()), 0 == (e &= 63)) return this;
                            var t = this.high;
                            return e < 32 ? v(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : v(32 === e ? t: t >>> e - 32, 0, this.unsigned)
                        },
                        t.shru = t.shiftRightUnsigned,
                        t.toSigned = function() {
                            return this.unsigned ? v(this.low, this.high, !1) : this
                        },
                        t.toUnsigned = function() {
                            return this.unsigned ? this: v(this.low, this.high, !0)
                        },
                        t.toBytes = function(e) {
                            return e ? this.toBytesLE() : this.toBytesBE()
                        },
                        t.toBytesLE = function() {
                            var e = this.high,
                            t = this.low;
                            return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24 & 255, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24 & 255]
                        },
                        t.toBytesBE = function() {
                            var e = this.high,
                            t = this.low;
                            return [e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t]
                        },
                        r
                    }) ? r.apply(t, n) : r) || (e.exports = s)
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    r(i(346));
                    var s = r(i(358)),
                    a = r(i(383)),
                    o = r(i(359)),
                    l = r(i(379));
                    function r(e) {
                        return e && e.__esModule ? e: {
                        default:
                            e
                        }
                    }
                    t.
                default = function(r) {
                        var i = null,
                        n = function(e, t) {
                            r.postMessage({
                                msg: "logcat_callback",
                                data: {
                                    type: e,
                                    logcat: t
                                }
                            })
                        }.bind(this);
                        a.
                    default.install(),
                        r.addEventListener("message",
                        function(e) {
                            switch (e.data.cmd) {
                            case "init":
                                (i = new o.
                            default(e.data.param[0], e.data.param[1])).on(l.
                            default.IO_ERROR,
                                function(e, t) {
                                    r.postMessage({
                                        msg: l.
                                    default.IO_ERROR,
                                        data: {
                                            type: e,
                                            info: t
                                        }
                                    })
                                }.bind(this)),
                                i.on(l.
                            default.DEMUX_ERROR,
                                function(e, t) {
                                    r.postMessage({
                                        msg: l.
                                    default.DEMUX_ERROR,
                                        data: {
                                            type: e,
                                            info: t
                                        }
                                    })
                                }.bind(this)),
                                i.on(l.
                            default.INIT_SEGMENT,
                                function(e, t) {
                                    var i = {
                                        msg: l.
                                    default.INIT_SEGMENT,
                                        data: {
                                            type: e,
                                            data: t
                                        }
                                    };
                                    r.postMessage(i, [t.data])
                                }.bind(this)),
                                i.on(l.
                            default.MEDIA_SEGMENT,
                                function(e, t) {
                                    var i = {
                                        msg: l.
                                    default.MEDIA_SEGMENT,
                                        data: {
                                            type: e,
                                            data: t
                                        }
                                    };
                                    r.postMessage(i, [t.data])
                                }.bind(this)),
                                i.on(l.
                            default.LOADING_COMPLETE,
                                function() {
                                    var e = {
                                        msg: l.
                                    default.LOADING_COMPLETE
                                    };
                                    r.postMessage(e)
                                }.bind(this)),
                                i.on(l.
                            default.RECOVERED_EARLY_EOF,
                                function() {
                                    var e = {
                                        msg: l.
                                    default.RECOVERED_EARLY_EOF
                                    };
                                    r.postMessage(e)
                                }.bind(this)),
                                i.on(l.
                            default.MEDIA_INFO,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.MEDIA_INFO,
                                        data: e
                                    };
                                    r.postMessage(t)
                                }.bind(this)),
                                i.on(l.
                            default.METADATA_ARRIVED,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.METADATA_ARRIVED,
                                        data: e
                                    };
                                    r.postMessage(t)
                                }.bind(this)),
                                i.on(l.
                            default.SCRIPTDATA_ARRIVED,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.SCRIPTDATA_ARRIVED,
                                        data: e
                                    };
                                    r.postMessage(t)
                                }.bind(this)),
                                i.on(l.
                            default.STATISTICS_INFO,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.STATISTICS_INFO,
                                        data: e
                                    };
                                    r.postMessage(t)
                                }.bind(this)),
                                i.on(l.
                            default.RECOMMEND_SEEKPOINT,
                                function(e) {
                                    r.postMessage({
                                        msg: l.
                                    default.RECOMMEND_SEEKPOINT,
                                        data: e
                                    })
                                }.bind(this)),
                                i.on(l.
                            default.ESDATA_ARRIVED,
                                function(e, t) {
                                    var i = {
                                        msg: l.
                                    default.ESDATA_ARRIVED,
                                        data: {
                                            type: e,
                                            data: t
                                        }
                                    };
                                    r.postMessage(i, [t.data.buffer])
                                }.bind(this)),
                                i.on(l.
                            default.COMMAND_RESPONSE,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.COMMAND_RESPONSE,
                                        data: e
                                    };
                                    r.postMessage(t)
                                }.bind(this)),
                                i.on(l.
                            default.ESSCRIPTDATA_ARRIVED,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.STATISTICS_INFO,
                                        data: e
                                    };
                                    r.postMessage(t)
                                }.bind(this)),
                                i.on(l.
                            default.OBJECTINFODATA_ARRIVED,
                                function(e) {
                                    var t = {
                                        msg: l.
                                    default.OBJECTINFODATA_ARRIVED,
                                        data: e
                                    };
                                    r.postMessage(t, [e.data.buffer])
                                }.bind(this));
                                break;
                            case "destroy":
                                i && (i.destroy(), i = null),
                                r.postMessage({
                                    msg: "destroyed"
                                });
                                break;
                            case "start":
                                i.start();
                                break;
                            case "stop":
                                i.stop();
                                break;
                            case "sendcmd":
                                i.sendcmd(e.data.param);
                                break;
                            case "seek":
                                i.seek(e.data.param);
                                break;
                            case "pause":
                                i.pause();
                                break;
                            case "resume":
                                i.resume();
                                break;
                            case "logging_config":
                                var t = e.data.param;
                                s.
                            default.applyConfig(t),
                                !0 === t.enableCallback ? s.
                            default.addLogListener(n):
                                s.
                            default.removeLogListener(n)
                            }
                        })
                    }
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s = u(i(347)),
                    v = u(i(346)),
                    l = u(i(355)),
                    d = u(i(391)),
                    a = i(369),
                    o = i(352);
                    function u(e) {
                        return e && e.__esModule ? e: {
                        default:
                            e
                        }
                    }
                    var h = (r(c, [{
                        key: "destroy",
                        value: function() { (this._mediaElement || this._mediaSource) && this.detachMediaElement(),
                            this.e = null,
                            this._emitter.removeAllListeners(),
                            this._emitter = null
                        }
                    },
                    {
                        key: "on",
                        value: function(e, t) {
                            this._emitter.addListener(e, t)
                        }
                    },
                    {
                        key: "off",
                        value: function(e, t) {
                            this._emitter.removeListener(e, t)
                        }
                    },
                    {
                        key: "attachMediaElement",
                        value: function(e) {
                            if (this._mediaSource) throw new o.IllegalStateException("MediaSource has been attached to an HTMLMediaElement!");
                            this._mediaElement = e;
                            var t = this._mediaSource = new window.MediaSource;
                            t.addEventListener("sourceopen", this.e.onSourceOpen),
                            t.addEventListener("sourceended", this.e.onSourceEnded),
                            t.addEventListener("sourceclose", this.e.onSourceClose),
                            this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource),
                            e.src = this._mediaSourceObjectURL
                        }
                    },
                    {
                        key: "detachMediaElement",
                        value: function() {
                            if (this._mediaSource) {
                                var e = this._mediaSource;
                                for (var t in this._sourceBuffers) {
                                    var i = this._pendingSegments[t];
                                    i.splice(0, i.length),
                                    this._pendingSegments[t] = null,
                                    this._pendingRemoveRanges[t] = null,
                                    this._lastInitSegments[t] = null;
                                    var r = this._sourceBuffers[t];
                                    if (r) {
                                        if ("closed" !== e.readyState) {
                                            try {
                                                e.removeSourceBuffer(r)
                                            } catch(e) {
                                                v.
                                            default.e(this.TAG, e.message)
                                            }
                                            r.removeEventListener("error", this.e.onSourceBufferError),
                                            r.removeEventListener("updateend", this.e.onSourceBufferUpdateEnd)
                                        }
                                        this._mimeTypes[t] = null,
                                        this._sourceBuffers[t] = null
                                    }
                                }
                                if ("open" === e.readyState) try {
                                    e.endOfStream()
                                } catch(e) {
                                    v.
                                default.e(this.TAG, e.message)
                                }
                                e.removeEventListener("sourceopen", this.e.onSourceOpen),
                                e.removeEventListener("sourceended", this.e.onSourceEnded),
                                e.removeEventListener("sourceclose", this.e.onSourceClose),
                                this._pendingSourceBufferInit = [],
                                this._isBufferFull = !1,
                                this._idrList.clear(),
                                this._mediaSource = null
                            }
                            if (this._mediaElement) {
                                try {
                                    this._mediaElement.pause(),
                                    this._mediaElement.src = "",
                                    this._mediaElement.removeAttribute("src")
                                } catch(e) {}
                                this._mediaElement = null
                            }
                            this._mediaSourceObjectURL && (window.URL.revokeObjectURL(this._mediaSourceObjectURL), this._mediaSourceObjectURL = null)
                        }
                    },
                    {
                        key: "_checkInitVideoAudio",
                        value: function() {
                            if (this._mediaSource && "open" === this._mediaSource.readyState) {
                                var e = this._initRecord,
                                t = this._config,
                                i = !1;
                                if (t.enableaudio) if (1 == e.video && 1 == e.audio) i = !0,
                                v.
                            default.v(this.TAG, "Initialization Segment video and audio");
                                else if (1 == e.video) {
                                    var r = this._pendingSegments.video.length; (t.isLive && r >= t.videoFramesBeforeAudioForLive || !t.isLive && r >= t.videoFramesBeforeAudioForVod) && (i = !0, v.
                                default.v(this.TAG, "Initialization Segment video only"))
                                } else "AUDIO" == this._mediaElement.tagName && 1 == e.audio && (i = !0, v.
                            default.v(this.TAG, "Initialization Segment audio only"));
                                else i = !0;
                                if (i) {
                                    if (0 < this._pendingSourceBufferInit.length) for (var n = this._pendingSourceBufferInit; n.length;) {
                                        var s = n.shift();
                                        this._appendInitSegment(s, !0)
                                    }
                                    this._hasPendingSegments() && this._doAppendSegments()
                                }
                            }
                        }
                    },
                    {
                        key: "appendInitSegment",
                        value: function(e) {
                            this._initRecord[e.type] = !0,
                            this._pendingSourceBufferInit.push(e),
                            this._pendingSegments[e.type].push(e)
                        }
                    },
                    {
                        key: "_appendInitSegment",
                        value: function(e, t) {
                            var i = e,
                            r = "" + i.container;
                            i.codec && 0 < i.codec.length && (r += ";codecs=" + i.codec),
                            v.
                        default.v(this.TAG, "Received Initialization Segment, " + i.type + " mimeType: " + r);
                            var n = !1;
                            if (this._lastInitSegments[i.type] = i, r !== this._mimeTypes[i.type]) {
                                if (this._mimeTypes[i.type]) v.
                            default.v(this.TAG, "Notice: " + i.type + " mimeType changed, origin: " + this._mimeTypes[i.type] + ", target: " + r);
                                else {
                                    n = !0;
                                    try {
                                        var s = this._sourceBuffers[i.type] = this._mediaSource.addSourceBuffer(r);
                                        s.addEventListener("error", this.e.onSourceBufferError),
                                        s.addEventListener("updateend", this.e.onSourceBufferUpdateEnd)
                                    } catch(e) {
                                        if ("video" == i.type) return v.
                                    default.e(this.TAG, e.message),
                                        void this._emitter.emit(d.
                                    default.ERROR, {
                                            code: e.code,
                                            msg: e.message
                                        });
                                        this._sourceBuffers[i.type] = null,
                                        v.
                                    default.w(this.TAG, e.message)
                                    }
                                    "audio" == i.type && this._sourceBuffers.audio && this._emitter.emit(d.
                                default.AUDIO_INIT)
                                }
                                this._mimeTypes[i.type] = r
                            }
                            t || this._pendingSegments[i.type].push(i),
                            n || this._sourceBuffers[i.type] && !this._sourceBuffers[i.type].updating && this._doAppendSegments(),
                            l.
                        default.safari && "audio/mpeg" === i.container && 0 < i.mediaDuration && (this._requireSetMediaDuration = !0, this._pendingMediaDuration = i.mediaDuration / 1e3, this._updateMediaSourceDuration())
                        }
                    },
                    {
                        key: "appendMediaSegment",
                        value: function(e) {
                            var t = e;
                            if ("audio" != t.type || null != this._sourceBuffers.audio || null == this._mimeTypes.audio) {
                                this._pendingSegments[t.type].push(t),
                                this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer() && !this._hasPendingRemoveRanges() && this._doCleanupSourceBuffer();
                                var i = this._sourceBuffers[t.type]; ! i || i.updating || this._hasPendingRemoveRanges() ? i || this._checkInitVideoAudio() : this._doAppendSegments()
                            }
                        }
                    },
                    {
                        key: "seek",
                        value: function(e) {
                            for (var t in this._seekpos = e,
                            this._removechecktime = 0,
                            this._afterseek = !0,
                            this._sourceBuffers) if (this._sourceBuffers[t]) {
                                var i = this._sourceBuffers[t];
                                if ("open" === this._mediaSource.readyState) try {
                                    i.abort()
                                } catch(e) {
                                    v.
                                default.e(this.TAG, e.message)
                                }
                                this._idrList.clear();
                                var r = this._pendingSegments[t];
                                if (r.splice(0, r.length), "closed" !== this._mediaSource.readyState) {
                                    for (var n = 0; n < i.buffered.length; n++) {
                                        var s = i.buffered.start(n),
                                        a = i.buffered.end(n);
                                        this._pendingRemoveRanges[t].push({
                                            start: s,
                                            end: a
                                        })
                                    }
                                    if (i.updating || this._doRemoveRanges(), l.
                                default.safari) {
                                        var o = this._lastInitSegments[t];
                                        o && (this._pendingSegments[t].push(o), i.updating || this._doAppendSegments())
                                    }
                                }
                            }
                        }
                    },
                    {
                        key: "seekover",
                        value: function() {
                            this._seekpos = -1
                        }
                    },
                    {
                        key: "endOfStream",
                        value: function() {
                            var e = this._mediaSource,
                            t = this._sourceBuffers;
                            e && "open" === e.readyState ? t.video && t.video.updating || t.audio && t.audio.updating ? this._hasPendingEos = !0 : (this._hasPendingEos = !1, e.endOfStream()) : e && "closed" === e.readyState && this._hasPendingSegments() && (this._hasPendingEos = !0)
                        }
                    },
                    {
                        key: "getNearestKeyframe",
                        value: function(e) {
                            return this._idrList.getLastSyncPointBeforeDts(e)
                        }
                    },
                    {
                        key: "_needCleanupSourceBuffer",
                        value: function() {
                            if (!this._config.autoCleanupSourceBuffer) return ! 1;
                            var e = this._mediaElement.currentTime;
                            for (var t in this._sourceBuffers) {
                                var i = this._sourceBuffers[t];
                                if (i) for (var r = i.buffered,
                                n = 0; n < r.length; n++) {
                                    var s = r.start(n);
                                    if (r.end(n), e - s >= this._config.autoCleanupMaxBackwardDuration) return ! 0
                                }
                            }
                            return ! 1
                        }
                    },
                    {
                        key: "_doCleanupSourceBuffer",
                        value: function() {
                            var e = this._mediaElement.currentTime;
                            for (var t in this._sourceBuffers) {
                                var i = this._sourceBuffers[t];
                                if (i) {
                                    for (var r = i.buffered,
                                    n = !1,
                                    s = 0; s < r.length; s++) {
                                        var a = r.start(s),
                                        o = r.end(s);
                                        if (a <= e && e < o + 3) {
                                            if (e - a >= this._config.autoCleanupMaxBackwardDuration) {
                                                n = !0;
                                                for (var l = e - this._config.autoCleanupMinBackwardDuration,
                                                u = this._pendingRemoveRanges[t], h = !1, d = 0; d < u.length; d++) if (u[d].start === a) {
                                                    u[d].end = l,
                                                    h = !0;
                                                    break
                                                }
                                                h || this._pendingRemoveRanges[t].push({
                                                    start: a,
                                                    end: l
                                                })
                                            }
                                        } else if (o < e) if (this._config.isLive) n = !0,
                                        this._pendingRemoveRanges[t].push({
                                            start: a,
                                            end: o
                                        }),
                                        v.
                                    default.w(this.TAG, "_doCleanupSourceBuffer from " + a + " to " + o + "  doRemove " + n);
                                        else {
                                            n = !0;
                                            for (var c = this._pendingRemoveRanges[t], f = !1, p = 0; p < c.length; p++) if (c[p].start === a) {
                                                c[p].end = o,
                                                f = !0,
                                                v.
                                            default.v(this.TAG, "_doCleanupSourceBuffer reset _pendingRemoveRanges  currentTime " + e + " from " + a + " to " + o);
                                                break
                                            }
                                            f || this._pendingRemoveRanges[t].push({
                                                start: a,
                                                end: o
                                            })
                                        }
                                    }
                                    n && !i.updating && this._doRemoveRanges()
                                }
                            }
                        }
                    },
                    {
                        key: "_updateMediaSourceDuration",
                        value: function() {
                            var e = this._sourceBuffers;
                            if (0 !== this._mediaElement.readyState && "open" === this._mediaSource.readyState && !(e.video && e.video.updating || e.audio && e.audio.updating)) {
                                var t = this._mediaSource.duration,
                                i = this._pendingMediaDuration;
                                0 < i && (isNaN(t) || t < i) && (v.
                            default.v(this.TAG, "Update MediaSource duration from " + t + " to " + i), this._mediaSource.duration = i),
                                this._requireSetMediaDuration = !1,
                                this._pendingMediaDuration = 0
                            }
                        }
                    },
                    {
                        key: "_doRemoveRanges",
                        value: function() {
                            for (var e in this._pendingRemoveRanges) if (this._sourceBuffers[e] && !this._sourceBuffers[e].updating) for (var t = this._sourceBuffers[e], i = this._pendingRemoveRanges[e]; i.length && !t.updating;) {
                                var r = i.shift();
                                try {
                                    t.remove(r.start, r.end)
                                } catch(e) {
                                    v.
                                default.e(this.TAG, e.message)
                                }
                            }
                        }
                    },
                    {
                        key: "_doAppendSegments",
                        value: function() {
                            var e = this._pendingSegments;
                            for (var t in e) if (this._sourceBuffers[t] && !this._sourceBuffers[t].updating && 0 < e[t].length) {
                                var i = e[t].shift();
                                if (i.timestampOffset) {
                                    var r = this._sourceBuffers[t].timestampOffset,
                                    n = i.timestampOffset / 1e3;.1 < Math.abs(r - n) && (v.
                                default.v(this.TAG, "Update MPEG audio timestampOffset from " + r + " to " + n), this._sourceBuffers[t].timestampOffset = n),
                                    delete i.timestampOffset
                                }
                                if (!i.data || 0 === i.data.byteLength) continue;
                                try {
                                    this._sourceBuffers[t].appendBuffer(i.data),
                                    this._isBufferFull = !1,
                                    this._afterseek && (v.
                                default.v(this.TAG, "_afterseek appendBuffer"), this._afterseek = !1),
                                    "video" === t && i.hasOwnProperty("info") && this._idrList.appendArray(i.info.syncPoints)
                                } catch(e) {
                                    this._pendingSegments[t].unshift(i),
                                    22 === e.code ? (this._isBufferFull || this._emitter.emit(d.
                                default.BUFFER_FULL), this._isBufferFull = !0) : (v.
                                default.e(this.TAG, e.message), this._emitter.emit(d.
                                default.ERROR, {
                                        code: e.code,
                                        msg: e.message
                                    }))
                                }
                            }
                        }
                    },
                    {
                        key: "_onSourceOpen",
                        value: function() {
                            v.
                        default.v(this.TAG, "MediaSource onSourceOpen"),
                            this._mediaSource.removeEventListener("sourceopen", this.e.onSourceOpen),
                            this._checkInitVideoAudio(),
                            this._emitter.emit(d.
                        default.SOURCE_OPEN)
                        }
                    },
                    {
                        key: "_onSourceEnded",
                        value: function() {
                            v.
                        default.v(this.TAG, "MediaSource onSourceEnded")
                        }
                    },
                    {
                        key: "_onSourceClose",
                        value: function() {
                            v.
                        default.v(this.TAG, "MediaSource onSourceClose"),
                            this._mediaSource && null != this.e && (this._mediaSource.removeEventListener("sourceopen", this.e.onSourceOpen), this._mediaSource.removeEventListener("sourceended", this.e.onSourceEnded), this._mediaSource.removeEventListener("sourceclose", this.e.onSourceClose))
                        }
                    },
                    {
                        key: "_hasPendingSegments",
                        value: function() {
                            var e = this._pendingSegments;
                            return e && (e.video && 0 < e.video.length || e.audio && 0 < e.audio.length)
                        }
                    },
                    {
                        key: "_hasPendingRemoveRanges",
                        value: function() {
                            var e = this._pendingRemoveRanges;
                            return e && (e.video && 0 < e.video.length || e.audio && 0 < e.audio.length)
                        }
                    },
                    {
                        key: "_onSourceBufferUpdateEnd",
                        value: function() {
                            this._mediaElement && (this._requireSetMediaDuration ? this._updateMediaSourceDuration() : this._hasPendingRemoveRanges() ? (this._pendingSegments && this._pendingSegments.video && 20 < this._pendingSegments.video.length && this._doAppendSegments(), this._doRemoveRanges()) : this._hasPendingSegments() ? this._doAppendSegments() : this._hasPendingEos && this.endOfStream(), 0 <= this._seekpos && this._checkSourceSeek(), this._emitter.emit(d.
                        default.UPDATE_END))
                        }
                    },
                    {
                        key: "_onSourceBufferError",
                        value: function(e) {
                            v.
                        default.e(this.TAG, "SourceBuffer Error: " + e)
                        }
                    },
                    {
                        key: "_checkSourceSeek",
                        value: function() {
                            if (this._mediaElement) try {
                                var e = this._mediaElement.currentTime;
                                for (var t in this._sourceBuffers) if ("video" === t) {
                                    var i = this._sourceBuffers[t];
                                    if (i) {
                                        var r = i.buffered;
                                        this._bufferdlength !== r.length && (this._bufferdlength = r.length);
                                        for (var n = 0; n < r.length; n++) {
                                            var s = r.start(n),
                                            a = r.end(n);
                                            if (0 <= this._seekpos) {
                                                var o = this._seekpos - s;
                                                if (15 < o && this._removechecktime++<this._defremovechecktime) {
                                                    var l = a < this._seekpos - 15 ? a: this._seekpos - 15;
                                                    this._pendingRemoveRanges[t].push({
                                                        start: s,
                                                        end: l
                                                    }),
                                                    i.updating || this._doRemoveRanges()
                                                }
                                                if (15 < a - this._seekpos && this._removechecktime++<this._defremovechecktime) {
                                                    var u = s > this._seekpos + 15 ? s: this._seekpos + 15;
                                                    this._pendingRemoveRanges[t].push({
                                                        start: u,
                                                        end: a
                                                    }),
                                                    v.
                                                default.v(this.TAG, "_checkSourceSeek _pendingRemoveRanges2 " + u + " to " + a),
                                                    i.updating || this._doRemoveRanges()
                                                }
                                                if (0 <= o && (this._seekpos <= a || o < 3)) return v.
                                            default.w(this.TAG, "_seekpos: " + this._seekpos),
                                                this._emitter.emit(d.
                                            default.SOURCE_SEEK, o < 3 ? s: this._seekpos),
                                                void(this._seekpos = -1);
                                                if ( - 3 < o && this._seekpos <= a) return v.
                                            default.w(this.TAG, "MSEEvents.SOURCE_SEEK: " + this._seekpos + " to " + s),
                                                this._seekpos = -1,
                                                void this._emitter.emit(d.
                                            default.SOURCE_SEEK, s)
                                            } else if (this._seekpos >= -this._defseekchecktime) {
                                                if (e == s && (this._seekpos = this._seekpos - 1, this._seekpos <= -this._defseekchecktime && this._emitter.emit(d.
                                            default.SOURCE_SEEK, s)), e - 15 < a) {
                                                    var h = e - 15 < s ? s: e - 15;
                                                    this._pendingRemoveRanges[t].push({
                                                        _temp: s,
                                                        end: a
                                                    }),
                                                    v.
                                                default.v(this.TAG, "_checkSourceSeek _pendingRemoveRanges3 " + h + " to " + a),
                                                    i.updating || this._doRemoveRanges()
                                                }
                                                return
                                            }
                                        }
                                    }
                                }
                            } catch(e) {}
                        }
                    }]), c);
                    function c(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, c),
                        this.TAG = "MSEController",
                        this._config = e,
                        this._emitter = new s.
                    default,
                        this._config.isLive && null == this._config.autoCleanupSourceBuffer && (this._config.autoCleanupSourceBuffer = !0),
                        this._config.autoCleanupSourceBuffer = !0,
                        this.e = {
                            onSourceOpen: this._onSourceOpen.bind(this),
                            onSourceEnded: this._onSourceEnded.bind(this),
                            onSourceClose: this._onSourceClose.bind(this),
                            onSourceBufferError: this._onSourceBufferError.bind(this),
                            onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)
                        },
                        this._mediaSource = null,
                        this._mediaSourceObjectURL = null,
                        this._mediaElement = null,
                        this._isBufferFull = !1,
                        this._hasPendingEos = !1,
                        this._requireSetMediaDuration = !1,
                        this._pendingMediaDuration = 0,
                        this._defseekchecktime = 10,
                        this._seekpos = -1 - this._defseekchecktime,
                        this._bufferdlength = 0,
                        this._defremovechecktime = 2,
                        this._removechecktime = 0,
                        this._pendingSourceBufferInit = [],
                        this._mimeTypes = {
                            video: null,
                            audio: null
                        },
                        this._sourceBuffers = {
                            video: null,
                            audio: null
                        },
                        this._lastInitSegments = {
                            video: null,
                            audio: null
                        },
                        this._pendingSegments = {
                            video: [],
                            audio: []
                        },
                        this._pendingRemoveRanges = {
                            video: [],
                            audio: []
                        },
                        this._idrList = new a.IDRSampleList,
                        this._afterseek = !1,
                        this._initRecord = {
                            video: !1,
                            audio: !1
                        }
                    }
                    t.
                default = h
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    t.
                default = {
                        ERROR: "error",
                        SOURCE_OPEN: "source_open",
                        UPDATE_END: "update_end",
                        BUFFER_FULL: "buffer_full",
                        SOURCE_SEEK: "source_seek",
                        AUDIO_INIT: "audio_init"
                    }
                },
                function(e, t, s) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }),
                    t.HttpRequest = t.HttpEvents = t.HttpStatus = void 0;
                    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
                    function(e) {
                        return typeof e
                    }: function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
                    },
                    r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    s(352);
                    var a, o = s(347),
                    l = (a = o) && a.__esModule ? a: {
                    default:
                        a
                    };
                    var u = t.HttpStatus = {
                        kIdle: 0,
                        kConnecting: 1,
                        kSuccess: 2,
                        kError: 3,
                        kInitError: 4
                    },
                    h = t.HttpEvents = {
                        OnInitSuccess: "OnInitSuccess",
                        OnInitFail: "OnInitFail",
                        OnKeepAliveFail: "OnKeepAliveFail"
                    },
                    d = -104999;
                    t.HttpRequest = (r(c, [{
                        key: "destroy",
                        value: function() {
                            this._tokenId && (this._postReq("/api/h5ms/mcc/v1/Logout", {
                                tokenId: this._tokenId
                            }), this._tokenId = null),
                            this._keepAliveTimer && (clearInterval(this._keepAliveTimer), this._keepAliveTimer = null),
                            this._keepAliveWorker && (this._workerDestroying || (this._workerDestroying = !0, this._keepAliveWorker.postMessage({
                                cmd: "destroy"
                            })))
                        }
                    },
                    {
                        key: "addEventListener",
                        value: function(e, t) {
                            e === h.OnInitSucces && this._status === u.kSuccess ? this._emitter.emit(h.OnInitSuccess, this._url) : e === h.OnInitFail && this._status === u.kInitError ? this._emitter.emit(h.OnInitFail, this._url) : e === h.OnKeepAliveFail && this._status === u.kError && this._emitter.emit(h.OnKeepAliveFail, h.OnInitFail),
                            this._emitter.addListener(e, t)
                        }
                    },
                    {
                        key: "listObject",
                        value: function(e, t) {
                            var i = {
                                deviceType: e.devicetype,
                                user: e.user,
                                password: e.password,
                                ip: e.ip,
                                port: e.port,
                                objType: e.objtype
                            };
                            return this._postReq("/api/h5ms/mcc/v1/ListObject", {
                                tokenId: this._tokenId,
                                param: i
                            },
                            function(e) {
                                "ListObject" == e.name ? t && t(e.param) : t && t(e)
                            }),
                            !0
                        }
                    },
                    {
                        key: "startStream",
                        value: function(e, t) {
                            this.init(),
                            "vod" === e.streamtype.toLowerCase() ? this.startVodStream(e, t) : this.startRealStream(e, t)
                        }
                    },
                    {
                        key: "startRealStream",
                        value: function(e, t) {
                            var i = {};
                            Object.assign(i, e),
                            i.protocolType = "websocketflv",
                            i.deviceType = e.devicetype,
                            delete i.devicetype,
                            this._postReq("/api/h5ms/mcc/v1/StartRealStream", {
                                tokenId: this._tokenId,
                                param: i
                            },
                            t)
                        }
                    },
                    {
                        key: "queryRecord",
                        value: function(e, t) {
                            var i = {};
                            return Object.assign(i, e),
                            i.deviceType = e.devicetype,
                            i.beginTime = e.begintime,
                            i.endTime = e.endtime,
                            delete i.devicetype,
                            delete i.begintime,
                            delete i.endtime,
                            this._postReq("/api/h5ms/mcc/v1/QueryRecord", {
                                tokenId: this._tokenId,
                                param: i
                            },
                            function(e) {
                                "QueryRecord" == e.name ? t && t(e.param) : t && t(e)
                            }),
                            !0
                        }
                    },
                    {
                        key: "startVodStream",
                        value: function(e, t) {
                            var i = {};
                            Object.assign(i, e),
                            i.deviceType = e.devicetype,
                            i.beginTime = e.begintime,
                            i.endTime = e.endtime,
                            delete i.devicetype,
                            delete i.begintime,
                            delete i.endtime,
                            "pfsfile" == i.deviceType.toLowerCase() && (i.deviceType = "pfs"),
                            i.protocolType = "websocketflv",
                            this._postReq("/api/h5ms/mcc/v1/StartVodStream", {
                                tokenId: this._tokenId,
                                param: i
                            },
                            t)
                        }
                    },
                    {
                        key: "seek",
                        value: function(e, t, i) {
                            this._postReq("/api/h5ms/mcc/v1/Seek", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    value: "" + t
                                }
                            },
                            i)
                        }
                    },
                    {
                        key: "setSpeed",
                        value: function(e, t, i) {
                            this._postReq("/api/h5ms/mcc/v1/SetSpeed", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    value: t
                                }
                            },
                            i)
                        }
                    },
                    {
                        key: "getSpeed",
                        value: function(e, t) {
                            this._postReq("/api/h5ms/mcc/v1/GetSpeed", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e
                                }
                            },
                            t)
                        }
                    },
                    {
                        key: "pause",
                        value: function(e, t, i) {
                            this._postReq("/api/h5ms/mcc/v1/Pause", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    value: t
                                }
                            },
                            i)
                        }
                    },
                    {
                        key: "ptzControl",
                        value: function(e, t, i, r) {
                            this._postReq("/api/h5ms/mcc/v1/PtzControl", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    cmd: t,
                                    value: i
                                }
                            },
                            r)
                        }
                    },
                    {
                        key: "ptzControl3D",
                        value: function(e, t, i, r, n, s, a) {
                            this._postReq("/api/h5ms/mcc/v1/PtzControl3D", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    direct: t,
                                    x: i,
                                    y: r,
                                    w: n,
                                    h: s
                                }
                            },
                            a)
                        }
                    },
                    {
                        key: "ptzLock",
                        value: function(e, t, i) {
                            this._postReq("/api/h5ms/mcc/v1/PtzLock", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    value: t
                                }
                            },
                            i)
                        }
                    },
                    {
                        key: "startTalkback",
                        value: function(e, t, i, r, n) {
                            var s = {
                                channelCount: n || 1,
                                bitsPerSample: r || 16,
                                samplesPerSec: i || 8e3
                            };
                            Object.assign(s, e),
                            s.protocolType = "websocketflv",
                            s.deviceType = e.devicetype,
                            delete s.devicetype,
                            this._postReq("/api/h5ms/mcc/v1/StartIntercom", {
                                tokenId: this._tokenId,
                                param: s
                            },
                            t)
                        }
                    },
                    {
                        key: "InputAudioData",
                        value: function(e, t, i) {
                            this._xmlHttpRequest(e, t, i)
                        }
                    },
                    {
                        key: "InputAudioData2",
                        value: function(e, t, i, r, n, s) {
                            this._postReq("/api/h5ms/mcc/v1/InputAudioData", {
                                tokenId: this._tokenId,
                                param: {
                                    streamId: e,
                                    audioData: n,
                                    dataSize: n.byteLength,
                                    channelCount: r,
                                    bitsPerSample: i,
                                    samplesPerSec: t
                                }
                            },
                            s)
                        }
                    },
                    {
                        key: "init",
                        value: function() {
                            this._status != u.kConnecting && this._status != u.kSuccess && (this._keepAliveTimer && (window.clearInterval(this._keepAliveTimer), this._keepAliveTimer = null), this._status = u.kConnecting, this._postReq("/api/h5ms/mcc/v1/Login", {
                                user: this._config.h5msUser,
                                password: this._config.h5msPassword
                            },
                            this._onInitCallback.bind(this)))
                        }
                    },
                    {
                        key: "_onInitCallback",
                        value: function(e) {
                            if (e && 0 === e.param.error && "Login" === e.name) {
                                if (this._tokenId = e.msg.tokenId, this._status = u.kSuccess, "undefined" != typeof Worker) if (null == this._keepAliveWorker) try {
                                    var t = s(381),
                                    i = this._keepAliveWorker = t(393);
                                    this._workerDestroying = !1,
                                    i.addEventListener("message", this._onWorkerMessage.bind(this)),
                                    i.onerror = function(e) {},
                                    i.postMessage({
                                        cmd: "init",
                                        param: [this._url, {
                                            tokenId: this._tokenId
                                        },
                                        5e3]
                                    })
                                } catch(e) {
                                    console.warn("Error while initialize keepAliveTimer worker, fallback to inline keepAliveTimer"),
                                    this._keepAliveWorker = null,
                                    this._keepAliveTimer = window.setInterval(this._keepAlive.bind(this), 5e3)
                                } else this._keepAliveWorker.postMessage({
                                    cmd: "init",
                                    param: [this._url, {
                                        tokenId: this._tokenId
                                    },
                                    5e3]
                                });
                                else this._keepAliveTimer = window.setInterval(this._keepAlive.bind(this), 5e3);
                                for (this._onInit && this._onInit(h.OnInitSuccess, this._url), this._emitter.emit(h.OnInitSuccess, this._url); 0 < this._taskList.length;) {
                                    var r = this._taskList.shift();
                                    this._postReq(r[0], r[1], r[2])
                                }
                            } else for (this._status = u.kError, this._onError && this._onError(h.OnInitFail, this._url), this._emitter.emit(h.OnInitFail, this._url); 0 < this._taskList.length;) {
                                var n = this._taskList.shift();
                                n[2] && (0, n[2])({
                                    error: d,
                                    param: {
                                        error: d
                                    },
                                    msg: h.OnInitFail
                                })
                            }
                        }
                    },
                    {
                        key: "_onWorkerMessage",
                        value: function(e) {
                            var t = e.data;
                            if ("destroyed" === t.msg || this._workerDestroying) return this._workerDestroying = !1,
                            this._keepAliveWorker.terminate(),
                            this._keepAliveWorker = null,
                            void console.log("_keepAliveWorker.terminate()");
                            var i = t.data.url,
                            r = t.data.res;
                            switch (t.msg) {
                            case "KeepAliveError":
                                if (i == this._url) {
                                    if (r.msg && "Invailed Token" === r.msg.errorMsg) return this._emitter.emit(h.OnKeepAliveFail, this._url, {}),
                                    this._status = u.kError,
                                    this._onError && this._onError(h.OnKeepAliveFail, this._url),
                                    void this.init();
                                    this._emitter.emit(h.OnKeepAliveFail, this._url, {}),
                                    this._status = u.kError,
                                    this._onError && this._onError(h.OnKeepAliveFail, this._url)
                                }
                            }
                        }
                    },
                    {
                        key: "_keepAlive",
                        value: function() {
                            var t = 0;
                            this._postReq("/api/h5ms/mcc/v1/KeepAlive", {
                                tokenId: this._tokenId
                            },
                            function(e) {
                                if (e && 0 === e.error && "KeepAlive" === e.name) t = 0;
                                else {
                                    if (e.msg && "Invailed Token" === e.msg.errorMsg) return this._emitter.emit(h.OnKeepAliveFail, this._url, {}),
                                    this._status = u.kError,
                                    this._onError && this._onError(h.OnKeepAliveFail, this._url),
                                    void this.init();
                                    2 < ++t && (this._emitter.emit(h.OnKeepAliveFail, this._url, {}), this._status = u.kError, this._onError && this._onError(h.OnKeepAliveFail, this._url))
                                }
                            })
                        }
                    },
                    {
                        key: "_postReq",
                        value: function(e, t, i) {
                            if (!t.tokenId && this._status === u.kConnecting && e.indexOf("Login") < 0) this._taskList.push([e, t, i]);
                            else if (this._status !== u.kError && this._status !== u.kInitError) if (window.fetch && t.constructor != ArrayBuffer) {
                                var r = {
                                    method: "POST",
                                    mode: "cors",
                                    cache: "default",
                                    body: JSON.stringify(t),
                                    headers: new Headers({})
                                };
                                this._fetch(this._url + e, r, i)
                            } else window.XMLHttpRequest && this._xmlHttpRequest(this._url + e, t, i);
                            else i && i({
                                error: d,
                                param: {
                                    error: d
                                }
                            })
                        }
                    },
                    {
                        key: "_xmlHttpRequest",
                        value: function(e, t, n) {
                            var s = !0,
                            i = new XMLHttpRequest;
                            i.onreadystatechange = function(e) {
                                var t = e.target;
                                if (4 == t.readyState) if (200 == t.status && s && n) {
                                    s = !1;
                                    var i = JSON.parse(t.responseText),
                                    r = {
                                        error: 200 == i.code ? 0 : i.code
                                    };
                                    i.msg.info && (r.info = i.msg.info),
                                    i.msg.value && (r.value = i.msg.value),
                                    n({
                                        name: i.cmd,
                                        param: r,
                                        msg: i.msg
                                    })
                                } else this._status = u.kError,
                                s && n && (s = !1, n({
                                    error: d,
                                    param: {
                                        error: d
                                    },
                                    msg: e
                                }))
                            },
                            i.open("POST", e, !0),
                            t.constructor == ArrayBuffer ? i.send(t) : i.send(JSON.stringify(t)),
                            i.onerror = function(e) {
                                this._status = u.kError,
                                s && n && (s = !1, n({
                                    error: d,
                                    param: {
                                        error: d
                                    },
                                    msg: e
                                }))
                            }
                        }
                    },
                    {
                        key: "_fetch",
                        value: function(e, t, i) {
                            var r = this,
                            n = !0;
                            window.fetch(e, t).then(function(e) {
                                return e.json()
                            }).then(function(e) {
                                if (n && i) {
                                    n = !1;
                                    var t = {
                                        error: 200 == e.code ? 0 : e.code
                                    };
                                    e.msg.info && (t.info = e.msg.info),
                                    e.msg.value && (t.value = e.msg.value),
                                    i({
                                        name: e.cmd,
                                        param: t,
                                        msg: e.msg
                                    })
                                }
                            }).
                            catch(function(e) {
                                r._status = u.kError,
                                n && i && (n = !1, i({
                                    error: d,
                                    param: {
                                        error: d
                                    },
                                    msg: e
                                }))
                            })
                        }
                    },
                    {
                        key: "url",
                        get: function() {
                            return this._url
                        }
                    },
                    {
                        key: "status",
                        get: function() {
                            return this._status
                        }
                    },
                    {
                        key: "onError",
                        set: function(e) {
                            this._onError = e,
                            this._status == u.kInitError && this._onError ? this._onError(h.OnInitFail, this._url) : this._status == u.kError && this._onError && this._onError(h.OnKeepAliveFail, this._url)
                        },
                        get: function() {
                            return this._onError
                        }
                    },
                    {
                        key: "onInit",
                        set: function(e) {
                            this._onInit = e,
                            this._status == u.kSuccess && this._onInit && this._onInit(h.OnInitSuccess, this._url)
                        },
                        get: function() {
                            return this._onInit
                        }
                    }]), c);
                    function c(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, c),
                        this.TAG = "HttpRequest",
                        this._config = {
                            h5msUser: "admin",
                            h5msPassword: "admin"
                        },
                        "object" === (void 0 === e ? "undefined": i(e)) && Object.assign(this._config, e),
                        this._tokenId = null,
                        this._url = e.h5msUrl,
                        this._status = u.kIdle,
                        this._emitter = new l.
                    default,
                        this._keepAliveTimer = null,
                        this._keepAliveWorker = null,
                        this._workerDestroying = !1,
                        this._onError = null,
                        this._onInit = null,
                        this._taskList = []
                    }
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r, n = i(383),
                    l = (r = n) && r.__esModule ? r: {
                    default:
                        r
                    };
                    t.
                default = function(i) {
                        var t = null,
                        r = null,
                        n = 0,
                        s = null;
                        function a() { !
                            function(e, t, i) {
                                if (fetch) {
                                    var r = {
                                        method: "POST",
                                        mode: "cors",
                                        cache: "default",
                                        body: JSON.stringify(t),
                                        headers: new Headers({})
                                    }; !
                                    function(e, t, i) {
                                        var r = !0;
                                        fetch(e, t).then(function(e) {
                                            return e.json()
                                        }).then(function(e) {
                                            r && i && (r = !1, i(e))
                                        }).
                                        catch(function(e) {
                                            r && i && (r = !1, i({
                                                code: -1,
                                                msg: e
                                            }))
                                        })
                                    } (e, r, i)
                                } else XMLHttpRequest &&
                                function(e, t, r) {
                                    var n = !0,
                                    i = new XMLHttpRequest;
                                    i.onreadystatechange = function(e) {
                                        var t = e.target;
                                        if (4 == t.readyState) if (200 == t.status && n && r) {
                                            n = !1;
                                            var i = JSON.parse(t.responseText);
                                            r(i)
                                        } else n && r && (n = !1, r({
                                            code: -1,
                                            msg: e
                                        }))
                                    },
                                    i.open("POST", e, !0),
                                    i.send(JSON.stringify(t)),
                                    i.onerror = function(e) {
                                        n && r && (n = !1, r({
                                            code: -1,
                                            msg: e
                                        }))
                                    }
                                } (e, t, i)
                            } (r + "/api/h5ms/mcc/v1/KeepAlive", s,
                            function(e) {
                                e.code <= 0 && (e.msg && "Invailed Token" === e.msg.errorMsg ? o(r, e) : 2 <= ++n && o(r, e))
                            })
                        }
                        function o(e, t) {
                            i.postMessage({
                                msg: "KeepAliveError",
                                data: {
                                    res: t,
                                    url: e
                                }
                            })
                        }
                        l.
                    default.install(),
                        i.addEventListener("message",
                        function(e) {
                            switch (e.data.cmd) {
                            case "init":
                                t && (clearInterval(t), t = null),
                                r = e.data.param[0],
                                s = e.data.param[1],
                                t = setInterval(a, e.data.param[2]);
                                break;
                            case "destroy":
                                t && (clearInterval(t), t = null),
                                i.postMessage({
                                    msg: "destroyed"
                                })
                            }
                        })
                    }
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s = u(i(395)),
                    a = u(i(347)),
                    o = u(i(349)),
                    l = (i(350), u(i(380)));
                    function u(e) {
                        return e && e.__esModule ? e: {
                        default:
                            e
                        }
                    }
                    var h = (r(d, [{
                        key: "inputData",
                        value: function(e, t) {
                            if (0 != this.playerState) {
                                if (this._seekIFrame) {
                                    if (1 != t.frameType) return;
                                    if (t.pts > this._bufferedPts && t.pts - this._bufferedPts < 300) return;
                                    this._seekIFrame = !1
                                }
                                this._bufferedPts = t.pts;
                                var i = {
                                    t: 4,
                                    s: t.pts,
                                    k: t.frameType,
                                    d: t.data
                                };
                                this.decodeWorker.postMessage(i, [i.d.buffer])
                            }
                        }
                    },
                    {
                        key: "catchPicture",
                        value: function(e, t, i, r) {
                            t = t || "jpeg";
                            var n = this.videoWidth,
                            s = this.videoHeight,
                            a = parseInt(i || -1),
                            o = parseInt(r || -1);
                            n < a && (a = n),
                            s < o && (o = s),
                            0 < a && o <= 0 ? o = Math.ceil(a * s / n) : 0 < o && a <= 0 ? a = Math.ceil(n * o / s) : a <= 0 && o <= 0 && (a = n, o = s),
                            e.width = a,
                            e.height = o,
                            2 == this.playerState || this.playerStateStepPlaying,
                            e.getContext("2d").drawImage(this.canvas, 0, 0, n, s, 0, 0, a, o);
                            try {
                                return e.toDataURL("image/" + t)
                            } catch(e) {
                                return console.log(" wasmPlayer catchPicture " + e.name + " " + e.code + " " + e.message),
                                ""
                            }
                        }
                    },
                    {
                        key: "continuousShooting",
                        value: function(e, t, i, r, n, s) {
                            if (0 == this._shooting && 0 <= i) {
                                t = t || "jpeg";
                                var a = this.videoWidth,
                                o = this.videoHeight,
                                l = parseInt(n || -1),
                                u = parseInt(s || -1);
                                a < l && (l = a),
                                o < u && (u = o),
                                0 < l && u <= 0 ? u = Math.ceil(l * o / a) : 0 < u && l <= 0 ? l = Math.ceil(a * u / o) : l <= 0 && u <= 0 && (l = a, u = o),
                                e.width = l,
                                e.height = u,
                                e.getContext("2d").drawImage(this.canvas, 0, 0, a, o, 0, 0, l, u);
                                try {
                                    r(0, e.toDataURL("image/" + t))
                                } catch(e) {
                                    return r( - 1, "continuousShooting " + e.name + " " + e.code + " " + e.message),
                                    !1
                                }
                                return 1 < i && (this._shooting = !0, this._shootingInfo = {
                                    cvs: e,
                                    count: i,
                                    index: 1,
                                    callback: r,
                                    type: t
                                }),
                                !0
                            }
                            return ! 1
                        }
                    },
                    {
                        key: "play",
                        value: function() {
                            var e = {
                                e: 0,
                                m: "Success"
                            };
                            do {
                                if (2 == this.playerState || 3 == this.playerState) {
                                    e = this.resume();
                                    break
                                }
                                if (1 == this.playerState) break;
                                if (!this.decodeWorker) {
                                    e = {
                                        e: -4,
                                        m: "Decoder not initialized"
                                    };
                                    break
                                }
                                this.playerState = 1, this.webglPlayer = new s.
                            default(this.canvas, {
                                    preserveDrawingBuffer: !1
                                }), this.decodeWorker.postMessage({
                                    t: 0,
                                    c: 65536
                                }), this.decodeWorker.postMessage({
                                    t: 2,
                                    cd: this._codecId,
                                    l: this._islive
                                })
                            } while ( 0 );
                            return e
                        }
                    },
                    {
                        key: "pause",
                        value: function() {
                            return 1 != this.playerState ? {
                                e: -1,
                                m: "Not playing"
                            }: (this.playerState = 2, this._pcmPlayer && this._pcmPlayer.pause(), this._pauseDecoding(), {
                                e: 0,
                                m: "Success"
                            })
                        }
                    },
                    {
                        key: "singleFramePlay",
                        value: function() {
                            1 == this.playerState ? (this.pause(), this.playerState = 3) : 2 != this.playerState && 3 != this.playerState || (this.playerState = 3, this._displayNextVideoFrame())
                        }
                    },
                    {
                        key: "resume",
                        value: function() {
                            if (2 != this.playerState && 3 != this.playerState) return {
                                e: -1,
                                m: "Not pausing"
                            };
                            if (this._pcmPlayer) for (this._pcmPlayer.resume(); 0 < this.audioQueue.length;) {
                                var e = this.audioQueue.shift();
                                this._pcmPlayer.play(e)
                            }
                            return null != this.videoRendererTimer && (clearTimeout(this.videoRendererTimer), this.videoRendererTimer = null),
                            this.playerState = 1,
                            this._displayNextVideoFrame(),
                            this._startDecoding(),
                            {
                                e: 0,
                                m: "Success"
                            }
                        }
                    },
                    {
                        key: "destroy",
                        value: function() {
                            if (0 != this.playerState) return null != this.videoRendererTimer && (clearTimeout(this.videoRendererTimer), this.videoRendererTimer = null),
                            this.webglPlayer && (this.webglPlayer.destroy(), this.webglPlayer = null),
                            this.canvas = null,
                            this._duration = 0,
                            this.pixFmt = 0,
                            this.videoWidth = 0,
                            this.videoHeight = 0,
                            this.yLength = 0,
                            this.uvLength = 0,
                            this.audioTimeOffset = 0,
                            this.decoderState = 0,
                            this.playerState = 0,
                            this.decoding = !1,
                            this.displaying = !1,
                            this.audioQueue = [],
                            this.videoQueue = [],
                            this._pcmPlayer && (this._pcmPlayer.destroy(), this._pcmPlayer = null),
                            this.decodeWorker.postMessage({
                                t: 3
                            }),
                            this.decodeWorker.postMessage({
                                t: 1
                            }),
                            this.decodeWorker.terminate(),
                            this.decodeWorker = null,
                            e;
                            var e = {
                                e: -1,
                                m: "Not playing"
                            };
                            return e
                        }
                    },
                    {
                        key: "setDidirectPlayTime",
                        value: function(e) {
                            if (!this.decodeWorker) return ! 1;
                            var t = !1,
                            i = 1e3 * e + this._firstPts;
                            if (this._currentPts <= i && this._bufferedPts > i) {
                                var r = this.videoQueue.length;
                                0 < r && this.videoQueue[r - 1].s >= i ? t = !0 : this.decodeWorker.postMessage({
                                    t: 7,
                                    s: i
                                }),
                                this._emitter.emit(o.
                            default.VIDEOSEEK, e),
                                t = !0
                            } else {
                                this._seekPts = i,
                                this._seekIFrame = !0,
                                this._seekPtsPre = this._currentPts,
                                this.decodeWorker.postMessage({
                                    t: 7,
                                    s: -1
                                }),
                                t = !1,
                                this._currentTime = e;
                                var n = this;
                                this._seekTimer = setTimeout(function() { - 1 != n._seekPts && (n._seekPts = -1)
                                },
                                5e3)
                            }
                            return this.resume(),
                            t
                        }
                    },
                    {
                        key: "on",
                        value: function(e, t) {
                            this._emitter.addListener(e, t)
                        }
                    },
                    {
                        key: "off",
                        value: function(e, t) {
                            this._emitter.removeListener(e, t)
                        }
                    },
                    {
                        key: "initDecodeWorker",
                        value: function() {
                            var i = this;
                            try {
                                var e = this.decodeWorker = new Worker(l.
                            default.rPath + "/static/decoder.js");
                                e.onerror = function(e) {
                                    console.log(e)
                                },
                                e.onmessage = function(e) {
                                    var t = e.data;
                                    switch (t.t) {
                                    case 0:
                                        i._onInitDecoder(t);
                                        break;
                                    case 2:
                                        i._onOpenDecoder(t);
                                        break;
                                    case 4:
                                        i._onVideoFrame(t);
                                        break;
                                    case 5:
                                        i._onAudioFrame(t);
                                        break;
                                    case 8:
                                        i._onDecodeFinished(t);
                                        break;
                                    case 9:
                                        i._OnStartFeeding();
                                        break;
                                    case 10:
                                        i._OnPauseFeeding();
                                        break;
                                    case 11:
                                        i._OnDecoderError()
                                    }
                                }
                            } catch(e) {
                                this._emitter.emit(o.
                            default.ERROR, "create decoder worker error")
                            }
                        }
                    },
                    {
                        key: "_onInitDecoder",
                        value: function(e) {
                            0 != e.e && this._emitter.emit(o.
                        default.ERROR, "init decoder error")
                        }
                    },
                    {
                        key: "_onOpenDecoder",
                        value: function(e) {
                            0 != this.playerState && (0 == e.e ? (this.decoderState = 2, this._startDecoding()) : this._emitter.emit(o.
                        default.ERROR, "open decoder error"))
                        }
                    },
                    {
                        key: "_onAudioParam",
                        value: function(e) {
                            if (0 != this.playerState) {
                                var t = e.f,
                                i = e.c,
                                r = e.r,
                                n = "16bitInt";
                                switch (t) {
                                case 0:
                                    n = "8bitInt";
                                    break;
                                case 1:
                                    n = "16bitInt";
                                    break;
                                case 2:
                                    n = "32bitInt";
                                    break;
                                case 3:
                                    n = "32bitFloat"
                                }
                                this._pcmPlayer = new PCMPlayer({
                                    encoding: n,
                                    channels: i,
                                    sampleRate: r,
                                    flushingTime: 5e3
                                }),
                                this.audioTimeOffset = this._pcmPlayer.getTimestamp()
                            }
                        }
                    },
                    {
                        key: "_onAudioFrame",
                        value: function(e) {
                            switch (this.playerState) {
                            case 1:
                                this._pcmPlayer.play(e.d);
                                break;
                            case 2:
                            case 3:
                                this.audioQueue.push(e.d)
                            }
                        }
                    },
                    {
                        key: "_onDecodeFinished",
                        value: function(e) {
                            console.warn("WasmPlayer _onDecodeFinished")
                        }
                    },
                    {
                        key: "_OnStartFeeding",
                        value: function() {
                            this._onstreamPuase && this._onstreamPuase(!1),
                            this._emitter.emit(o.
                        default.STREAMPAUSE, !1)
                        }
                    },
                    {
                        key: "_OnPauseFeeding",
                        value: function() {
                            this._onstreamPuase && this._onstreamPuase(!0),
                            this._emitter.emit(o.
                        default.STREAMPAUSE, !0)
                        }
                    },
                    {
                        key: "_OnDecoderError",
                        value: function() {
                            this._emitter.emit(o.
                        default.ERROR, "decode error")
                        }
                    },
                    {
                        key: "_onVideoFrame",
                        value: function(e) {
                            0 != this.playerState && (this.decoderCount++, this.videoWidth == e.w && this.videoHeight == e.h || (this.videoWidth = e.w, this.videoHeight = e.h, this.yLength = this.videoWidth * this.videoHeight, this.uvLength = this.videoWidth / 2 * (this.videoHeight / 2)), this.displaying || 1 != this.playerState ? (this.videoQueue.push(e), 16 <= this.videoQueue.length && this.decoding && this._pauseDecoding()) : (this.displaying = !0, this._displayVideoFrame(e)), 1 == this.decoderCount && (this._firstPts = e.s, this._emitter.emit(o.
                        default.FIRST_CANPLAY)))
                        }
                    },
                    {
                        key: "_displayVideoFrame",
                        value: function(e) {
                            this._renderVideoFrame(e)
                        }
                    },
                    {
                        key: "_displayNextVideoFrame",
                        value: function() {
                            var t = this;
                            setTimeout(function() {
                                if (1 == t.playerState || 3 == t.playerState) {
                                    if (0 == t.videoQueue.length) t.displaying = !1;
                                    else {
                                        var e = t.videoQueue.shift();
                                        t._displayVideoFrame(e)
                                    } ! t.decoding && t.videoQueue.length < 8 && t._startDecoding()
                                }
                            },
                            0)
                        }
                    },
                    {
                        key: "_renderVideoFrame",
                        value: function(e) {
                            if (this._currentPts = e.s, this._frameCount++, this.webglPlayer.renderFrame(e.y, e.u, e.v, e.ly, this.videoHeight, this.yLength, this.uvLength), -1 == this._seekPts ? (this._currentTime = (e.s - this._firstPts) / 1e3, this._emitter.emit(o.
                        default.PLAYTIME, this._currentTime)) : (this._seekPtsPre >= this._seekPts && e.s < this._seekPtsPre || this._seekPtsPre <= this._seekPts && -1e3 < this._seekPts - e.s && this._seekPts - e.s < 3e3) && (this._seekPts = -1, this._currentTime = (e.s - this._firstPts) / 1e3, this._emitter.emit(o.
                        default.PLAYTIME, this._currentTime), this._emitter.emit(o.
                        default.VIDEOSEEK, this._currentTime)), this._shooting && this._shootingInfo) {
                                var t = this._shootingInfo;
                                t.cvs.getContext("2d").drawImage(this.canvas, 0, 0, e.w, e.h, 0, 0, t.cvs.width, t.cvs.height);
                                try {
                                    t.callback(t.index, t.cvs.toDataURL("image/" + t.type))
                                } catch(e) {
                                    t.callback( - 1, "continuousShooting " + e.name + " " + e.code + " " + e.message)
                                }
                                t.index++,
                                t.index == t.count && (this._shooting = !1, this._shootingInfo = null)
                            }
                            0 == this.videoQueue.length || 3 == this.playerState ? this.displaying = !1 : this._displayNextVideoFrame()
                        }
                    },
                    {
                        key: "_delayRenderVideoFrame",
                        value: function(e, t) {
                            var i = this;
                            this.videoRendererTimer = setTimeout(function() {
                                i._renderVideoFrame(e),
                                i.videoRendererTimer = null
                            },
                            t)
                        }
                    },
                    {
                        key: "_startDecoding",
                        value: function() {
                            var e = {
                                t: 5,
                                i: this._speed
                            };
                            this.decodeWorker.postMessage(e),
                            this.decoding = !0
                        }
                    },
                    {
                        key: "_pauseDecoding",
                        value: function() {
                            var e = {
                                t: 6
                            };
                            this.decodeWorker.postMessage(e),
                            this.decoding = !1
                        }
                    },
                    {
                        key: "_reportPlayError",
                        value: function(e, t, i) {}
                    },
                    {
                        key: "codecId",
                        get: function() {
                            return this._codecId
                        }
                    },
                    {
                        key: "playbackRate",
                        get: function() {
                            return this._speed
                        },
                        set: function(e) {
                            this._speed = e,
                            this.decodeWorker && this._startDecoding()
                        }
                    },
                    {
                        key: "onstreamPuase",
                        get: function() {
                            return this._onstreamPuase
                        },
                        set: function(e) {
                            this._onstreamPuase = e
                        }
                    },
                    {
                        key: "currentTime",
                        get: function() {
                            return this._currentTime
                        }
                    },
                    {
                        key: "duration",
                        get: function() {
                            return this._duration
                        },
                        set: function(e) {
                            this._duration = (e - "0") / 1e3
                        }
                    },
                    {
                        key: "paused",
                        get: function() {
                            return 2 == this.playerState || 3 == this.playerState
                        }
                    },
                    {
                        key: "decodedFrames",
                        get: function() {
                            return this._frameCount
                        }
                    },
                    {
                        key: "mediaInfo",
                        get: function() {
                            return {
                                duration: this._duration,
                                videoWidth: this.videoWidth,
                                videoHeight: this.videoHeight
                            }
                        }
                    }]), d);
                    function d(e, t, i, r) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, d),
                        this._pcmPlayer = null,
                        this.canvas = e,
                        this.webglPlayer = null,
                        this._duration = 0,
                        this.pixFmt = 0,
                        this.videoWidth = 0,
                        this.videoHeight = 0,
                        this.yLength = 0,
                        this.uvLength = 0,
                        this.audioTimeOffset = 0,
                        this.decoderState = 0,
                        this.playerState = 0,
                        this.decoding = !1,
                        this.displaying = !1,
                        this.decodeInterval = 1,
                        this.audioQueue = [],
                        this.videoQueue = [],
                        this.videoRendererTimer = null,
                        this.decodeWorker = null,
                        this._frameCount = 0,
                        this.decoderCount = 0,
                        this.ID = Math.floor(1e4 * Math.random() + 500),
                        this._codecId = i || 0,
                        r && (this._duration = (r - "0") / 1e3),
                        this._currentPts = 0,
                        this._firstPts = 0,
                        this._currentTime = 0,
                        this._bufferedPts = 0,
                        this._seekPts = -1,
                        this._seekPtsPre = 0,
                        this._seekIFrame = !1,
                        this._shootingInfo = null,
                        this._shooting = !1,
                        this._islive = t,
                        this._onstreamPuase = null,
                        this._speed = 1,
                        this._emitter = new a.
                    default
                    }
                    t.
                default = h
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    function d(e) {
                        this.gl = e,
                        this.texture = e.createTexture(),
                        e.bindTexture(e.TEXTURE_2D, this.texture),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.LINEAR),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.LINEAR),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE)
                    }
                    d.prototype.bind = function(e, t, i) {
                        var r = this.gl;
                        r.activeTexture([r.TEXTURE0, r.TEXTURE1, r.TEXTURE2][e]),
                        r.bindTexture(r.TEXTURE_2D, this.texture),
                        r.uniform1i(r.getUniformLocation(t, i), e)
                    },
                    d.prototype.fill = function(e, t, i) {
                        var r = this.gl;
                        r.bindTexture(r.TEXTURE_2D, this.texture),
                        r.texImage2D(r.TEXTURE_2D, 0, r.LUMINANCE, e, t, 0, r.LUMINANCE, r.UNSIGNED_BYTE, i)
                    };
                    var s = (r(a, [{
                        key: "destroy",
                        value: function() {
                            var e = this.gl;
                            e && (e.viewport(0, 0, e.canvas.width, e.canvas.height), e.clearColor(0, 0, 0, 0), e.clear(e.COLOR_BUFFER_BIT))
                        }
                    },
                    {
                        key: "initGL",
                        value: function(e) {
                            if (this.gl) {
                                var t = this.gl;
                                t.pixelStorei(t.UNPACK_ALIGNMENT, 1);
                                var i = t.createProgram(),
                                r = ["attribute highp vec4 aVertexPosition;", "attribute vec2 aTextureCoord;", "varying highp vec2 vTextureCoord;", "void main(void) {", " gl_Position = aVertexPosition;", " vTextureCoord = aTextureCoord;", "}"].join("\n"),
                                n = t.createShader(t.VERTEX_SHADER);
                                t.shaderSource(n, r),
                                t.compileShader(n);
                                var s = ["precision highp float;", "varying lowp vec2 vTextureCoord;", "uniform sampler2D YTexture;", "uniform sampler2D UTexture;", "uniform sampler2D VTexture;", "const mat4 YUV2RGB = mat4", "(", " 1.1643828125, 0, 1.59602734375, -.87078515625,", " 1.1643828125, -.39176171875, -.81296875, .52959375,", " 1.1643828125, 2.017234375, 0, -1.081390625,", " 0, 0, 0, 1", ");", "void main(void) {", " gl_FragColor = vec4( texture2D(YTexture, vTextureCoord).x, texture2D(UTexture, vTextureCoord).x, texture2D(VTexture, vTextureCoord).x, 1) * YUV2RGB;", "}"].join("\n"),
                                a = t.createShader(t.FRAGMENT_SHADER);
                                t.shaderSource(a, s),
                                t.compileShader(a),
                                t.attachShader(i, n),
                                t.attachShader(i, a),
                                t.linkProgram(i),
                                t.useProgram(i),
                                t.getProgramParameter(i, t.LINK_STATUS) || console.log("[ER] Shader link failed.");
                                var o = t.getAttribLocation(i, "aVertexPosition");
                                t.enableVertexAttribArray(o);
                                var l = t.getAttribLocation(i, "aTextureCoord");
                                t.enableVertexAttribArray(l);
                                var u = t.createBuffer();
                                t.bindBuffer(t.ARRAY_BUFFER, u),
                                t.bufferData(t.ARRAY_BUFFER, new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0]), t.STATIC_DRAW),
                                t.vertexAttribPointer(o, 3, t.FLOAT, !1, 0, 0);
                                var h = t.createBuffer();
                                t.bindBuffer(t.ARRAY_BUFFER, h),
                                t.bufferData(t.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), t.STATIC_DRAW),
                                t.vertexAttribPointer(l, 2, t.FLOAT, !1, 0, 0),
                                t.y = new d(t),
                                t.u = new d(t),
                                t.v = new d(t),
                                t.y.bind(0, i, "YTexture"),
                                t.u.bind(1, i, "UTexture"),
                                t.v.bind(2, i, "VTexture")
                            } else console.log("[ER] WebGL not supported.")
                        }
                    },
                    {
                        key: "renderFrame",
                        value: function(e, t, i, r, n, s, a) {
                            if (this.gl) {
                                var o = this.gl;
                                o.viewport(0, 0, o.canvas.width, o.canvas.height),
                                o.clearColor(0, 0, 0, 0),
                                o.clear(o.COLOR_BUFFER_BIT),
                                o.y.fill(r, n, e),
                                o.u.fill(r >> 1, n >> 1, t),
                                o.v.fill(r >> 1, n >> 1, i),
                                o.drawArrays(o.TRIANGLE_STRIP, 0, 4)
                            } else console.log("[ER] Render frame failed due to WebGL not supported.")
                        }
                    }]), a);
                    function a(e, t) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, a),
                        this.canvas = e,
                        this.gl = e.getContext("webgl", {
                            preserveDrawingBuffer: !0
                        }) || e.getContext("experimental-webgl", {
                            preserveDrawingBuffer: !0
                        }),
                        this.initGL(t)
                    }
                    t.
                default = s
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
                    function(e) {
                        return typeof e
                    }: function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
                    },
                    n = function(e, t, i) {
                        return t && s(e.prototype, t),
                        i && s(e, i),
                        e
                    };
                    function s(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var a = d(i(347)),
                    o = d(i(349)),
                    l = i(350),
                    u = i(352),
                    h = d(i(397));
                    function d(e) {
                        return e && e.__esModule ? e: {
                        default:
                            e
                        }
                    }
                    var c = (n(f, [{
                        key: "destroy",
                        value: function() {
                            this._mediaElement && (this.unload(), this.detachMediaElement()),
                            this._player && (this._player.destroy(), this._player = null),
                            this.e = null,
                            this._mediaDataSource = null,
                            this._emitter.removeAllListeners(),
                            this._emitter = null
                        }
                    },
                    {
                        key: "on",
                        value: function(e, t) {
                            var i = this;
                            e === o.
                        default.MEDIA_INFO ? null != this._mediaElement && 0 !== this._mediaElement.readyState && Promise.resolve().then(function() {
                                i._emitter.emit(o.
                            default.MEDIA_INFO, i.mediaInfo)
                            }) : e === o.
                        default.STATISTICS_INFO && null != this._mediaElement && 0 !== this._mediaElement.readyState && Promise.resolve().then(function() {
                                i._emitter.emit(o.
                            default.STATISTICS_INFO, i.statisticsInfo)
                            }),
                            this._emitter.addListener(e, t)
                        }
                    },
                    {
                        key: "off",
                        value: function(e, t) {
                            this._emitter.removeListener(e, t)
                        }
                    },
                    {
                        key: "attachMediaElement",
                        value: function(e) {
                            if (!this._player) throw new u.IllegalStateException("HlsPlayer has been destroyed!"); (this._mediaElement = e).addEventListener("loadedmetadata", this.e.onvLoadedMetadata),
                            e.addEventListener("canplay", this.e.onvCanPlay),
                            e.addEventListener("seeked", this.e.onvSeeked),
                            e.addEventListener("error", this.e.onvError),
                            e.addEventListener("ratechange", this.e.onvRateChange),
                            e.addEventListener("timeupdate", this.e.onvTimeUpdate),
                            this._player.attachMedia(e),
                            this._player.on(h.
                        default.Events.ERROR, this._onHlsError.bind(this))
                        }
                    },
                    {
                        key: "detachMediaElement",
                        value: function() {
                            this._mediaElement && (this._player && this._player.detachMedia(), this._mediaElement.src = "", this._mediaElement.removeAttribute("src"), this._mediaElement.removeEventListener("loadedmetadata", this.e.onvLoadedMetadata), this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay), this._mediaElement.removeEventListener("seeked", this.e.onvSeeked), this._mediaElement.removeEventListener("error", this.e.onvError), this._mediaElement.removeEventListener("ratechange", this.e.onvRateChange), this._mediaElement.removeEventListener("timeupdate", this.e.onvTimeUpdate), this._mediaElement = null),
                            null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
                        }
                    },
                    {
                        key: "load",
                        value: function() {
                            if (!this._mediaElement || !this._player) throw new u.IllegalStateException("HTMLMediaElement must be attached before load()!");
                            this._mediaElement.muted = !0,
                            this._mediaElement.autoplay = !0,
                            this._player.loadSource(this._mediaDataSource.channelInfo.url),
                            this._player.startLoad(),
                            this._statisticsReporter = window.setInterval(this._reportStatisticsInfo.bind(this), 1e3)
                        }
                    },
                    {
                        key: "unload",
                        value: function() {
                            this._player && this._player.stopLoad(),
                            null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
                        }
                    },
                    {
                        key: "play",
                        value: function() {
                            if (this._mediaDataSource.isLive) return ! 1;
                            this._emitter.emit(o.
                        default.VIDEOPLAY),
                            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
                        default.VIDEOPLAY);
                            try {
                                this._mediaElement.play().
                                catch(function(e) {})
                            } catch(e) {}
                            return ! 0
                        }
                    },
                    {
                        key: "pause",
                        value: function() {
                            return ! this._mediaDataSource.isLive && (this._emitter.emit(o.
                        default.VIDEOPAUSE), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
                        default.VIDEOPAUSE), this._mediaElement.pause(), !0)
                        }
                    },
                    {
                        key: "_onvCanPlay",
                        value: function(e) { ! 1 === this._receivedCanPlay && (this._emitter.emit(o.
                        default.FIRST_CANPLAY), this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
                        default.FIRST_CANPLAY)),
                            this._receivedCanPlay = !0,
                            this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay)
                        }
                    },
                    {
                        key: "_onvTimeUpdate",
                        value: function(e) {
                            this._emitter.emit(o.
                        default.PLAYTIME, this._mediaElement.currentTime),
                            this._callbacks && "function" == typeof this._callbacks.onplaytime && this._mediaElement && this._callbacks.onplaytime(this._mediaElement.currentTime)
                        }
                    },
                    {
                        key: "_onvLoadedMetadata",
                        value: function(e) {
                            null != this._pendingSeekTime && (this._mediaElement.currentTime = this._pendingSeekTime, this._pendingSeekTime = null)
                        }
                    },
                    {
                        key: "_onvSeeked",
                        value: function(e) {
                            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
                        default.VIDEOSEEK, {
                                currentTime: this._mediaElement.currentTime
                            }),
                            this._emitter.emit(o.
                        default.VIDEOSEEK, {
                                currentTime: this._mediaElement.currentTime
                            })
                        }
                    },
                    {
                        key: "_onvRateChange",
                        value: function(e) {
                            this._emitter.emit(o.
                        default.SPEEDCHANGE, {
                                playbackRate: this._mediaElement.playbackRate
                            }),
                            this._callbacks && "function" == typeof this._callbacks.onnotify && this._callbacks.onnotify(o.
                        default.SPEEDCHANGE, {
                                playbackRate: this._mediaElement.playbackRate
                            })
                        }
                    },
                    {
                        key: "_onvError",
                        value: function(e) {
                            var t = this._mediaElement.error.code ? this._mediaElement.error.code: e.code;
                            this._emitter.emit(o.
                        default.ERROR, l.ErrorTypes.MEDIA_ERROR, l.ErrorDetails.MEDIA_VIDEO_ERROR, {
                                code: t
                            }),
                            this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(l.ErrorTypes.MEDIA_ERROR, l.ErrorDetails.MEDIA_VIDEO_ERROR, {
                                code: t
                            })
                        }
                    },
                    {
                        key: "_reportStatisticsInfo",
                        value: function() {
                            this._emitter.emit(o.
                        default.STATISTICS_INFO, this.statisticsInfo)
                        }
                    },
                    {
                        key: "_onHlsError",
                        value: function(e, t) {
                            if (0 != t.fatal) {
                                var i = l.ErrorTypes.OTHER_ERROR;
                                switch (t.type) {
                                case h.
                                default.ErrorTypes.NETWORK_ERROR:
                                    i = l.ErrorTypes.NETWORK_ERROR;
                                    break;
                                case h.
                                default.ErrorTypes.MEDIA_ERROR:
                                case h.
                                default.ErrorTypes.KEY_SYSTEM_ERROR:
                                case h.
                                default.ErrorTypes.MUX_ERROR:
                                    i = l.ErrorTypes.MEDIA_ERROR
                                }
                                this._emitter.emit(o.
                            default.ERROR, i, t.details, {
                                    code: e.code
                                }),
                                this._callbacks && "function" == typeof this._callbacks.onerror && this._callbacks.onerror(i, t.details, {
                                    code: e.code
                                })
                            } else console.log(t)
                        }
                    },
                    {
                        key: "type",
                        get: function() {
                            return this._type
                        }
                    },
                    {
                        key: "buffered",
                        get: function() {
                            return this._mediaElement.buffered
                        }
                    },
                    {
                        key: "duration",
                        get: function() {
                            return this._mediaElement.duration
                        }
                    },
                    {
                        key: "volume",
                        get: function() {
                            return this._mediaElement.volume
                        },
                        set: function(e) {
                            this._mediaElement.volume = e
                        }
                    },
                    {
                        key: "muted",
                        get: function() {
                            return this._mediaElement.muted
                        },
                        set: function(e) {
                            this._mediaElement.muted = e
                        }
                    },
                    {
                        key: "audioinit",
                        get: function() {
                            return ! 0
                        }
                    },
                    {
                        key: "currentTime",
                        get: function() {
                            return this._mediaElement.currentTime
                        },
                        set: function(e) {
                            this._mediaDataSource.isLive || (this._mediaElement.currentTime = e)
                        }
                    },
                    {
                        key: "playbackRate",
                        get: function() {
                            return this._mediaElement ? this._mediaDataSource.isLive ? 1 : this._mediaElement.playbackRate: 0
                        },
                        set: function(e) {
                            if (this._mediaElement) return this._mediaDataSource.isLive ? void 0 : this._mediaElement.playbackRate = 16 < e ? 16 : e
                        }
                    },
                    {
                        key: "mediaInfo",
                        get: function() {
                            return this._mediaElement && (null == this._mediaInfo && (this._mediaInfo = {}), this._mediaInfo.duration = this._mediaElement.duration, this._mediaInfo.videoWidth = this._mediaElement.videoWidth, this._mediaInfo.videoHeight = this._mediaElement.videoHeight),
                            Object.assign({},
                            this._mediaInfo)
                        }
                    },
                    {
                        key: "frameDuration",
                        get: function() {
                            return this._frameDuration
                        }
                    },
                    {
                        key: "statisticsInfo",
                        get: function() {
                            var e = {
                                playerType: this._type
                            };
                            if (! (this._mediaElement instanceof HTMLVideoElement)) return e;
                            var t = !0,
                            i = 0,
                            r = 0;
                            if (this._mediaElement.getVideoPlaybackQuality) {
                                var n = this._mediaElement.getVideoPlaybackQuality();
                                i = n.totalVideoFrames,
                                r = n.droppedVideoFrames
                            } else null != this._mediaElement.webkitDecodedFrameCount ? (i = this._mediaElement.webkitDecodedFrameCount, r = this._mediaElement.webkitDroppedFrameCount) : t = !1;
                            return t && (e.decodedFrames = i, e.droppedFrames = r),
                            e
                        }
                    }]), f);
                    function f(e, t) {
                        if (function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, f), this.TAG = "HlsPlayer", this._type = "HlsPlayer", this._emitter = new a.
                    default, this._config = t, this._callbacks = null, "object" === r(e.callbacks) && (this._callbacks = e.callbacks), "hls" !== e.channelInfo.devicetype.toLowerCase()) throw new u.InvalidArgumentException("HlsPlayer does't support stream input!");
                        this.e = {
                            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),
                            onvCanPlay: this._onvCanPlay.bind(this),
                            onvSeeked: this._onvSeeked.bind(this),
                            onvError: this._onvError.bind(this),
                            onvTimeUpdate: this._onvTimeUpdate.bind(this),
                            onvRateChange: this._onvRateChange.bind(this)
                        },
                        this._statisticsReporter = null,
                        this._mediaDataSource = e,
                        this._mediaElement = null,
                        this._receivedCanPlay = !1,
                        this._frameDuration = .04,
                        this._player = new h.
                    default(this._config)
                    }
                    t.
                default = c
                },
                function(e, t, i) {
                    "undefined" != typeof window && (e.exports = function(i) {
                        var r = {};
                        function n(e) {
                            if (r[e]) return r[e].exports;
                            var t = r[e] = {
                                i: e,
                                l: !1,
                                exports: {}
                            };
                            return i[e].call(t.exports, t, t.exports, n),
                            t.l = !0,
                            t.exports
                        }
                        return n.m = i,
                        n.c = r,
                        n.d = function(e, t, i) {
                            n.o(e, t) || Object.defineProperty(e, t, {
                                enumerable: !0,
                                get: i
                            })
                        },
                        n.r = function(e) {
                            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                                value: "Module"
                            }),
                            Object.defineProperty(e, "__esModule", {
                                value: !0
                            })
                        },
                        n.t = function(t, e) {
                            if (1 & e && (t = n(t)), 8 & e) return t;
                            if (4 & e && "object" == typeof t && t && t.__esModule) return t;
                            var i = Object.create(null);
                            if (n.r(i), Object.defineProperty(i, "default", {
                                enumerable: !0,
                                value: t
                            }), 2 & e && "string" != typeof t) for (var r in t) n.d(i, r,
                            function(e) {
                                return t[e]
                            }.bind(null, r));
                            return i
                        },
                        n.n = function(e) {
                            var t = e && e.__esModule ?
                            function() {
                                return e.
                            default
                            }:
                            function() {
                                return e
                            };
                            return n.d(t, "a", t),
                            t
                        },
                        n.o = function(e, t) {
                            return Object.prototype.hasOwnProperty.call(e, t)
                        },
                        n.p = "/dist/",
                        n(n.s = 13)
                    } ([function(e, t, i) {
                        "use strict";
                        i.d(t, "a",
                        function() {
                            return a
                        }),
                        i.d(t, "b",
                        function() {
                            return u
                        });
                        var r = i(5);
                        function n() {}
                        var s = {
                            trace: n,
                            debug: n,
                            log: n,
                            warn: n,
                            info: n,
                            error: n
                        },
                        o = s,
                        l = Object(r.a)(),
                        a = function(e) {
                            if (l.console && !0 === e || "object" == typeof e) { !
                                function(t) {
                                    for (var e = arguments.length,
                                    i = new Array(1 < e ? e - 1 : 0), r = 1; r < e; r++) i[r - 1] = arguments[r];
                                    i.forEach(function(e) {
                                        var s, a;
                                        o[e] = t[e] ? t[e].bind(t) : (s = e, (a = l.console[s]) ?
                                        function() {
                                            for (var e = arguments.length,
                                            t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
                                            var r, n;
                                            t[0] && (t[0] = (r = s, n = t[0], "[" + r + "] > " + n)),
                                            a.apply(l.console, t)
                                        }: n)
                                    })
                                } (e, "debug", "log", "info", "warn", "error");
                                try {
                                    o.log()
                                } catch(e) {
                                    o = s
                                }
                            } else o = s
                        },
                        u = o
                    },
                    function(e, t, i) {
                        "use strict";
                        t.a = {
                            MEDIA_ATTACHING: "hlsMediaAttaching",
                            MEDIA_ATTACHED: "hlsMediaAttached",
                            MEDIA_DETACHING: "hlsMediaDetaching",
                            MEDIA_DETACHED: "hlsMediaDetached",
                            BUFFER_RESET: "hlsBufferReset",
                            BUFFER_CODECS: "hlsBufferCodecs",
                            BUFFER_CREATED: "hlsBufferCreated",
                            BUFFER_APPENDING: "hlsBufferAppending",
                            BUFFER_APPENDED: "hlsBufferAppended",
                            BUFFER_EOS: "hlsBufferEos",
                            BUFFER_FLUSHING: "hlsBufferFlushing",
                            BUFFER_FLUSHED: "hlsBufferFlushed",
                            MANIFEST_LOADING: "hlsManifestLoading",
                            MANIFEST_LOADED: "hlsManifestLoaded",
                            MANIFEST_PARSED: "hlsManifestParsed",
                            LEVEL_SWITCHING: "hlsLevelSwitching",
                            LEVEL_SWITCHED: "hlsLevelSwitched",
                            LEVEL_LOADING: "hlsLevelLoading",
                            LEVEL_LOADED: "hlsLevelLoaded",
                            LEVEL_UPDATED: "hlsLevelUpdated",
                            LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
                            AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
                            AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
                            AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
                            AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
                            AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
                            SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
                            SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
                            SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
                            SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
                            SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
                            INIT_PTS_FOUND: "hlsInitPtsFound",
                            FRAG_LOADING: "hlsFragLoading",
                            FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
                            FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
                            FRAG_LOADED: "hlsFragLoaded",
                            FRAG_DECRYPTED: "hlsFragDecrypted",
                            FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
                            FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
                            FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
                            FRAG_PARSING_DATA: "hlsFragParsingData",
                            FRAG_PARSED: "hlsFragParsed",
                            FRAG_BUFFERED: "hlsFragBuffered",
                            FRAG_CHANGED: "hlsFragChanged",
                            FPS_DROP: "hlsFpsDrop",
                            FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
                            ERROR: "hlsError",
                            DESTROYING: "hlsDestroying",
                            KEY_LOADING: "hlsKeyLoading",
                            KEY_LOADED: "hlsKeyLoaded",
                            STREAM_STATE_TRANSITION: "hlsStreamStateTransition"
                        }
                    },
                    function(e, t, i) {
                        "use strict";
                        i.d(t, "b",
                        function() {
                            return r
                        }),
                        i.d(t, "a",
                        function() {
                            return n
                        });
                        var r = {
                            NETWORK_ERROR: "networkError",
                            MEDIA_ERROR: "mediaError",
                            KEY_SYSTEM_ERROR: "keySystemError",
                            MUX_ERROR: "muxError",
                            OTHER_ERROR: "otherError"
                        },
                        n = {
                            KEY_SYSTEM_NO_KEYS: "keySystemNoKeys",
                            KEY_SYSTEM_NO_ACCESS: "keySystemNoAccess",
                            KEY_SYSTEM_NO_SESSION: "keySystemNoSession",
                            KEY_SYSTEM_LICENSE_REQUEST_FAILED: "keySystemLicenseRequestFailed",
                            MANIFEST_LOAD_ERROR: "manifestLoadError",
                            MANIFEST_LOAD_TIMEOUT: "manifestLoadTimeOut",
                            MANIFEST_PARSING_ERROR: "manifestParsingError",
                            MANIFEST_INCOMPATIBLE_CODECS_ERROR: "manifestIncompatibleCodecsError",
                            LEVEL_LOAD_ERROR: "levelLoadError",
                            LEVEL_LOAD_TIMEOUT: "levelLoadTimeOut",
                            LEVEL_SWITCH_ERROR: "levelSwitchError",
                            AUDIO_TRACK_LOAD_ERROR: "audioTrackLoadError",
                            AUDIO_TRACK_LOAD_TIMEOUT: "audioTrackLoadTimeOut",
                            FRAG_LOAD_ERROR: "fragLoadError",
                            FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
                            FRAG_DECRYPT_ERROR: "fragDecryptError",
                            FRAG_PARSING_ERROR: "fragParsingError",
                            REMUX_ALLOC_ERROR: "remuxAllocError",
                            KEY_LOAD_ERROR: "keyLoadError",
                            KEY_LOAD_TIMEOUT: "keyLoadTimeOut",
                            BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
                            BUFFER_APPEND_ERROR: "bufferAppendError",
                            BUFFER_APPENDING_ERROR: "bufferAppendingError",
                            BUFFER_STALLED_ERROR: "bufferStalledError",
                            BUFFER_FULL_ERROR: "bufferFullError",
                            BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
                            BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
                            INTERNAL_EXCEPTION: "internalException"
                        }
                    },
                    function(e, t, i) {
                        "use strict";
                        i.d(t, "a",
                        function() {
                            return r
                        });
                        var r = Number.isFinite ||
                        function(e) {
                            return "number" == typeof e && isFinite(e)
                        }
                    },
                    function(e, t, i) {
                        "use strict";
                        i.d(t, "b",
                        function() {
                            return n
                        });
                        var d, c = i(5),
                        r = function() {
                            function o() {}
                            return o.isHeader = function(e, t) {
                                return t + 10 <= e.length && 73 === e[t] && 68 === e[t + 1] && 51 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                            },
                            o.isFooter = function(e, t) {
                                return t + 10 <= e.length && 51 === e[t] && 68 === e[t + 1] && 73 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                            },
                            o.getID3Data = function(e, t) {
                                for (var i = t,
                                r = 0; o.isHeader(e, t);) r += 10,
                                r += o._readSize(e, t + 6),
                                o.isFooter(e, t + 10) && (r += 10),
                                t += r;
                                if (0 < r) return e.subarray(i, i + r)
                            },
                            o._readSize = function(e, t) {
                                var i = 0;
                                return i = (127 & e[t]) << 21,
                                i |= (127 & e[t + 1]) << 14,
                                i |= (127 & e[t + 2]) << 7,
                                i |= 127 & e[t + 3]
                            },
                            o.getTimeStamp = function(e) {
                                for (var t = o.getID3Frames(e), i = 0; i < t.length; i++) {
                                    var r = t[i];
                                    if (o.isTimeStampFrame(r)) return o._readTimeStamp(r)
                                }
                            },
                            o.isTimeStampFrame = function(e) {
                                return e && "PRIV" === e.key && "com.apple.streaming.transportStreamTimestamp" === e.info
                            },
                            o._getFrameData = function(e) {
                                var t = String.fromCharCode(e[0], e[1], e[2], e[3]),
                                i = o._readSize(e, 4);
                                return {
                                    type: t,
                                    size: i,
                                    data: e.subarray(10, 10 + i)
                                }
                            },
                            o.getID3Frames = function(e) {
                                for (var t = 0,
                                i = []; o.isHeader(e, t);) {
                                    for (var r = o._readSize(e, t + 6), n = (t += 10) + r; t + 8 < n;) {
                                        var s = o._getFrameData(e.subarray(t)),
                                        a = o._decodeFrame(s);
                                        a && i.push(a),
                                        t += s.size + 10
                                    }
                                    o.isFooter(e, t) && (t += 10)
                                }
                                return i
                            },
                            o._decodeFrame = function(e) {
                                return "PRIV" === e.type ? o._decodePrivFrame(e) : "T" === e.type[0] ? o._decodeTextFrame(e) : "W" === e.type[0] ? o._decodeURLFrame(e) : void 0
                            },
                            o._readTimeStamp = function(e) {
                                if (8 === e.data.byteLength) {
                                    var t = new Uint8Array(e.data),
                                    i = 1 & t[3],
                                    r = (t[4] << 23) + (t[5] << 15) + (t[6] << 7) + t[7];
                                    return r /= 45,
                                    i && (r += 47721858.84),
                                    Math.round(r)
                                }
                            },
                            o._decodePrivFrame = function(e) {
                                if (! (e.size < 2)) {
                                    var t = o._utf8ArrayToStr(e.data, !0),
                                    i = new Uint8Array(e.data.subarray(t.length + 1));
                                    return {
                                        key: e.type,
                                        info: t,
                                        data: i.buffer
                                    }
                                }
                            },
                            o._decodeTextFrame = function(e) {
                                if (! (e.size < 2)) {
                                    if ("TXXX" === e.type) {
                                        var t = 1,
                                        i = o._utf8ArrayToStr(e.data.subarray(t), !0);
                                        t += i.length + 1;
                                        var r = o._utf8ArrayToStr(e.data.subarray(t));
                                        return {
                                            key: e.type,
                                            info: i,
                                            data: r
                                        }
                                    }
                                    var n = o._utf8ArrayToStr(e.data.subarray(1));
                                    return {
                                        key: e.type,
                                        data: n
                                    }
                                }
                            },
                            o._decodeURLFrame = function(e) {
                                if ("WXXX" === e.type) {
                                    if (e.size < 2) return;
                                    var t = 1,
                                    i = o._utf8ArrayToStr(e.data.subarray(t));
                                    t += i.length + 1;
                                    var r = o._utf8ArrayToStr(e.data.subarray(t));
                                    return {
                                        key: e.type,
                                        info: i,
                                        data: r
                                    }
                                }
                                var n = o._utf8ArrayToStr(e.data);
                                return {
                                    key: e.type,
                                    data: n
                                }
                            },
                            o._utf8ArrayToStr = function(e, t) {
                                void 0 === t && (t = !1);
                                var i = function() {
                                    var e = Object(c.a)();
                                    return d || void 0 === e.TextDecoder || (d = new e.TextDecoder("utf-8")),
                                    d
                                } ();
                                if (i) {
                                    var r = i.decode(e);
                                    if (t) {
                                        var n = r.indexOf("\0");
                                        return - 1 !== n ? r.substring(0, n) : r
                                    }
                                    return r.replace(/\0/g, "")
                                }
                                for (var s, a, o, l = e.length,
                                u = "",
                                h = 0; h < l;) {
                                    if (0 === (s = e[h++]) && t) return u;
                                    if (0 !== s && 3 !== s) switch (s >> 4) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        u += String.fromCharCode(s);
                                        break;
                                    case 12:
                                    case 13:
                                        a = e[h++],
                                        u += String.fromCharCode((31 & s) << 6 | 63 & a);
                                        break;
                                    case 14:
                                        a = e[h++],
                                        o = e[h++],
                                        u += String.fromCharCode((15 & s) << 12 | (63 & a) << 6 | (63 & o) << 0)
                                    }
                                }
                                return u
                            },
                            o
                        } (),
                        n = r._utf8ArrayToStr;
                        t.a = r
                    },
                    function(e, t, i) {
                        "use strict";
                        function r() {
                            return "undefined" == typeof window ? self: window
                        }
                        i.d(t, "a",
                        function() {
                            return r
                        })
                    },
                    function(e, t, i) {
                        var r, h, n, s, d;
                        r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/,
                        h = /^([^\/?#]*)(.*)$/,
                        n = /(?:\/|^)\.(?=\/)/g,
                        s = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g,
                        d = {
                            buildAbsoluteURL: function(e, t, i) {
                                if (i = i || {},
                                e = e.trim(), !(t = t.trim())) {
                                    if (!i.alwaysNormalize) return e;
                                    var r = d.parseURL(e);
                                    if (!r) throw new Error("Error trying to parse base URL.");
                                    return r.path = d.normalizePath(r.path),
                                    d.buildURLFromParts(r)
                                }
                                var n = d.parseURL(t);
                                if (!n) throw new Error("Error trying to parse relative URL.");
                                if (n.scheme) return i.alwaysNormalize ? (n.path = d.normalizePath(n.path), d.buildURLFromParts(n)) : t;
                                var s = d.parseURL(e);
                                if (!s) throw new Error("Error trying to parse base URL.");
                                if (!s.netLoc && s.path && "/" !== s.path[0]) {
                                    var a = h.exec(s.path);
                                    s.netLoc = a[1],
                                    s.path = a[2]
                                }
                                s.netLoc && !s.path && (s.path = "/");
                                var o = {
                                    scheme: s.scheme,
                                    netLoc: n.netLoc,
                                    path: null,
                                    params: n.params,
                                    query: n.query,
                                    fragment: n.fragment
                                };
                                if (!n.netLoc && (o.netLoc = s.netLoc, "/" !== n.path[0])) if (n.path) {
                                    var l = s.path,
                                    u = l.substring(0, l.lastIndexOf("/") + 1) + n.path;
                                    o.path = d.normalizePath(u)
                                } else o.path = s.path,
                                n.params || (o.params = s.params, n.query || (o.query = s.query));
                                return null === o.path && (o.path = i.alwaysNormalize ? d.normalizePath(n.path) : n.path),
                                d.buildURLFromParts(o)
                            },
                            parseURL: function(e) {
                                var t = r.exec(e);
                                return t ? {
                                    scheme: t[1] || "",
                                    netLoc: t[2] || "",
                                    path: t[3] || "",
                                    params: t[4] || "",
                                    query: t[5] || "",
                                    fragment: t[6] || ""
                                }: null
                            },
                            normalizePath: function(e) {
                                for (e = e.split("").reverse().join("").replace(n, ""); e.length !== (e = e.replace(s, "")).length;);
                                return e.split("").reverse().join("")
                            },
                            buildURLFromParts: function(e) {
                                return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                            }
                        },
                        e.exports = d
                    },
                    function(e, t, i) {
                        "use strict";
                        var o = function() {
                            function e(e, t) {
                                this.subtle = e,
                                this.aesIV = t
                            }
                            return e.prototype.decrypt = function(e, t) {
                                return this.subtle.decrypt({
                                    name: "AES-CBC",
                                    iv: this.aesIV
                                },
                                t, e)
                            },
                            e
                        } (),
                        l = function() {
                            function e(e, t) {
                                this.subtle = e,
                                this.key = t
                            }
                            return e.prototype.expandKey = function() {
                                return this.subtle.importKey("raw", this.key, {
                                    name: "AES-CBC"
                                },
                                !1, ["encrypt", "decrypt"])
                            },
                            e
                        } (),
                        u = function() {
                            function e() {
                                this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                                this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                                this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                                this.sBox = new Uint32Array(256),
                                this.invSBox = new Uint32Array(256),
                                this.key = new Uint32Array(0),
                                this.initTable()
                            }
                            var t = e.prototype;
                            return t.uint8ArrayToUint32Array_ = function(e) {
                                for (var t = new DataView(e), i = new Uint32Array(4), r = 0; r < 4; r++) i[r] = t.getUint32(4 * r);
                                return i
                            },
                            t.initTable = function() {
                                var e = this.sBox,
                                t = this.invSBox,
                                i = this.subMix,
                                r = i[0],
                                n = i[1],
                                s = i[2],
                                a = i[3],
                                o = this.invSubMix,
                                l = o[0],
                                u = o[1],
                                h = o[2],
                                d = o[3],
                                c = new Uint32Array(256),
                                f = 0,
                                p = 0,
                                v = 0;
                                for (v = 0; v < 256; v++) c[v] = v < 128 ? v << 1 : v << 1 ^ 283;
                                for (v = 0; v < 256; v++) {
                                    var m = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4;
                                    m = m >>> 8 ^ 255 & m ^ 99,
                                    e[f] = m,
                                    t[m] = f;
                                    var _ = c[f],
                                    g = c[_],
                                    y = c[g],
                                    b = 257 * c[m] ^ 16843008 * m;
                                    r[f] = b << 24 | b >>> 8,
                                    n[f] = b << 16 | b >>> 16,
                                    s[f] = b << 8 | b >>> 24,
                                    a[f] = b,
                                    b = 16843009 * y ^ 65537 * g ^ 257 * _ ^ 16843008 * f,
                                    l[m] = b << 24 | b >>> 8,
                                    u[m] = b << 16 | b >>> 16,
                                    h[m] = b << 8 | b >>> 24,
                                    d[m] = b,
                                    f ? (f = _ ^ c[c[c[y ^ _]]], p ^= c[c[p]]) : f = p = 1
                                }
                            },
                            t.expandKey = function(e) {
                                for (var t = this.uint8ArrayToUint32Array_(e), i = !0, r = 0; r < t.length && i;) i = t[r] === this.key[r],
                                r++;
                                if (!i) {
                                    this.key = t;
                                    var n = this.keySize = t.length;
                                    if (4 !== n && 6 !== n && 8 !== n) throw new Error("Invalid aes key size=" + n);
                                    var s, a, o, l, u = this.ksRows = 4 * (n + 6 + 1),
                                    h = this.keySchedule = new Uint32Array(u),
                                    d = this.invKeySchedule = new Uint32Array(u),
                                    c = this.sBox,
                                    f = this.rcon,
                                    p = this.invSubMix,
                                    v = p[0],
                                    m = p[1],
                                    _ = p[2],
                                    g = p[3];
                                    for (s = 0; s < u; s++) s < n ? o = h[s] = t[s] : (l = o, s % n == 0 ? (l = c[(l = l << 8 | l >>> 24) >>> 24] << 24 | c[l >>> 16 & 255] << 16 | c[l >>> 8 & 255] << 8 | c[255 & l], l ^= f[s / n | 0] << 24) : 6 < n && s % n == 4 && (l = c[l >>> 24] << 24 | c[l >>> 16 & 255] << 16 | c[l >>> 8 & 255] << 8 | c[255 & l]), h[s] = o = (h[s - n] ^ l) >>> 0);
                                    for (a = 0; a < u; a++) s = u - a,
                                    l = 3 & a ? h[s] : h[s - 4],
                                    d[a] = a < 4 || s <= 4 ? l: v[c[l >>> 24]] ^ m[c[l >>> 16 & 255]] ^ _[c[l >>> 8 & 255]] ^ g[c[255 & l]],
                                    d[a] = d[a] >>> 0
                                }
                            },
                            t.networkToHostOrderSwap = function(e) {
                                return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
                            },
                            t.decrypt = function(e, t, i, r) {
                                for (var n, s, a, o, l, u, h, d, c, f, p, v, m, _, g, y, b, S = this.keySize + 6,
                                E = this.invKeySchedule,
                                k = this.invSBox,
                                w = this.invSubMix,
                                T = w[0], A = w[1], R = w[2], I = w[3], x = this.uint8ArrayToUint32Array_(i), O = x[0], C = x[1], L = x[2], D = x[3], P = new Int32Array(e), M = new Int32Array(P.length), F = this.networkToHostOrderSwap; t < P.length;) {
                                    for (c = F(P[t]), f = F(P[t + 1]), p = F(P[t + 2]), v = F(P[t + 3]), l = c ^ E[0], u = v ^ E[1], h = p ^ E[2], d = f ^ E[3], m = 4, _ = 1; _ < S; _++) n = T[l >>> 24] ^ A[u >> 16 & 255] ^ R[h >> 8 & 255] ^ I[255 & d] ^ E[m],
                                    s = T[u >>> 24] ^ A[h >> 16 & 255] ^ R[d >> 8 & 255] ^ I[255 & l] ^ E[m + 1],
                                    a = T[h >>> 24] ^ A[d >> 16 & 255] ^ R[l >> 8 & 255] ^ I[255 & u] ^ E[m + 2],
                                    o = T[d >>> 24] ^ A[l >> 16 & 255] ^ R[u >> 8 & 255] ^ I[255 & h] ^ E[m + 3],
                                    l = n,
                                    u = s,
                                    h = a,
                                    d = o,
                                    m += 4;
                                    n = k[l >>> 24] << 24 ^ k[u >> 16 & 255] << 16 ^ k[h >> 8 & 255] << 8 ^ k[255 & d] ^ E[m],
                                    s = k[u >>> 24] << 24 ^ k[h >> 16 & 255] << 16 ^ k[d >> 8 & 255] << 8 ^ k[255 & l] ^ E[m + 1],
                                    a = k[h >>> 24] << 24 ^ k[d >> 16 & 255] << 16 ^ k[l >> 8 & 255] << 8 ^ k[255 & u] ^ E[m + 2],
                                    o = k[d >>> 24] << 24 ^ k[l >> 16 & 255] << 16 ^ k[u >> 8 & 255] << 8 ^ k[255 & h] ^ E[m + 3],
                                    m += 3,
                                    M[t] = F(n ^ O),
                                    M[t + 1] = F(o ^ C),
                                    M[t + 2] = F(a ^ L),
                                    M[t + 3] = F(s ^ D),
                                    O = c,
                                    C = f,
                                    L = p,
                                    D = v,
                                    t += 4
                                }
                                return r ? (g = M.buffer, y = g.byteLength, (b = y && new DataView(g).getUint8(y - 1)) ? g.slice(0, y - b) : g) : M.buffer
                            },
                            t.destroy = function() {
                                this.key = void 0,
                                this.keySize = void 0,
                                this.ksRows = void 0,
                                this.sBox = void 0,
                                this.invSBox = void 0,
                                this.subMix = void 0,
                                this.invSubMix = void 0,
                                this.keySchedule = void 0,
                                this.invKeySchedule = void 0,
                                this.rcon = void 0
                            },
                            e
                        } (),
                        s = i(2),
                        h = i(0),
                        a = i(1),
                        r = i(5),
                        d = Object(r.a)(),
                        n = function() {
                            function e(e, t, i) {
                                var r = (void 0 === i ? {}: i).removePKCS7Padding,
                                n = void 0 === r || r;
                                if (this.logEnabled = !0, this.observer = e, this.config = t, this.removePKCS7Padding = n) try {
                                    var s = d.crypto;
                                    s && (this.subtle = s.subtle || s.webkitSubtle)
                                } catch(e) {}
                                this.disableWebCrypto = !this.subtle
                            }
                            var t = e.prototype;
                            return t.isSync = function() {
                                return this.disableWebCrypto && this.config.enableSoftwareAES
                            },
                            t.decrypt = function(t, i, r, n) {
                                var s = this;
                                if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                                    this.logEnabled && (h.b.log("JS AES decrypt"), this.logEnabled = !1);
                                    var e = this.decryptor;
                                    e || (this.decryptor = e = new u),
                                    e.expandKey(i),
                                    n(e.decrypt(t, 0, r, this.removePKCS7Padding))
                                } else {
                                    this.logEnabled && (h.b.log("WebCrypto AES decrypt"), this.logEnabled = !1);
                                    var a = this.subtle;
                                    this.key !== i && (this.key = i, this.fastAesKey = new l(a, i)),
                                    this.fastAesKey.expandKey().then(function(e) {
                                        new o(a, r).decrypt(t, e).
                                        catch(function(e) {
                                            s.onWebCryptoError(e, t, i, r, n)
                                        }).then(function(e) {
                                            n(e)
                                        })
                                    }).
                                    catch(function(e) {
                                        s.onWebCryptoError(e, t, i, r, n)
                                    })
                                }
                            },
                            t.onWebCryptoError = function(e, t, i, r, n) {
                                this.config.enableSoftwareAES ? (h.b.log("WebCrypto Error, disable WebCrypto API"), this.disableWebCrypto = !0, this.logEnabled = !0, this.decrypt(t, i, r, n)) : (h.b.error("decrypting error : " + e.message), this.observer.trigger(a.a.ERROR, {
                                    type: s.b.MEDIA_ERROR,
                                    details: s.a.FRAG_DECRYPT_ERROR,
                                    fatal: !0,
                                    reason: e.message
                                }))
                            },
                            t.destroy = function() {
                                var e = this.decryptor;
                                e && (e.destroy(), this.decryptor = void 0)
                            },
                            e
                        } ();
                        t.a = n
                    },
                    function(e, t, i) {
                        "use strict";
                        var r = Object.prototype.hasOwnProperty,
                        f = "~";
                        function n() {}
                        function o(e, t, i) {
                            this.fn = e,
                            this.context = t,
                            this.once = i || !1
                        }
                        function s(e, t, i, r, n) {
                            if ("function" != typeof i) throw new TypeError("The listener must be a function");
                            var s = new o(i, r || e, n),
                            a = f ? f + t: t;
                            return e._events[a] ? e._events[a].fn ? e._events[a] = [e._events[a], s] : e._events[a].push(s) : (e._events[a] = s, e._eventsCount++),
                            e
                        }
                        function u(e, t) {
                            0 == --e._eventsCount ? e._events = new n: delete e._events[t]
                        }
                        function a() {
                            this._events = new n,
                            this._eventsCount = 0
                        }
                        Object.create && (n.prototype = Object.create(null), (new n).__proto__ || (f = !1)),
                        a.prototype.eventNames = function() {
                            var e, t, i = [];
                            if (0 === this._eventsCount) return i;
                            for (t in e = this._events) r.call(e, t) && i.push(f ? t.slice(1) : t);
                            return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i
                        },
                        a.prototype.listeners = function(e) {
                            var t = f ? f + e: e,
                            i = this._events[t];
                            if (!i) return [];
                            if (i.fn) return [i.fn];
                            for (var r = 0,
                            n = i.length,
                            s = new Array(n); r < n; r++) s[r] = i[r].fn;
                            return s
                        },
                        a.prototype.listenerCount = function(e) {
                            var t = f ? f + e: e,
                            i = this._events[t];
                            return i ? i.fn ? 1 : i.length: 0
                        },
                        a.prototype.emit = function(e, t, i, r, n, s) {
                            var a = f ? f + e: e;
                            if (!this._events[a]) return ! 1;
                            var o, l, u = this._events[a],
                            h = arguments.length;
                            if (u.fn) {
                                switch (u.once && this.removeListener(e, u.fn, void 0, !0), h) {
                                case 1:
                                    return u.fn.call(u.context),
                                    !0;
                                case 2:
                                    return u.fn.call(u.context, t),
                                    !0;
                                case 3:
                                    return u.fn.call(u.context, t, i),
                                    !0;
                                case 4:
                                    return u.fn.call(u.context, t, i, r),
                                    !0;
                                case 5:
                                    return u.fn.call(u.context, t, i, r, n),
                                    !0;
                                case 6:
                                    return u.fn.call(u.context, t, i, r, n, s),
                                    !0
                                }
                                for (l = 1, o = new Array(h - 1); l < h; l++) o[l - 1] = arguments[l];
                                u.fn.apply(u.context, o)
                            } else {
                                var d, c = u.length;
                                for (l = 0; l < c; l++) switch (u[l].once && this.removeListener(e, u[l].fn, void 0, !0), h) {
                                case 1:
                                    u[l].fn.call(u[l].context);
                                    break;
                                case 2:
                                    u[l].fn.call(u[l].context, t);
                                    break;
                                case 3:
                                    u[l].fn.call(u[l].context, t, i);
                                    break;
                                case 4:
                                    u[l].fn.call(u[l].context, t, i, r);
                                    break;
                                default:
                                    if (!o) for (d = 1, o = new Array(h - 1); d < h; d++) o[d - 1] = arguments[d];
                                    u[l].fn.apply(u[l].context, o)
                                }
                            }
                            return ! 0
                        },
                        a.prototype.on = function(e, t, i) {
                            return s(this, e, t, i, !1)
                        },
                        a.prototype.once = function(e, t, i) {
                            return s(this, e, t, i, !0)
                        },
                        a.prototype.removeListener = function(e, t, i, r) {
                            var n = f ? f + e: e;
                            if (!this._events[n]) return this;
                            if (!t) return u(this, n),
                            this;
                            var s = this._events[n];
                            if (s.fn) s.fn !== t || r && !s.once || i && s.context !== i || u(this, n);
                            else {
                                for (var a = 0,
                                o = [], l = s.length; a < l; a++)(s[a].fn !== t || r && !s[a].once || i && s[a].context !== i) && o.push(s[a]);
                                o.length ? this._events[n] = 1 === o.length ? o[0] : o: u(this, n)
                            }
                            return this
                        },
                        a.prototype.removeAllListeners = function(e) {
                            var t;
                            return e ? (t = f ? f + e: e, this._events[t] && u(this, t)) : (this._events = new n, this._eventsCount = 0),
                            this
                        },
                        a.prototype.off = a.prototype.removeListener,
                        a.prototype.addListener = a.prototype.on,
                        a.prefixed = f,
                        a.EventEmitter = a,
                        e.exports = a
                    },
                    function(e, t, i) {
                        "use strict";
                        var Q = i(1),
                        ee = i(2),
                        v = i(7),
                        p = i(3),
                        te = i(0),
                        r = i(5);
                        function n(e, t) {
                            return 255 === e[t] && 240 == (246 & e[t + 1])
                        }
                        function h(e, t) {
                            return 1 & e[t + 1] ? 7 : 9
                        }
                        function d(e, t) {
                            return (3 & e[t + 3]) << 11 | e[t + 4] << 3 | (224 & e[t + 5]) >>> 5
                        }
                        function m(e, t) {
                            return !! (t + 1 < e.length && n(e, t))
                        }
                        function s(e, t) {
                            if (m(e, t)) {
                                var i = h(e, t);
                                t + 5 < e.length && (i = d(e, t));
                                var r = t + i;
                                if (r === e.length || r + 1 < e.length && n(e, r)) return ! 0
                            }
                            return ! 1
                        }
                        function _(e, t, i, r, n) {
                            if (!e.samplerate) {
                                var s = function(e, t, i, r) {
                                    var n, s, a, o, l, u = navigator.userAgent.toLowerCase(),
                                    h = r,
                                    d = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                                    if (n = 1 + ((192 & t[i + 2]) >>> 6), !((s = (60 & t[i + 2]) >>> 2) > d.length - 1)) return o = (1 & t[i + 2]) << 2,
                                    o |= (192 & t[i + 3]) >>> 6,
                                    te.b.log("manifest codec:" + r + ",ADTS data:type:" + n + ",sampleingIndex:" + s + "[" + d[s] + "Hz],channelConfig:" + o),
                                    a = /firefox/i.test(u) ? 6 <= s ? (n = 5, l = new Array(4), s - 3) : (n = 2, l = new Array(2), s) : -1 !== u.indexOf("android") ? (n = 2, l = new Array(2), s) : (n = 5, l = new Array(4), r && ( - 1 !== r.indexOf("mp4a.40.29") || -1 !== r.indexOf("mp4a.40.5")) || !r && 6 <= s ? s - 3 : ((r && -1 !== r.indexOf("mp4a.40.2") && (6 <= s && 1 == o || /vivaldi/i.test(u)) || !r && 1 == o) && (n = 2, l = new Array(2)), s)),
                                    l[0] = n << 3,
                                    l[0] |= (14 & s) >> 1,
                                    l[1] |= (1 & s) << 7,
                                    l[1] |= o << 3,
                                    5 === n && (l[1] |= (14 & a) >> 1, l[2] = (1 & a) << 7, l[2] |= 8, l[3] = 0),
                                    {
                                        config: l,
                                        samplerate: d[s],
                                        channelCount: o,
                                        codec: "mp4a.40." + n,
                                        manifestCodec: h
                                    };
                                    e.trigger(Q.a.ERROR, {
                                        type: ee.b.MEDIA_ERROR,
                                        details: ee.a.FRAG_PARSING_ERROR,
                                        fatal: !0,
                                        reason: "invalid ADTS sampling index:" + s
                                    })
                                } (t, i, r, n);
                                e.config = s.config,
                                e.samplerate = s.samplerate,
                                e.channelCount = s.channelCount,
                                e.codec = s.codec,
                                e.manifestCodec = s.manifestCodec,
                                te.b.log("parsed codec:" + e.codec + ",rate:" + s.samplerate + ",nb channel:" + s.channelCount)
                            }
                        }
                        function g(e) {
                            return 9216e4 / e
                        }
                        function y(e, t, i, r, n) {
                            var s = function(e, t, i, r, n) {
                                var s, a, o = e.length;
                                if (s = h(e, t), a = d(e, t), 0 < (a -= s) && t + s + a <= o) return {
                                    headerLength: s,
                                    frameLength: a,
                                    stamp: i + r * n
                                }
                            } (t, i, r, n, g(e.samplerate));
                            if (s) {
                                var a = s.stamp,
                                o = s.headerLength,
                                l = s.frameLength,
                                u = {
                                    unit: t.subarray(i + o, i + o + l),
                                    pts: a,
                                    dts: a
                                };
                                return e.samples.push(u),
                                {
                                    sample: u,
                                    length: l + o
                                }
                            }
                        }
                        var b, S = i(4),
                        k = function() {
                            function e(e, t, i) {
                                this.observer = e,
                                this.config = i,
                                this.remuxer = t
                            }
                            var t = e.prototype;
                            return t.resetInitSegment = function(e, t, i, r) {
                                this._audioTrack = {
                                    container: "audio/adts",
                                    type: "audio",
                                    id: 0,
                                    sequenceNumber: 0,
                                    isAAC: !0,
                                    samples: [],
                                    len: 0,
                                    manifestCodec: t,
                                    duration: r,
                                    inputTimeScale: 9e4
                                }
                            },
                            t.resetTimeStamp = function() {},
                            e.probe = function(e) {
                                if (!e) return ! 1;
                                for (var t = (S.a.getID3Data(e, 0) || []).length, i = e.length; t < i; t++) if (s(e, t)) return te.b.log("ADTS sync word found !"),
                                !0;
                                return ! 1
                            },
                            t.append = function(e, t, i, r) {
                                for (var n = this._audioTrack,
                                s = S.a.getID3Data(e, 0) || [], a = S.a.getTimeStamp(s), o = Object(p.a)(a) ? 90 * a: 9e4 * t, l = 0, u = o, h = e.length, d = s.length, c = [{
                                    pts: u,
                                    dts: u,
                                    data: s
                                }]; d < h - 1;) if (m(e, d) && d + 5 < h) {
                                    _(n, this.observer, e, d, n.manifestCodec);
                                    var f = y(n, e, d, o, l);
                                    if (!f) {
                                        te.b.log("Unable to parse AAC frame");
                                        break
                                    }
                                    d += f.length,
                                    u = f.sample.pts,
                                    l++
                                } else S.a.isHeader(e, d) ? (s = S.a.getID3Data(e, d), c.push({
                                    pts: u,
                                    dts: u,
                                    data: s
                                }), d += s.length) : d++;
                                this.remuxer.remux(n, {
                                    samples: []
                                },
                                {
                                    samples: c,
                                    inputTimeScale: 9e4
                                },
                                {
                                    samples: []
                                },
                                t, i, r)
                            },
                            t.destroy = function() {},
                            e
                        } (),
                        w = i(10),
                        E = {
                            BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                            SamplingRateMap: [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                            SamplesCoefficients: [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]],
                            BytesInSlot: [0, 1, 1, 4],
                            appendFrame: function(e, t, i, r, n) {
                                if (! (i + 24 > t.length)) {
                                    var s = this.parseHeader(t, i);
                                    if (s && i + s.frameLength <= t.length) {
                                        var a = r + n * (9e4 * s.samplesPerFrame / s.sampleRate),
                                        o = {
                                            unit: t.subarray(i, i + s.frameLength),
                                            pts: a,
                                            dts: a
                                        };
                                        return e.config = [],
                                        e.channelCount = s.channelCount,
                                        e.samplerate = s.sampleRate,
                                        e.samples.push(o),
                                        {
                                            sample: o,
                                            length: s.frameLength
                                        }
                                    }
                                }
                            },
                            parseHeader: function(e, t) {
                                var i = e[t + 1] >> 3 & 3,
                                r = e[t + 1] >> 1 & 3,
                                n = e[t + 2] >> 4 & 15,
                                s = e[t + 2] >> 2 & 3,
                                a = e[t + 2] >> 1 & 1;
                                if (1 != i && 0 != n && 15 != n && 3 != s) {
                                    var o = 3 == i ? 3 - r: 3 == r ? 3 : 4,
                                    l = 1e3 * E.BitratesMap[14 * o + n - 1],
                                    u = 3 == i ? 0 : 2 == i ? 1 : 2,
                                    h = E.SamplingRateMap[3 * u + s],
                                    d = e[t + 3] >> 6 == 3 ? 1 : 2,
                                    c = E.SamplesCoefficients[i][r],
                                    f = E.BytesInSlot[r],
                                    p = 8 * c * f;
                                    return {
                                        sampleRate: h,
                                        channelCount: d,
                                        frameLength: parseInt(c * l / h + a, 10) * f,
                                        samplesPerFrame: p
                                    }
                                }
                            },
                            isHeaderPattern: function(e, t) {
                                return 255 === e[t] && 224 == (224 & e[t + 1]) && 0 != (6 & e[t + 1])
                            },
                            isHeader: function(e, t) {
                                return !! (t + 1 < e.length && this.isHeaderPattern(e, t))
                            },
                            probe: function(e, t) {
                                if (t + 1 < e.length && this.isHeaderPattern(e, t)) {
                                    var i = this.parseHeader(e, t),
                                    r = 4;
                                    i && i.frameLength && (r = i.frameLength);
                                    var n = t + r;
                                    if (n === e.length || n + 1 < e.length && this.isHeaderPattern(e, n)) return ! 0
                                }
                                return ! 1
                            }
                        },
                        T = E,
                        A = function() {
                            function e(e) {
                                this.data = e,
                                this.bytesAvailable = e.byteLength,
                                this.word = 0,
                                this.bitsAvailable = 0
                            }
                            var t = e.prototype;
                            return t.loadWord = function() {
                                var e = this.data,
                                t = this.bytesAvailable,
                                i = e.byteLength - t,
                                r = new Uint8Array(4),
                                n = Math.min(4, t);
                                if (0 === n) throw new Error("no bytes available");
                                r.set(e.subarray(i, i + n)),
                                this.word = new DataView(r.buffer).getUint32(0),
                                this.bitsAvailable = 8 * n,
                                this.bytesAvailable -= n
                            },
                            t.skipBits = function(e) {
                                var t;
                                this.bitsAvailable > e || (e -= this.bitsAvailable, e -= (t = e >> 3) >> 3, this.bytesAvailable -= t, this.loadWord()),
                                this.word <<= e,
                                this.bitsAvailable -= e
                            },
                            t.readBits = function(e) {
                                var t = Math.min(this.bitsAvailable, e),
                                i = this.word >>> 32 - t;
                                return 32 < e && te.b.error("Cannot read more than 32 bits at a time"),
                                this.bitsAvailable -= t,
                                0 < this.bitsAvailable ? this.word <<= t: 0 < this.bytesAvailable && this.loadWord(),
                                0 < (t = e - t) && this.bitsAvailable ? i << t | this.readBits(t) : i
                            },
                            t.skipLZ = function() {
                                var e;
                                for (e = 0; e < this.bitsAvailable; ++e) if (0 != (this.word & 2147483648 >>> e)) return this.word <<= e,
                                this.bitsAvailable -= e,
                                e;
                                return this.loadWord(),
                                e + this.skipLZ()
                            },
                            t.skipUEG = function() {
                                this.skipBits(1 + this.skipLZ())
                            },
                            t.skipEG = function() {
                                this.skipBits(1 + this.skipLZ())
                            },
                            t.readUEG = function() {
                                var e = this.skipLZ();
                                return this.readBits(e + 1) - 1
                            },
                            t.readEG = function() {
                                var e = this.readUEG();
                                return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                            },
                            t.readBoolean = function() {
                                return 1 === this.readBits(1)
                            },
                            t.readUByte = function() {
                                return this.readBits(8)
                            },
                            t.readUShort = function() {
                                return this.readBits(16)
                            },
                            t.readUInt = function() {
                                return this.readBits(32)
                            },
                            t.skipScalingList = function(e) {
                                var t, i = 8,
                                r = 8;
                                for (t = 0; t < e; t++) 0 !== r && (r = (i + this.readEG() + 256) % 256),
                                i = 0 === r ? i: r
                            },
                            t.readSPS = function() {
                                var e, t, i, r, n, s, a, o = 0,
                                l = 0,
                                u = 0,
                                h = 0,
                                d = this.readUByte.bind(this),
                                c = this.readBits.bind(this),
                                f = this.readUEG.bind(this),
                                p = this.readBoolean.bind(this),
                                v = this.skipBits.bind(this),
                                m = this.skipEG.bind(this),
                                _ = this.skipUEG.bind(this),
                                g = this.skipScalingList.bind(this);
                                if (d(), e = d(), c(5), v(3), d(), _(), 100 === e || 110 === e || 122 === e || 244 === e || 44 === e || 83 === e || 86 === e || 118 === e || 128 === e) {
                                    var y = f();
                                    if (3 === y && v(1), _(), _(), v(1), p()) for (s = 3 !== y ? 8 : 12, a = 0; a < s; a++) p() && g(a < 6 ? 16 : 64)
                                }
                                _();
                                var b = f();
                                if (0 === b) f();
                                else if (1 === b) for (v(1), m(), m(), t = f(), a = 0; a < t; a++) m();
                                _(),
                                v(1),
                                i = f(),
                                r = f(),
                                0 === (n = c(1)) && v(1),
                                v(1),
                                p() && (o = f(), l = f(), u = f(), h = f());
                                var S = [1, 1];
                                if (p() && p()) switch (d()) {
                                case 1:
                                    S = [1, 1];
                                    break;
                                case 2:
                                    S = [12, 11];
                                    break;
                                case 3:
                                    S = [10, 11];
                                    break;
                                case 4:
                                    S = [16, 11];
                                    break;
                                case 5:
                                    S = [40, 33];
                                    break;
                                case 6:
                                    S = [24, 11];
                                    break;
                                case 7:
                                    S = [20, 11];
                                    break;
                                case 8:
                                    S = [32, 11];
                                    break;
                                case 9:
                                    S = [80, 33];
                                    break;
                                case 10:
                                    S = [18, 11];
                                    break;
                                case 11:
                                    S = [15, 11];
                                    break;
                                case 12:
                                    S = [64, 33];
                                    break;
                                case 13:
                                    S = [160, 99];
                                    break;
                                case 14:
                                    S = [4, 3];
                                    break;
                                case 15:
                                    S = [3, 2];
                                    break;
                                case 16:
                                    S = [2, 1];
                                    break;
                                case 255:
                                    S = [d() << 8 | d(), d() << 8 | d()]
                                }
                                return {
                                    width: Math.ceil(16 * (i + 1) - 2 * o - 2 * l),
                                    height: (2 - n) * (r + 1) * 16 - (n ? 2 : 4) * (u + h),
                                    pixelRatio: S
                                }
                            },
                            t.readSliceType = function() {
                                return this.readUByte(),
                                this.readUEG(),
                                this.readUEG()
                            },
                            e
                        } (),
                        a = function() {
                            function e(e, t, i, r) {
                                this.decryptdata = i,
                                this.discardEPB = r,
                                this.decrypter = new v.a(e, t, {
                                    removePKCS7Padding: !1
                                })
                            }
                            var t = e.prototype;
                            return t.decryptBuffer = function(e, t) {
                                this.decrypter.decrypt(e, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, t)
                            },
                            t.decryptAacSample = function(t, i, r, n) {
                                var s = t[i].unit,
                                e = s.subarray(16, s.length - s.length % 16),
                                a = e.buffer.slice(e.byteOffset, e.byteOffset + e.length),
                                o = this;
                                this.decryptBuffer(a,
                                function(e) {
                                    e = new Uint8Array(e),
                                    s.set(e, 16),
                                    n || o.decryptAacSamples(t, i + 1, r)
                                })
                            },
                            t.decryptAacSamples = function(e, t, i) {
                                for (;; t++) {
                                    if (t >= e.length) return void i();
                                    if (! (e[t].unit.length < 32)) {
                                        var r = this.decrypter.isSync();
                                        if (this.decryptAacSample(e, t, i, r), !r) return
                                    }
                                }
                            },
                            t.getAvcEncryptedData = function(e) {
                                for (var t = 16 * Math.floor((e.length - 48) / 160) + 16, i = new Int8Array(t), r = 0, n = 32; n <= e.length - 16; n += 160, r += 16) i.set(e.subarray(n, n + 16), r);
                                return i
                            },
                            t.getAvcDecryptedUnit = function(e, t) {
                                t = new Uint8Array(t);
                                for (var i = 0,
                                r = 32; r <= e.length - 16; r += 160, i += 16) e.set(t.subarray(i, i + 16), r);
                                return e
                            },
                            t.decryptAvcSample = function(t, i, r, n, s, a) {
                                var o = this.discardEPB(s.data),
                                e = this.getAvcEncryptedData(o),
                                l = this;
                                this.decryptBuffer(e.buffer,
                                function(e) {
                                    s.data = l.getAvcDecryptedUnit(o, e),
                                    a || l.decryptAvcSamples(t, i, r + 1, n)
                                })
                            },
                            t.decryptAvcSamples = function(e, t, i, r) {
                                for (;; t++, i = 0) {
                                    if (t >= e.length) return void r();
                                    for (var n = e[t].units; ! (i >= n.length); i++) {
                                        var s = n[i];
                                        if (! (s.length <= 48 || 1 !== s.type && 5 !== s.type)) {
                                            var a = this.decrypter.isSync();
                                            if (this.decryptAvcSample(e, t, i, r, s, a), !a) return
                                        }
                                    }
                                }
                            },
                            e
                        } (),
                        o = {
                            video: 1,
                            audio: 2,
                            id3: 3,
                            text: 4
                        },
                        R = function() {
                            function C(e, t, i, r) {
                                this.observer = e,
                                this.config = i,
                                this.typeSupported = r,
                                this.remuxer = t,
                                this.sampleAes = null
                            }
                            var e = C.prototype;
                            return e.setDecryptData = function(e) {
                                null != e && null != e.key && "SAMPLE-AES" === e.method ? this.sampleAes = new a(this.observer, this.config, e, this.discardEPB) : this.sampleAes = null
                            },
                            C.probe = function(e) {
                                var t = C._syncOffset(e);
                                return ! (t < 0 || (t && te.b.warn("MPEG2-TS detected but first sync word found @ offset " + t + ", junk ahead ?"), 0))
                            },
                            C._syncOffset = function(e) {
                                for (var t = Math.min(1e3, e.length - 564), i = 0; i < t;) {
                                    if (71 === e[i] && 71 === e[i + 188] && 71 === e[i + 376]) return i;
                                    i++
                                }
                                return - 1
                            },
                            C.createTrack = function(e, t) {
                                return {
                                    container: "video" === e || "audio" === e ? "video/mp2t": void 0,
                                    type: e,
                                    id: o[e],
                                    pid: -1,
                                    inputTimeScale: 9e4,
                                    sequenceNumber: 0,
                                    samples: [],
                                    dropped: "video" === e ? 0 : void 0,
                                    isAAC: "audio" === e || void 0,
                                    duration: "audio" === e ? t: void 0
                                }
                            },
                            e.resetInitSegment = function(e, t, i, r) {
                                this.pmtParsed = !1,
                                this._pmtId = -1,
                                this._avcTrack = C.createTrack("video", r),
                                this._audioTrack = C.createTrack("audio", r),
                                this._id3Track = C.createTrack("id3", r),
                                this._txtTrack = C.createTrack("text", r),
                                this.aacOverFlow = null,
                                this.aacLastPTS = null,
                                this.avcSample = null,
                                this.audioCodec = t,
                                this.videoCodec = i,
                                this._duration = r
                            },
                            e.resetTimeStamp = function() {},
                            e.append = function(e, t, i, r) {
                                var n, s, a, o, l, u = e.length,
                                h = !1;
                                this.contiguous = i;
                                var d = this.pmtParsed,
                                c = this._avcTrack,
                                f = this._audioTrack,
                                p = this._id3Track,
                                v = c.pid,
                                m = f.pid,
                                _ = p.pid,
                                g = this._pmtId,
                                y = c.pesData,
                                b = f.pesData,
                                S = p.pesData,
                                E = this._parsePAT,
                                k = this._parsePMT,
                                w = this._parsePES,
                                T = this._parseAVCPES.bind(this),
                                A = this._parseAACPES.bind(this),
                                R = this._parseMPEGPES.bind(this),
                                I = this._parseID3PES.bind(this),
                                x = C._syncOffset(e);
                                for (u -= (u + x) % 188, n = x; n < u; n += 188) if (71 === e[n]) {
                                    if (s = !!(64 & e[n + 1]), a = ((31 & e[n + 1]) << 8) + e[n + 2], 1 < (48 & e[n + 3]) >> 4) {
                                        if ((o = n + 5 + e[n + 4]) === n + 188) continue
                                    } else o = n + 4;
                                    switch (a) {
                                    case v:
                                        s && (y && (l = w(y)) && void 0 !== l.pts && T(l, !1), y = {
                                            data: [],
                                            size: 0
                                        }),
                                        y && (y.data.push(e.subarray(o, n + 188)), y.size += n + 188 - o);
                                        break;
                                    case m:
                                        s && (b && (l = w(b)) && void 0 !== l.pts && (f.isAAC ? A(l) : R(l)), b = {
                                            data: [],
                                            size: 0
                                        }),
                                        b && (b.data.push(e.subarray(o, n + 188)), b.size += n + 188 - o);
                                        break;
                                    case _:
                                        s && (S && (l = w(S)) && void 0 !== l.pts && I(l), S = {
                                            data: [],
                                            size: 0
                                        }),
                                        S && (S.data.push(e.subarray(o, n + 188)), S.size += n + 188 - o);
                                        break;
                                    case 0:
                                        s && (o += e[o] + 1),
                                        g = this._pmtId = E(e, o);
                                        break;
                                    case g:
                                        s && (o += e[o] + 1);
                                        var O = k(e, o, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, null != this.sampleAes);
                                        0 < (v = O.avc) && (c.pid = v),
                                        0 < (m = O.audio) && (f.pid = m, f.isAAC = O.isAAC),
                                        0 < (_ = O.id3) && (p.pid = _),
                                        h && !d && (te.b.log("reparse from beginning"), h = !1, n = x - 188),
                                        d = this.pmtParsed = !0;
                                        break;
                                    case 17:
                                    case 8191:
                                        break;
                                    default:
                                        h = !0
                                    }
                                } else this.observer.trigger(Q.a.ERROR, {
                                    type: ee.b.MEDIA_ERROR,
                                    details: ee.a.FRAG_PARSING_ERROR,
                                    fatal: !1,
                                    reason: "TS packet did not start with 0x47"
                                });
                                y && (l = w(y)) && void 0 !== l.pts ? (T(l, !0), c.pesData = null) : c.pesData = y,
                                b && (l = w(b)) && void 0 !== l.pts ? (f.isAAC ? A(l) : R(l), f.pesData = null) : (b && b.size && te.b.log("last AAC PES packet truncated,might overlap between fragments"), f.pesData = b),
                                S && (l = w(S)) && void 0 !== l.pts ? (I(l), p.pesData = null) : p.pesData = S,
                                null == this.sampleAes ? this.remuxer.remux(f, c, p, this._txtTrack, t, i, r) : this.decryptAndRemux(f, c, p, this._txtTrack, t, i, r)
                            },
                            e.decryptAndRemux = function(e, t, i, r, n, s, a) {
                                if (e.samples && e.isAAC) {
                                    var o = this;
                                    this.sampleAes.decryptAacSamples(e.samples, 0,
                                    function() {
                                        o.decryptAndRemuxAvc(e, t, i, r, n, s, a)
                                    })
                                } else this.decryptAndRemuxAvc(e, t, i, r, n, s, a)
                            },
                            e.decryptAndRemuxAvc = function(e, t, i, r, n, s, a) {
                                if (t.samples) {
                                    var o = this;
                                    this.sampleAes.decryptAvcSamples(t.samples, 0, 0,
                                    function() {
                                        o.remuxer.remux(e, t, i, r, n, s, a)
                                    })
                                } else this.remuxer.remux(e, t, i, r, n, s, a)
                            },
                            e.destroy = function() {
                                this._initPTS = this._initDTS = void 0,
                                this._duration = 0
                            },
                            e._parsePAT = function(e, t) {
                                return (31 & e[t + 10]) << 8 | e[t + 11]
                            },
                            e._parsePMT = function(e, t, i, r) {
                                var n, s, a = {
                                    audio: -1,
                                    avc: -1,
                                    id3: -1,
                                    isAAC: !0
                                };
                                for (n = t + 3 + ((15 & e[t + 1]) << 8 | e[t + 2]) - 4, t += 12 + ((15 & e[t + 10]) << 8 | e[t + 11]); t < n;) {
                                    switch (s = (31 & e[t + 1]) << 8 | e[t + 2], e[t]) {
                                    case 207:
                                        if (!r) {
                                            te.b.log("unkown stream type:" + e[t]);
                                            break
                                        }
                                    case 15:
                                        -1 === a.audio && (a.audio = s);
                                        break;
                                    case 21:
                                        -1 === a.id3 && (a.id3 = s);
                                        break;
                                    case 219:
                                        if (!r) {
                                            te.b.log("unkown stream type:" + e[t]);
                                            break
                                        }
                                    case 27:
                                        -1 === a.avc && (a.avc = s);
                                        break;
                                    case 3:
                                    case 4:
                                        i ? -1 === a.audio && (a.audio = s, a.isAAC = !1) : te.b.log("MPEG audio found, not supported in this browser for now");
                                        break;
                                    case 36:
                                        te.b.warn("HEVC stream type found, not supported for now");
                                        break;
                                    default:
                                        te.b.log("unkown stream type:" + e[t])
                                    }
                                    t += 5 + ((15 & e[t + 3]) << 8 | e[t + 4])
                                }
                                return a
                            },
                            e._parsePES = function(e) {
                                var t, i, r, n, s, a, o, l, u = 0,
                                h = e.data;
                                if (!e || 0 === e.size) return null;
                                for (; h[0].length < 19 && 1 < h.length;) {
                                    var d = new Uint8Array(h[0].length + h[1].length);
                                    d.set(h[0]),
                                    d.set(h[1], h[0].length),
                                    h[0] = d,
                                    h.splice(1, 1)
                                }
                                if (1 !== ((t = h[0])[0] << 16) + (t[1] << 8) + t[2]) return null;
                                if ((r = (t[4] << 8) + t[5]) && r > e.size - 6) return null;
                                192 & (i = t[7]) && (4294967295 < (a = 536870912 * (14 & t[9]) + 4194304 * (255 & t[10]) + 16384 * (254 & t[11]) + 128 * (255 & t[12]) + (254 & t[13]) / 2) && (a -= 8589934592), 64 & i ? (4294967295 < (o = 536870912 * (14 & t[14]) + 4194304 * (255 & t[15]) + 16384 * (254 & t[16]) + 128 * (255 & t[17]) + (254 & t[18]) / 2) && (o -= 8589934592), 54e5 < a - o && (te.b.warn(Math.round((a - o) / 9e4) + "s delta between PTS and DTS, align them"), a = o)) : o = a),
                                l = (n = t[8]) + 9,
                                e.size -= l,
                                s = new Uint8Array(e.size);
                                for (var c = 0,
                                f = h.length; c < f; c++) {
                                    var p = (t = h[c]).byteLength;
                                    if (l) {
                                        if (p < l) {
                                            l -= p;
                                            continue
                                        }
                                        t = t.subarray(l),
                                        p -= l,
                                        l = 0
                                    }
                                    s.set(t, u),
                                    u += p
                                }
                                return r && (r -= n + 3),
                                {
                                    data: s,
                                    pts: a,
                                    dts: o,
                                    len: r
                                }
                            },
                            e.pushAccesUnit = function(e, t) {
                                if (e.units.length && e.frame) {
                                    var i = t.samples,
                                    r = i.length; ! this.config.forceKeyFrameOnDiscontinuity || !0 === e.key || t.sps && (r || this.contiguous) ? (e.id = r, i.push(e)) : t.dropped++
                                }
                                e.debug.length && te.b.log(e.pts + "/" + e.dts + ":" + e.debug)
                            },
                            e._parseAVCPES = function(p, e) {
                                var v, m, _, g = this,
                                y = this._avcTrack,
                                t = this._parseAVCNALu(p.data),
                                b = this.avcSample,
                                S = !1,
                                E = this.pushAccesUnit.bind(this),
                                k = function(e, t, i, r) {
                                    return {
                                        key: e,
                                        pts: t,
                                        dts: i,
                                        units: [],
                                        debug: r
                                    }
                                };
                                p.data = null,
                                b && t.length && !y.audFound && (E(b, y), b = this.avcSample = k(!1, p.pts, p.dts, "")),
                                t.forEach(function(e) {
                                    switch (e.type) {
                                    case 1:
                                        m = !0,
                                        (b = b || (g.avcSample = k(!0, p.pts, p.dts, ""))).frame = !0;
                                        var t = e.data;
                                        if (S && 4 < t.length) {
                                            var i = new A(t).readSliceType();
                                            2 !== i && 4 !== i && 7 !== i && 9 !== i || (b.key = !0)
                                        }
                                        break;
                                    case 5:
                                        m = !0,
                                        (b = b || (g.avcSample = k(!0, p.pts, p.dts, ""))).key = !0,
                                        b.frame = !0;
                                        break;
                                    case 6:
                                        m = !0,
                                        (v = new A(g.discardEPB(e.data))).readUByte();
                                        for (var r = 0,
                                        n = 0,
                                        s = !1,
                                        a = 0; ! s && 1 < v.bytesAvailable;) {
                                            for (r = 0; r += a = v.readUByte(), 255 === a;);
                                            for (n = 0; n += a = v.readUByte(), 255 === a;);
                                            if (4 === r && 0 !== v.bytesAvailable) {
                                                if (s = !0, 181 === v.readUByte() && 49 === v.readUShort() && 1195456820 === v.readUInt() && 3 === v.readUByte()) {
                                                    var o = v.readUByte(),
                                                    l = 31 & o,
                                                    u = [o, v.readUByte()];
                                                    for (_ = 0; _ < l; _++) u.push(v.readUByte()),
                                                    u.push(v.readUByte()),
                                                    u.push(v.readUByte());
                                                    g._insertSampleInOrder(g._txtTrack.samples, {
                                                        type: 3,
                                                        pts: p.pts,
                                                        bytes: u
                                                    })
                                                }
                                            } else if (n < v.bytesAvailable) for (_ = 0; _ < n; _++) v.readUByte()
                                        }
                                        break;
                                    case 7:
                                        if (S = m = !0, !y.sps) {
                                            var h = (v = new A(e.data)).readSPS();
                                            y.width = h.width,
                                            y.height = h.height,
                                            y.pixelRatio = h.pixelRatio,
                                            y.sps = [e.data],
                                            y.duration = g._duration;
                                            var d = e.data.subarray(1, 4),
                                            c = "avc1.";
                                            for (_ = 0; _ < 3; _++) {
                                                var f = d[_].toString(16);
                                                f.length < 2 && (f = "0" + f),
                                                c += f
                                            }
                                            y.codec = c
                                        }
                                        break;
                                    case 8:
                                        m = !0,
                                        y.pps || (y.pps = [e.data]);
                                        break;
                                    case 9:
                                        m = !1,
                                        y.audFound = !0,
                                        b && E(b, y),
                                        b = g.avcSample = k(!1, p.pts, p.dts, "");
                                        break;
                                    case 12:
                                        m = !1;
                                        break;
                                    default:
                                        m = !1,
                                        b && (b.debug += "unknown NAL " + e.type + " ")
                                    }
                                    b && m && b.units.push(e)
                                }),
                                e && b && (E(b, y), this.avcSample = null)
                            },
                            e._insertSampleInOrder = function(e, t) {
                                var i = e.length;
                                if (0 < i) {
                                    if (t.pts >= e[i - 1].pts) e.push(t);
                                    else for (var r = i - 1; 0 <= r; r--) if (t.pts < e[r].pts) {
                                        e.splice(r, 0, t);
                                        break
                                    }
                                } else e.push(t)
                            },
                            e._getLastNalUnit = function() {
                                var e, t = this.avcSample;
                                if (!t || 0 === t.units.length) {
                                    var i = this._avcTrack.samples;
                                    t = i[i.length - 1]
                                }
                                if (t) {
                                    var r = t.units;
                                    e = r[r.length - 1]
                                }
                                return e
                            },
                            e._parseAVCNALu = function(e) {
                                var t, i, r, n, s = 0,
                                a = e.byteLength,
                                o = this._avcTrack,
                                l = o.naluState || 0,
                                u = l,
                                h = [],
                                d = -1;
                                for ( - 1 === l && (n = 31 & e[d = 0], l = 0, s = 1); s < a;) if (t = e[s++], l) if (1 !== l) if (t) if (1 === t) {
                                    if (0 <= d) r = {
                                        data: e.subarray(d, s - l - 1),
                                        type: n
                                    },
                                    h.push(r);
                                    else {
                                        var c = this._getLastNalUnit();
                                        if (c && (u && s <= 4 - u && c.state && (c.data = c.data.subarray(0, c.data.byteLength - u)), 0 < (i = s - l - 1))) {
                                            var f = new Uint8Array(c.data.byteLength + i);
                                            f.set(c.data, 0),
                                            f.set(e.subarray(0, i), c.data.byteLength),
                                            c.data = f
                                        }
                                    }
                                    l = s < a ? (n = 31 & e[d = s], 0) : -1
                                } else l = 0;
                                else l = 3;
                                else l = t ? 0 : 2;
                                else l = t ? 0 : 1;
                                if (0 <= d && 0 <= l && (r = {
                                    data: e.subarray(d, a),
                                    type: n,
                                    state: l
                                },
                                h.push(r)), 0 === h.length) {
                                    var p = this._getLastNalUnit();
                                    if (p) {
                                        var v = new Uint8Array(p.data.byteLength + e.byteLength);
                                        v.set(p.data, 0),
                                        v.set(e, p.data.byteLength),
                                        p.data = v
                                    }
                                }
                                return o.naluState = l,
                                h
                            },
                            e.discardEPB = function(e) {
                                for (var t, i, r = e.byteLength,
                                n = [], s = 1; s < r - 2;) 0 === e[s] && 0 === e[s + 1] && 3 === e[s + 2] ? (n.push(s + 2), s += 2) : s++;
                                if (0 === n.length) return e;
                                t = r - n.length,
                                i = new Uint8Array(t);
                                var a = 0;
                                for (s = 0; s < t; a++, s++) a === n[0] && (a++, n.shift()),
                                i[s] = e[a];
                                return i
                            },
                            e._parseAACPES = function(e) {
                                var t, i, r, n, s, a, o, l = this._audioTrack,
                                u = e.data,
                                h = e.pts,
                                d = this.aacOverFlow,
                                c = this.aacLastPTS;
                                if (d) {
                                    var f = new Uint8Array(d.byteLength + u.byteLength);
                                    f.set(d, 0),
                                    f.set(u, d.byteLength),
                                    u = f
                                }
                                for (r = 0, s = u.length; r < s - 1 && !m(u, r); r++);
                                if (!r || (o = r < s - 1 ? (a = "AAC PES did not start with ADTS header,offset:" + r, !1) : (a = "no ADTS header found in AAC PES", !0), te.b.warn("parsing error:" + a), this.observer.trigger(Q.a.ERROR, {
                                    type: ee.b.MEDIA_ERROR,
                                    details: ee.a.FRAG_PARSING_ERROR,
                                    fatal: o,
                                    reason: a
                                }), !o)) {
                                    if (_(l, this.observer, u, r, this.audioCodec), i = 0, t = g(l.samplerate), d && c) {
                                        var p = c + t;
                                        1 < Math.abs(p - h) && (te.b.log("AAC: align PTS for overlapping frames by " + Math.round((p - h) / 90)), h = p)
                                    }
                                    for (; r < s;) if (m(u, r) && r + 5 < s) {
                                        var v = y(l, u, r, h, i);
                                        if (!v) break;
                                        r += v.length,
                                        n = v.sample.pts,
                                        i++
                                    } else r++;
                                    d = r < s ? u.subarray(r, s) : null,
                                    this.aacOverFlow = d,
                                    this.aacLastPTS = n
                                }
                            },
                            e._parseMPEGPES = function(e) {
                                for (var t = e.data,
                                i = t.length,
                                r = 0,
                                n = 0,
                                s = e.pts; n < i;) if (T.isHeader(t, n)) {
                                    var a = T.appendFrame(this._audioTrack, t, n, s, r);
                                    if (!a) break;
                                    n += a.length,
                                    r++
                                } else n++
                            },
                            e._parseID3PES = function(e) {
                                this._id3Track.samples.push(e)
                            },
                            C
                        } (),
                        I = function() {
                            function e(e, t, i) {
                                this.observer = e,
                                this.config = i,
                                this.remuxer = t
                            }
                            var t = e.prototype;
                            return t.resetInitSegment = function(e, t, i, r) {
                                this._audioTrack = {
                                    container: "audio/mpeg",
                                    type: "audio",
                                    id: -1,
                                    sequenceNumber: 0,
                                    isAAC: !1,
                                    samples: [],
                                    len: 0,
                                    manifestCodec: t,
                                    duration: r,
                                    inputTimeScale: 9e4
                                }
                            },
                            t.resetTimeStamp = function() {},
                            e.probe = function(e) {
                                var t, i, r = S.a.getID3Data(e, 0);
                                if (r && void 0 !== S.a.getTimeStamp(r)) for (t = r.length, i = Math.min(e.length - 1, t + 100); t < i; t++) if (T.probe(e, t)) return te.b.log("MPEG Audio sync word found !"),
                                !0;
                                return ! 1
                            },
                            t.append = function(e, t, i, r) {
                                for (var n = S.a.getID3Data(e, 0), s = S.a.getTimeStamp(n), a = s ? 90 * s: 9e4 * t, o = n.length, l = e.length, u = 0, h = 0, d = this._audioTrack, c = [{
                                    pts: a,
                                    dts: a,
                                    data: n
                                }]; o < l;) if (T.isHeader(e, o)) {
                                    var f = T.appendFrame(d, e, o, a, u);
                                    if (!f) break;
                                    o += f.length,
                                    h = f.sample.pts,
                                    u++
                                } else S.a.isHeader(e, o) ? (n = S.a.getID3Data(e, o), c.push({
                                    pts: h,
                                    dts: h,
                                    data: n
                                }), o += n.length) : o++;
                                this.remuxer.remux(d, {
                                    samples: []
                                },
                                {
                                    samples: c,
                                    inputTimeScale: 9e4
                                },
                                {
                                    samples: []
                                },
                                t, i, r)
                            },
                            t.destroy = function() {},
                            e
                        } (),
                        H = function() {
                            function e() {}
                            return e.getSilentFrame = function(e, t) {
                                switch (e) {
                                case "mp4a.40.2":
                                    if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                                    if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                                    if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                                    if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                                    if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                                    if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                                    break;
                                default:
                                    if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                    if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                    if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                                }
                                return null
                            },
                            e
                        } (),
                        l = Math.pow(2, 32) - 1,
                        ie = function() {
                            function c() {}
                            return c.init = function() {
                                var e;
                                for (e in c.types = {
                                    avc1: [],
                                    avcC: [],
                                    btrt: [],
                                    dinf: [],
                                    dref: [],
                                    esds: [],
                                    ftyp: [],
                                    hdlr: [],
                                    mdat: [],
                                    mdhd: [],
                                    mdia: [],
                                    mfhd: [],
                                    minf: [],
                                    moof: [],
                                    moov: [],
                                    mp4a: [],
                                    ".mp3": [],
                                    mvex: [],
                                    mvhd: [],
                                    pasp: [],
                                    sdtp: [],
                                    stbl: [],
                                    stco: [],
                                    stsc: [],
                                    stsd: [],
                                    stsz: [],
                                    stts: [],
                                    tfdt: [],
                                    tfhd: [],
                                    traf: [],
                                    trak: [],
                                    trun: [],
                                    trex: [],
                                    tkhd: [],
                                    vmhd: [],
                                    smhd: []
                                }) c.types.hasOwnProperty(e) && (c.types[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
                                var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                                i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                                c.HDLR_TYPES = {
                                    video: t,
                                    audio: i
                                };
                                var r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                                n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                                c.STTS = c.STSC = c.STCO = n,
                                c.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                                c.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
                                c.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                                c.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                                var s = new Uint8Array([105, 115, 111, 109]),
                                a = new Uint8Array([97, 118, 99, 49]),
                                o = new Uint8Array([0, 0, 0, 1]);
                                c.FTYP = c.box(c.types.ftyp, s, o, s, a),
                                c.DINF = c.box(c.types.dinf, c.box(c.types.dref, r))
                            },
                            c.box = function(e) {
                                for (var t, i = Array.prototype.slice.call(arguments, 1), r = 8, n = i.length, s = n; n--;) r += i[n].byteLength;
                                for ((t = new Uint8Array(r))[0] = r >> 24 & 255, t[1] = r >> 16 & 255, t[2] = r >> 8 & 255, t[3] = 255 & r, t.set(e, 4), n = 0, r = 8; n < s; n++) t.set(i[n], r),
                                r += i[n].byteLength;
                                return t
                            },
                            c.hdlr = function(e) {
                                return c.box(c.types.hdlr, c.HDLR_TYPES[e])
                            },
                            c.mdat = function(e) {
                                return c.box(c.types.mdat, e)
                            },
                            c.mdhd = function(e, t) {
                                t *= e;
                                var i = Math.floor(t / (1 + l)),
                                r = Math.floor(t % (1 + l));
                                return c.box(c.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 85, 196, 0, 0]))
                            },
                            c.mdia = function(e) {
                                return c.box(c.types.mdia, c.mdhd(e.timescale, e.duration), c.hdlr(e.type), c.minf(e))
                            },
                            c.mfhd = function(e) {
                                return c.box(c.types.mfhd, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e]))
                            },
                            c.minf = function(e) {
                                return "audio" === e.type ? c.box(c.types.minf, c.box(c.types.smhd, c.SMHD), c.DINF, c.stbl(e)) : c.box(c.types.minf, c.box(c.types.vmhd, c.VMHD), c.DINF, c.stbl(e))
                            },
                            c.moof = function(e, t, i) {
                                return c.box(c.types.moof, c.mfhd(e), c.traf(i, t))
                            },
                            c.moov = function(e) {
                                for (var t = e.length,
                                i = []; t--;) i[t] = c.trak(e[t]);
                                return c.box.apply(null, [c.types.moov, c.mvhd(e[0].timescale, e[0].duration)].concat(i).concat(c.mvex(e)))
                            },
                            c.mvex = function(e) {
                                for (var t = e.length,
                                i = []; t--;) i[t] = c.trex(e[t]);
                                return c.box.apply(null, [c.types.mvex].concat(i))
                            },
                            c.mvhd = function(e, t) {
                                t *= e;
                                var i = Math.floor(t / (1 + l)),
                                r = Math.floor(t % (1 + l)),
                                n = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                                return c.box(c.types.mvhd, n)
                            },
                            c.sdtp = function(e) {
                                var t, i, r = e.samples || [],
                                n = new Uint8Array(4 + r.length);
                                for (i = 0; i < r.length; i++) t = r[i].flags,
                                n[i + 4] = t.dependsOn << 4 | t.isDependedOn << 2 | t.hasRedundancy;
                                return c.box(c.types.sdtp, n)
                            },
                            c.stbl = function(e) {
                                return c.box(c.types.stbl, c.stsd(e), c.box(c.types.stts, c.STTS), c.box(c.types.stsc, c.STSC), c.box(c.types.stsz, c.STSZ), c.box(c.types.stco, c.STCO))
                            },
                            c.avc1 = function(e) {
                                var t, i, r, n = [],
                                s = [];
                                for (t = 0; t < e.sps.length; t++) r = (i = e.sps[t]).byteLength,
                                n.push(r >>> 8 & 255),
                                n.push(255 & r),
                                n = n.concat(Array.prototype.slice.call(i));
                                for (t = 0; t < e.pps.length; t++) r = (i = e.pps[t]).byteLength,
                                s.push(r >>> 8 & 255),
                                s.push(255 & r),
                                s = s.concat(Array.prototype.slice.call(i));
                                var a = c.box(c.types.avcC, new Uint8Array([1, n[3], n[4], n[5], 255, 224 | e.sps.length].concat(n).concat([e.pps.length]).concat(s))),
                                o = e.width,
                                l = e.height,
                                u = e.pixelRatio[0],
                                h = e.pixelRatio[1];
                                return c.box(c.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, o >> 8 & 255, 255 & o, l >> 8 & 255, 255 & l, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), a, c.box(c.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), c.box(c.types.pasp, new Uint8Array([u >> 24, u >> 16 & 255, u >> 8 & 255, 255 & u, h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h])))
                            },
                            c.esds = function(e) {
                                var t = e.config.length;
                                return new Uint8Array([0, 0, 0, 0, 3, 23 + t, 0, 1, 0, 4, 15 + t, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([t]).concat(e.config).concat([6, 1, 2]))
                            },
                            c.mp4a = function(e) {
                                var t = e.samplerate;
                                return c.box(c.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, e.channelCount, 0, 16, 0, 0, 0, 0, t >> 8 & 255, 255 & t, 0, 0]), c.box(c.types.esds, c.esds(e)))
                            },
                            c.mp3 = function(e) {
                                var t = e.samplerate;
                                return c.box(c.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, e.channelCount, 0, 16, 0, 0, 0, 0, t >> 8 & 255, 255 & t, 0, 0]))
                            },
                            c.stsd = function(e) {
                                return "audio" === e.type ? e.isAAC || "mp3" !== e.codec ? c.box(c.types.stsd, c.STSD, c.mp4a(e)) : c.box(c.types.stsd, c.STSD, c.mp3(e)) : c.box(c.types.stsd, c.STSD, c.avc1(e))
                            },
                            c.tkhd = function(e) {
                                var t = e.id,
                                i = e.duration * e.timescale,
                                r = e.width,
                                n = e.height,
                                s = Math.floor(i / (1 + l)),
                                a = Math.floor(i % (1 + l));
                                return c.box(c.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 0, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, r >> 8 & 255, 255 & r, 0, 0, n >> 8 & 255, 255 & n, 0, 0]))
                            },
                            c.traf = function(e, t) {
                                var i = c.sdtp(e),
                                r = e.id,
                                n = Math.floor(t / (1 + l)),
                                s = Math.floor(t % (1 + l));
                                return c.box(c.types.traf, c.box(c.types.tfhd, new Uint8Array([0, 0, 0, 0, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r])), c.box(c.types.tfdt, new Uint8Array([1, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s])), c.trun(e, i.length + 16 + 20 + 8 + 16 + 8 + 8), i)
                            },
                            c.trak = function(e) {
                                return e.duration = e.duration || 4294967295,
                                c.box(c.types.trak, c.tkhd(e), c.mdia(e))
                            },
                            c.trex = function(e) {
                                var t = e.id;
                                return c.box(c.types.trex, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                            },
                            c.trun = function(e, t) {
                                var i, r, n, s, a, o, l = e.samples || [],
                                u = l.length,
                                h = 12 + 16 * u,
                                d = new Uint8Array(h);
                                for (t += 8 + h, d.set([0, 0, 15, 1, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t], 0), i = 0; i < u; i++) n = (r = l[i]).duration,
                                s = r.size,
                                a = r.flags,
                                o = r.cts,
                                d.set([n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, a.isLeading << 2 | a.dependsOn, a.isDependedOn << 6 | a.hasRedundancy << 4 | a.paddingValue << 1 | a.isNonSync, 61440 & a.degradPrio, 15 & a.degradPrio, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, 255 & o], 12 + 16 * i);
                                return c.box(c.types.trun, d)
                            },
                            c.initSegment = function(e) {
                                c.types || c.init();
                                var t, i = c.moov(e);
                                return (t = new Uint8Array(c.FTYP.byteLength + i.byteLength)).set(c.FTYP),
                                t.set(i, c.FTYP.byteLength),
                                t
                            },
                            c
                        } (),
                        x = function() {
                            function e(e, t, i, r) {
                                this.observer = e,
                                this.config = t,
                                this.typeSupported = i;
                                var n = navigator.userAgent;
                                this.isSafari = r && -1 < r.indexOf("Apple") && n && !n.match("CriOS"),
                                this.ISGenerated = !1
                            }
                            var t = e.prototype;
                            return t.destroy = function() {},
                            t.resetTimeStamp = function(e) {
                                this._initPTS = this._initDTS = e
                            },
                            t.resetInitSegment = function() {
                                this.ISGenerated = !1
                            },
                            t.remux = function(e, t, i, r, n, s, a) {
                                if (this.ISGenerated || this.generateIS(e, t, n), this.ISGenerated) {
                                    var o = e.samples.length,
                                    l = t.samples.length,
                                    u = n,
                                    h = n;
                                    if (o && l) {
                                        var d = (e.samples[0].pts - t.samples[0].pts) / t.inputTimeScale;
                                        u += Math.max(0, d),
                                        h += Math.max(0, -d)
                                    }
                                    if (o) {
                                        e.timescale || (te.b.warn("regenerate InitSegment as audio detected"), this.generateIS(e, t, n));
                                        var c, f = this.remuxAudio(e, u, s, a);
                                        l && (f && (c = f.endPTS - f.startPTS), t.timescale || (te.b.warn("regenerate InitSegment as video detected"), this.generateIS(e, t, n)), this.remuxVideo(t, h, s, c, a))
                                    } else if (l) {
                                        var p = this.remuxVideo(t, h, s, 0, a);
                                        p && e.codec && this.remuxEmptyAudio(e, u, s, p)
                                    }
                                }
                                i.samples.length && this.remuxID3(i, n),
                                r.samples.length && this.remuxText(r, n),
                                this.observer.trigger(Q.a.FRAG_PARSED)
                            },
                            t.generateIS = function(e, t, i) {
                                var r, n, s = this.observer,
                                a = e.samples,
                                o = t.samples,
                                l = this.typeSupported,
                                u = "audio/mp4",
                                h = {},
                                d = {
                                    tracks: h
                                },
                                c = void 0 === this._initPTS;
                                if (c && (r = n = 1 / 0), e.config && a.length && (e.timescale = e.samplerate, te.b.log("audio sampling rate : " + e.samplerate), e.isAAC || (l.mpeg ? (u = "audio/mpeg", e.codec = "") : l.mp3 && (e.codec = "mp3")), h.audio = {
                                    container: u,
                                    codec: e.codec,
                                    initSegment: !e.isAAC && l.mpeg ? new Uint8Array: ie.initSegment([e]),
                                    metadata: {
                                        channelCount: e.channelCount
                                    }
                                },
                                c && (r = n = a[0].pts - e.inputTimeScale * i)), t.sps && t.pps && o.length) {
                                    var f = t.inputTimeScale;
                                    t.timescale = f,
                                    h.video = {
                                        container: "video/mp4",
                                        codec: t.codec,
                                        initSegment: ie.initSegment([t]),
                                        metadata: {
                                            width: t.width,
                                            height: t.height
                                        }
                                    },
                                    c && (r = Math.min(r, o[0].pts - f * i), n = Math.min(n, o[0].dts - f * i), this.observer.trigger(Q.a.INIT_PTS_FOUND, {
                                        initPTS: r
                                    }))
                                }
                                Object.keys(h).length ? (s.trigger(Q.a.FRAG_PARSING_INIT_SEGMENT, d), this.ISGenerated = !0, c && (this._initPTS = r, this._initDTS = n)) : s.trigger(Q.a.ERROR, {
                                    type: ee.b.MEDIA_ERROR,
                                    details: ee.a.FRAG_PARSING_ERROR,
                                    fatal: !1,
                                    reason: "no audio/video samples found"
                                })
                            },
                            t.remuxVideo = function(e, t, i, r, n) {
                                var s, a, o, l, u, h, d, c = 8,
                                f = e.timescale,
                                p = e.samples,
                                v = [],
                                m = p.length,
                                _ = this._PTSNormalize,
                                g = this._initPTS,
                                y = this.nextAvcDts,
                                b = this.isSafari;
                                if (0 !== m) {
                                    b && (i |= p.length && y && (n && Math.abs(t - y / f) < .1 || Math.abs(p[0].pts - y - g) < f / 5)),
                                    i || (y = t * f),
                                    p.forEach(function(e) {
                                        e.pts = _(e.pts - g, y),
                                        e.dts = _(e.dts - g, y)
                                    }),
                                    p.sort(function(e, t) {
                                        var i = e.dts - t.dts,
                                        r = e.pts - t.pts;
                                        return i || r || e.id - t.id
                                    });
                                    var S = p.reduce(function(e, t) {
                                        return Math.max(Math.min(e, t.pts - t.dts), -18e3)
                                    },
                                    0);
                                    if (S < 0) {
                                        te.b.warn("PTS < DTS detected in video samples, shifting DTS by " + Math.round(S / 90) + " ms to overcome this issue");
                                        for (var E = 0; E < p.length; E++) p[E].dts += S
                                    }
                                    var k = p[0];
                                    u = Math.max(k.dts, 0),
                                    l = Math.max(k.pts, 0);
                                    var w = Math.round((u - y) / 90);
                                    i && w && (1 < w ? te.b.log("AVC:" + w + " ms hole between fragments detected,filling it") : w < -1 && te.b.log("AVC:" + -w + " ms overlapping between fragments detected"), u = y, p[0].dts = u, l = Math.max(l - w, y), p[0].pts = l, te.b.log("Video/PTS/DTS adjusted: " + Math.round(l / 90) + "/" + Math.round(u / 90) + ",delta:" + w + " ms")),
                                    k = p[p.length - 1],
                                    d = Math.max(k.dts, 0),
                                    h = Math.max(k.pts, 0, d),
                                    b && (s = Math.round((d - u) / (p.length - 1)));
                                    for (var T = 0,
                                    A = 0,
                                    R = 0; R < m; R++) {
                                        for (var I = p[R], x = I.units, O = x.length, C = 0, L = 0; L < O; L++) C += x[L].data.length;
                                        A += C,
                                        T += O,
                                        I.length = C,
                                        I.dts = b ? u + R * s: Math.max(I.dts, u),
                                        I.pts = Math.max(I.pts, I.dts)
                                    }
                                    var D = A + 4 * T + 8;
                                    try {
                                        a = new Uint8Array(D)
                                    } catch(e) {
                                        return void this.observer.trigger(Q.a.ERROR, {
                                            type: ee.b.MUX_ERROR,
                                            details: ee.a.REMUX_ALLOC_ERROR,
                                            fatal: !1,
                                            bytes: D,
                                            reason: "fail allocating video mdat " + D
                                        })
                                    }
                                    var P = new DataView(a.buffer);
                                    P.setUint32(0, D),
                                    a.set(ie.types.mdat, 4);
                                    for (var M = 0; M < m; M++) {
                                        for (var F = p[M], N = F.units, B = 0, U = void 0, j = 0, z = N.length; j < z; j++) {
                                            var G = N[j],
                                            V = G.data,
                                            W = G.data.byteLength;
                                            P.setUint32(c, W),
                                            c += 4,
                                            a.set(V, c),
                                            c += W,
                                            B += 4 + W
                                        }
                                        if (b) U = Math.max(0, s * Math.round((F.pts - F.dts) / s));
                                        else {
                                            if (M < m - 1) s = p[M + 1].dts - F.dts;
                                            else {
                                                var H = this.config,
                                                K = F.dts - p[0 < M ? M - 1 : M].dts;
                                                if (H.stretchShortVideoTrack) {
                                                    var q = H.maxBufferHole,
                                                    Y = Math.floor(q * f),
                                                    Z = (r ? l + r * f: this.nextAudioPts) - F.pts;
                                                    Y < Z ? ((s = Z - K) < 0 && (s = K), te.b.log("It is approximately " + Z / 90 + " ms to the next segment; using duration " + s / 90 + " ms for the last video frame.")) : s = K
                                                } else s = K
                                            }
                                            U = Math.round(F.pts - F.dts)
                                        }
                                        v.push({
                                            size: B,
                                            duration: s,
                                            cts: U,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: F.key ? 2 : 1,
                                                isNonSync: F.key ? 0 : 1
                                            }
                                        })
                                    }
                                    this.nextAvcDts = d + s;
                                    var X = e.dropped;
                                    if (e.nbNalu = 0, e.dropped = 0, v.length && -1 < navigator.userAgent.toLowerCase().indexOf("chrome")) {
                                        var J = v[0].flags;
                                        J.dependsOn = 2,
                                        J.isNonSync = 0
                                    }
                                    e.samples = v,
                                    o = ie.moof(e.sequenceNumber++, u, e),
                                    e.samples = [];
                                    var $ = {
                                        data1: o,
                                        data2: a,
                                        startPTS: l / f,
                                        endPTS: (h + s) / f,
                                        startDTS: u / f,
                                        endDTS: this.nextAvcDts / f,
                                        type: "video",
                                        hasAudio: !1,
                                        hasVideo: !0,
                                        nb: v.length,
                                        dropped: X
                                    };
                                    return this.observer.trigger(Q.a.FRAG_PARSING_DATA, $),
                                    $
                                }
                            },
                            t.remuxAudio = function(e, t, i, r) {
                                var n, s, a, o, l, u, h = e.inputTimeScale,
                                d = e.timescale,
                                c = h / d,
                                f = (e.isAAC ? 1024 : 1152) * c,
                                p = this._PTSNormalize,
                                v = this._initPTS,
                                m = !e.isAAC && this.typeSupported.mpeg,
                                _ = m ? 0 : 8,
                                g = e.samples,
                                y = [],
                                b = this.nextAudioPts;
                                if (i |= g.length && b && (r && Math.abs(t - b / h) < .1 || Math.abs(g[0].pts - b - v) < 20 * f), g.forEach(function(e) {
                                    e.pts = e.dts = p(e.pts - v, t * h)
                                }), 0 !== (g = g.filter(function(e) {
                                    return 0 <= e.pts
                                })).length) {
                                    if (i || (b = r ? t * h: g[0].pts), e.isAAC) for (var S = this.config.maxAudioFramesDrift,
                                    E = 0,
                                    k = b; E < g.length;) {
                                        var w, T = g[E];
                                        w = T.pts - k;
                                        var A = Math.abs(1e3 * w / h);
                                        if (w <= -S * f) te.b.warn("Dropping 1 audio frame @ " + (k / h).toFixed(3) + "s due to " + Math.round(A) + " ms overlap."),
                                        g.splice(E, 1);
                                        else if (S * f <= w && A < 1e4 && k) {
                                            var R = Math.round(w / f);
                                            te.b.warn("Injecting " + R + " audio frame @ " + (k / h).toFixed(3) + "s due to " + Math.round(1e3 * w / h) + " ms gap.");
                                            for (var I = 0; I < R; I++) {
                                                var x = Math.max(k, 0); (s = H.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (te.b.log("Unable to get silent frame for given audio codec; duplicating last frame instead."), s = T.unit.subarray()),
                                                g.splice(E, 0, {
                                                    unit: s,
                                                    pts: x,
                                                    dts: x
                                                }),
                                                k += f,
                                                E++
                                            }
                                            T.pts = T.dts = k,
                                            k += f,
                                            E++
                                        } else Math.abs(w),
                                        T.pts = T.dts = k,
                                        k += f,
                                        E++
                                    }
                                    for (var O = g.length,
                                    C = 0; O--;) C += g[O].unit.byteLength;
                                    for (var L = 0,
                                    D = g.length; L < D; L++) {
                                        var P = g[L],
                                        M = P.unit,
                                        F = P.pts;
                                        if (void 0 !== u) n.duration = Math.round((F - u) / c);
                                        else {
                                            var N = Math.round(1e3 * (F - b) / h),
                                            B = 0;
                                            if (i && e.isAAC && N) {
                                                if (0 < N && N < 1e4) B = Math.round((F - b) / f),
                                                te.b.log(N + " ms hole between AAC samples detected,filling it"),
                                                0 < B && ((s = H.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (s = M.subarray()), C += B * s.length);
                                                else if (N < -12) {
                                                    te.b.log("drop overlapping AAC sample, expected/parsed/delta:" + (b / h).toFixed(3) + "s/" + (F / h).toFixed(3) + "s/" + -N + "ms"),
                                                    C -= M.byteLength;
                                                    continue
                                                }
                                                F = b
                                            }
                                            if (l = F, !(0 < C)) return;
                                            C += _;
                                            try {
                                                a = new Uint8Array(C)
                                            } catch(e) {
                                                return void this.observer.trigger(Q.a.ERROR, {
                                                    type: ee.b.MUX_ERROR,
                                                    details: ee.a.REMUX_ALLOC_ERROR,
                                                    fatal: !1,
                                                    bytes: C,
                                                    reason: "fail allocating audio mdat " + C
                                                })
                                            }
                                            m || (new DataView(a.buffer).setUint32(0, C), a.set(ie.types.mdat, 4));
                                            for (var U = 0; U < B; U++)(s = H.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (te.b.log("Unable to get silent frame for given audio codec; duplicating this frame instead."), s = M.subarray()),
                                            a.set(s, _),
                                            _ += s.byteLength,
                                            n = {
                                                size: s.byteLength,
                                                cts: 0,
                                                duration: 1024,
                                                flags: {
                                                    isLeading: 0,
                                                    isDependedOn: 0,
                                                    hasRedundancy: 0,
                                                    degradPrio: 0,
                                                    dependsOn: 1
                                                }
                                            },
                                            y.push(n)
                                        }
                                        a.set(M, _);
                                        var j = M.byteLength;
                                        _ += j,
                                        n = {
                                            size: j,
                                            cts: 0,
                                            duration: 0,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: 1
                                            }
                                        },
                                        y.push(n),
                                        u = F
                                    }
                                    var z = 0;
                                    if (2 <= (O = y.length) && (z = y[O - 2].duration, n.duration = z), O) {
                                        this.nextAudioPts = b = u + c * z,
                                        e.samples = y,
                                        o = m ? new Uint8Array: ie.moof(e.sequenceNumber++, l / c, e),
                                        e.samples = [];
                                        var G = l / h,
                                        V = b / h,
                                        W = {
                                            data1: o,
                                            data2: a,
                                            startPTS: G,
                                            endPTS: V,
                                            startDTS: G,
                                            endDTS: V,
                                            type: "audio",
                                            hasAudio: !0,
                                            hasVideo: !1,
                                            nb: O
                                        };
                                        return this.observer.trigger(Q.a.FRAG_PARSING_DATA, W),
                                        W
                                    }
                                    return null
                                }
                            },
                            t.remuxEmptyAudio = function(e, t, i, r) {
                                var n = e.inputTimeScale,
                                s = n / (e.samplerate ? e.samplerate: n),
                                a = this.nextAudioPts,
                                o = (void 0 !== a ? a: r.startDTS * n) + this._initDTS,
                                l = r.endDTS * n + this._initDTS,
                                u = 1024 * s,
                                h = Math.ceil((l - o) / u),
                                d = H.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                                if (te.b.warn("remux empty Audio"), d) {
                                    for (var c = [], f = 0; f < h; f++) {
                                        var p = o + f * u;
                                        c.push({
                                            unit: d,
                                            pts: p,
                                            dts: p
                                        })
                                    }
                                    e.samples = c,
                                    this.remuxAudio(e, t, i)
                                } else te.b.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!")
                            },
                            t.remuxID3 = function(e) {
                                var t, i = e.samples.length,
                                r = e.inputTimeScale,
                                n = this._initPTS,
                                s = this._initDTS;
                                if (i) {
                                    for (var a = 0; a < i; a++)(t = e.samples[a]).pts = (t.pts - n) / r,
                                    t.dts = (t.dts - s) / r;
                                    this.observer.trigger(Q.a.FRAG_PARSING_METADATA, {
                                        samples: e.samples
                                    })
                                }
                                e.samples = []
                            },
                            t.remuxText = function(e) {
                                e.samples.sort(function(e, t) {
                                    return e.pts - t.pts
                                });
                                var t, i = e.samples.length,
                                r = e.inputTimeScale,
                                n = this._initPTS;
                                if (i) {
                                    for (var s = 0; s < i; s++)(t = e.samples[s]).pts = (t.pts - n) / r;
                                    this.observer.trigger(Q.a.FRAG_PARSING_USERDATA, {
                                        samples: e.samples
                                    })
                                }
                                e.samples = []
                            },
                            t._PTSNormalize = function(e, t) {
                                var i;
                                if (void 0 === t) return e;
                                for (i = t < e ? -8589934592 : 8589934592; 4294967296 < Math.abs(e - t);) e += i;
                                return e
                            },
                            e
                        } (),
                        O = function() {
                            function e(e) {
                                this.observer = e
                            }
                            var t = e.prototype;
                            return t.destroy = function() {},
                            t.resetTimeStamp = function() {},
                            t.resetInitSegment = function() {},
                            t.remux = function(e, t, i, r, n, s, a, o) {
                                var l = this.observer,
                                u = "";
                                e && (u += "audio"),
                                t && (u += "video"),
                                l.trigger(Q.a.FRAG_PARSING_DATA, {
                                    data1: o,
                                    startPTS: n,
                                    startDTS: n,
                                    type: u,
                                    hasAudio: !!e,
                                    hasVideo: !!t,
                                    nb: 1,
                                    dropped: 0
                                }),
                                l.trigger(Q.a.FRAG_PARSED)
                            },
                            e
                        } (),
                        u = Object(r.a)();
                        try {
                            b = u.performance.now.bind(u.performance)
                        } catch(e) {
                            te.b.debug("Unable to use Performance API on this environment"),
                            b = u.Date.now
                        }
                        var c = function() {
                            function e(e, t, i, r) {
                                this.observer = e,
                                this.typeSupported = t,
                                this.config = i,
                                this.vendor = r
                            }
                            var t = e.prototype;
                            return t.destroy = function() {
                                var e = this.demuxer;
                                e && e.destroy()
                            },
                            t.push = function(e, i, r, n, s, a, o, l, u, h, d, c) {
                                var f = this;
                                if (0 < e.byteLength && null != i && null != i.key && "AES-128" === i.method) {
                                    var t = this.decrypter;
                                    null == t && (t = this.decrypter = new v.a(this.observer, this.config));
                                    var p = b();
                                    t.decrypt(e, i.key.buffer, i.iv.buffer,
                                    function(e) {
                                        var t = b();
                                        f.observer.trigger(Q.a.FRAG_DECRYPTED, {
                                            stats: {
                                                tstart: p,
                                                tdecrypt: t
                                            }
                                        }),
                                        f.pushDecrypted(new Uint8Array(e), i, new Uint8Array(r), n, s, a, o, l, u, h, d, c)
                                    })
                                } else this.pushDecrypted(new Uint8Array(e), i, new Uint8Array(r), n, s, a, o, l, u, h, d, c)
                            },
                            t.pushDecrypted = function(e, t, i, r, n, s, a, o, l, u, h, d) {
                                var c = this.demuxer;
                                if (!c || (a || o) && !this.probe(e)) {
                                    for (var f = this.observer,
                                    p = this.typeSupported,
                                    v = this.config,
                                    m = [{
                                        demux: R,
                                        remux: x
                                    },
                                    {
                                        demux: w.a,
                                        remux: O
                                    },
                                    {
                                        demux: k,
                                        remux: x
                                    },
                                    {
                                        demux: I,
                                        remux: x
                                    }], _ = 0, g = m.length; _ < g; _++) {
                                        var y = m[_],
                                        b = y.demux.probe;
                                        if (b(e)) {
                                            var S = this.remuxer = new y.remux(f, v, p, this.vendor);
                                            c = new y.demux(f, S, v, p),
                                            this.probe = b;
                                            break
                                        }
                                    }
                                    if (!c) return void f.trigger(Q.a.ERROR, {
                                        type: ee.b.MEDIA_ERROR,
                                        details: ee.a.FRAG_PARSING_ERROR,
                                        fatal: !0,
                                        reason: "no demux matching with content found"
                                    });
                                    this.demuxer = c
                                }
                                var E = this.remuxer; (a || o) && (c.resetInitSegment(i, r, n, u), E.resetInitSegment()),
                                a && (c.resetTimeStamp(d), E.resetTimeStamp(d)),
                                "function" == typeof c.setDecryptData && c.setDecryptData(t),
                                c.append(e, s, l, h)
                            },
                            e
                        } ();
                        t.a = c
                    },
                    function(e, t, i) {
                        "use strict";
                        var c = i(0),
                        l = i(1),
                        o = Math.pow(2, 32) - 1,
                        r = function() {
                            function v(e, t) {
                                this.observer = e,
                                this.remuxer = t
                            }
                            var e = v.prototype;
                            return e.resetTimeStamp = function(e) {
                                this.initPTS = e
                            },
                            e.resetInitSegment = function(e, t, i, r) {
                                if (e && e.byteLength) {
                                    var n = this.initData = v.parseInitSegment(e);
                                    null == t && (t = "mp4a.40.5"),
                                    null == i && (i = "avc1.42e01e");
                                    var s = {};
                                    n.audio && n.video ? s.audiovideo = {
                                        container: "video/mp4",
                                        codec: t + "," + i,
                                        initSegment: r ? e: null
                                    }: (n.audio && (s.audio = {
                                        container: "audio/mp4",
                                        codec: t,
                                        initSegment: r ? e: null
                                    }), n.video && (s.video = {
                                        container: "video/mp4",
                                        codec: i,
                                        initSegment: r ? e: null
                                    })),
                                    this.observer.trigger(l.a.FRAG_PARSING_INIT_SEGMENT, {
                                        tracks: s
                                    })
                                } else t && (this.audioCodec = t),
                                i && (this.videoCodec = i)
                            },
                            v.probe = function(e) {
                                return 0 < v.findBox({
                                    data: e,
                                    start: 0,
                                    end: Math.min(e.length, 16384)
                                },
                                ["moof"]).length
                            },
                            v.bin2str = function(e) {
                                return String.fromCharCode.apply(null, e)
                            },
                            v.readUint16 = function(e, t) {
                                e.data && (t += e.start, e = e.data);
                                var i = e[t] << 8 | e[t + 1];
                                return i < 0 ? 65536 + i: i
                            },
                            v.readUint32 = function(e, t) {
                                e.data && (t += e.start, e = e.data);
                                var i = e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
                                return i < 0 ? 4294967296 + i: i
                            },
                            v.writeUint32 = function(e, t, i) {
                                e.data && (t += e.start, e = e.data),
                                e[t] = i >> 24,
                                e[t + 1] = i >> 16 & 255,
                                e[t + 2] = i >> 8 & 255,
                                e[t + 3] = 255 & i
                            },
                            v.findBox = function(e, t) {
                                var i, r, n, s, a, o, l = [];
                                if (e.data ? (a = e.start, n = e.end, e = e.data) : (a = 0, n = e.byteLength), !t.length) return null;
                                for (i = a; i < n;) o = 1 < (r = v.readUint32(e, i)) ? i + r: n,
                                v.bin2str(e.subarray(i + 4, i + 8)) === t[0] && (1 === t.length ? l.push({
                                    data: e,
                                    start: i + 8,
                                    end: o
                                }) : (s = v.findBox({
                                    data: e,
                                    start: i + 8,
                                    end: o
                                },
                                t.slice(1))).length && (l = l.concat(s))),
                                i = o;
                                return l
                            },
                            v.parseSegmentIndex = function(e) {
                                var t, i = v.findBox(e, ["moov"])[0],
                                r = i ? i.end: null,
                                n = 0,
                                s = v.findBox(e, ["sidx"]);
                                if (!s || !s[0]) return null;
                                t = [];
                                var a = (s = s[0]).data[0],
                                o = v.readUint32(s, n = 0 === a ? 8 : 16);
                                n += 4,
                                n += 0 === a ? 8 : 16,
                                n += 2;
                                var l = s.end + 0,
                                u = v.readUint16(s, n);
                                n += 2;
                                for (var h = 0; h < u; h++) {
                                    var d = n,
                                    c = v.readUint32(s, d);
                                    d += 4;
                                    var f = 2147483647 & c;
                                    if (1 == (2147483648 & c) >>> 31) return void console.warn("SIDX has hierarchical references (not supported)");
                                    var p = v.readUint32(s, d);
                                    d += 4,
                                    t.push({
                                        referenceSize: f,
                                        subsegmentDuration: p,
                                        info: {
                                            duration: p / o,
                                            start: l,
                                            end: l + f - 1
                                        }
                                    }),
                                    l += f,
                                    n = d += 4
                                }
                                return {
                                    earliestPresentationTime: 0,
                                    timescale: o,
                                    version: a,
                                    referencesCount: u,
                                    references: t,
                                    moovEndOffset: r
                                }
                            },
                            v.parseInitSegment = function(e) {
                                var d = [];
                                return v.findBox(e, ["moov", "trak"]).forEach(function(e) {
                                    var t = v.findBox(e, ["tkhd"])[0];
                                    if (t) {
                                        var i = t.data[t.start],
                                        r = 0 === i ? 12 : 20,
                                        n = v.readUint32(t, r),
                                        s = v.findBox(e, ["mdia", "mdhd"])[0];
                                        if (s) {
                                            r = 0 === (i = s.data[s.start]) ? 12 : 20;
                                            var a = v.readUint32(s, r),
                                            o = v.findBox(e, ["mdia", "hdlr"])[0];
                                            if (o) {
                                                var l = {
                                                    soun: "audio",
                                                    vide: "video"
                                                } [v.bin2str(o.data.subarray(o.start + 8, o.start + 12))];
                                                if (l) {
                                                    var u = v.findBox(e, ["mdia", "minf", "stbl", "stsd"]);
                                                    if (u.length) {
                                                        u = u[0];
                                                        var h = v.bin2str(u.data.subarray(u.start + 12, u.start + 16));
                                                        c.b.log("MP4Demuxer:" + l + ":" + h + " found")
                                                    }
                                                    d[n] = {
                                                        timescale: a,
                                                        type: l
                                                    },
                                                    d[l] = {
                                                        timescale: a,
                                                        id: n
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }),
                                d
                            },
                            v.getStartDTS = function(n, e) {
                                var t, i, r;
                                return t = v.findBox(e, ["moof", "traf"]),
                                i = [].concat.apply([], t.map(function(r) {
                                    return v.findBox(r, ["tfhd"]).map(function(e) {
                                        var t, i;
                                        return t = v.readUint32(e, 4),
                                        i = n[t].timescale || 9e4,
                                        v.findBox(r, ["tfdt"]).map(function(e) {
                                            var t, i;
                                            return t = e.data[e.start],
                                            i = v.readUint32(e, 4),
                                            1 === t && (i *= Math.pow(2, 32), i += v.readUint32(e, 8)),
                                            i
                                        })[0] / i
                                    })
                                })),
                                r = Math.min.apply(null, i),
                                isFinite(r) ? r: 0
                            },
                            v.offsetStartDTS = function(r, e, a) {
                                v.findBox(e, ["moof", "traf"]).map(function(i) {
                                    return v.findBox(i, ["tfhd"]).map(function(e) {
                                        var t = v.readUint32(e, 4),
                                        s = r[t].timescale || 9e4;
                                        v.findBox(i, ["tfdt"]).map(function(e) {
                                            var t = e.data[e.start],
                                            i = v.readUint32(e, 4);
                                            if (0 === t) v.writeUint32(e, 4, i - a * s);
                                            else {
                                                i *= Math.pow(2, 32),
                                                i += v.readUint32(e, 8),
                                                i -= a * s,
                                                i = Math.max(i, 0);
                                                var r = Math.floor(i / (1 + o)),
                                                n = Math.floor(i % (1 + o));
                                                v.writeUint32(e, 4, r),
                                                v.writeUint32(e, 8, n)
                                            }
                                        })
                                    })
                                })
                            },
                            e.append = function(e, t, i, r) {
                                var n = this.initData;
                                n || (this.resetInitSegment(e, this.audioCodec, this.videoCodec, !1), n = this.initData);
                                var s, a = this.initPTS;
                                if (void 0 === a) {
                                    var o = v.getStartDTS(n, e);
                                    this.initPTS = a = o - t,
                                    this.observer.trigger(l.a.INIT_PTS_FOUND, {
                                        initPTS: a
                                    })
                                }
                                v.offsetStartDTS(n, e, a),
                                s = v.getStartDTS(n, e),
                                this.remuxer.remux(n.audio, n.video, null, null, s, i, r, e)
                            },
                            e.destroy = function() {},
                            v
                        } ();
                        t.a = r
                    },
                    function(e, t, f) {
                        function l(i) {
                            var r = {};
                            function n(e) {
                                if (r[e]) return r[e].exports;
                                var t = r[e] = {
                                    i: e,
                                    l: !1,
                                    exports: {}
                                };
                                return i[e].call(t.exports, t, t.exports, n),
                                t.l = !0,
                                t.exports
                            }
                            n.m = i,
                            n.c = r,
                            n.i = function(e) {
                                return e
                            },
                            n.d = function(e, t, i) {
                                n.o(e, t) || Object.defineProperty(e, t, {
                                    configurable: !1,
                                    enumerable: !0,
                                    get: i
                                })
                            },
                            n.r = function(e) {
                                Object.defineProperty(e, "__esModule", {
                                    value: !0
                                })
                            },
                            n.n = function(e) {
                                var t = e && e.__esModule ?
                                function() {
                                    return e.
                                default
                                }:
                                function() {
                                    return e
                                };
                                return n.d(t, "a", t),
                                t
                            },
                            n.o = function(e, t) {
                                return Object.prototype.hasOwnProperty.call(e, t)
                            },
                            n.p = "/",
                            n.oe = function(e) {
                                throw console.error(e),
                                e
                            };
                            var e = n(n.s = ENTRY_MODULE);
                            return e.
                        default || e
                        }
                        var p = "[\\.|\\-|\\+|\\w|/|@]+",
                        v = "\\(\\s*(/\\*.*?\\*/)?\\s*.*?(" + p + ").*?\\)";
                        function m(e) {
                            return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
                        }
                        function c(e, t, i) {
                            var r = {};
                            r[i] = [];
                            var n = t.toString(),
                            s = n.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);
                            if (!s) return r;
                            for (var a, o = s[1], l = new RegExp("(\\\\n|\\W)" + m(o) + v, "g"); a = l.exec(n);)"dll-reference" !== a[3] && r[i].push(a[3]);
                            for (l = new RegExp("\\(" + m(o) + '\\("(dll-reference\\s(' + p + '))"\\)\\)' + v, "g"); a = l.exec(n);) e[a[2]] || (r[i].push(a[1]), e[a[2]] = f(a[1]).m),
                            r[a[2]] = r[a[2]] || [],
                            r[a[2]].push(a[4]);
                            for (var u, h = Object.keys(r), d = 0; d < h.length; d++) for (var c = 0; c < r[h[d]].length; c++) u = r[h[d]][c],
                            isNaN(1 * u) || (r[h[d]][c] = 1 * r[h[d]][c]);
                            return r
                        }
                        function _(i) {
                            return Object.keys(i).reduce(function(e, t) {
                                return e || 0 < i[t].length
                            },
                            !1)
                        }
                        e.exports = function(e, t) {
                            t = t || {};
                            var i = {
                                main: f.m
                            },
                            r = t.all ? {
                                main: Object.keys(i.main)
                            }: function(e, t) {
                                for (var i = {
                                    main: [t]
                                },
                                r = {
                                    main: []
                                },
                                n = {
                                    main: {}
                                }; _(i);) for (var s = Object.keys(i), a = 0; a < s.length; a++) {
                                    var o = s[a],
                                    l = i[o].pop();
                                    if (n[o] = n[o] || {},
                                    !n[o][l] && e[o][l]) {
                                        n[o][l] = !0,
                                        r[o] = r[o] || [],
                                        r[o].push(l);
                                        for (var u = c(e, e[o][l], o), h = Object.keys(u), d = 0; d < h.length; d++) i[h[d]] = i[h[d]] || [],
                                        i[h[d]] = i[h[d]].concat(u[h[d]])
                                    }
                                }
                                return r
                            } (i, e),
                            n = "";
                            Object.keys(r).filter(function(e) {
                                return "main" !== e
                            }).forEach(function(t) {
                                for (var e = 0; r[t][e];) e++;
                                r[t].push(e),
                                i[t][e] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })",
                                n = n + "var " + t + " = (" + l.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + r[t].map(function(e) {
                                    return JSON.stringify(e) + ": " + i[t][e].toString()
                                }).join(",") + "});\n"
                            }),
                            n = n + "new ((" + l.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + r.main.map(function(e) {
                                return JSON.stringify(e) + ": " + i.main[e].toString()
                            }).join(",") + "}))(self);";
                            var s = new window.Blob([n], {
                                type: "text/javascript"
                            });
                            if (t.bare) return s;
                            var a = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(s),
                            o = new window.Worker(a);
                            return o.objectURL = a,
                            o
                        }
                    },
                    function(e, t, i) {
                        "use strict";
                        i.r(t);
                        var a = i(9),
                        o = i(1),
                        l = i(0),
                        u = i(8);
                        t.
                    default = function(n) {
                            var s = new u.EventEmitter;
                            s.trigger = function(e) {
                                for (var t = arguments.length,
                                i = new Array(1 < t ? t - 1 : 0), r = 1; r < t; r++) i[r - 1] = arguments[r];
                                s.emit.apply(s, [e, e].concat(i))
                            },
                            s.off = function(e) {
                                for (var t = arguments.length,
                                i = new Array(1 < t ? t - 1 : 0), r = 1; r < t; r++) i[r - 1] = arguments[r];
                                s.removeListener.apply(s, [e].concat(i))
                            };
                            var r = function(e, t) {
                                n.postMessage({
                                    event: e,
                                    data: t
                                })
                            };
                            n.addEventListener("message",
                            function(e) {
                                var t = e.data;
                                switch (t.cmd) {
                                case "init":
                                    var i = JSON.parse(t.config);
                                    n.demuxer = new a.a(s, t.typeSupported, i, t.vendor),
                                    Object(l.a)(i.debug),
                                    r("init", null);
                                    break;
                                case "demux":
                                    n.demuxer.push(t.data, t.decryptdata, t.initSegment, t.audioCodec, t.videoCodec, t.timeOffset, t.discontinuity, t.trackSwitch, t.contiguous, t.duration, t.accurateTimeOffset, t.defaultInitPTS)
                                }
                            }),
                            s.on(o.a.FRAG_DECRYPTED, r),
                            s.on(o.a.FRAG_PARSING_INIT_SEGMENT, r),
                            s.on(o.a.FRAG_PARSED, r),
                            s.on(o.a.ERROR, r),
                            s.on(o.a.FRAG_PARSING_METADATA, r),
                            s.on(o.a.FRAG_PARSING_USERDATA, r),
                            s.on(o.a.INIT_PTS_FOUND, r),
                            s.on(o.a.FRAG_PARSING_DATA,
                            function(e, t) {
                                var i = [],
                                r = {
                                    event: e,
                                    data: t
                                };
                                t.data1 && (r.data1 = t.data1.buffer, i.push(t.data1.buffer), delete t.data1),
                                t.data2 && (r.data2 = t.data2.buffer, i.push(t.data2.buffer), delete t.data2),
                                n.postMessage(r, i)
                            })
                        }
                    },
                    function(e, t, i) {
                        "use strict";
                        i.r(t);
                        var r = {};
                        i.r(r),
                        i.d(r, "newCue",
                        function() {
                            return Qe
                        });
                        var m, s, n = i(6),
                        c = i(2),
                        D = i(3),
                        P = i(1),
                        M = i(0),
                        a = {
                            hlsEventGeneric: !0,
                            hlsHandlerDestroying: !0,
                            hlsHandlerDestroyed: !0
                        },
                        o = function() {
                            function e(e) {
                                this.hls = void 0,
                                this.handledEvents = void 0,
                                this.useGenericHandler = void 0,
                                this.hls = e,
                                this.onEvent = this.onEvent.bind(this);
                                for (var t = arguments.length,
                                i = new Array(1 < t ? t - 1 : 0), r = 1; r < t; r++) i[r - 1] = arguments[r];
                                this.handledEvents = i,
                                this.useGenericHandler = !0,
                                this.registerListeners()
                            }
                            var t = e.prototype;
                            return t.destroy = function() {
                                this.onHandlerDestroying(),
                                this.unregisterListeners(),
                                this.onHandlerDestroyed()
                            },
                            t.onHandlerDestroying = function() {},
                            t.onHandlerDestroyed = function() {},
                            t.isEventHandler = function() {
                                return "object" == typeof this.handledEvents && this.handledEvents.length && "function" == typeof this.onEvent
                            },
                            t.registerListeners = function() {
                                this.isEventHandler() && this.handledEvents.forEach(function(e) {
                                    if (a[e]) throw new Error("Forbidden event-name: " + e);
                                    this.hls.on(e, this.onEvent)
                                },
                                this)
                            },
                            t.unregisterListeners = function() {
                                this.isEventHandler() && this.handledEvents.forEach(function(e) {
                                    this.hls.off(e, this.onEvent)
                                },
                                this)
                            },
                            t.onEvent = function(e, t) {
                                this.onEventGeneric(e, t)
                            },
                            t.onEventGeneric = function(e, t) {
                                try { (function(e, t) {
                                        var i = "on" + e.replace("hls", "");
                                        if ("function" != typeof this[i]) throw new Error("Event " + e + " has no generic handler in this " + this.constructor.name + " class (tried " + i + ")");
                                        return this[i].bind(this, t)
                                    }).call(this, e, t).call()
                                } catch(t) {
                                    M.b.error("An internal error happened while handling event " + e + '. Error message: "' + t.message + '". Here is a stacktrace:', t),
                                    this.hls.trigger(P.a.ERROR, {
                                        type: c.b.OTHER_ERROR,
                                        details: c.a.INTERNAL_EXCEPTION,
                                        fatal: !1,
                                        event: e,
                                        err: t
                                    })
                                }
                            },
                            e
                        } (); !
                        function(e) {
                            e.MANIFEST = "manifest",
                            e.LEVEL = "level",
                            e.AUDIO_TRACK = "audioTrack",
                            e.SUBTITLE_TRACK = "subtitleTrack"
                        } (m = m || {}),
                        function(e) {
                            e.MAIN = "main",
                            e.AUDIO = "audio",
                            e.SUBTITLE = "subtitle"
                        } (s = s || {});
                        var l = i(10);
                        function u(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        var f, x = function() {
                            function e(e, t) {
                                this._uri = null,
                                this.baseuri = void 0,
                                this.reluri = void 0,
                                this.method = null,
                                this.key = null,
                                this.iv = null,
                                this.baseuri = e,
                                this.reluri = t
                            }
                            return u(e.prototype, [{
                                key: "uri",
                                get: function() {
                                    return ! this._uri && this.reluri && (this._uri = Object(n.buildAbsoluteURL)(this.baseuri, this.reluri, {
                                        alwaysNormalize: !0
                                    })),
                                    this._uri
                                }
                            }]),
                            e
                        } ();
                        function h(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        } !
                        function(e) {
                            e.AUDIO = "audio",
                            e.VIDEO = "video"
                        } (f = f || {});
                        var O = function() {
                            function e() {
                                var e;
                                this._url = null,
                                this._byteRange = null,
                                this._decryptdata = null,
                                this._elementaryStreams = ((e = {})[f.AUDIO] = !1, e[f.VIDEO] = !1, e),
                                this.rawProgramDateTime = null,
                                this.programDateTime = null,
                                this.tagList = [],
                                this.relurl = void 0,
                                this.baseurl = void 0,
                                this.duration = void 0,
                                this.sn = 0,
                                this.levelkey = void 0
                            }
                            var t = e.prototype;
                            return t.setByteRange = function(e, t) {
                                var i = e.split("@", 2),
                                r = [];
                                1 === i.length ? r[0] = t ? t.byteRangeEndOffset: 0 : r[0] = parseInt(i[1]),
                                r[1] = parseInt(i[0]) + r[0],
                                this._byteRange = r
                            },
                            t.addElementaryStream = function(e) {
                                this._elementaryStreams[e] = !0
                            },
                            t.hasElementaryStream = function(e) {
                                return ! 0 === this._elementaryStreams[e]
                            },
                            t.createInitializationVector = function(e) {
                                for (var t = new Uint8Array(16), i = 12; i < 16; i++) t[i] = e >> 8 * (15 - i) & 255;
                                return t
                            },
                            t.setDecryptDataFromLevelKey = function(e, t) {
                                var i = e;
                                return e && e.method && e.uri && !e.iv && ((i = new x(e.baseuri, e.reluri)).method = e.method, i.iv = this.createInitializationVector(t)),
                                i
                            },
                            h(e.prototype, [{
                                key: "url",
                                get: function() {
                                    return ! this._url && this.relurl && (this._url = Object(n.buildAbsoluteURL)(this.baseurl, this.relurl, {
                                        alwaysNormalize: !0
                                    })),
                                    this._url
                                },
                                set: function(e) {
                                    this._url = e
                                }
                            },
                            {
                                key: "byteRange",
                                get: function() {
                                    return this._byteRange ? this._byteRange: []
                                }
                            },
                            {
                                key: "byteRangeStartOffset",
                                get: function() {
                                    return this.byteRange[0]
                                }
                            },
                            {
                                key: "byteRangeEndOffset",
                                get: function() {
                                    return this.byteRange[1]
                                }
                            },
                            {
                                key: "decryptdata",
                                get: function() {
                                    if (!this.levelkey && !this._decryptdata) return null;
                                    if (!this._decryptdata && this.levelkey) {
                                        var e = this.sn;
                                        "number" != typeof e && (this.levelkey && "AES-128" === this.levelkey.method && !this.levelkey.iv && M.b.warn('missing IV for initialization segment with method="' + this.levelkey.method + '" - compliance issue'), e = 0),
                                        this._decryptdata = this.setDecryptDataFromLevelKey(this.levelkey, e)
                                    }
                                    return this._decryptdata
                                }
                            },
                            {
                                key: "endProgramDateTime",
                                get: function() {
                                    if (null === this.programDateTime) return null;
                                    if (!Object(D.a)(this.programDateTime)) return null;
                                    var e = Object(D.a)(this.duration) ? this.duration: 0;
                                    return this.programDateTime + 1e3 * e
                                }
                            },
                            {
                                key: "encrypted",
                                get: function() {
                                    return ! (!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
                                }
                            }]),
                            e
                        } ();
                        function d(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        var C = function() {
                            function e(e) {
                                this.endCC = 0,
                                this.endSN = 0,
                                this.fragments = [],
                                this.initSegment = null,
                                this.live = !0,
                                this.needSidxRanges = !1,
                                this.startCC = 0,
                                this.startSN = 0,
                                this.startTimeOffset = null,
                                this.targetduration = 0,
                                this.totalduration = 0,
                                this.type = null,
                                this.url = e,
                                this.version = null
                            }
                            return d(e.prototype, [{
                                key: "hasProgramDateTime",
                                get: function() {
                                    return ! (!this.fragments[0] || !Object(D.a)(this.fragments[0].programDateTime))
                                }
                            }]),
                            e
                        } (),
                        p = /^(\d+)x(\d+)$/,
                        v = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g,
                        L = function() {
                            function i(e) {
                                for (var t in "string" == typeof e && (e = i.parseAttrList(e)), e) e.hasOwnProperty(t) && (this[t] = e[t])
                            }
                            var e = i.prototype;
                            return e.decimalInteger = function(e) {
                                var t = parseInt(this[e], 10);
                                return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
                            },
                            e.hexadecimalInteger = function(e) {
                                if (this[e]) {
                                    var t = (this[e] || "0x").slice(2);
                                    t = (1 & t.length ? "0": "") + t;
                                    for (var i = new Uint8Array(t.length / 2), r = 0; r < t.length / 2; r++) i[r] = parseInt(t.slice(2 * r, 2 * r + 2), 16);
                                    return i
                                }
                                return null
                            },
                            e.hexadecimalIntegerAsNumber = function(e) {
                                var t = parseInt(this[e], 16);
                                return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
                            },
                            e.decimalFloatingPoint = function(e) {
                                return parseFloat(this[e])
                            },
                            e.enumeratedString = function(e) {
                                return this[e]
                            },
                            e.decimalResolution = function(e) {
                                var t = p.exec(this[e]);
                                if (null !== t) return {
                                    width: parseInt(t[1], 10),
                                    height: parseInt(t[2], 10)
                                }
                            },
                            i.parseAttrList = function(e) {
                                var t, i = {};
                                for (v.lastIndex = 0; null !== (t = v.exec(e));) {
                                    var r = t[2];
                                    0 === r.indexOf('"') && r.lastIndexOf('"') === r.length - 1 && (r = r.slice(1, -1)),
                                    i[t[1]] = r
                                }
                                return i
                            },
                            i
                        } (),
                        _ = {
                            audio: {
                                a3ds: !0,
                                "ac-3": !0,
                                "ac-4": !0,
                                alac: !0,
                                alaw: !0,
                                dra1: !0,
                                "dts+": !0,
                                "dts-": !0,
                                dtsc: !0,
                                dtse: !0,
                                dtsh: !0,
                                "ec-3": !0,
                                enca: !0,
                                g719: !0,
                                g726: !0,
                                m4ae: !0,
                                mha1: !0,
                                mha2: !0,
                                mhm1: !0,
                                mhm2: !0,
                                mlpa: !0,
                                mp4a: !0,
                                "raw ": !0,
                                Opus: !0,
                                samr: !0,
                                sawb: !0,
                                sawp: !0,
                                sevc: !0,
                                sqcp: !0,
                                ssmv: !0,
                                twos: !0,
                                ulaw: !0
                            },
                            video: {
                                avc1: !0,
                                avc2: !0,
                                avc3: !0,
                                avc4: !0,
                                avcp: !0,
                                drac: !0,
                                dvav: !0,
                                dvhe: !0,
                                encv: !0,
                                hev1: !0,
                                hvc1: !0,
                                mjp2: !0,
                                mp4v: !0,
                                mvc1: !0,
                                mvc2: !0,
                                mvc3: !0,
                                mvc4: !0,
                                resv: !0,
                                rv60: !0,
                                s263: !0,
                                svc1: !0,
                                svc2: !0,
                                "vc-1": !0,
                                vp08: !0,
                                vp09: !0
                            }
                        };
                        function g(e, t) {
                            return window.MediaSource.isTypeSupported((t || "video") + '/mp4;codecs="' + e + '"')
                        }
                        var y = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g,
                        b = /#EXT-X-MEDIA:(.*)/g,
                        F = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)([\S+ ?]+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""), "g"),
                        N = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/,
                        B = /\.(mp4|m4s|m4v|m4a)$/i,
                        S = function() {
                            function h() {}
                            return h.findGroup = function(e, t) {
                                if (!e) return null;
                                for (var i = null,
                                r = 0; r < e.length; r++) {
                                    var n = e[r];
                                    n.id === t && (i = n)
                                }
                                return i
                            },
                            h.convertAVC1ToAVCOTI = function(e) {
                                var t, i = e.split(".");
                                return 2 < i.length ? (t = i.shift() + ".", t += parseInt(i.shift()).toString(16), t += ("000" + parseInt(i.shift()).toString(16)).substr( - 4)) : t = e,
                                t
                            },
                            h.resolve = function(e, t) {
                                return n.buildAbsoluteURL(t, e, {
                                    alwaysNormalize: !0
                                })
                            },
                            h.parseMasterPlaylist = function(e, t) {
                                var i, r = [];
                                function n(r, n) { ["video", "audio"].forEach(function(t) {
                                        var i = r.filter(function(e) {
                                            return function(e, t) {
                                                var i = _[t];
                                                return !! i && !0 === i[e.slice(0, 4)]
                                            } (e, t)
                                        });
                                        if (i.length) {
                                            var e = i.filter(function(e) {
                                                return 0 === e.lastIndexOf("avc1", 0) || 0 === e.lastIndexOf("mp4a", 0)
                                            });
                                            n[t + "Codec"] = 0 < e.length ? e[0] : i[0],
                                            r = r.filter(function(e) {
                                                return - 1 === i.indexOf(e)
                                            })
                                        }
                                    }),
                                    n.unknownCodecs = r
                                }
                                for (y.lastIndex = 0; null != (i = y.exec(e));) {
                                    var s = {},
                                    a = s.attrs = new L(i[1]);
                                    s.url = h.resolve(i[2], t);
                                    var o = a.decimalResolution("RESOLUTION");
                                    o && (s.width = o.width, s.height = o.height),
                                    s.bitrate = a.decimalInteger("AVERAGE-BANDWIDTH") || a.decimalInteger("BANDWIDTH"),
                                    s.name = a.NAME,
                                    n([].concat((a.CODECS || "").split(/[ ,]+/)), s),
                                    s.videoCodec && -1 !== s.videoCodec.indexOf("avc1") && (s.videoCodec = h.convertAVC1ToAVCOTI(s.videoCodec)),
                                    r.push(s)
                                }
                                return r
                            },
                            h.parseMasterPlaylistMedia = function(e, t, i, r) {
                                var n;
                                void 0 === r && (r = []);
                                var s = [],
                                a = 0;
                                for (b.lastIndex = 0; null !== (n = b.exec(e));) {
                                    var o = {},
                                    l = new L(n[1]);
                                    if (l.TYPE === i) {
                                        if (o.groupId = l["GROUP-ID"], o.name = l.NAME, o.type = i, o.
                                    default = "YES" === l.DEFAULT, o.autoselect = "YES" === l.AUTOSELECT, o.forced = "YES" === l.FORCED, l.URI && (o.url = h.resolve(l.URI, t)), o.lang = l.LANGUAGE, o.name || (o.name = o.lang), r.length) {
                                            var u = h.findGroup(r, o.groupId);
                                            o.audioCodec = u ? u.codec: r[0].codec
                                        }
                                        o.id = a++,
                                        s.push(o)
                                    }
                                }
                                return s
                            },
                            h.parseLevelPlaylist = function(e, t, i, r, n) {
                                var s, a, o, l, u = 0,
                                h = 0,
                                d = new C(t),
                                c = new x,
                                f = 0,
                                p = null,
                                v = new O,
                                m = null;
                                for (F.lastIndex = 0; null !== (s = F.exec(e));) {
                                    var _ = s[1];
                                    if (_) {
                                        v.duration = parseFloat(_);
                                        var g = (" " + s[2]).slice(1);
                                        v.title = g || null,
                                        v.tagList.push(g ? ["INF", _, g] : ["INF", _])
                                    } else if (s[3]) {
                                        if (Object(D.a)(v.duration)) {
                                            var y = u++;
                                            v.type = r,
                                            v.start = h,
                                            v.levelkey = c,
                                            v.sn = y,
                                            v.level = i,
                                            v.cc = f,
                                            v.urlId = n,
                                            v.baseurl = t,
                                            v.relurl = (" " + s[3]).slice(1),
                                            l = p,
                                            (o = v).rawProgramDateTime ? o.programDateTime = Date.parse(o.rawProgramDateTime) : l && l.programDateTime && (o.programDateTime = l.endProgramDateTime),
                                            Object(D.a)(o.programDateTime) || (o.programDateTime = null, o.rawProgramDateTime = null),
                                            d.fragments.push(v),
                                            h += (p = v).duration,
                                            v = new O
                                        }
                                    } else if (s[4]) {
                                        var b = (" " + s[4]).slice(1);
                                        p ? v.setByteRange(b, p) : v.setByteRange(b)
                                    } else if (s[5]) v.rawProgramDateTime = (" " + s[5]).slice(1),
                                    v.tagList.push(["PROGRAM-DATE-TIME", v.rawProgramDateTime]),
                                    null === m && (m = d.fragments.length);
                                    else {
                                        for (s = s[0].match(N), a = 1; a < s.length && void 0 === s[a]; a++);
                                        var S = (" " + s[a + 1]).slice(1),
                                        E = (" " + s[a + 2]).slice(1);
                                        switch (s[a]) {
                                        case "#":
                                            v.tagList.push(E ? [S, E] : [S]);
                                            break;
                                        case "PLAYLIST-TYPE":
                                            d.type = S.toUpperCase();
                                            break;
                                        case "MEDIA-SEQUENCE":
                                            u = d.startSN = parseInt(S);
                                            break;
                                        case "TARGETDURATION":
                                            d.targetduration = parseFloat(S);
                                            break;
                                        case "VERSION":
                                            d.version = parseInt(S);
                                            break;
                                        case "EXTM3U":
                                            break;
                                        case "ENDLIST":
                                            d.live = !1;
                                            break;
                                        case "DIS":
                                            f++,
                                            v.tagList.push(["DIS"]);
                                            break;
                                        case "DISCONTINUITY-SEQ":
                                            f = parseInt(S);
                                            break;
                                        case "KEY":
                                            var k = new L(S),
                                            w = k.enumeratedString("METHOD"),
                                            T = k.URI,
                                            A = k.hexadecimalInteger("IV");
                                            w && (c = new x, T && 0 <= ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(w) && (c.method = w, c.baseuri = t, c.reluri = T, c.key = null, c.iv = A));
                                            break;
                                        case "START":
                                            var R = new L(S).decimalFloatingPoint("TIME-OFFSET");
                                            Object(D.a)(R) && (d.startTimeOffset = R);
                                            break;
                                        case "MAP":
                                            var I = new L(S);
                                            v.relurl = I.URI,
                                            I.BYTERANGE && v.setByteRange(I.BYTERANGE),
                                            v.baseurl = t,
                                            v.level = i,
                                            v.type = r,
                                            v.sn = "initSegment",
                                            d.initSegment = v,
                                            (v = new O).rawProgramDateTime = d.initSegment.rawProgramDateTime;
                                            break;
                                        default:
                                            M.b.warn("line parsed but not handled: " + s)
                                        }
                                    }
                                }
                                return (v = p) && !v.relurl && (d.fragments.pop(), h -= v.duration),
                                d.totalduration = h,
                                d.averagetargetduration = h / d.fragments.length,
                                d.endSN = u - 1,
                                d.startCC = d.fragments[0] ? d.fragments[0].cc: 0,
                                d.endCC = f,
                                !d.initSegment && d.fragments.length && d.fragments.every(function(e) {
                                    return B.test(e.relurl)
                                }) && (M.b.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"), (v = new O).relurl = d.fragments[0].relurl, v.baseurl = t, v.level = i, v.type = r, v.sn = "initSegment", d.initSegment = v, d.needSidxRanges = !0),
                                m &&
                                function(e, t) {
                                    for (var i = e[t], r = t - 1; 0 <= r; r--) {
                                        var n = e[r];
                                        n.programDateTime = i.programDateTime - 1e3 * n.duration,
                                        i = n
                                    }
                                } (d.fragments, m),
                                d
                            },
                            h
                        } (),
                        E = window.performance,
                        k = function(i) {
                            var e, t;
                            function v(e) {
                                var t;
                                return (t = i.call(this, e, P.a.MANIFEST_LOADING, P.a.LEVEL_LOADING, P.a.AUDIO_TRACK_LOADING, P.a.SUBTITLE_TRACK_LOADING) || this).loaders = {},
                                t
                            }
                            t = i,
                            (e = v).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t,
                            v.canHaveQualityLevels = function(e) {
                                return e !== m.AUDIO_TRACK && e !== m.SUBTITLE_TRACK
                            },
                            v.mapContextToLevelType = function(e) {
                                switch (e.type) {
                                case m.AUDIO_TRACK:
                                    return s.AUDIO;
                                case m.SUBTITLE_TRACK:
                                    return s.SUBTITLE;
                                default:
                                    return s.MAIN
                                }
                            },
                            v.getResponseUrl = function(e, t) {
                                var i = e.url;
                                return void 0 !== i && 0 !== i.indexOf("data:") || (i = t.url),
                                i
                            };
                            var r = v.prototype;
                            return r.createInternalLoader = function(e) {
                                var t = this.hls.config,
                                i = t.pLoader,
                                r = t.loader,
                                n = new(i || r)(t);
                                return e.loader = n,
                                this.loaders[e.type] = n
                            },
                            r.getInternalLoader = function(e) {
                                return this.loaders[e.type]
                            },
                            r.resetInternalLoader = function(e) {
                                this.loaders[e] && delete this.loaders[e]
                            },
                            r.destroyInternalLoaders = function() {
                                for (var e in this.loaders) {
                                    var t = this.loaders[e];
                                    t && t.destroy(),
                                    this.resetInternalLoader(e)
                                }
                            },
                            r.destroy = function() {
                                this.destroyInternalLoaders(),
                                i.prototype.destroy.call(this)
                            },
                            r.onManifestLoading = function(e) {
                                this.load({
                                    url: e.url,
                                    type: m.MANIFEST,
                                    level: 0,
                                    id: null,
                                    responseType: "text"
                                })
                            },
                            r.onLevelLoading = function(e) {
                                this.load({
                                    url: e.url,
                                    type: m.LEVEL,
                                    level: e.level,
                                    id: e.id,
                                    responseType: "text"
                                })
                            },
                            r.onAudioTrackLoading = function(e) {
                                this.load({
                                    url: e.url,
                                    type: m.AUDIO_TRACK,
                                    level: null,
                                    id: e.id,
                                    responseType: "text"
                                })
                            },
                            r.onSubtitleTrackLoading = function(e) {
                                this.load({
                                    url: e.url,
                                    type: m.SUBTITLE_TRACK,
                                    level: null,
                                    id: e.id,
                                    responseType: "text"
                                })
                            },
                            r.load = function(e) {
                                var t = this.hls.config;
                                M.b.debug("Loading playlist of type " + e.type + ", level: " + e.level + ", id: " + e.id);
                                var i, r, n, s, a = this.getInternalLoader(e);
                                if (a) {
                                    var o = a.context;
                                    if (o && o.url === e.url) return M.b.trace("playlist request ongoing"),
                                    !1;
                                    M.b.warn("aborting previous loader for type: " + e.type),
                                    a.abort()
                                }
                                switch (e.type) {
                                case m.MANIFEST:
                                    i = t.manifestLoadingMaxRetry,
                                    r = t.manifestLoadingTimeOut,
                                    n = t.manifestLoadingRetryDelay,
                                    s = t.manifestLoadingMaxRetryTimeout;
                                    break;
                                case m.LEVEL:
                                    n = s = i = 0,
                                    r = t.levelLoadingTimeOut;
                                    break;
                                default:
                                    i = t.levelLoadingMaxRetry,
                                    r = t.levelLoadingTimeOut,
                                    n = t.levelLoadingRetryDelay,
                                    s = t.levelLoadingMaxRetryTimeout
                                }
                                a = this.createInternalLoader(e);
                                var l = {
                                    timeout: r,
                                    maxRetry: i,
                                    retryDelay: n,
                                    maxRetryDelay: s
                                },
                                u = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this)
                                };
                                return M.b.debug("Calling internal loader delegate for URL: " + e.url),
                                a.load(e, l, u),
                                !0
                            },
                            r.loadsuccess = function(e, t, i, r) {
                                if (void 0 === r && (r = null), i.isSidxRequest) return this._handleSidxRequest(e, i),
                                void this._handlePlaylistLoaded(e, t, i, r);
                                if (this.resetInternalLoader(i.type), "string" != typeof e.data) throw new Error('expected responseType of "text" for PlaylistLoader');
                                var n = e.data;
                                t.tload = E.now(),
                                0 === n.indexOf("#EXTM3U") ? 0 < n.indexOf("#EXTINF:") || 0 < n.indexOf("#EXT-X-TARGETDURATION:") ? this._handleTrackOrLevelPlaylist(e, t, i, r) : this._handleMasterPlaylist(e, t, i, r) : this._handleManifestParsingError(e, i, "no EXTM3U delimiter", r)
                            },
                            r.loaderror = function(e, t, i) {
                                void 0 === i && (i = null),
                                this._handleNetworkError(t, i, !1, e)
                            },
                            r.loadtimeout = function(e, t, i) {
                                void 0 === i && (i = null),
                                this._handleNetworkError(t, i, !0)
                            },
                            r._handleMasterPlaylist = function(e, t, i, r) {
                                var n = this.hls,
                                s = e.data,
                                a = v.getResponseUrl(e, i),
                                o = S.parseMasterPlaylist(s, a);
                                if (o.length) {
                                    var l = o.map(function(e) {
                                        return {
                                            id: e.attrs.AUDIO,
                                            codec: e.audioCodec
                                        }
                                    }),
                                    u = S.parseMasterPlaylistMedia(s, a, "AUDIO", l),
                                    h = S.parseMasterPlaylistMedia(s, a, "SUBTITLES");
                                    if (u.length) {
                                        var d = !1;
                                        u.forEach(function(e) {
                                            e.url || (d = !0)
                                        }),
                                        !1 === d && o[0].audioCodec && !o[0].attrs.AUDIO && (M.b.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"), u.unshift({
                                            type: "main",
                                            name: "main"
                                        }))
                                    }
                                    n.trigger(P.a.MANIFEST_LOADED, {
                                        levels: o,
                                        audioTracks: u,
                                        subtitles: h,
                                        url: a,
                                        stats: t,
                                        networkDetails: r
                                    })
                                } else this._handleManifestParsingError(e, i, "no level found in manifest", r)
                            },
                            r._handleTrackOrLevelPlaylist = function(e, t, i, r) {
                                var n = this.hls,
                                s = i.id,
                                a = i.level,
                                o = i.type,
                                l = v.getResponseUrl(e, i),
                                u = Object(D.a)(s) ? s: 0,
                                h = Object(D.a)(a) ? a: u,
                                d = v.mapContextToLevelType(i),
                                c = S.parseLevelPlaylist(e.data, l, h, d, u);
                                if (c.tload = t.tload, o === m.MANIFEST) {
                                    var f = {
                                        url: l,
                                        details: c
                                    };
                                    n.trigger(P.a.MANIFEST_LOADED, {
                                        levels: [f],
                                        audioTracks: [],
                                        url: l,
                                        stats: t,
                                        networkDetails: r
                                    })
                                }
                                if (t.tparsed = E.now(), c.needSidxRanges) {
                                    var p = c.initSegment.url;
                                    this.load({
                                        url: p,
                                        isSidxRequest: !0,
                                        type: o,
                                        level: a,
                                        levelDetails: c,
                                        id: s,
                                        rangeStart: 0,
                                        rangeEnd: 2048,
                                        responseType: "arraybuffer"
                                    })
                                } else i.levelDetails = c,
                                this._handlePlaylistLoaded(e, t, i, r)
                            },
                            r._handleSidxRequest = function(e, t) {
                                if ("string" == typeof e.data) throw new Error("sidx request must be made with responseType of array buffer");
                                var i = l.a.parseSegmentIndex(new Uint8Array(e.data));
                                if (i) {
                                    var r = i.references,
                                    n = t.levelDetails;
                                    r.forEach(function(e, t) {
                                        var i = e.info;
                                        if (n) {
                                            var r = n.fragments[t];
                                            0 === r.byteRange.length && r.setByteRange(String(1 + i.end - i.start) + "@" + String(i.start))
                                        }
                                    }),
                                    n && n.initSegment.setByteRange(String(i.moovEndOffset) + "@0")
                                }
                            },
                            r._handleManifestParsingError = function(e, t, i, r) {
                                this.hls.trigger(P.a.ERROR, {
                                    type: c.b.NETWORK_ERROR,
                                    details: c.a.MANIFEST_PARSING_ERROR,
                                    fatal: !0,
                                    url: e.url,
                                    reason: i,
                                    networkDetails: r
                                })
                            },
                            r._handleNetworkError = function(e, t, i, r) {
                                var n, s;
                                void 0 === i && (i = !1),
                                void 0 === r && (r = null),
                                M.b.info("A network error occured while loading a " + e.type + "-type playlist");
                                var a = this.getInternalLoader(e);
                                switch (e.type) {
                                case m.MANIFEST:
                                    n = i ? c.a.MANIFEST_LOAD_TIMEOUT: c.a.MANIFEST_LOAD_ERROR,
                                    s = !0;
                                    break;
                                case m.LEVEL:
                                    n = i ? c.a.LEVEL_LOAD_TIMEOUT: c.a.LEVEL_LOAD_ERROR,
                                    s = !1;
                                    break;
                                case m.AUDIO_TRACK:
                                    n = i ? c.a.AUDIO_TRACK_LOAD_TIMEOUT: c.a.AUDIO_TRACK_LOAD_ERROR,
                                    s = !1;
                                    break;
                                default:
                                    s = !1
                                }
                                a && (a.abort(), this.resetInternalLoader(e.type));
                                var o = {
                                    type: c.b.NETWORK_ERROR,
                                    details: n,
                                    fatal: s,
                                    url: e.url,
                                    loader: a,
                                    context: e,
                                    networkDetails: t
                                };
                                r && (o.response = r),
                                this.hls.trigger(P.a.ERROR, o)
                            },
                            r._handlePlaylistLoaded = function(e, t, i, r) {
                                var n = i.type,
                                s = i.level,
                                a = i.id,
                                o = i.levelDetails;
                                if (o && o.targetduration) if (v.canHaveQualityLevels(i.type)) this.hls.trigger(P.a.LEVEL_LOADED, {
                                    details: o,
                                    level: s || 0,
                                    id: a || 0,
                                    stats: t,
                                    networkDetails: r
                                });
                                else switch (n) {
                                case m.AUDIO_TRACK:
                                    this.hls.trigger(P.a.AUDIO_TRACK_LOADED, {
                                        details: o,
                                        id: a,
                                        stats: t,
                                        networkDetails: r
                                    });
                                    break;
                                case m.SUBTITLE_TRACK:
                                    this.hls.trigger(P.a.SUBTITLE_TRACK_LOADED, {
                                        details: o,
                                        id: a,
                                        stats: t,
                                        networkDetails: r
                                    })
                                } else this._handleManifestParsingError(e, i, "invalid target duration", r)
                            },
                            v
                        } (o),
                        w = function(r) {
                            var e, t;
                            function i(e) {
                                var t;
                                return (t = r.call(this, e, P.a.FRAG_LOADING) || this).loaders = {},
                                t
                            }
                            t = r,
                            (e = i).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = i.prototype;
                            return n.destroy = function() {
                                var e = this.loaders;
                                for (var t in e) {
                                    var i = e[t];
                                    i && i.destroy()
                                }
                                this.loaders = {},
                                r.prototype.destroy.call(this)
                            },
                            n.onFragLoading = function(e) {
                                var t = e.frag,
                                i = t.type,
                                r = this.loaders,
                                n = this.hls.config,
                                s = n.fLoader,
                                a = n.loader;
                                t.loaded = 0;
                                var o, l, u, h = r[i];
                                h && (M.b.warn("abort previous fragment loader for type: " + i), h.abort()),
                                h = r[i] = t.loader = n.fLoader ? new s(n) : new a(n),
                                o = {
                                    url: t.url,
                                    frag: t,
                                    responseType: "arraybuffer",
                                    progressData: !1
                                };
                                var d = t.byteRangeStartOffset,
                                c = t.byteRangeEndOffset;
                                Object(D.a)(d) && Object(D.a)(c) && (o.rangeStart = d, o.rangeEnd = c),
                                l = {
                                    timeout: n.fragLoadingTimeOut,
                                    maxRetry: 0,
                                    retryDelay: 0,
                                    maxRetryDelay: n.fragLoadingMaxRetryTimeout
                                },
                                u = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this),
                                    onProgress: this.loadprogress.bind(this)
                                },
                                h.load(o, l, u)
                            },
                            n.loadsuccess = function(e, t, i, r) {
                                void 0 === r && (r = null);
                                var n = e.data,
                                s = i.frag;
                                s.loader = void 0,
                                this.loaders[s.type] = void 0,
                                this.hls.trigger(P.a.FRAG_LOADED, {
                                    payload: n,
                                    frag: s,
                                    stats: t,
                                    networkDetails: r
                                })
                            },
                            n.loaderror = function(e, t, i) {
                                void 0 === i && (i = null);
                                var r = t.frag,
                                n = r.loader;
                                n && n.abort(),
                                this.loaders[r.type] = void 0,
                                this.hls.trigger(P.a.ERROR, {
                                    type: c.b.NETWORK_ERROR,
                                    details: c.a.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: t.frag,
                                    response: e,
                                    networkDetails: i
                                })
                            },
                            n.loadtimeout = function(e, t, i) {
                                void 0 === i && (i = null);
                                var r = t.frag,
                                n = r.loader;
                                n && n.abort(),
                                this.loaders[r.type] = void 0,
                                this.hls.trigger(P.a.ERROR, {
                                    type: c.b.NETWORK_ERROR,
                                    details: c.a.FRAG_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: t.frag,
                                    networkDetails: i
                                })
                            },
                            n.loadprogress = function(e, t, i, r) {
                                void 0 === r && (r = null);
                                var n = t.frag;
                                n.loaded = e.loaded,
                                this.hls.trigger(P.a.FRAG_LOAD_PROGRESS, {
                                    frag: n,
                                    stats: e,
                                    networkDetails: r
                                })
                            },
                            i
                        } (o),
                        T = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.KEY_LOADING) || this).loaders = {},
                                t.decryptkey = null,
                                t.decrypturl = null,
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.destroy = function() {
                                for (var e in this.loaders) {
                                    var t = this.loaders[e];
                                    t && t.destroy()
                                }
                                this.loaders = {},
                                o.prototype.destroy.call(this)
                            },
                            n.onKeyLoading = function(e) {
                                var t = e.frag,
                                i = t.type,
                                r = this.loaders[i],
                                n = t.decryptdata,
                                s = n.uri;
                                if (s !== this.decrypturl || null === this.decryptkey) {
                                    var a, o, l, u = this.hls.config;
                                    r && (M.b.warn("abort previous key loader for type:" + i), r.abort()),
                                    t.loader = this.loaders[i] = new u.loader(u),
                                    this.decrypturl = s,
                                    this.decryptkey = null,
                                    a = {
                                        url: s,
                                        frag: t,
                                        responseType: "arraybuffer"
                                    },
                                    o = {
                                        timeout: u.fragLoadingTimeOut,
                                        maxRetry: 0,
                                        retryDelay: u.fragLoadingRetryDelay,
                                        maxRetryDelay: u.fragLoadingMaxRetryTimeout
                                    },
                                    l = {
                                        onSuccess: this.loadsuccess.bind(this),
                                        onError: this.loaderror.bind(this),
                                        onTimeout: this.loadtimeout.bind(this)
                                    },
                                    t.loader.load(a, o, l)
                                } else this.decryptkey && (n.key = this.decryptkey, this.hls.trigger(P.a.KEY_LOADED, {
                                    frag: t
                                }))
                            },
                            n.loadsuccess = function(e, t, i) {
                                var r = i.frag;
                                this.decryptkey = r.decryptdata.key = new Uint8Array(e.data),
                                r.loader = void 0,
                                this.loaders[r.type] = void 0,
                                this.hls.trigger(P.a.KEY_LOADED, {
                                    frag: r
                                })
                            },
                            n.loaderror = function(e, t) {
                                var i = t.frag,
                                r = i.loader;
                                r && r.abort(),
                                this.loaders[t.type] = void 0,
                                this.hls.trigger(P.a.ERROR, {
                                    type: c.b.NETWORK_ERROR,
                                    details: c.a.KEY_LOAD_ERROR,
                                    fatal: !1,
                                    frag: i,
                                    response: e
                                })
                            },
                            n.loadtimeout = function(e, t) {
                                var i = t.frag,
                                r = i.loader;
                                r && r.abort(),
                                this.loaders[t.type] = void 0,
                                this.hls.trigger(P.a.ERROR, {
                                    type: c.b.NETWORK_ERROR,
                                    details: c.a.KEY_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: i
                                })
                            },
                            r
                        } (o),
                        U = "NOT_LOADED",
                        A = "PARTIAL",
                        R = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.BUFFER_APPENDED, P.a.FRAG_BUFFERED, P.a.FRAG_LOADED) || this).bufferPadding = .2,
                                t.fragments = Object.create(null),
                                t.timeRanges = Object.create(null),
                                t.config = e.config,
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.destroy = function() {
                                this.fragments = Object.create(null),
                                this.timeRanges = Object.create(null),
                                this.config = null,
                                o.prototype.destroy.call(this),
                                i.prototype.destroy.call(this)
                            },
                            n.getBufferedFrag = function(r, n) {
                                var s = this.fragments,
                                e = Object.keys(s).filter(function(e) {
                                    var t = s[e];
                                    if (t.body.type !== n) return ! 1;
                                    if (!t.buffered) return ! 1;
                                    var i = t.body;
                                    return i.startPTS <= r && r <= i.endPTS
                                });
                                if (0 === e.length) return null;
                                var t = e.pop();
                                return s[t].body
                            },
                            n.detectEvictedFragments = function(n, s) {
                                var a, o, l = this;
                                Object.keys(this.fragments).forEach(function(e) {
                                    var t = l.fragments[e];
                                    if (!0 === t.buffered) {
                                        var i = t.range[n];
                                        if (i) {
                                            a = i.time;
                                            for (var r = 0; r < a.length; r++) if (o = a[r], !1 === l.isTimeBuffered(o.startPTS, o.endPTS, s)) {
                                                l.removeFragment(t.body);
                                                break
                                            }
                                        }
                                    }
                                })
                            },
                            n.detectPartialFragments = function(i) {
                                var r = this,
                                e = this.getFragmentKey(i),
                                n = this.fragments[e];
                                n && (n.buffered = !0, Object.keys(this.timeRanges).forEach(function(e) {
                                    if (i.hasElementaryStream(e)) {
                                        var t = r.timeRanges[e];
                                        n.range[e] = r.getBufferedTimes(i.startPTS, i.endPTS, t)
                                    }
                                }))
                            },
                            n.getBufferedTimes = function(e, t, i) {
                                for (var r, n, s = [], a = !1, o = 0; o < i.length; o++) {
                                    if (r = i.start(o) - this.bufferPadding, n = i.end(o) + this.bufferPadding, r <= e && t <= n) {
                                        s.push({
                                            startPTS: Math.max(e, i.start(o)),
                                            endPTS: Math.min(t, i.end(o))
                                        });
                                        break
                                    }
                                    if (e < n && r < t) s.push({
                                        startPTS: Math.max(e, i.start(o)),
                                        endPTS: Math.min(t, i.end(o))
                                    }),
                                    a = !0;
                                    else if (t <= r) break
                                }
                                return {
                                    time: s,
                                    partial: a
                                }
                            },
                            n.getFragmentKey = function(e) {
                                return e.type + "_" + e.level + "_" + e.urlId + "_" + e.sn
                            },
                            n.getPartialFragment = function(i) {
                                var r, n, s, a = this,
                                o = null,
                                l = 0;
                                return Object.keys(this.fragments).forEach(function(e) {
                                    var t = a.fragments[e];
                                    a.isPartial(t) && (n = t.body.startPTS - a.bufferPadding, s = t.body.endPTS + a.bufferPadding, n <= i && i <= s && (r = Math.min(i - n, s - i), l <= r && (o = t.body, l = r)))
                                }),
                                o
                            },
                            n.getState = function(e) {
                                var t = this.getFragmentKey(e),
                                i = this.fragments[t],
                                r = U;
                                return void 0 !== i && (r = i.buffered ? !0 === this.isPartial(i) ? A: "OK": "APPENDING"),
                                r
                            },
                            n.isPartial = function(e) {
                                return ! 0 === e.buffered && (void 0 !== e.range.video && !0 === e.range.video.partial || void 0 !== e.range.audio && !0 === e.range.audio.partial)
                            },
                            n.isTimeBuffered = function(e, t, i) {
                                for (var r, n, s = 0; s < i.length; s++) {
                                    if (r = i.start(s) - this.bufferPadding, n = i.end(s) + this.bufferPadding, r <= e && t <= n) return ! 0;
                                    if (t <= r) return ! 1
                                }
                                return ! 1
                            },
                            n.onFragLoaded = function(e) {
                                var t = e.frag;
                                Object(D.a)(t.sn) && !t.bitrateTest && (this.fragments[this.getFragmentKey(t)] = {
                                    body: t,
                                    range: Object.create(null),
                                    buffered: !1
                                })
                            },
                            n.onBufferAppended = function(e) {
                                var i = this;
                                this.timeRanges = e.timeRanges,
                                Object.keys(this.timeRanges).forEach(function(e) {
                                    var t = i.timeRanges[e];
                                    i.detectEvictedFragments(e, t)
                                })
                            },
                            n.onFragBuffered = function(e) {
                                this.detectPartialFragments(e.frag)
                            },
                            n.hasFragment = function(e) {
                                var t = this.getFragmentKey(e);
                                return void 0 !== this.fragments[t]
                            },
                            n.removeFragment = function(e) {
                                var t = this.getFragmentKey(e);
                                delete this.fragments[t]
                            },
                            n.removeAllFragments = function() {
                                this.fragments = Object.create(null)
                            },
                            r
                        } (o),
                        j = {
                            search: function(e, t) {
                                for (var i = 0,
                                r = e.length - 1,
                                n = null,
                                s = null; i <= r;) {
                                    var a = t(s = e[n = (i + r) / 2 | 0]);
                                    if (0 < a) i = n + 1;
                                    else {
                                        if (! (a < 0)) return s;
                                        r = n - 1
                                    }
                                }
                                return null
                            }
                        },
                        z = function() {
                            function e() {}
                            return e.isBuffered = function(e, t) {
                                try {
                                    if (e) for (var i = e.buffered,
                                    r = 0; r < i.length; r++) if (t >= i.start(r) && t <= i.end(r)) return ! 0
                                } catch(e) {}
                                return ! 1
                            },
                            e.bufferInfo = function(e, t, i) {
                                try {
                                    if (e) {
                                        var r, n = e.buffered,
                                        s = [];
                                        for (r = 0; r < n.length; r++) s.push({
                                            start: n.start(r),
                                            end: n.end(r)
                                        });
                                        return this.bufferedInfo(s, t, i)
                                    }
                                } catch(e) {}
                                return {
                                    len: 0,
                                    start: t,
                                    end: t,
                                    nextStart: void 0
                                }
                            },
                            e.bufferedInfo = function(e, t, i) {
                                e.sort(function(e, t) {
                                    var i = e.start - t.start;
                                    return i || t.end - e.end
                                });
                                for (var r = [], n = 0; n < e.length; n++) {
                                    var s = r.length;
                                    if (s) {
                                        var a = r[s - 1].end;
                                        e[n].start - a < i ? e[n].end > a && (r[s - 1].end = e[n].end) : r.push(e[n])
                                    } else r.push(e[n])
                                }
                                for (var o, l = 0,
                                u = t,
                                h = t,
                                d = 0; d < r.length; d++) {
                                    var c = r[d].start,
                                    f = r[d].end;
                                    if (c <= t + i && t < f) u = c,
                                    l = (h = f) - t;
                                    else if (t + i < c) {
                                        o = c;
                                        break
                                    }
                                }
                                return {
                                    len: l,
                                    start: u,
                                    end: h,
                                    nextStart: o
                                }
                            },
                            e
                        } (),
                        I = i(8),
                        G = i(11),
                        V = i(9);
                        function W() {
                            return MediaSource || window.WebKitMediaSource
                        }
                        var H = i(5),
                        K = function(e) {
                            var t, i;
                            function r() {
                                return e.apply(this, arguments) || this
                            }
                            return i = e,
                            (t = r).prototype = Object.create(i.prototype),
                            (t.prototype.constructor = t).__proto__ = i,
                            r.prototype.trigger = function(e) {
                                for (var t = arguments.length,
                                i = new Array(1 < t ? t - 1 : 0), r = 1; r < t; r++) i[r - 1] = arguments[r];
                                this.emit.apply(this, [e, e].concat(i))
                            },
                            r
                        } (I.EventEmitter),
                        q = Object(H.a)(),
                        Y = W(),
                        Z = function() {
                            function e(i, e) {
                                var r = this;
                                this.hls = i,
                                this.id = e;
                                var t = this.observer = new K,
                                n = i.config,
                                s = function(e, t) { (t = t || {}).frag = r.frag,
                                    t.id = r.id,
                                    i.trigger(e, t)
                                };
                                t.on(P.a.FRAG_DECRYPTED, s),
                                t.on(P.a.FRAG_PARSING_INIT_SEGMENT, s),
                                t.on(P.a.FRAG_PARSING_DATA, s),
                                t.on(P.a.FRAG_PARSED, s),
                                t.on(P.a.ERROR, s),
                                t.on(P.a.FRAG_PARSING_METADATA, s),
                                t.on(P.a.FRAG_PARSING_USERDATA, s),
                                t.on(P.a.INIT_PTS_FOUND, s);
                                var a = {
                                    mp4: Y.isTypeSupported("video/mp4"),
                                    mpeg: Y.isTypeSupported("audio/mpeg"),
                                    mp3: Y.isTypeSupported('audio/mp4; codecs="mp3"')
                                },
                                o = navigator.vendor;
                                if (n.enableWorker && "undefined" != typeof Worker) {
                                    var l;
                                    M.b.log("demuxing in webworker");
                                    try {
                                        l = this.w = G(12),
                                        this.onwmsg = this.onWorkerMessage.bind(this),
                                        l.addEventListener("message", this.onwmsg),
                                        l.onerror = function(e) {
                                            i.trigger(P.a.ERROR, {
                                                type: c.b.OTHER_ERROR,
                                                details: c.a.INTERNAL_EXCEPTION,
                                                fatal: !0,
                                                event: "demuxerWorker",
                                                err: {
                                                    message: e.message + " (" + e.filename + ":" + e.lineno + ")"
                                                }
                                            })
                                        },
                                        l.postMessage({
                                            cmd: "init",
                                            typeSupported: a,
                                            vendor: o,
                                            id: e,
                                            config: JSON.stringify(n)
                                        })
                                    } catch(i) {
                                        M.b.warn("Error in worker:", i),
                                        M.b.error("Error while initializing DemuxerWorker, fallback on DemuxerInline"),
                                        l && q.URL.revokeObjectURL(l.objectURL),
                                        this.demuxer = new V.a(t, a, n, o),
                                        this.w = void 0
                                    }
                                } else this.demuxer = new V.a(t, a, n, o)
                            }
                            var t = e.prototype;
                            return t.destroy = function() {
                                var e = this.w;
                                if (e) e.removeEventListener("message", this.onwmsg),
                                e.terminate(),
                                this.w = null;
                                else {
                                    var t = this.demuxer;
                                    t && (t.destroy(), this.demuxer = null)
                                }
                                var i = this.observer;
                                i && (i.removeAllListeners(), this.observer = null)
                            },
                            t.push = function(e, t, i, r, n, s, a, o) {
                                var l = this.w,
                                u = Object(D.a)(n.startPTS) ? n.startPTS: n.start,
                                h = n.decryptdata,
                                d = this.frag,
                                c = !(d && n.cc === d.cc),
                                f = !(d && n.level === d.level),
                                p = d && n.sn === d.sn + 1,
                                v = !f && p;
                                if (c && M.b.log(this.id + ":discontinuity detected"), f && M.b.log(this.id + ":switch detected"), this.frag = n, l) l.postMessage({
                                    cmd: "demux",
                                    data: e,
                                    decryptdata: h,
                                    initSegment: t,
                                    audioCodec: i,
                                    videoCodec: r,
                                    timeOffset: u,
                                    discontinuity: c,
                                    trackSwitch: f,
                                    contiguous: v,
                                    duration: s,
                                    accurateTimeOffset: a,
                                    defaultInitPTS: o
                                },
                                e instanceof ArrayBuffer ? [e] : []);
                                else {
                                    var m = this.demuxer;
                                    m && m.push(e, h, t, i, r, u, c, f, v, s, a, o)
                                }
                            },
                            t.onWorkerMessage = function(e) {
                                var t = e.data,
                                i = this.hls;
                                switch (t.event) {
                                case "init":
                                    q.URL.revokeObjectURL(this.w.objectURL);
                                    break;
                                case P.a.FRAG_PARSING_DATA:
                                    t.data.data1 = new Uint8Array(t.data1),
                                    t.data2 && (t.data.data2 = new Uint8Array(t.data2));
                                default:
                                    t.data = t.data || {},
                                    t.data.frag = this.frag,
                                    t.data.id = this.id,
                                    i.trigger(t.event, t.data)
                                }
                            },
                            e
                        } ();
                        function X(e, t, i) {
                            switch (t) {
                            case "audio":
                                e.audioGroupIds || (e.audioGroupIds = []),
                                e.audioGroupIds.push(i);
                                break;
                            case "text":
                                e.textGroupIds || (e.textGroupIds = []),
                                e.textGroupIds.push(i)
                            }
                        }
                        function J(e, t, i) {
                            var r = e[t],
                            n = e[i],
                            s = n.startPTS;
                            Object(D.a)(s) ? t < i ? (r.duration = s - r.start, r.duration < 0 && M.b.warn("negative duration computed for frag " + r.sn + ",level " + r.level + ", there should be some duration drift between playlist and fragment!")) : (n.duration = r.start - s, n.duration < 0 && M.b.warn("negative duration computed for frag " + n.sn + ",level " + n.level + ", there should be some duration drift between playlist and fragment!")) : n.start = t < i ? r.start + r.duration: Math.max(r.start - n.duration, 0)
                        }
                        function $(e, t, i, r, n, s) {
                            var a = i;
                            if (Object(D.a)(t.startPTS)) {
                                var o = Math.abs(t.startPTS - i);
                                Object(D.a)(t.deltaPTS) ? t.deltaPTS = Math.max(o, t.deltaPTS) : t.deltaPTS = o,
                                a = Math.max(i, t.startPTS),
                                i = Math.min(i, t.startPTS),
                                r = Math.max(r, t.endPTS),
                                n = Math.min(n, t.startDTS),
                                s = Math.max(s, t.endDTS)
                            }
                            var l = i - t.start;
                            t.start = t.startPTS = i,
                            t.maxStartPTS = a,
                            t.endPTS = r,
                            t.startDTS = n,
                            t.endDTS = s,
                            t.duration = r - i;
                            var u, h, d, c = t.sn;
                            if (!e || c < e.startSN || c > e.endSN) return 0;
                            for (u = c - e.startSN, (h = e.fragments)[u] = t, d = u; 0 < d; d--) J(h, d, d - 1);
                            for (d = u; d < h.length - 1; d++) J(h, d, d + 1);
                            return e.PTSKnown = !0,
                            l
                        }
                        function Q(e, i) {
                            i.initSegment && e.initSegment && (i.initSegment = e.initSegment);
                            var r, n = 0;
                            if (ee(e, i,
                            function(e, t) {
                                n = e.cc - t.cc,
                                Object(D.a)(e.startPTS) && (t.start = t.startPTS = e.startPTS, t.endPTS = e.endPTS, t.duration = e.duration, t.backtracked = e.backtracked, t.dropped = e.dropped, r = t),
                                i.PTSKnown = !0
                            }), i.PTSKnown) {
                                if (n) {
                                    M.b.log("discontinuity sliding from playlist, take drift into account");
                                    for (var t = i.fragments,
                                    s = 0; s < t.length; s++) t[s].cc += n
                                }
                                r ? $(i, r, r.startPTS, r.endPTS, r.startDTS, r.endDTS) : function(e, t) {
                                    var i = t.startSN - e.startSN,
                                    r = e.fragments,
                                    n = t.fragments;
                                    if (! (i < 0 || i > r.length)) for (var s = 0; s < n.length; s++) n[s].start += r[i].start
                                } (e, i),
                                i.PTSKnown = e.PTSKnown
                            }
                        }
                        function ee(e, t, i) {
                            if (e && t) for (var r = Math.max(e.startSN, t.startSN) - t.startSN, n = Math.min(e.endSN, t.endSN) - t.startSN, s = t.startSN - e.startSN, a = r; a <= n; a++) {
                                var o = e.fragments[s + a],
                                l = t.fragments[a];
                                if (!o || !l) break;
                                i(o, l, a)
                            }
                        }
                        function te(e, t, i) {
                            var r = 1e3 * (t.averagetargetduration ? t.averagetargetduration: t.targetduration),
                            n = r / 2;
                            return e && t.endSN === e.endSN && (r = n),
                            i && (r = Math.max(n, r - (window.performance.now() - i))),
                            Math.round(r)
                        }
                        var ie = {
                            toString: function(e) {
                                for (var t = "",
                                i = e.length,
                                r = 0; r < i; r++) t += "[" + e.start(r).toFixed(3) + "," + e.end(r).toFixed(3) + "]";
                                return t
                            }
                        };
                        function re(i, e) {
                            e.fragments.forEach(function(e) {
                                if (e) {
                                    var t = e.start + i;
                                    e.start = e.startPTS = t,
                                    e.endPTS = t + e.duration
                                }
                            }),
                            e.PTSKnown = !0
                        }
                        function ne(e, t, i) { !
                            function(e, t, i) {
                                if (function(e, t, i) {
                                    var r = !1;
                                    return t && t.details && i && (i.endCC > i.startCC || e && e.cc < i.startCC) && (r = !0),
                                    r
                                } (e, i, t)) {
                                    var r = function(e, t) {
                                        var i = e.fragments,
                                        r = t.fragments;
                                        if (r.length && i.length) {
                                            var n = function(e, t) {
                                                for (var i = null,
                                                r = 0; r < e.length; r += 1) {
                                                    var n = e[r];
                                                    if (n && n.cc === t) {
                                                        i = n;
                                                        break
                                                    }
                                                }
                                                return i
                                            } (i, r[0].cc);
                                            if (n && (!n || n.startPTS)) return n;
                                            M.b.log("No frag in previous level to align on")
                                        } else M.b.log("No fragments to align")
                                    } (i.details, t);
                                    r && (M.b.log("Adjusting PTS using last level due to CC increase within current level"), re(r.start, t))
                                }
                            } (e, i, t),
                            !i.PTSKnown && t &&
                            function(e, t) {
                                if (t && t.fragments.length) {
                                    if (!e.hasProgramDateTime || !t.hasProgramDateTime) return;
                                    var i = t.fragments[0].programDateTime,
                                    r = e.fragments[0].programDateTime,
                                    n = (r - i) / 1e3 + t.fragments[0].start;
                                    Object(D.a)(n) && (M.b.log("adjusting PTS using programDateTime delta, sliding:" + n.toFixed(3)), re(n, e))
                                }
                            } (i, t.details)
                        }
                        function se(e, t, i) {
                            if (!Array.isArray(e) || !e.length || !Object(D.a)(t)) return null;
                            if (t < e[0].programDateTime) return null;
                            if (t >= e[e.length - 1].endProgramDateTime) return null;
                            i = i || 0;
                            for (var r = 0; r < e.length; ++r) {
                                var n = e[r];
                                if (s = t, a = i, o = n, l = 1e3 * Math.min(a, o.duration + (o.deltaPTS ? o.deltaPTS: 0)), o.endProgramDateTime - l > s) return n
                            }
                            var s, a, o, l;
                            return null
                        }
                        function ae(e, t, i, r) {
                            void 0 === i && (i = 0),
                            void 0 === r && (r = 0);
                            var n = e ? t[e.sn - t[0].sn + 1] : null;
                            return n && !oe(i, r, n) ? n: j.search(t, oe.bind(null, i, r))
                        }
                        function oe(e, t, i) {
                            void 0 === e && (e = 0),
                            void 0 === t && (t = 0);
                            var r = Math.min(t, i.duration + (i.deltaPTS ? i.deltaPTS: 0));
                            return i.start + i.duration - r <= e ? 1 : i.start - r > e && i.start ? -1 : 0
                        }
                        var le = function() {
                            function e(e, t, i, r) {
                                this.config = e,
                                this.media = t,
                                this.fragmentTracker = i,
                                this.hls = r,
                                this.stallReported = !1
                            }
                            var t = e.prototype;
                            return t.poll = function(e, t) {
                                var i = this.config,
                                r = this.media,
                                n = r.currentTime,
                                s = window.performance.now();
                                if (n !== e) return this.stallReported && (M.b.warn("playback not stuck anymore @" + n + ", after " + Math.round(s - this.stalled) + "ms"), this.stallReported = !1),
                                this.stalled = null,
                                void(this.nudgeRetry = 0);
                                if (! (r.ended || !r.buffered.length || 2 < r.readyState || r.seeking && z.isBuffered(r, n))) {
                                    var a = s - this.stalled,
                                    o = z.bufferInfo(r, n, i.maxBufferHole);
                                    this.stalled ? (1e3 <= a && this._reportStall(o.len), this._tryFixBufferStall(o, a)) : this.stalled = s
                                }
                            },
                            t._tryFixBufferStall = function(e, t) {
                                var i = this.config,
                                r = this.fragmentTracker,
                                n = this.media.currentTime,
                                s = r.getPartialFragment(n);
                                s && this._trySkipBufferHole(s),
                                .5 < e.len && t > 1e3 * i.highBufferWatchdogPeriod && (this.stalled = null, this._tryNudgeBuffer())
                            },
                            t._reportStall = function(e) {
                                var t = this.hls,
                                i = this.media;
                                this.stallReported || (this.stallReported = !0, M.b.warn("Playback stalling at @" + i.currentTime + " due to low buffer"), t.trigger(P.a.ERROR, {
                                    type: c.b.MEDIA_ERROR,
                                    details: c.a.BUFFER_STALLED_ERROR,
                                    fatal: !1,
                                    buffer: e
                                }))
                            },
                            t._trySkipBufferHole = function(e) {
                                for (var t = this.hls,
                                i = this.media,
                                r = i.currentTime,
                                n = 0,
                                s = 0; s < i.buffered.length; s++) {
                                    var a = i.buffered.start(s);
                                    if (n <= r && r < a) return i.currentTime = Math.max(a, i.currentTime + .1),
                                    M.b.warn("skipping hole, adjusting currentTime from " + r + " to " + i.currentTime),
                                    this.stalled = null,
                                    void t.trigger(P.a.ERROR, {
                                        type: c.b.MEDIA_ERROR,
                                        details: c.a.BUFFER_SEEK_OVER_HOLE,
                                        fatal: !1,
                                        reason: "fragment loaded with buffer holes, seeking from " + r + " to " + i.currentTime,
                                        frag: e
                                    });
                                    n = i.buffered.end(s)
                                }
                            },
                            t._tryNudgeBuffer = function() {
                                var e = this.config,
                                t = this.hls,
                                i = this.media,
                                r = i.currentTime,
                                n = (this.nudgeRetry || 0) + 1;
                                if ((this.nudgeRetry = n) < e.nudgeMaxRetry) {
                                    var s = r + n * e.nudgeOffset;
                                    M.b.log("adjust currentTime from " + r + " to " + s),
                                    i.currentTime = s,
                                    t.trigger(P.a.ERROR, {
                                        type: c.b.MEDIA_ERROR,
                                        details: c.a.BUFFER_NUDGE_ON_STALL,
                                        fatal: !1
                                    })
                                } else M.b.error("still stuck in high buffer @" + r + " after " + e.nudgeMaxRetry + ", raise fatal error"),
                                t.trigger(P.a.ERROR, {
                                    type: c.b.MEDIA_ERROR,
                                    details: c.a.BUFFER_STALLED_ERROR,
                                    fatal: !0
                                })
                            },
                            e
                        } ();
                        function ue(e) {
                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }
                        var he = function(s) {
                            var e, t;
                            function i(e) {
                                for (var t, i = arguments.length,
                                r = new Array(1 < i ? i - 1 : 0), n = 1; n < i; n++) r[n - 1] = arguments[n];
                                return (t = s.call.apply(s, [this, e].concat(r)) || this)._tickInterval = null,
                                t._tickTimer = null,
                                t._tickCallCount = 0,
                                t._boundTick = t.tick.bind(ue(ue(t))),
                                t
                            }
                            t = s,
                            (e = i).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var r = i.prototype;
                            return r.onHandlerDestroying = function() {
                                this.clearNextTick(),
                                this.clearInterval()
                            },
                            r.hasInterval = function() {
                                return !! this._tickInterval
                            },
                            r.hasNextTick = function() {
                                return !! this._tickTimer
                            },
                            r.setInterval = function(t) {
                                function e(e) {
                                    return t.apply(this, arguments)
                                }
                                return e.toString = function() {
                                    return t.toString()
                                },
                                e
                            } (function(e) {
                                return ! this._tickInterval && (this._tickInterval = setInterval(this._boundTick, e), !0)
                            }),
                            r.clearInterval = function(e) {
                                function t() {
                                    return e.apply(this, arguments)
                                }
                                return t.toString = function() {
                                    return e.toString()
                                },
                                t
                            } (function() {
                                return ! (!this._tickInterval || (clearInterval(this._tickInterval), this._tickInterval = null))
                            }),
                            r.clearNextTick = function() {
                                return ! (!this._tickTimer || (clearTimeout(this._tickTimer), this._tickTimer = null))
                            },
                            r.tick = function() {
                                this._tickCallCount++,
                                1 === this._tickCallCount && (this.doTick(), 1 < this._tickCallCount && (this.clearNextTick(), this._tickTimer = setTimeout(this._boundTick, 0)), this._tickCallCount = 0)
                            },
                            r.doTick = function() {},
                            i
                        } (o),
                        de = {
                            STOPPED: "STOPPED",
                            STARTING: "STARTING",
                            IDLE: "IDLE",
                            PAUSED: "PAUSED",
                            KEY_LOADING: "KEY_LOADING",
                            FRAG_LOADING: "FRAG_LOADING",
                            FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                            WAITING_TRACK: "WAITING_TRACK",
                            PARSING: "PARSING",
                            PARSED: "PARSED",
                            BUFFER_FLUSHING: "BUFFER_FLUSHING",
                            ENDED: "ENDED",
                            ERROR: "ERROR",
                            WAITING_INIT_PTS: "WAITING_INIT_PTS",
                            WAITING_LEVEL: "WAITING_LEVEL"
                        },
                        ce = function(e) {
                            var t, i;
                            function r() {
                                return e.apply(this, arguments) || this
                            }
                            i = e,
                            (t = r).prototype = Object.create(i.prototype),
                            (t.prototype.constructor = t).__proto__ = i;
                            var n = r.prototype;
                            return n.doTick = function() {},
                            n.startLoad = function() {},
                            n.stopLoad = function() {
                                var e = this.fragCurrent;
                                e && (e.loader && e.loader.abort(), this.fragmentTracker.removeFragment(e)),
                                this.demuxer && (this.demuxer.destroy(), this.demuxer = null),
                                this.fragCurrent = null,
                                this.fragPrevious = null,
                                this.clearInterval(),
                                this.clearNextTick(),
                                this.state = de.STOPPED
                            },
                            n._streamEnded = function(e, t) {
                                var i = this.fragCurrent,
                                r = this.fragmentTracker;
                                if (t.live || !i || i.backtracked || i.sn !== t.endSN || e.nextStart) return ! 1;
                                var n = r.getState(i);
                                return n === A || "OK" === n
                            },
                            n.onMediaSeeking = function() {
                                var e = this.config,
                                t = this.media,
                                i = this.mediaBuffer,
                                r = this.state,
                                n = t ? t.currentTime: null,
                                s = z.bufferInfo(i || t, n, this.config.maxBufferHole);
                                if (Object(D.a)(n) && M.b.log("media seeking to " + n.toFixed(3)), r === de.FRAG_LOADING) {
                                    var a = this.fragCurrent;
                                    if (0 === s.len && a) {
                                        var o = e.maxFragLookUpTolerance,
                                        l = a.start - o,
                                        u = a.start + a.duration + o;
                                        n < l || u < n ? (a.loader && (M.b.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), a.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.state = de.IDLE) : M.b.log("seeking outside of buffer but within currently loaded fragment range")
                                    }
                                } else r === de.ENDED && (0 === s.len && (this.fragPrevious = null, this.fragCurrent = null), this.state = de.IDLE);
                                t && (this.lastCurrentTime = n),
                                this.loadedmetadata || (this.nextLoadPosition = this.startPosition = n),
                                this.tick()
                            },
                            n.onMediaEnded = function() {
                                this.startPosition = this.lastCurrentTime = 0
                            },
                            n.onHandlerDestroying = function() {
                                this.stopLoad(),
                                e.prototype.onHandlerDestroying.call(this)
                            },
                            n.onHandlerDestroyed = function() {
                                this.state = de.STOPPED,
                                this.fragmentTracker = null
                            },
                            r
                        } (he);
                        function fe(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        var pe = function(r) {
                            var e, t;
                            function i(e, t) {
                                var i;
                                return (i = r.call(this, e, P.a.MEDIA_ATTACHED, P.a.MEDIA_DETACHING, P.a.MANIFEST_LOADING, P.a.MANIFEST_PARSED, P.a.LEVEL_LOADED, P.a.KEY_LOADED, P.a.FRAG_LOADED, P.a.FRAG_LOAD_EMERGENCY_ABORTED, P.a.FRAG_PARSING_INIT_SEGMENT, P.a.FRAG_PARSING_DATA, P.a.FRAG_PARSED, P.a.ERROR, P.a.AUDIO_TRACK_SWITCHING, P.a.AUDIO_TRACK_SWITCHED, P.a.BUFFER_CREATED, P.a.BUFFER_APPENDED, P.a.BUFFER_FLUSHED) || this).fragmentTracker = t,
                                i.config = e.config,
                                i.audioCodecSwap = !1,
                                i._state = de.STOPPED,
                                i.stallReported = !1,
                                i.gapController = null,
                                i
                            }
                            t = r,
                            (e = i).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = i.prototype;
                            return n.startLoad = function(e) {
                                if (this.levels) {
                                    var t = this.lastCurrentTime,
                                    i = this.hls;
                                    if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                                        var r = i.startLevel; - 1 === r && (r = 0, this.bitrateTest = !0),
                                        this.level = i.nextLoadLevel = r,
                                        this.loadedmetadata = !1
                                    }
                                    0 < t && -1 === e && (M.b.log("override startPosition with lastCurrentTime @" + t.toFixed(3)), e = t),
                                    this.state = de.IDLE,
                                    this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e,
                                    this.tick()
                                } else this.forceStartLoad = !0,
                                this.state = de.STOPPED
                            },
                            n.stopLoad = function() {
                                this.forceStartLoad = !1,
                                r.prototype.stopLoad.call(this)
                            },
                            n.doTick = function() {
                                switch (this.state) {
                                case de.BUFFER_FLUSHING:
                                    this.fragLoadError = 0;
                                    break;
                                case de.IDLE:
                                    this._doTickIdle();
                                    break;
                                case de.WAITING_LEVEL:
                                    var e = this.levels[this.level];
                                    e && e.details && (this.state = de.IDLE);
                                    break;
                                case de.FRAG_LOADING_WAITING_RETRY:
                                    var t = window.performance.now(),
                                    i = this.retryDate; (!i || i <= t || this.media && this.media.seeking) && (M.b.log("mediaController: retryDate reached, switch back to IDLE state"), this.state = de.IDLE)
                                }
                                this._checkBuffer(),
                                this._checkFragmentChanged()
                            },
                            n._doTickIdle = function() {
                                var e = this.hls,
                                t = e.config,
                                i = this.media;
                                if (void 0 !== this.levelLastLoaded && (i || !this.startFragRequested && t.startFragPrefetch)) {
                                    var r;
                                    r = this.loadedmetadata ? i.currentTime: this.nextLoadPosition;
                                    var n = e.nextLoadLevel,
                                    s = this.levels[n];
                                    if (s) {
                                        var a, o = s.bitrate;
                                        a = o ? Math.max(8 * t.maxBufferSize / o, t.maxBufferLength) : t.maxBufferLength,
                                        a = Math.min(a, t.maxMaxBufferLength);
                                        var l = z.bufferInfo(this.mediaBuffer ? this.mediaBuffer: i, r, t.maxBufferHole),
                                        u = l.len;
                                        if (! (a <= u)) {
                                            M.b.trace("buffer length of " + u.toFixed(3) + " is below max of " + a.toFixed(3) + ". checking for more payload ..."),
                                            this.level = e.nextLoadLevel = n;
                                            var h = s.details;
                                            if (!h || h.live && this.levelLastLoaded !== n) this.state = de.WAITING_LEVEL;
                                            else {
                                                if (this._streamEnded(l, h)) {
                                                    var d = {};
                                                    return this.altAudio && (d.type = "video"),
                                                    this.hls.trigger(P.a.BUFFER_EOS, d),
                                                    void(this.state = de.ENDED)
                                                }
                                                this._fetchPayloadOrEos(r, l, h)
                                            }
                                        }
                                    }
                                }
                            },
                            n._fetchPayloadOrEos = function(e, t, i) {
                                var r = this.fragPrevious,
                                n = this.level,
                                s = i.fragments,
                                a = s.length;
                                if (0 !== a) {
                                    var o, l = s[0].start,
                                    u = s[a - 1].start + s[a - 1].duration,
                                    h = t.end;
                                    if (i.initSegment && !i.initSegment.data) o = i.initSegment;
                                    else if (i.live) {
                                        var d = this.config.initialLiveManifestSize;
                                        if (a < d) return void M.b.warn("Can not start playback of a level, reason: not enough fragments " + a + " < " + d);
                                        if (null === (o = this._ensureFragmentAtLivePoint(i, h, l, u, r, s, a))) return
                                    } else h < l && (o = s[0]); (o = o || this._findFragment(l, r, a, s, h, u, i)) && (o.encrypted ? (M.b.log("Loading key for " + o.sn + " of [" + i.startSN + " ," + i.endSN + "],level " + n), this._loadKey(o)) : (M.b.log("Loading " + o.sn + " of [" + i.startSN + " ," + i.endSN + "],level " + n + ", currentTime:" + e.toFixed(3) + ",bufferEnd:" + h.toFixed(3)), this._loadFragment(o)))
                                }
                            },
                            n._ensureFragmentAtLivePoint = function(e, t, i, r, n, s, a) {
                                var o, l = this.hls.config,
                                u = this.media,
                                h = void 0 !== l.liveMaxLatencyDuration ? l.liveMaxLatencyDuration: l.liveMaxLatencyDurationCount * e.targetduration;
                                if (t < Math.max(i - l.maxFragLookUpTolerance, r - h)) {
                                    var d = this.liveSyncPosition = this.computeLivePosition(i, e);
                                    M.b.log("buffer end: " + t.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + d.toFixed(3)),
                                    t = d,
                                    u && u.readyState && u.duration > d && (u.currentTime = d),
                                    this.nextLoadPosition = d
                                }
                                if (e.PTSKnown && r < t && u && u.readyState) return null;
                                if (this.startFragRequested && !e.PTSKnown) {
                                    if (n) if (e.hasProgramDateTime) M.b.log("live playlist, switching playlist, load frag with same PDT: " + n.programDateTime),
                                    o = se(s, n.endProgramDateTime, l.maxFragLookUpTolerance);
                                    else {
                                        var c = n.sn + 1;
                                        if (c >= e.startSN && c <= e.endSN) {
                                            var f = s[c - e.startSN];
                                            n.cc === f.cc && (o = f, M.b.log("live playlist, switching playlist, load frag with next SN: " + o.sn))
                                        }
                                        o || (o = j.search(s,
                                        function(e) {
                                            return n.cc - e.cc
                                        })) && M.b.log("live playlist, switching playlist, load frag with same CC: " + o.sn)
                                    }
                                    o || (o = s[Math.min(a - 1, Math.round(a / 2))], M.b.log("live playlist, switching playlist, unknown, load middle frag : " + o.sn))
                                }
                                return o
                            },
                            n._findFragment = function(e, t, i, r, n, s, a) {
                                var o, l = this.hls.config;
                                if (o = n < s ? ae(t, r, n, n > s - l.maxFragLookUpTolerance ? 0 : l.maxFragLookUpTolerance) : r[i - 1]) {
                                    var u = o.sn - a.startSN,
                                    h = t && o.level === t.level,
                                    d = r[u - 1],
                                    c = r[1 + u];
                                    if (t && o.sn === t.sn) if (h && !o.backtracked) if (o.sn < a.endSN) {
                                        var f = t.deltaPTS;
                                        f && f > l.maxBufferHole && t.dropped && u ? (o = d, M.b.warn("SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this")) : (o = c, M.b.log("SN just loaded, load next one: " + o.sn, o))
                                    } else o = null;
                                    else o.backtracked && (c && c.backtracked ? (M.b.warn("Already backtracked from fragment " + c.sn + ", will not backtrack to fragment " + o.sn + ". Loading fragment " + c.sn), o = c) : (M.b.warn("Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe"), o.dropped = 0, d ? (o = d).backtracked = !0 : u && (o = null)))
                                }
                                return o
                            },
                            n._loadKey = function(e) {
                                this.state = de.KEY_LOADING,
                                this.hls.trigger(P.a.KEY_LOADING, {
                                    frag: e
                                })
                            },
                            n._loadFragment = function(e) {
                                var t = this.fragmentTracker.getState(e);
                                "initSegment" !== (this.fragCurrent = e).sn && (this.startFragRequested = !0),
                                Object(D.a)(e.sn) && !e.bitrateTest && (this.nextLoadPosition = e.start + e.duration),
                                e.backtracked || t === U || t === A ? (e.autoLevel = this.hls.autoLevelEnabled, e.bitrateTest = this.bitrateTest, this.hls.trigger(P.a.FRAG_LOADING, {
                                    frag: e
                                }), this.demuxer || (this.demuxer = new Z(this.hls, "main")), this.state = de.FRAG_LOADING) : "APPENDING" === t && this._reduceMaxBufferLength(e.duration) && this.fragmentTracker.removeFragment(e)
                            },
                            n.getBufferedFrag = function(e) {
                                return this.fragmentTracker.getBufferedFrag(e, s.MAIN)
                            },
                            n.followingBufferedFrag = function(e) {
                                return e ? this.getBufferedFrag(e.endPTS + .5) : null
                            },
                            n._checkFragmentChanged = function() {
                                var e, t, i = this.media;
                                if (i && i.readyState && !1 === i.seeking && ((t = i.currentTime) > this.lastCurrentTime && (this.lastCurrentTime = t), z.isBuffered(i, t) ? e = this.getBufferedFrag(t) : z.isBuffered(i, t + .1) && (e = this.getBufferedFrag(t + .1)), e)) {
                                    var r = e;
                                    if (r !== this.fragPlaying) {
                                        this.hls.trigger(P.a.FRAG_CHANGED, {
                                            frag: r
                                        });
                                        var n = r.level;
                                        this.fragPlaying && this.fragPlaying.level === n || this.hls.trigger(P.a.LEVEL_SWITCHED, {
                                            level: n
                                        }),
                                        this.fragPlaying = r
                                    }
                                }
                            },
                            n.immediateLevelSwitch = function() {
                                if (M.b.log("immediateLevelSwitch"), !this.immediateSwitch) {
                                    this.immediateSwitch = !0;
                                    var e, t = this.media;
                                    t ? (e = t.paused, t.pause()) : e = !0,
                                    this.previouslyPaused = e
                                }
                                var i = this.fragCurrent;
                                i && i.loader && i.loader.abort(),
                                this.fragCurrent = null,
                                this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                            },
                            n.immediateLevelSwitchEnd = function() {
                                var e = this.media;
                                e && e.buffered.length && (this.immediateSwitch = !1, z.isBuffered(e, e.currentTime) && (e.currentTime -= 1e-4), this.previouslyPaused || e.play())
                            },
                            n.nextLevelSwitch = function() {
                                var e = this.media;
                                if (e && e.readyState) {
                                    var t, i, r;
                                    if ((i = this.getBufferedFrag(e.currentTime)) && 1 < i.startPTS && this.flushMainBuffer(0, i.startPTS - 1), e.paused) t = 0;
                                    else {
                                        var n = this.hls.nextLoadLevel,
                                        s = this.levels[n],
                                        a = this.fragLastKbps;
                                        t = a && this.fragCurrent ? this.fragCurrent.duration * s.bitrate / (1e3 * a) + 1 : 0
                                    }
                                    if ((r = this.getBufferedFrag(e.currentTime + t)) && (r = this.followingBufferedFrag(r))) {
                                        var o = this.fragCurrent;
                                        o && o.loader && o.loader.abort(),
                                        this.fragCurrent = null,
                                        this.flushMainBuffer(r.maxStartPTS, Number.POSITIVE_INFINITY)
                                    }
                                }
                            },
                            n.flushMainBuffer = function(e, t) {
                                this.state = de.BUFFER_FLUSHING;
                                var i = {
                                    startOffset: e,
                                    endOffset: t
                                };
                                this.altAudio && (i.type = "video"),
                                this.hls.trigger(P.a.BUFFER_FLUSHING, i)
                            },
                            n.onMediaAttached = function(e) {
                                var t = this.media = this.mediaBuffer = e.media;
                                this.onvseeking = this.onMediaSeeking.bind(this),
                                this.onvseeked = this.onMediaSeeked.bind(this),
                                this.onvended = this.onMediaEnded.bind(this),
                                t.addEventListener("seeking", this.onvseeking),
                                t.addEventListener("seeked", this.onvseeked),
                                t.addEventListener("ended", this.onvended);
                                var i = this.config;
                                this.levels && i.autoStartLoad && this.hls.startLoad(i.startPosition),
                                this.gapController = new le(i, t, this.fragmentTracker, this.hls)
                            },
                            n.onMediaDetaching = function() {
                                var e = this.media;
                                e && e.ended && (M.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0);
                                var t = this.levels;
                                t && t.forEach(function(e) {
                                    e.details && e.details.fragments.forEach(function(e) {
                                        e.backtracked = void 0
                                    })
                                }),
                                e && (e.removeEventListener("seeking", this.onvseeking), e.removeEventListener("seeked", this.onvseeked), e.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null),
                                this.media = this.mediaBuffer = null,
                                this.loadedmetadata = !1,
                                this.stopLoad()
                            },
                            n.onMediaSeeked = function() {
                                var e = this.media,
                                t = e ? e.currentTime: void 0;
                                Object(D.a)(t) && M.b.log("media seeked to " + t.toFixed(3)),
                                this.tick()
                            },
                            n.onManifestLoading = function() {
                                M.b.log("trigger BUFFER_RESET"),
                                this.hls.trigger(P.a.BUFFER_RESET),
                                this.fragmentTracker.removeAllFragments(),
                                this.stalled = !1,
                                this.startPosition = this.lastCurrentTime = 0
                            },
                            n.onManifestParsed = function(e) {
                                var t, i = !1,
                                r = !1;
                                e.levels.forEach(function(e) { (t = e.audioCodec) && ( - 1 !== t.indexOf("mp4a.40.2") && (i = !0), -1 !== t.indexOf("mp4a.40.5") && (r = !0))
                                }),
                                this.audioCodecSwitch = i && r,
                                this.audioCodecSwitch && M.b.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"),
                                this.levels = e.levels,
                                this.startFragRequested = !1;
                                var n = this.config; (n.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(n.startPosition)
                            },
                            n.onLevelLoaded = function(e) {
                                var t = e.details,
                                i = e.level,
                                r = this.levels[this.levelLastLoaded],
                                n = this.levels[i],
                                s = t.totalduration,
                                a = 0;
                                if (M.b.log("level " + i + " loaded [" + t.startSN + "," + t.endSN + "],duration:" + s), t.live) {
                                    var o = n.details;
                                    o && 0 < t.fragments.length ? (Q(o, t), a = t.fragments[0].start, this.liveSyncPosition = this.computeLivePosition(a, o), t.PTSKnown && Object(D.a)(a) ? M.b.log("live playlist sliding:" + a.toFixed(3)) : (M.b.log("live playlist - outdated PTS, unknown sliding"), ne(this.fragPrevious, r, t))) : (M.b.log("live playlist - first load, unknown sliding"), t.PTSKnown = !1, ne(this.fragPrevious, r, t))
                                } else t.PTSKnown = !1;
                                if (n.details = t, this.levelLastLoaded = i, this.hls.trigger(P.a.LEVEL_UPDATED, {
                                    details: t,
                                    level: i
                                }), !1 === this.startFragRequested) {
                                    if ( - 1 === this.startPosition || -1 === this.lastCurrentTime) {
                                        var l = t.startTimeOffset;
                                        Object(D.a)(l) ? (l < 0 && (M.b.log("negative start time offset " + l + ", count from end of last fragment"), l = a + s + l), M.b.log("start time offset found in playlist, adjust startPosition to " + l), this.startPosition = l) : t.live ? (this.startPosition = this.computeLivePosition(a, t), M.b.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0,
                                        this.lastCurrentTime = this.startPosition
                                    }
                                    this.nextLoadPosition = this.startPosition
                                }
                                this.state === de.WAITING_LEVEL && (this.state = de.IDLE),
                                this.tick()
                            },
                            n.onKeyLoaded = function() {
                                this.state === de.KEY_LOADING && (this.state = de.IDLE, this.tick())
                            },
                            n.onFragLoaded = function(e) {
                                var t = this.fragCurrent,
                                i = this.hls,
                                r = this.levels,
                                n = this.media,
                                s = e.frag;
                                if (this.state === de.FRAG_LOADING && t && "main" === s.type && s.level === t.level && s.sn === t.sn) {
                                    var a = e.stats,
                                    o = r[t.level],
                                    l = o.details;
                                    if (this.bitrateTest = !1, this.stats = a, M.b.log("Loaded " + t.sn + " of [" + l.startSN + " ," + l.endSN + "],level " + t.level), s.bitrateTest && i.nextLoadLevel) this.state = de.IDLE,
                                    this.startFragRequested = !1,
                                    a.tparsed = a.tbuffered = window.performance.now(),
                                    i.trigger(P.a.FRAG_BUFFERED, {
                                        stats: a,
                                        frag: t,
                                        id: "main"
                                    }),
                                    this.tick();
                                    else if ("initSegment" === s.sn) this.state = de.IDLE,
                                    a.tparsed = a.tbuffered = window.performance.now(),
                                    l.initSegment.data = e.payload,
                                    i.trigger(P.a.FRAG_BUFFERED, {
                                        stats: a,
                                        frag: t,
                                        id: "main"
                                    }),
                                    this.tick();
                                    else {
                                        M.b.log("Parsing " + t.sn + " of [" + l.startSN + " ," + l.endSN + "],level " + t.level + ", cc " + t.cc),
                                        this.state = de.PARSING,
                                        this.pendingBuffering = !0,
                                        this.appended = !1,
                                        s.bitrateTest && (s.bitrateTest = !1, this.fragmentTracker.onFragLoaded({
                                            frag: s
                                        }));
                                        var u = !(n && n.seeking) && (l.PTSKnown || !l.live),
                                        h = l.initSegment ? l.initSegment.data: [],
                                        d = this._getAudioCodec(o); (this.demuxer = this.demuxer || new Z(this.hls, "main")).push(e.payload, h, d, o.videoCodec, t, l.totalduration, u)
                                    }
                                }
                                this.fragLoadError = 0
                            },
                            n.onFragParsingInitSegment = function(e) {
                                var t = this.fragCurrent,
                                i = e.frag;
                                if (t && "main" === e.id && i.sn === t.sn && i.level === t.level && this.state === de.PARSING) {
                                    var r, n, s = e.tracks;
                                    if (s.audio && this.altAudio && delete s.audio, n = s.audio) {
                                        var a = this.levels[this.level].audioCodec,
                                        o = navigator.userAgent.toLowerCase();
                                        a && this.audioCodecSwap && (M.b.log("swapping playlist audio codec"), a = -1 !== a.indexOf("mp4a.40.5") ? "mp4a.40.2": "mp4a.40.5"),
                                        this.audioCodecSwitch && 1 !== n.metadata.channelCount && -1 === o.indexOf("firefox") && (a = "mp4a.40.5"),
                                        -1 !== o.indexOf("android") && "audio/mpeg" !== n.container && (a = "mp4a.40.2", M.b.log("Android: force audio codec to " + a)),
                                        n.levelCodec = a,
                                        n.id = e.id
                                    }
                                    for (r in (n = s.video) && (n.levelCodec = this.levels[this.level].videoCodec, n.id = e.id), this.hls.trigger(P.a.BUFFER_CODECS, s), s) {
                                        n = s[r],
                                        M.b.log("main track:" + r + ",container:" + n.container + ",codecs[level/parsed]=[" + n.levelCodec + "/" + n.codec + "]");
                                        var l = n.initSegment;
                                        l && (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(P.a.BUFFER_APPENDING, {
                                            type: r,
                                            data: l,
                                            parent: "main",
                                            content: "initSegment"
                                        }))
                                    }
                                    this.tick()
                                }
                            },
                            n.onFragParsingData = function(t) {
                                var i = this,
                                e = this.fragCurrent,
                                r = t.frag;
                                if (e && "main" === t.id && r.sn === e.sn && r.level === e.level && ("audio" !== t.type || !this.altAudio) && this.state === de.PARSING) {
                                    var n = this.levels[this.level],
                                    s = e;
                                    if (Object(D.a)(t.endPTS) || (t.endPTS = t.startPTS + e.duration, t.endDTS = t.startDTS + e.duration), !0 === t.hasAudio && s.addElementaryStream(f.AUDIO), !0 === t.hasVideo && s.addElementaryStream(f.VIDEO), M.b.log("Parsed " + t.type + ",PTS:[" + t.startPTS.toFixed(3) + "," + t.endPTS.toFixed(3) + "],DTS:[" + t.startDTS.toFixed(3) + "/" + t.endDTS.toFixed(3) + "],nb:" + t.nb + ",dropped:" + (t.dropped || 0)), "video" === t.type) if (s.dropped = t.dropped, s.dropped) if (s.backtracked) M.b.warn("Already backtracked on this fragment, appending with the gap", s.sn);
                                    else {
                                        var a = n.details;
                                        if (!a || s.sn !== a.startSN) return M.b.warn("missing video frame(s), backtracking fragment", s.sn),
                                        this.fragmentTracker.removeFragment(s),
                                        s.backtracked = !0,
                                        this.nextLoadPosition = t.startPTS,
                                        this.state = de.IDLE,
                                        this.fragPrevious = s,
                                        void this.tick();
                                        M.b.warn("missing video frame(s) on first frag, appending with gap", s.sn)
                                    } else s.backtracked = !1;
                                    var o = $(n.details, s, t.startPTS, t.endPTS, t.startDTS, t.endDTS),
                                    l = this.hls;
                                    l.trigger(P.a.LEVEL_PTS_UPDATED, {
                                        details: n.details,
                                        level: this.level,
                                        drift: o,
                                        type: t.type,
                                        start: t.startPTS,
                                        end: t.endPTS
                                    }),
                                    [t.data1, t.data2].forEach(function(e) {
                                        e && e.length && i.state === de.PARSING && (i.appended = !0, i.pendingBuffering = !0, l.trigger(P.a.BUFFER_APPENDING, {
                                            type: t.type,
                                            data: e,
                                            parent: "main",
                                            content: "data"
                                        }))
                                    }),
                                    this.tick()
                                }
                            },
                            n.onFragParsed = function(e) {
                                var t = this.fragCurrent,
                                i = e.frag;
                                t && "main" === e.id && i.sn === t.sn && i.level === t.level && this.state === de.PARSING && (this.stats.tparsed = window.performance.now(), this.state = de.PARSED, this._checkAppendedParsed())
                            },
                            n.onAudioTrackSwitching = function(e) {
                                var t = !!e.url,
                                i = e.id;
                                if (!t) {
                                    if (this.mediaBuffer !== this.media) {
                                        M.b.log("switching on main audio, use media.buffered to schedule main fragment loading"),
                                        this.mediaBuffer = this.media;
                                        var r = this.fragCurrent;
                                        r.loader && (M.b.log("switching to main audio track, cancel main fragment load"), r.loader.abort()),
                                        this.fragCurrent = null,
                                        this.fragPrevious = null,
                                        this.demuxer && (this.demuxer.destroy(), this.demuxer = null),
                                        this.state = de.IDLE
                                    }
                                    var n = this.hls;
                                    n.trigger(P.a.BUFFER_FLUSHING, {
                                        startOffset: 0,
                                        endOffset: Number.POSITIVE_INFINITY,
                                        type: "audio"
                                    }),
                                    n.trigger(P.a.AUDIO_TRACK_SWITCHED, {
                                        id: i
                                    }),
                                    this.altAudio = !1
                                }
                            },
                            n.onAudioTrackSwitched = function(e) {
                                var t = e.id,
                                i = !!this.hls.audioTracks[t].url;
                                if (i) {
                                    var r = this.videoBuffer;
                                    r && this.mediaBuffer !== r && (M.b.log("switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = r)
                                }
                                this.altAudio = i,
                                this.tick()
                            },
                            n.onBufferCreated = function(e) {
                                var t, i, r = e.tracks,
                                n = !1;
                                for (var s in r) {
                                    var a = r[s];
                                    "main" === a.id ? (t = a, "video" === (i = s) && (this.videoBuffer = r[s].buffer)) : n = !0
                                }
                                n && t ? (M.b.log("alternate track found, use " + i + ".buffered to schedule main fragment loading"), this.mediaBuffer = t.buffer) : this.mediaBuffer = this.media
                            },
                            n.onBufferAppended = function(e) {
                                if ("main" === e.parent) {
                                    var t = this.state;
                                    t !== de.PARSING && t !== de.PARSED || (this.pendingBuffering = 0 < e.pending, this._checkAppendedParsed())
                                }
                            },
                            n._checkAppendedParsed = function() {
                                if (! (this.state !== de.PARSED || this.appended && this.pendingBuffering)) {
                                    var e = this.fragCurrent;
                                    if (e) {
                                        var t = this.mediaBuffer ? this.mediaBuffer: this.media;
                                        M.b.log("main buffered : " + ie.toString(t.buffered)),
                                        this.fragPrevious = e;
                                        var i = this.stats;
                                        i.tbuffered = window.performance.now(),
                                        this.fragLastKbps = Math.round(8 * i.total / (i.tbuffered - i.tfirst)),
                                        this.hls.trigger(P.a.FRAG_BUFFERED, {
                                            stats: i,
                                            frag: e,
                                            id: "main"
                                        }),
                                        this.state = de.IDLE
                                    }
                                    this.tick()
                                }
                            },
                            n.onError = function(e) {
                                var t = e.frag || this.fragCurrent;
                                if (!t || "main" === t.type) {
                                    var i = !!this.media && z.isBuffered(this.media, this.media.currentTime) && z.isBuffered(this.media, this.media.currentTime + .5);
                                    switch (e.details) {
                                    case c.a.FRAG_LOAD_ERROR:
                                    case c.a.FRAG_LOAD_TIMEOUT:
                                    case c.a.KEY_LOAD_ERROR:
                                    case c.a.KEY_LOAD_TIMEOUT:
                                        if (!e.fatal) if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                                            var r = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                                            M.b.warn("mediaController: frag loading failed, retry in " + r + " ms"),
                                            this.retryDate = window.performance.now() + r,
                                            this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition),
                                            this.fragLoadError++,
                                            this.state = de.FRAG_LOADING_WAITING_RETRY
                                        } else M.b.error("mediaController: " + e.details + " reaches max retry, redispatch as fatal ..."),
                                        e.fatal = !0,
                                        this.state = de.ERROR;
                                        break;
                                    case c.a.LEVEL_LOAD_ERROR:
                                    case c.a.LEVEL_LOAD_TIMEOUT:
                                        this.state !== de.ERROR && (e.fatal ? (this.state = de.ERROR, M.b.warn("streamController: " + e.details + ",switch to " + this.state + " state ...")) : e.levelRetry || this.state !== de.WAITING_LEVEL || (this.state = de.IDLE));
                                        break;
                                    case c.a.BUFFER_FULL_ERROR:
                                        "main" !== e.parent || this.state !== de.PARSING && this.state !== de.PARSED || (i ? (this._reduceMaxBufferLength(this.config.maxBufferLength), this.state = de.IDLE) : (M.b.warn("buffer full error also media.currentTime is not buffered, flush everything"), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                                    }
                                }
                            },
                            n._reduceMaxBufferLength = function(e) {
                                var t = this.config;
                                return t.maxMaxBufferLength >= e && (t.maxMaxBufferLength /= 2, M.b.warn("main:reduce max buffer length to " + t.maxMaxBufferLength + "s"), !0)
                            },
                            n._checkBuffer = function() {
                                var e = this.media;
                                if (e && 0 !== e.readyState) {
                                    var t = (this.mediaBuffer ? this.mediaBuffer: e).buffered; ! this.loadedmetadata && t.length ? (this.loadedmetadata = !0, this._seekToStartPos()) : this.immediateSwitch ? this.immediateLevelSwitchEnd() : this.gapController.poll(this.lastCurrentTime, t)
                                }
                            },
                            n.onFragLoadEmergencyAborted = function() {
                                this.state = de.IDLE,
                                this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition),
                                this.tick()
                            },
                            n.onBufferFlushed = function() {
                                var e = this.mediaBuffer ? this.mediaBuffer: this.media;
                                e && this.fragmentTracker.detectEvictedFragments(f.VIDEO, e.buffered),
                                this.state = de.IDLE,
                                this.fragPrevious = null
                            },
                            n.swapAudioCodec = function() {
                                this.audioCodecSwap = !this.audioCodecSwap
                            },
                            n.computeLivePosition = function(e, t) {
                                var i = void 0 !== this.config.liveSyncDuration ? this.config.liveSyncDuration: this.config.liveSyncDurationCount * t.targetduration;
                                return e + Math.max(0, t.totalduration - i)
                            },
                            n._seekToStartPos = function() {
                                var e = this.media,
                                t = e.currentTime,
                                i = e.seeking ? t: this.startPosition;
                                t !== i && (M.b.log("target start position not buffered, seek to buffered.start(0) " + i + " from current time " + t + " "), e.currentTime = i)
                            },
                            n._getAudioCodec = function(e) {
                                var t = this.config.defaultAudioCodec || e.audioCodec;
                                return this.audioCodecSwap && (M.b.log("swapping playlist audio codec"), t = t && ( - 1 !== t.indexOf("mp4a.40.5") ? "mp4a.40.2": "mp4a.40.5")),
                                t
                            },
                            fe(i.prototype, [{
                                key: "state",
                                set: function(e) {
                                    if (this.state !== e) {
                                        var t = this.state;
                                        this._state = e,
                                        M.b.log("main stream:" + t + "->" + e),
                                        this.hls.trigger(P.a.STREAM_STATE_TRANSITION, {
                                            previousState: t,
                                            nextState: e
                                        })
                                    }
                                },
                                get: function() {
                                    return this._state
                                }
                            },
                            {
                                key: "currentLevel",
                                get: function() {
                                    var e = this.media;
                                    if (e) {
                                        var t = this.getBufferedFrag(e.currentTime);
                                        if (t) return t.level
                                    }
                                    return - 1
                                }
                            },
                            {
                                key: "nextBufferedFrag",
                                get: function() {
                                    var e = this.media;
                                    return e ? this.followingBufferedFrag(this.getBufferedFrag(e.currentTime)) : null
                                }
                            },
                            {
                                key: "nextLevel",
                                get: function() {
                                    var e = this.nextBufferedFrag;
                                    return e ? e.level: -1
                                }
                            },
                            {
                                key: "liveSyncPosition",
                                get: function() {
                                    return this._liveSyncPosition
                                },
                                set: function(e) {
                                    this._liveSyncPosition = e
                                }
                            }]),
                            i
                        } (ce);
                        function ve(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        window.performance;
                        var me, _e = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.MANIFEST_LOADED, P.a.LEVEL_LOADED, P.a.AUDIO_TRACK_SWITCHED, P.a.FRAG_LOADED, P.a.ERROR) || this).canload = !1,
                                t.currentLevelIndex = null,
                                t.manualLevelIndex = -1,
                                t.timer = null,
                                me = /chrome|firefox/.test(navigator.userAgent.toLowerCase()),
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.onHandlerDestroying = function() {
                                this.clearTimer(),
                                this.manualLevelIndex = -1
                            },
                            n.clearTimer = function() {
                                null !== this.timer && (clearTimeout(this.timer), this.timer = null)
                            },
                            n.startLoad = function() {
                                var e = this._levels;
                                this.canload = !0,
                                this.levelRetryCount = 0,
                                e && e.forEach(function(e) {
                                    e.loadError = 0;
                                    var t = e.details;
                                    t && t.live && (e.details = void 0)
                                }),
                                null !== this.timer && this.loadLevel()
                            },
                            n.stopLoad = function() {
                                this.canload = !1
                            },
                            n.onManifestLoaded = function(e) {
                                var t, i = [],
                                r = [],
                                n = {},
                                s = null,
                                a = !1,
                                o = !1;
                                if (e.levels.forEach(function(e) {
                                    var t = e.attrs;
                                    e.loadError = 0,
                                    e.fragmentError = !1,
                                    a = a || !!e.videoCodec,
                                    o = o || !!e.audioCodec,
                                    me && e.audioCodec && -1 !== e.audioCodec.indexOf("mp4a.40.34") && (e.audioCodec = void 0),
                                    (s = n[e.bitrate]) ? s.url.push(e.url) : (e.url = [e.url], e.urlId = 0, n[e.bitrate] = e, i.push(e)),
                                    t && (t.AUDIO && (o = !0, X(s || e, "audio", t.AUDIO)), t.SUBTITLES && X(s || e, "text", t.SUBTITLES))
                                }), a && o && (i = i.filter(function(e) {
                                    return !! e.videoCodec
                                })), i = i.filter(function(e) {
                                    var t = e.audioCodec,
                                    i = e.videoCodec;
                                    return (!t || g(t, "audio")) && (!i || g(i, "video"))
                                }), e.audioTracks && (r = e.audioTracks.filter(function(e) {
                                    return ! e.audioCodec || g(e.audioCodec, "audio")
                                })).forEach(function(e, t) {
                                    e.id = t
                                }), 0 < i.length) {
                                    t = i[0].bitrate,
                                    i.sort(function(e, t) {
                                        return e.bitrate - t.bitrate
                                    }),
                                    this._levels = i;
                                    for (var l = 0; l < i.length; l++) if (i[l].bitrate === t) {
                                        this._firstLevel = l,
                                        M.b.log("manifest loaded," + i.length + " level(s) found, first bitrate:" + t);
                                        break
                                    }
                                    this.hls.trigger(P.a.MANIFEST_PARSED, {
                                        levels: i,
                                        audioTracks: r,
                                        firstLevel: this._firstLevel,
                                        stats: e.stats,
                                        audio: o,
                                        video: a,
                                        altAudio: r.some(function(e) {
                                            return !! e.url
                                        })
                                    })
                                } else this.hls.trigger(P.a.ERROR, {
                                    type: c.b.MEDIA_ERROR,
                                    details: c.a.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                    fatal: !0,
                                    url: this.hls.url,
                                    reason: "no level with compatible codecs found in manifest"
                                })
                            },
                            n.setLevelInternal = function(e) {
                                var t = this._levels,
                                i = this.hls;
                                if (0 <= e && e < t.length) {
                                    if (this.clearTimer(), this.currentLevelIndex !== e) {
                                        M.b.log("switching to level " + e),
                                        this.currentLevelIndex = e;
                                        var r = t[e];
                                        r.level = e,
                                        i.trigger(P.a.LEVEL_SWITCHING, r)
                                    }
                                    var n = t[e],
                                    s = n.details;
                                    if (!s || s.live) {
                                        var a = n.urlId;
                                        i.trigger(P.a.LEVEL_LOADING, {
                                            url: n.url[a],
                                            level: e,
                                            id: a
                                        })
                                    }
                                } else i.trigger(P.a.ERROR, {
                                    type: c.b.OTHER_ERROR,
                                    details: c.a.LEVEL_SWITCH_ERROR,
                                    level: e,
                                    fatal: !1,
                                    reason: "invalid level idx"
                                })
                            },
                            n.onError = function(e) {
                                if (e.fatal) e.type === c.b.NETWORK_ERROR && this.clearTimer();
                                else {
                                    var t, i = !1,
                                    r = !1;
                                    switch (e.details) {
                                    case c.a.FRAG_LOAD_ERROR:
                                    case c.a.FRAG_LOAD_TIMEOUT:
                                    case c.a.KEY_LOAD_ERROR:
                                    case c.a.KEY_LOAD_TIMEOUT:
                                        t = e.frag.level,
                                        r = !0;
                                        break;
                                    case c.a.LEVEL_LOAD_ERROR:
                                    case c.a.LEVEL_LOAD_TIMEOUT:
                                        t = e.context.level,
                                        i = !0;
                                        break;
                                    case c.a.REMUX_ALLOC_ERROR:
                                        t = e.level,
                                        i = !0
                                    }
                                    void 0 !== t && this.recoverLevel(e, t, i, r)
                                }
                            },
                            n.recoverLevel = function(e, t, i, r) {
                                var n, s, a, o = this,
                                l = this.hls.config,
                                u = e.details,
                                h = this._levels[t];
                                if (h.loadError++, h.fragmentError = r, i) {
                                    if (! (this.levelRetryCount + 1 <= l.levelLoadingMaxRetry)) return M.b.error("level controller, cannot recover from " + u + " error"),
                                    this.currentLevelIndex = null,
                                    this.clearTimer(),
                                    void(e.fatal = !0);
                                    s = Math.min(Math.pow(2, this.levelRetryCount) * l.levelLoadingRetryDelay, l.levelLoadingMaxRetryTimeout),
                                    this.timer = setTimeout(function() {
                                        return o.loadLevel()
                                    },
                                    s),
                                    e.levelRetry = !0,
                                    this.levelRetryCount++,
                                    M.b.warn("level controller, " + u + ", retry in " + s + " ms, current retry count is " + this.levelRetryCount)
                                } (i || r) && (1 < (n = h.url.length) && h.loadError < n ? (h.urlId = (h.urlId + 1) % n, h.details = void 0, M.b.warn("level controller, " + u + " for level " + t + ": switching to redundant URL-id " + h.urlId)) : -1 === this.manualLevelIndex ? (a = 0 === t ? this._levels.length - 1 : t - 1, M.b.warn("level controller, " + u + ": switch to " + a), this.hls.nextAutoLevel = this.currentLevelIndex = a) : r && (M.b.warn("level controller, " + u + ": reload a fragment"), this.currentLevelIndex = null))
                            },
                            n.onFragLoaded = function(e) {
                                var t = e.frag;
                                if (void 0 !== t && "main" === t.type) {
                                    var i = this._levels[t.level];
                                    void 0 !== i && (i.fragmentError = !1, i.loadError = 0, this.levelRetryCount = 0)
                                }
                            },
                            n.onLevelLoaded = function(e) {
                                var t = this,
                                i = e.level,
                                r = e.details;
                                if (i === this.currentLevelIndex) {
                                    var n = this._levels[i];
                                    if (n.fragmentError || (n.loadError = 0, this.levelRetryCount = 0), r.live) {
                                        var s = te(n.details, r, e.stats.trequest);
                                        M.b.log("live playlist, reload in " + Math.round(s) + " ms"),
                                        this.timer = setTimeout(function() {
                                            return t.loadLevel()
                                        },
                                        s)
                                    } else this.clearTimer()
                                }
                            },
                            n.onAudioTrackSwitched = function(e) {
                                var t = this.hls.audioTracks[e.id].groupId,
                                i = this.hls.levels[this.currentLevelIndex];
                                if (i && i.audioGroupIds) {
                                    for (var r = -1,
                                    n = 0; n < i.audioGroupIds.length; n++) if (i.audioGroupIds[n] === t) {
                                        r = n;
                                        break
                                    }
                                    r !== i.urlId && (i.urlId = r, this.startLoad())
                                }
                            },
                            n.loadLevel = function() {
                                if (M.b.debug("call to loadLevel"), null !== this.currentLevelIndex && this.canload) {
                                    var e = this._levels[this.currentLevelIndex];
                                    if ("object" == typeof e && 0 < e.url.length) {
                                        var t = this.currentLevelIndex,
                                        i = e.urlId,
                                        r = e.url[i];
                                        M.b.log("Attempt loading level index " + t + " with URL-id " + i),
                                        this.hls.trigger(P.a.LEVEL_LOADING, {
                                            url: r,
                                            level: t,
                                            id: i
                                        })
                                    }
                                }
                            },
                            ve(r.prototype, [{
                                key: "levels",
                                get: function() {
                                    return this._levels
                                }
                            },
                            {
                                key: "level",
                                get: function() {
                                    return this.currentLevelIndex
                                },
                                set: function(e) {
                                    var t = this._levels;
                                    t && (e = Math.min(e, t.length - 1), this.currentLevelIndex === e && t[e].details || this.setLevelInternal(e))
                                }
                            },
                            {
                                key: "manualLevel",
                                get: function() {
                                    return this.manualLevelIndex
                                },
                                set: function(e) {
                                    this.manualLevelIndex = e,
                                    void 0 === this._startLevel && (this._startLevel = e),
                                    -1 !== e && (this.level = e)
                                }
                            },
                            {
                                key: "firstLevel",
                                get: function() {
                                    return this._firstLevel
                                },
                                set: function(e) {
                                    this._firstLevel = e
                                }
                            },
                            {
                                key: "startLevel",
                                get: function() {
                                    if (void 0 !== this._startLevel) return this._startLevel;
                                    var e = this.hls.config.startLevel;
                                    return void 0 !== e ? e: this._firstLevel
                                },
                                set: function(e) {
                                    this._startLevel = e
                                }
                            },
                            {
                                key: "nextLoadLevel",
                                get: function() {
                                    return - 1 !== this.manualLevelIndex ? this.manualLevelIndex: this.hls.nextAutoLevel
                                },
                                set: function(e) {
                                    this.level = e,
                                    -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = e)
                                }
                            }]),
                            r
                        } (o),
                        ge = i(4);
                        function ye(e, t) {
                            var i = null;
                            try {
                                i = new window.Event("addtrack")
                            } catch(e) { (i = document.createEvent("Event")).initEvent("addtrack", !1, !1)
                            }
                            i.track = e,
                            t.dispatchEvent(i)
                        }
                        function be(e) {
                            if (e && e.cues) for (; 0 < e.cues.length;) e.removeCue(e.cues[0])
                        }
                        var Se = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.MEDIA_ATTACHED, P.a.MEDIA_DETACHING, P.a.FRAG_PARSING_METADATA) || this).id3Track = void 0,
                                t.media = void 0,
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.destroy = function() {
                                o.prototype.destroy.call(this)
                            },
                            n.onMediaAttached = function(e) {
                                this.media = e.media,
                                this.media
                            },
                            n.onMediaDetaching = function() {
                                be(this.id3Track),
                                this.id3Track = void 0,
                                this.media = void 0
                            },
                            n.getID3Track = function(e) {
                                for (var t = 0; t < e.length; t++) {
                                    var i = e[t];
                                    if ("metadata" === i.kind && "id3" === i.label) return ye(i, this.media),
                                    i
                                }
                                return this.media.addTextTrack("metadata", "id3")
                            },
                            n.onFragParsingMetadata = function(e) {
                                var t = e.frag,
                                i = e.samples;
                                this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = "hidden");
                                for (var r = window.WebKitDataCue || window.VTTCue || window.TextTrackCue,
                                n = 0; n < i.length; n++) {
                                    var s = ge.a.getID3Frames(i[n].data);
                                    if (s) {
                                        var a = i[n].pts,
                                        o = n < i.length - 1 ? i[n + 1].pts: t.endPTS;
                                        a === o && (o += 1e-4);
                                        for (var l = 0; l < s.length; l++) {
                                            var u = s[l];
                                            if (!ge.a.isTimeStampFrame(u)) {
                                                var h = new r(a, o, "");
                                                h.value = u,
                                                this.id3Track.addCue(h)
                                            }
                                        }
                                    }
                                }
                            },
                            r
                        } (o),
                        Ee = function() {
                            function e(e) {
                                this.alpha_ = e ? Math.exp(Math.log(.5) / e) : 0,
                                this.estimate_ = 0,
                                this.totalWeight_ = 0
                            }
                            var t = e.prototype;
                            return t.sample = function(e, t) {
                                var i = Math.pow(this.alpha_, e);
                                this.estimate_ = t * (1 - i) + i * this.estimate_,
                                this.totalWeight_ += e
                            },
                            t.getTotalWeight = function() {
                                return this.totalWeight_
                            },
                            t.getEstimate = function() {
                                if (this.alpha_) {
                                    var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                    return this.estimate_ / e
                                }
                                return this.estimate_
                            },
                            e
                        } (),
                        ke = function() {
                            function e(e, t, i, r) {
                                this.hls = e,
                                this.defaultEstimate_ = r,
                                this.minWeight_ = .001,
                                this.minDelayMs_ = 50,
                                this.slow_ = new Ee(t),
                                this.fast_ = new Ee(i)
                            }
                            var t = e.prototype;
                            return t.sample = function(e, t) {
                                var i = (e = Math.max(e, this.minDelayMs_)) / 1e3,
                                r = 8 * t / i;
                                this.fast_.sample(i, r),
                                this.slow_.sample(i, r)
                            },
                            t.canEstimate = function() {
                                var e = this.fast_;
                                return e && e.getTotalWeight() >= this.minWeight_
                            },
                            t.getEstimate = function() {
                                return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                            },
                            t.destroy = function() {},
                            e
                        } ();
                        function we(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        function Te(e) {
                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }
                        var Ae = window.performance,
                        Re = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.FRAG_LOADING, P.a.FRAG_LOADED, P.a.FRAG_BUFFERED, P.a.ERROR) || this).lastLoadedFragLevel = 0,
                                t._nextAutoLevel = -1,
                                t.hls = e,
                                t.timer = null,
                                t._bwEstimator = null,
                                t.onCheck = t._abandonRulesCheck.bind(Te(Te(t))),
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.destroy = function() {
                                this.clearTimer(),
                                o.prototype.destroy.call(this)
                            },
                            n.onFragLoading = function(e) {
                                var t = e.frag;
                                if ("main" === t.type && (this.timer || (this.fragCurrent = t, this.timer = setInterval(this.onCheck, 100)), !this._bwEstimator)) {
                                    var i, r, n = this.hls,
                                    s = n.config,
                                    a = t.level;
                                    r = n.levels[a].details.live ? (i = s.abrEwmaFastLive, s.abrEwmaSlowLive) : (i = s.abrEwmaFastVoD, s.abrEwmaSlowVoD),
                                    this._bwEstimator = new ke(n, r, i, s.abrEwmaDefaultEstimate)
                                }
                            },
                            n._abandonRulesCheck = function() {
                                var e = this.hls,
                                t = e.media,
                                i = this.fragCurrent;
                                if (i) {
                                    var r = i.loader,
                                    n = e.minAutoLevel;
                                    if (!r || r.stats && r.stats.aborted) return M.b.warn("frag loader destroy or aborted, disarm abandonRules"),
                                    this.clearTimer(),
                                    void(this._nextAutoLevel = -1);
                                    var s = r.stats;
                                    if (t && s && (!t.paused && 0 !== t.playbackRate || !t.readyState) && i.autoLevel && i.level) {
                                        var a = Ae.now() - s.trequest,
                                        o = Math.abs(t.playbackRate);
                                        if (a > 500 * i.duration / o) {
                                            var l = e.levels,
                                            u = Math.max(1, s.bw ? s.bw / 8 : 1e3 * s.loaded / a),
                                            h = l[i.level],
                                            d = h.realBitrate ? Math.max(h.realBitrate, h.bitrate) : h.bitrate,
                                            c = s.total ? s.total: Math.max(s.loaded, Math.round(i.duration * d / 8)),
                                            f = t.currentTime,
                                            p = (c - s.loaded) / u,
                                            v = (z.bufferInfo(t, f, e.config.maxBufferHole).end - f) / o;
                                            if (v < 2 * i.duration / o && v < p) {
                                                var m;
                                                for (m = i.level - 1; n < m; m--) {
                                                    var _ = l[m].realBitrate ? Math.max(l[m].realBitrate, l[m].bitrate) : l[m].bitrate;
                                                    if (i.duration * _ / (6.4 * u) < v) break
                                                }
                                                void 0 < p && (M.b.warn("loading too slow, abort fragment loading and switch to level " + m + ":fragLoadedDelay[" + m + "]<fragLoadedDelay[" + (i.level - 1) + "];bufferStarvationDelay:" + (void 0).toFixed(1) + "<" + p.toFixed(1) + ":" + v.toFixed(1)), e.nextLoadLevel = m, this._bwEstimator.sample(a, s.loaded), r.abort(), this.clearTimer(), e.trigger(P.a.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                    frag: i,
                                                    stats: s
                                                }))
                                            }
                                        }
                                    }
                                }
                            },
                            n.onFragLoaded = function(e) {
                                var t = e.frag;
                                if ("main" === t.type && Object(D.a)(t.sn)) {
                                    if (this.clearTimer(), this.lastLoadedFragLevel = t.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) {
                                        var i = this.hls.levels[t.level],
                                        r = (i.loaded ? i.loaded.bytes: 0) + e.stats.loaded,
                                        n = (i.loaded ? i.loaded.duration: 0) + e.frag.duration;
                                        i.loaded = {
                                            bytes: r,
                                            duration: n
                                        },
                                        i.realBitrate = Math.round(8 * r / n)
                                    }
                                    if (e.frag.bitrateTest) {
                                        var s = e.stats;
                                        s.tparsed = s.tbuffered = s.tload,
                                        this.onFragBuffered(e)
                                    }
                                }
                            },
                            n.onFragBuffered = function(e) {
                                var t = e.stats,
                                i = e.frag;
                                if (!0 !== t.aborted && "main" === i.type && Object(D.a)(i.sn) && (!i.bitrateTest || t.tload === t.tbuffered)) {
                                    var r = t.tparsed - t.trequest;
                                    M.b.log("latency/loading/parsing/append/kbps:" + Math.round(t.tfirst - t.trequest) + "/" + Math.round(t.tload - t.tfirst) + "/" + Math.round(t.tparsed - t.tload) + "/" + Math.round(t.tbuffered - t.tparsed) + "/" + Math.round(8 * t.loaded / (t.tbuffered - t.trequest))),
                                    this._bwEstimator.sample(r, t.loaded),
                                    t.bwEstimate = this._bwEstimator.getEstimate(),
                                    i.bitrateTest ? this.bitrateTestDelay = r / 1e3: this.bitrateTestDelay = 0
                                }
                            },
                            n.onError = function(e) {
                                switch (e.details) {
                                case c.a.FRAG_LOAD_ERROR:
                                case c.a.FRAG_LOAD_TIMEOUT:
                                    this.clearTimer()
                                }
                            },
                            n.clearTimer = function() {
                                clearInterval(this.timer),
                                this.timer = null
                            },
                            n._findBestLevel = function(e, t, i, r, n, s, a, o, l) {
                                for (var u = n; r <= u; u--) {
                                    var h = l[u];
                                    if (h) {
                                        var d = h.details,
                                        c = d ? d.totalduration / d.fragments.length: t,
                                        f = !!d && d.live,
                                        p = void 0;
                                        p = u <= e ? a * i: o * i;
                                        var v = l[u].realBitrate ? Math.max(l[u].realBitrate, l[u].bitrate) : l[u].bitrate,
                                        m = v * c / p;
                                        if (M.b.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + u + "/" + Math.round(p) + "/" + v + "/" + c + "/" + s + "/" + m), v < p && (!m || f && !this.bitrateTestDelay || m < s)) return u
                                    }
                                }
                                return - 1
                            },
                            we(r.prototype, [{
                                key: "nextAutoLevel",
                                get: function() {
                                    var e = this._nextAutoLevel,
                                    t = this._bwEstimator;
                                    if (! ( - 1 === e || t && t.canEstimate())) return e;
                                    var i = this._nextABRAutoLevel;
                                    return - 1 !== e && (i = Math.min(e, i)),
                                    i
                                },
                                set: function(e) {
                                    this._nextAutoLevel = e
                                }
                            },
                            {
                                key: "_nextABRAutoLevel",
                                get: function() {
                                    var e = this.hls,
                                    t = e.maxAutoLevel,
                                    i = e.levels,
                                    r = e.config,
                                    n = e.minAutoLevel,
                                    s = e.media,
                                    a = this.lastLoadedFragLevel,
                                    o = this.fragCurrent ? this.fragCurrent.duration: 0,
                                    l = s ? s.currentTime: 0,
                                    u = s && 0 !== s.playbackRate ? Math.abs(s.playbackRate) : 1,
                                    h = this._bwEstimator ? this._bwEstimator.getEstimate() : r.abrEwmaDefaultEstimate,
                                    d = (z.bufferInfo(s, l, r.maxBufferHole).end - l) / u,
                                    c = this._findBestLevel(a, o, h, n, t, d, r.abrBandWidthFactor, r.abrBandWidthUpFactor, i);
                                    if (0 <= c) return c;
                                    M.b.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                                    var f = o ? Math.min(o, r.maxStarvationDelay) : r.maxStarvationDelay,
                                    p = r.abrBandWidthFactor,
                                    v = r.abrBandWidthUpFactor;
                                    if (0 == d) {
                                        var m = this.bitrateTestDelay;
                                        m && (f = (o ? Math.min(o, r.maxLoadingDelay) : r.maxLoadingDelay) - m, M.b.trace("bitrate test took " + Math.round(1e3 * m) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * f) + " ms"), p = v = 1)
                                    }
                                    return c = this._findBestLevel(a, o, h, n, t, d + f, p, v, i),
                                    Math.max(c, 0)
                                }
                            }]),
                            r
                        } (o),
                        Ie = W(),
                        xe = function(t) {
                            var e, i;
                            function r(e) {
                                var o;
                                return (o = t.call(this, e, P.a.MEDIA_ATTACHING, P.a.MEDIA_DETACHING, P.a.MANIFEST_PARSED, P.a.BUFFER_RESET, P.a.BUFFER_APPENDING, P.a.BUFFER_CODECS, P.a.BUFFER_EOS, P.a.BUFFER_FLUSHING, P.a.LEVEL_PTS_UPDATED, P.a.LEVEL_UPDATED) || this)._msDuration = null,
                                o._levelDuration = null,
                                o._levelTargetDuration = 10,
                                o._live = null,
                                o._objectUrl = null,
                                o._needsFlush = !1,
                                o._needsEos = !1,
                                o.config = void 0,
                                o.audioTimestampOffset = void 0,
                                o.bufferCodecEventsExpected = 0,
                                o.media = null,
                                o.mediaSource = null,
                                o.segments = [],
                                o.parent = void 0,
                                o.appending = !1,
                                o.appended = 0,
                                o.appendError = 0,
                                o.flushBufferCounter = 0,
                                o.tracks = {},
                                o.pendingTracks = {},
                                o.sourceBuffer = {},
                                o.flushRange = [],
                                o._onMediaSourceOpen = function() {
                                    M.b.log("media source opened"),
                                    o.hls.trigger(P.a.MEDIA_ATTACHED, {
                                        media: o.media
                                    });
                                    var e = o.mediaSource;
                                    e && e.removeEventListener("sourceopen", o._onMediaSourceOpen),
                                    o.checkPendingTracks()
                                },
                                o._onMediaSourceClose = function() {
                                    M.b.log("media source closed")
                                },
                                o._onMediaSourceEnded = function() {
                                    M.b.log("media source ended")
                                },
                                o._onSBUpdateEnd = function() {
                                    if (o.audioTimestampOffset && o.sourceBuffer.audio) {
                                        var e = o.sourceBuffer.audio;
                                        M.b.warn("change mpeg audio timestamp offset from " + e.timestampOffset + " to " + o.audioTimestampOffset),
                                        e.timestampOffset = o.audioTimestampOffset,
                                        delete o.audioTimestampOffset
                                    }
                                    o._needsFlush && o.doFlush(),
                                    o._needsEos && o.checkEos(),
                                    o.appending = !1;
                                    var i = o.parent,
                                    t = o.segments.reduce(function(e, t) {
                                        return t.parent === i ? e + 1 : e
                                    },
                                    0),
                                    r = {},
                                    n = o.sourceBuffer;
                                    for (var s in n) {
                                        var a = n[s];
                                        if (!a) throw Error("handling source buffer update end error: source buffer for " + s + " uninitilized and unable to update buffered TimeRanges.");
                                        r[s] = a.buffered
                                    }
                                    o.hls.trigger(P.a.BUFFER_APPENDED, {
                                        parent: i,
                                        pending: t,
                                        timeRanges: r
                                    }),
                                    o._needsFlush || o.doAppending(),
                                    o.updateMediaElementDuration(),
                                    0 === t && o.flushLiveBackBuffer()
                                },
                                o._onSBUpdateError = function(e) {
                                    M.b.error("sourceBuffer error:", e),
                                    o.hls.trigger(P.a.ERROR, {
                                        type: c.b.MEDIA_ERROR,
                                        details: c.a.BUFFER_APPENDING_ERROR,
                                        fatal: !1
                                    })
                                },
                                o.config = e.config,
                                o
                            }
                            i = t,
                            (e = r).prototype = Object.create(i.prototype),
                            (e.prototype.constructor = e).__proto__ = i;
                            var n = r.prototype;
                            return n.destroy = function() {
                                o.prototype.destroy.call(this)
                            },
                            n.onLevelPtsUpdated = function(e) {
                                var t = e.type,
                                i = this.tracks.audio;
                                if ("audio" === t && i && "audio/mpeg" === i.container) {
                                    var r = this.sourceBuffer.audio;
                                    if (!r) throw Error("Level PTS Updated and source buffer for audio uninitalized");
                                    if (.1 < Math.abs(r.timestampOffset - e.start)) {
                                        var n = r.updating;
                                        try {
                                            r.abort()
                                        } catch(e) {
                                            M.b.warn("can not abort audio buffer: " + e)
                                        }
                                        n ? this.audioTimestampOffset = e.start: (M.b.warn("change mpeg audio timestamp offset from " + r.timestampOffset + " to " + e.start), r.timestampOffset = e.start)
                                    }
                                }
                            },
                            n.onManifestParsed = function(e) {
                                this.bufferCodecEventsExpected = e.altAudio ? 2 : 1,
                                M.b.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
                            },
                            n.onMediaAttaching = function(e) {
                                var t = this.media = e.media;
                                if (t) {
                                    var i = this.mediaSource = new Ie;
                                    i.addEventListener("sourceopen", this._onMediaSourceOpen),
                                    i.addEventListener("sourceended", this._onMediaSourceEnded),
                                    i.addEventListener("sourceclose", this._onMediaSourceClose),
                                    t.src = window.URL.createObjectURL(i),
                                    this._objectUrl = t.src
                                }
                            },
                            n.onMediaDetaching = function() {
                                M.b.log("media source detaching");
                                var e = this.mediaSource;
                                if (e) {
                                    if ("open" === e.readyState) try {
                                        e.endOfStream()
                                    } catch(e) {
                                        M.b.warn("onMediaDetaching:" + e.message + " while calling endOfStream")
                                    }
                                    e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                                    e.removeEventListener("sourceended", this._onMediaSourceEnded),
                                    e.removeEventListener("sourceclose", this._onMediaSourceClose),
                                    this.media && (this._objectUrl && window.URL.revokeObjectURL(this._objectUrl), this.media.src === this._objectUrl ? (this.media.removeAttribute("src"), this.media.load()) : M.b.warn("media.src was changed by a third party - skip cleanup")),
                                    this.mediaSource = null,
                                    this.media = null,
                                    this._objectUrl = null,
                                    this.pendingTracks = {},
                                    this.tracks = {},
                                    this.sourceBuffer = {},
                                    this.flushRange = [],
                                    this.segments = [],
                                    this.appended = 0
                                }
                                this.hls.trigger(P.a.MEDIA_DETACHED)
                            },
                            n.checkPendingTracks = function() {
                                var e = this.bufferCodecEventsExpected,
                                t = this.pendingTracks,
                                i = Object.keys(t).length; (i && !e || 2 === i) && (this.createSourceBuffers(t), this.pendingTracks = {},
                                this.doAppending())
                            },
                            n.onBufferReset = function() {
                                var e = this.sourceBuffer;
                                for (var t in e) {
                                    var i = e[t];
                                    try {
                                        i && (this.mediaSource && this.mediaSource.removeSourceBuffer(i), i.removeEventListener("updateend", this._onSBUpdateEnd), i.removeEventListener("error", this._onSBUpdateError))
                                    } catch(e) {}
                                }
                                this.sourceBuffer = {},
                                this.flushRange = [],
                                this.segments = [],
                                this.appended = 0
                            },
                            n.onBufferCodecs = function(t) {
                                var i = this;
                                Object.keys(this.sourceBuffer).length || (Object.keys(t).forEach(function(e) {
                                    i.pendingTracks[e] = t[e]
                                }), this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0), this.mediaSource && "open" === this.mediaSource.readyState && this.checkPendingTracks())
                            },
                            n.createSourceBuffers = function(e) {
                                var t = this.sourceBuffer,
                                i = this.mediaSource;
                                if (!i) throw Error("createSourceBuffers called when mediaSource was null");
                                for (var r in e) if (!t[r]) {
                                    var n = e[r];
                                    if (!n) throw Error("source buffer exists for track " + r + ", however track does not");
                                    var s = n.levelCodec || n.codec,
                                    a = n.container + ";codecs=" + s;
                                    M.b.log("creating sourceBuffer(" + a + ")");
                                    try {
                                        var o = t[r] = i.addSourceBuffer(a);
                                        o.addEventListener("updateend", this._onSBUpdateEnd),
                                        o.addEventListener("error", this._onSBUpdateError),
                                        this.tracks[r] = {
                                            buffer: o,
                                            codec: s,
                                            container: n.container,
                                            levelCodec: n.levelCodec
                                        }
                                    } catch(e) {
                                        M.b.error("error while trying to add sourceBuffer:" + e.message),
                                        this.hls.trigger(P.a.ERROR, {
                                            type: c.b.MEDIA_ERROR,
                                            details: c.a.BUFFER_ADD_CODEC_ERROR,
                                            fatal: !1,
                                            err: e,
                                            mimeType: a
                                        })
                                    }
                                }
                                this.hls.trigger(P.a.BUFFER_CREATED, {
                                    tracks: this.tracks
                                })
                            },
                            n.onBufferAppending = function(e) {
                                this._needsFlush || (this.segments ? this.segments.push(e) : this.segments = [e], this.doAppending())
                            },
                            n.onBufferEos = function(e) {
                                for (var t in this.sourceBuffer) if (!e.type || e.type === t) {
                                    var i = this.sourceBuffer[t];
                                    i && !i.ended && (i.ended = !0, M.b.log(t + " sourceBuffer now EOS"))
                                }
                                this.checkEos()
                            },
                            n.checkEos = function() {
                                var e = this.sourceBuffer,
                                t = this.mediaSource;
                                if (t && "open" === t.readyState) {
                                    for (var i in e) {
                                        var r = e[i];
                                        if (r) {
                                            if (!r.ended) return;
                                            if (r.updating) return void(this._needsEos = !0)
                                        }
                                    }
                                    M.b.log("all media data are available, signal endOfStream() to MediaSource and stop loading fragment");
                                    try {
                                        t.endOfStream()
                                    } catch(e) {
                                        M.b.warn("exception while calling mediaSource.endOfStream()")
                                    }
                                    this._needsEos = !1
                                } else this._needsEos = !1
                            },
                            n.onBufferFlushing = function(e) {
                                e.type ? this.flushRange.push({
                                    start: e.startOffset,
                                    end: e.endOffset,
                                    type: e.type
                                }) : (this.flushRange.push({
                                    start: e.startOffset,
                                    end: e.endOffset,
                                    type: "video"
                                }), this.flushRange.push({
                                    start: e.startOffset,
                                    end: e.endOffset,
                                    type: "audio"
                                })),
                                this.flushBufferCounter = 0,
                                this.doFlush()
                            },
                            n.flushLiveBackBuffer = function() {
                                if (!this.media) throw Error("flushLiveBackBuffer called without attaching media");
                                if (this._live) {
                                    var e = this.config.liveBackBufferLength;
                                    if (isFinite(e) && !(e < 0)) for (var t = this.media.currentTime,
                                    i = this.sourceBuffer,
                                    r = Object.keys(i), n = t - Math.max(e, this._levelTargetDuration), s = r.length - 1; 0 <= s; s--) {
                                        var a = r[s],
                                        o = i[a];
                                        if (o) {
                                            var l = o.buffered;
                                            0 < l.length && n > l.start(0) && this.removeBufferRange(a, o, 0, n)
                                        }
                                    }
                                }
                            },
                            n.onLevelUpdated = function(e) {
                                var t = e.details;
                                0 < t.fragments.length && (this._levelDuration = t.totalduration + t.fragments[0].start, this._levelTargetDuration = t.averagetargetduration || t.targetduration || 10, this._live = t.live, this.updateMediaElementDuration())
                            },
                            n.updateMediaElementDuration = function() {
                                var e, t = this.config;
                                if (null !== this._levelDuration && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && "open" === this.mediaSource.readyState) {
                                    for (var i in this.sourceBuffer) {
                                        var r = this.sourceBuffer[i];
                                        if (r && !0 === r.updating) return
                                    }
                                    e = this.media.duration,
                                    null === this._msDuration && (this._msDuration = this.mediaSource.duration),
                                    !0 === this._live && !0 === t.liveDurationInfinity ? (M.b.log("Media Source duration is set to Infinity"), this._msDuration = this.mediaSource.duration = 1 / 0) : (this._levelDuration > this._msDuration && this._levelDuration > e || !Object(D.a)(e)) && (M.b.log("Updating Media Source duration to " + this._levelDuration.toFixed(3)), this._msDuration = this.mediaSource.duration = this._levelDuration)
                                }
                            },
                            n.doFlush = function() {
                                for (; this.flushRange.length;) {
                                    var e = this.flushRange[0];
                                    if (!this.flushBuffer(e.start, e.end, e.type)) return void(this._needsFlush = !0);
                                    this.flushRange.shift(),
                                    this.flushBufferCounter = 0
                                }
                                if (0 === this.flushRange.length) {
                                    this._needsFlush = !1;
                                    var t = 0,
                                    i = this.sourceBuffer;
                                    try {
                                        for (var r in i) {
                                            var n = i[r];
                                            n && (t += n.buffered.length)
                                        }
                                    } catch(e) {
                                        M.b.error("error while accessing sourceBuffer.buffered")
                                    }
                                    this.appended = t,
                                    this.hls.trigger(P.a.BUFFER_FLUSHED)
                                }
                            },
                            n.doAppending = function() {
                                var e = this.config,
                                t = this.hls,
                                i = this.segments,
                                r = this.sourceBuffer;
                                if (Object.keys(r).length) {
                                    if (!this.media || this.media.error) return this.segments = [],
                                    void M.b.error("trying to append although a media error occured, flush segment and abort");
                                    if (!this.appending) {
                                        var n = i.shift();
                                        if (n) try {
                                            var s = r[n.type];
                                            if (!s) return void this._onSBUpdateEnd();
                                            if (s.updating) return void i.unshift(n);
                                            s.ended = !1,
                                            this.parent = n.parent,
                                            s.appendBuffer(n.data),
                                            this.appendError = 0,
                                            this.appended++,
                                            this.appending = !0
                                        } catch(r) {
                                            M.b.error("error while trying to append buffer:" + r.message),
                                            i.unshift(n);
                                            var a = {
                                                type: c.b.MEDIA_ERROR,
                                                parent: n.parent,
                                                details: "",
                                                fatal: !1
                                            };
                                            22 === r.code ? (this.segments = [], a.details = c.a.BUFFER_FULL_ERROR) : (this.appendError++, a.details = c.a.BUFFER_APPEND_ERROR, this.appendError > e.appendErrorMaxRetry && (M.b.log("fail " + e.appendErrorMaxRetry + " times to append segment in sourceBuffer"), this.segments = [], a.fatal = !0)),
                                            t.trigger(P.a.ERROR, a)
                                        }
                                    }
                                }
                            },
                            n.flushBuffer = function(e, t, i) {
                                var r = this.sourceBuffer;
                                if (!Object.keys(r).length) return ! 0;
                                var n = "null";
                                if (this.media && (n = this.media.currentTime.toFixed(3)), M.b.log("flushBuffer,pos/start/end: " + n + "/" + e + "/" + t), this.flushBufferCounter >= this.appended) return M.b.warn("abort flushing too many retries"),
                                !0;
                                var s = r[i];
                                if (s) {
                                    if (s.ended = !1, s.updating) return M.b.warn("cannot flush, sb updating in progress"),
                                    !1;
                                    if (this.removeBufferRange(i, s, e, t)) return this.flushBufferCounter++,
                                    !1
                                }
                                return M.b.log("buffer flushed"),
                                !0
                            },
                            n.removeBufferRange = function(e, t, i, r) {
                                try {
                                    for (var n = 0; n < t.buffered.length; n++) {
                                        var s = t.buffered.start(n),
                                        a = t.buffered.end(n),
                                        o = Math.max(s, i),
                                        l = Math.min(a, r);
                                        if (.5 < Math.min(l, a) - o) {
                                            var u = "null";
                                            return this.media && (u = this.media.currentTime.toString()),
                                            M.b.log("sb remove " + e + " [" + o + "," + l + "], of [" + s + "," + a + "], pos:" + u),
                                            t.remove(o, l),
                                            !0
                                        }
                                    }
                                } catch(e) {
                                    M.b.warn("removeBufferRange failed", e)
                                }
                                return ! 1
                            },
                            r
                        } (o);
                        function Oe(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        var Ce = function(i) {
                            var e, t;
                            function n(e) {
                                var t;
                                return (t = i.call(this, e, P.a.FPS_DROP_LEVEL_CAPPING, P.a.MEDIA_ATTACHING, P.a.MANIFEST_PARSED, P.a.BUFFER_CODECS, P.a.MEDIA_DETACHING) || this).autoLevelCapping = Number.POSITIVE_INFINITY,
                                t.firstLevel = null,
                                t.levels = [],
                                t.media = null,
                                t.restrictedLevels = [],
                                t.timer = null,
                                t
                            }
                            t = i,
                            (e = n).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var r, s, a = n.prototype;
                            return a.destroy = function() {
                                this.hls.config.capLevelToPlayerSize && (this.media = null, this.stopCapping())
                            },
                            a.onFpsDropLevelCapping = function(e) {
                                n.isLevelAllowed(e.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(e.droppedLevel)
                            },
                            a.onMediaAttaching = function(e) {
                                this.media = e.media instanceof window.HTMLVideoElement ? e.media: null
                            },
                            a.onManifestParsed = function(e) {
                                var t = this.hls;
                                this.restrictedLevels = [],
                                this.levels = e.levels,
                                this.firstLevel = e.firstLevel,
                                t.config.capLevelToPlayerSize && e.video && this.startCapping()
                            },
                            a.onBufferCodecs = function(e) {
                                this.hls.config.capLevelToPlayerSize && e.video && this.startCapping()
                            },
                            a.onLevelsUpdated = function(e) {
                                this.levels = e.levels
                            },
                            a.onMediaDetaching = function() {
                                this.stopCapping()
                            },
                            a.detectPlayerSize = function() {
                                if (this.media) {
                                    var e = this.levels ? this.levels.length: 0;
                                    if (e) {
                                        var t = this.hls;
                                        t.autoLevelCapping = this.getMaxLevel(e - 1),
                                        t.autoLevelCapping > this.autoLevelCapping && t.streamController.nextLevelSwitch(),
                                        this.autoLevelCapping = t.autoLevelCapping
                                    }
                                }
                            },
                            a.getMaxLevel = function(i) {
                                var r = this;
                                if (!this.levels) return - 1;
                                var e = this.levels.filter(function(e, t) {
                                    return n.isLevelAllowed(t, r.restrictedLevels) && t <= i
                                });
                                return n.getMaxLevelByMediaSize(e, this.mediaWidth, this.mediaHeight)
                            },
                            a.startCapping = function() {
                                this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), clearInterval(this.timer), this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
                            },
                            a.stopCapping = function() {
                                this.restrictedLevels = [],
                                this.firstLevel = null,
                                this.autoLevelCapping = Number.POSITIVE_INFINITY,
                                this.timer && (this.timer = clearInterval(this.timer), this.timer = null)
                            },
                            n.isLevelAllowed = function(e, t) {
                                return void 0 === t && (t = []),
                                -1 === t.indexOf(e)
                            },
                            n.getMaxLevelByMediaSize = function(e, t, i) {
                                if (!e || e && !e.length) return - 1;
                                for (var r, n, s = e.length - 1,
                                a = 0; a < e.length; a += 1) {
                                    var o = e[a];
                                    if ((o.width >= t || o.height >= i) && (r = o, !(n = e[a + 1]) || r.width !== n.width || r.height !== n.height)) {
                                        s = a;
                                        break
                                    }
                                }
                                return s
                            },
                            s = [{
                                key: "contentScaleFactor",
                                get: function() {
                                    var e = 1;
                                    try {
                                        e = window.devicePixelRatio
                                    } catch(e) {}
                                    return e
                                }
                            }],
                            Oe((r = n).prototype, [{
                                key: "mediaWidth",
                                get: function() {
                                    var e, t = this.media;
                                    return t && (e = t.width || t.clientWidth || t.offsetWidth, e *= n.contentScaleFactor),
                                    e
                                }
                            },
                            {
                                key: "mediaHeight",
                                get: function() {
                                    var e, t = this.media;
                                    return t && (e = t.height || t.clientHeight || t.offsetHeight, e *= n.contentScaleFactor),
                                    e
                                }
                            }]),
                            Oe(r, s),
                            n
                        } (o),
                        Le = window.performance,
                        De = function(t) {
                            var e, i;
                            function r(e) {
                                return t.call(this, e, P.a.MEDIA_ATTACHING) || this
                            }
                            i = t,
                            (e = r).prototype = Object.create(i.prototype),
                            (e.prototype.constructor = e).__proto__ = i;
                            var n = r.prototype;
                            return n.destroy = function() {
                                this.timer && clearInterval(this.timer),
                                this.isVideoPlaybackQualityAvailable = !1
                            },
                            n.onMediaAttaching = function(e) {
                                var t = this.hls.config;
                                t.capLevelOnFPSDrop && ("function" == typeof(this.video = e.media instanceof window.HTMLVideoElement ? e.media: null).getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), clearInterval(this.timer), this.timer = setInterval(this.checkFPSInterval.bind(this), t.fpsDroppedMonitoringPeriod))
                            },
                            n.checkFPS = function(e, t, i) {
                                var r = Le.now();
                                if (t) {
                                    if (this.lastTime) {
                                        var n = r - this.lastTime,
                                        s = i - this.lastDroppedFrames,
                                        a = t - this.lastDecodedFrames,
                                        o = 1e3 * s / n,
                                        l = this.hls;
                                        if (l.trigger(P.a.FPS_DROP, {
                                            currentDropped: s,
                                            currentDecoded: a,
                                            totalDroppedFrames: i
                                        }), 0 < o && s > l.config.fpsDroppedMonitoringThreshold * a) {
                                            var u = l.currentLevel;
                                            M.b.warn("drop FPS ratio greater than max allowed value for currentLevel: " + u),
                                            0 < u && ( - 1 === l.autoLevelCapping || l.autoLevelCapping >= u) && (u -= 1, l.trigger(P.a.FPS_DROP_LEVEL_CAPPING, {
                                                level: u,
                                                droppedLevel: l.currentLevel
                                            }), l.autoLevelCapping = u, l.streamController.nextLevelSwitch())
                                        }
                                    }
                                    this.lastTime = r,
                                    this.lastDroppedFrames = i,
                                    this.lastDecodedFrames = t
                                }
                            },
                            n.checkFPSInterval = function() {
                                var e = this.video;
                                if (e) if (this.isVideoPlaybackQualityAvailable) {
                                    var t = e.getVideoPlaybackQuality();
                                    this.checkFPS(e, t.totalVideoFrames, t.droppedVideoFrames)
                                } else this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount)
                            },
                            r
                        } (o),
                        Pe = window,
                        Me = Pe.performance,
                        Fe = Pe.XMLHttpRequest,
                        Ne = function() {
                            function e(e) {
                                e && e.xhrSetup && (this.xhrSetup = e.xhrSetup)
                            }
                            var t = e.prototype;
                            return t.destroy = function() {
                                this.abort(),
                                this.loader = null
                            },
                            t.abort = function() {
                                var e = this.loader;
                                e && 4 !== e.readyState && (this.stats.aborted = !0, e.abort()),
                                window.clearTimeout(this.requestTimeout),
                                this.requestTimeout = null,
                                window.clearTimeout(this.retryTimeout),
                                this.retryTimeout = null
                            },
                            t.load = function(e, t, i) {
                                this.context = e,
                                this.config = t,
                                this.callbacks = i,
                                this.stats = {
                                    trequest: Me.now(),
                                    retry: 0
                                },
                                this.retryDelay = t.retryDelay,
                                this.loadInternal()
                            },
                            t.loadInternal = function() {
                                var e, t = this.context;
                                e = this.loader = new Fe;
                                var i = this.stats;
                                i.tfirst = 0,
                                i.loaded = 0;
                                var r = this.xhrSetup;
                                try {
                                    if (r) try {
                                        r(e, t.url)
                                    } catch(i) {
                                        e.open("GET", t.url, !0),
                                        r(e, t.url)
                                    }
                                    e.readyState || e.open("GET", t.url, !0)
                                } catch(i) {
                                    return void this.callbacks.onError({
                                        code: e.status,
                                        text: i.message
                                    },
                                    t, e)
                                }
                                t.rangeEnd && e.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd - 1)),
                                e.onreadystatechange = this.readystatechange.bind(this),
                                e.onprogress = this.loadprogress.bind(this),
                                e.responseType = t.responseType,
                                this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout),
                                e.send()
                            },
                            t.readystatechange = function(e) {
                                var t = e.currentTarget,
                                i = t.readyState,
                                r = this.stats,
                                n = this.context,
                                s = this.config;
                                if (!r.aborted && 2 <= i) if (window.clearTimeout(this.requestTimeout), 0 === r.tfirst && (r.tfirst = Math.max(Me.now(), r.trequest)), 4 === i) {
                                    var a = t.status;
                                    if (200 <= a && a < 300) {
                                        var o, l;
                                        r.tload = Math.max(r.tfirst, Me.now()),
                                        l = "arraybuffer" === n.responseType ? (o = t.response).byteLength: (o = t.responseText).length,
                                        r.loaded = r.total = l;
                                        var u = {
                                            url: t.responseURL,
                                            data: o
                                        };
                                        this.callbacks.onSuccess(u, r, n, t)
                                    } else r.retry >= s.maxRetry || 400 <= a && a < 499 ? (M.b.error(a + " while loading " + n.url), this.callbacks.onError({
                                        code: a,
                                        text: t.statusText
                                    },
                                    n, t)) : (M.b.warn(a + " while loading " + n.url + ", retrying in " + this.retryDelay + "..."), this.destroy(), this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, s.maxRetryDelay), r.retry++)
                                } else this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), s.timeout)
                            },
                            t.loadtimeout = function() {
                                M.b.warn("timeout while loading " + this.context.url),
                                this.callbacks.onTimeout(this.stats, this.context, null)
                            },
                            t.loadprogress = function(e) {
                                var t = e.currentTarget,
                                i = this.stats;
                                i.loaded = e.loaded,
                                e.lengthComputable && (i.total = e.total);
                                var r = this.callbacks.onProgress;
                                r && r(i, this.context, null, t)
                            },
                            e
                        } ();
                        function Be(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        var Ue = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.MANIFEST_LOADING, P.a.MANIFEST_PARSED, P.a.AUDIO_TRACK_LOADED, P.a.AUDIO_TRACK_SWITCHED, P.a.LEVEL_LOADED, P.a.ERROR) || this)._trackId = -1,
                                t._selectDefaultTrack = !0,
                                t.tracks = [],
                                t.trackIdBlacklist = Object.create(null),
                                t.audioGroupId = null,
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.onManifestLoading = function() {
                                this.tracks = [],
                                this._trackId = -1,
                                this._selectDefaultTrack = !0
                            },
                            n.onManifestParsed = function(e) {
                                var t = this.tracks = e.audioTracks || [];
                                this.hls.trigger(P.a.AUDIO_TRACKS_UPDATED, {
                                    audioTracks: t
                                })
                            },
                            n.onAudioTrackLoaded = function(e) {
                                if (e.id >= this.tracks.length) M.b.warn("Invalid audio track id:", e.id);
                                else {
                                    if (M.b.log("audioTrack " + e.id + " loaded"), this.tracks[e.id].details = e.details, e.details.live && !this.hasInterval()) {
                                        var t = 1e3 * e.details.targetduration;
                                        this.setInterval(t)
                                    } ! e.details.live && this.hasInterval() && this.clearInterval()
                                }
                            },
                            n.onAudioTrackSwitched = function(e) {
                                var t = this.tracks[e.id].groupId;
                                t && this.audioGroupId !== t && (this.audioGroupId = t)
                            },
                            n.onLevelLoaded = function(e) {
                                var t = this.hls.levels[e.level];
                                if (t.audioGroupIds) {
                                    var i = t.audioGroupIds[t.urlId];
                                    this.audioGroupId !== i && (this.audioGroupId = i, this._selectInitialAudioTrack())
                                }
                            },
                            n.onError = function(e) {
                                e.type === c.b.NETWORK_ERROR && (e.fatal && this.clearInterval(), e.details === c.a.AUDIO_TRACK_LOAD_ERROR && (M.b.warn("Network failure on audio-track id:", e.context.id), this._handleLoadError()))
                            },
                            n._setAudioTrack = function(e) {
                                if (this._trackId === e && this.tracks[this._trackId].details) M.b.debug("Same id as current audio-track passed, and track details available -> no-op");
                                else if (e < 0 || e >= this.tracks.length) M.b.warn("Invalid id passed to audio-track controller");
                                else {
                                    var t = this.tracks[e];
                                    M.b.log("Now switching to audio-track index " + e),
                                    this.clearInterval(),
                                    this._trackId = e;
                                    var i = t.url,
                                    r = t.type,
                                    n = t.id;
                                    this.hls.trigger(P.a.AUDIO_TRACK_SWITCHING, {
                                        id: n,
                                        type: r,
                                        url: i
                                    }),
                                    this._loadTrackDetailsIfNeeded(t)
                                }
                            },
                            n.doTick = function() {
                                this._updateTrack(this._trackId)
                            },
                            n._selectInitialAudioTrack = function() {
                                var t = this,
                                e = this.tracks;
                                if (e.length) {
                                    var i = this.tracks[this._trackId],
                                    r = null;
                                    if (i && (r = i.name), this._selectDefaultTrack) {
                                        var n = e.filter(function(e) {
                                            return e.
                                        default
                                        });
                                        n.length ? e = n: M.b.warn("No default audio tracks defined")
                                    }
                                    var s = !1,
                                    a = function() {
                                        e.forEach(function(e) {
                                            s || t.audioGroupId && e.groupId !== t.audioGroupId || r && r !== e.name || (t._setAudioTrack(e.id), s = !0)
                                        })
                                    };
                                    a(),
                                    s || (r = null, a()),
                                    s || (M.b.error("No track found for running audio group-ID: " + this.audioGroupId), this.hls.trigger(P.a.ERROR, {
                                        type: c.b.MEDIA_ERROR,
                                        details: c.a.AUDIO_TRACK_LOAD_ERROR,
                                        fatal: !0
                                    }))
                                }
                            },
                            n._needsTrackLoading = function(e) {
                                var t = e.details,
                                i = e.url;
                                return ! (t && !t.live || !i)
                            },
                            n._loadTrackDetailsIfNeeded = function(e) {
                                if (this._needsTrackLoading(e)) {
                                    var t = e.url,
                                    i = e.id;
                                    M.b.log("loading audio-track playlist for id: " + i),
                                    this.hls.trigger(P.a.AUDIO_TRACK_LOADING, {
                                        url: t,
                                        id: i
                                    })
                                }
                            },
                            n._updateTrack = function(e) {
                                if (! (e < 0 || e >= this.tracks.length)) {
                                    this.clearInterval(),
                                    this._trackId = e,
                                    M.b.log("trying to update audio-track " + e);
                                    var t = this.tracks[e];
                                    this._loadTrackDetailsIfNeeded(t)
                                }
                            },
                            n._handleLoadError = function() {
                                this.trackIdBlacklist[this._trackId] = !0;
                                var e = this._trackId,
                                t = this.tracks[e],
                                i = t.name,
                                r = t.language,
                                n = t.groupId;
                                M.b.warn("Loading failed on audio track id: " + e + ", group-id: " + n + ', name/language: "' + i + '" / "' + r + '"');
                                for (var s = e,
                                a = 0; a < this.tracks.length; a++) if (!this.trackIdBlacklist[a] && this.tracks[a].name === i) {
                                    s = a;
                                    break
                                }
                                s !== e ? (M.b.log("Attempting audio-track fallback id:", s, "group-id:", this.tracks[s].groupId), this._setAudioTrack(s)) : M.b.warn('No fallback audio-track found for name/language: "' + i + '" / "' + r + '"')
                            },
                            Be(r.prototype, [{
                                key: "audioTracks",
                                get: function() {
                                    return this.tracks
                                }
                            },
                            {
                                key: "audioTrack",
                                get: function() {
                                    return this._trackId
                                },
                                set: function(e) {
                                    this._setAudioTrack(e),
                                    this._selectDefaultTrack = !1
                                }
                            }]),
                            r
                        } (he);
                        function je(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        var ze = window.performance,
                        Ge = function(r) {
                            var e, t;
                            function i(e, t) {
                                var i;
                                return (i = r.call(this, e, P.a.MEDIA_ATTACHED, P.a.MEDIA_DETACHING, P.a.AUDIO_TRACKS_UPDATED, P.a.AUDIO_TRACK_SWITCHING, P.a.AUDIO_TRACK_LOADED, P.a.KEY_LOADED, P.a.FRAG_LOADED, P.a.FRAG_PARSING_INIT_SEGMENT, P.a.FRAG_PARSING_DATA, P.a.FRAG_PARSED, P.a.ERROR, P.a.BUFFER_RESET, P.a.BUFFER_CREATED, P.a.BUFFER_APPENDED, P.a.BUFFER_FLUSHED, P.a.INIT_PTS_FOUND) || this).fragmentTracker = t,
                                i.config = e.config,
                                i.audioCodecSwap = !1,
                                i._state = de.STOPPED,
                                i.initPTS = [],
                                i.waitingFragment = null,
                                i.videoTrackCC = null,
                                i
                            }
                            t = r,
                            (e = i).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = i.prototype;
                            return n.onInitPtsFound = function(e) {
                                var t = e.id,
                                i = e.frag.cc,
                                r = e.initPTS;
                                "main" === t && (this.initPTS[i] = r, this.videoTrackCC = i, M.b.log("InitPTS for cc: " + i + " found from video track: " + r), this.state === de.WAITING_INIT_PTS && this.tick())
                            },
                            n.startLoad = function(e) {
                                if (this.tracks) {
                                    var t = this.lastCurrentTime;
                                    this.stopLoad(),
                                    this.setInterval(100),
                                    (this.fragLoadError = 0) < t && -1 === e ? (M.b.log("audio:override startPosition with lastCurrentTime @" + t.toFixed(3)), this.state = de.IDLE) : (this.lastCurrentTime = this.startPosition ? this.startPosition: e, this.state = de.STARTING),
                                    this.nextLoadPosition = this.startPosition = this.lastCurrentTime,
                                    this.tick()
                                } else this.startPosition = e,
                                this.state = de.STOPPED
                            },
                            n.doTick = function() {
                                var e, t, i, r = this.hls,
                                n = r.config;
                                switch (this.state) {
                                case de.ERROR:
                                case de.PAUSED:
                                case de.BUFFER_FLUSHING:
                                    break;
                                case de.STARTING:
                                    this.state = de.WAITING_TRACK,
                                    this.loadedmetadata = !1;
                                    break;
                                case de.IDLE:
                                    var s = this.tracks;
                                    if (!s) break;
                                    if (!this.media && (this.startFragRequested || !n.startFragPrefetch)) break;
                                    if (this.loadedmetadata) e = this.media.currentTime;
                                    else if (void 0 === (e = this.nextLoadPosition)) break;
                                    var a = this.mediaBuffer ? this.mediaBuffer: this.media,
                                    o = this.videoBuffer ? this.videoBuffer: this.media,
                                    l = z.bufferInfo(a, e, n.maxBufferHole),
                                    u = z.bufferInfo(o, e, n.maxBufferHole),
                                    h = l.len,
                                    d = l.end,
                                    c = this.fragPrevious,
                                    f = Math.min(n.maxBufferLength, n.maxMaxBufferLength),
                                    p = Math.max(f, u.len),
                                    v = this.audioSwitch,
                                    m = this.trackId;
                                    if ((h < p || v) && m < s.length) {
                                        if (void 0 === (i = s[m].details)) {
                                            this.state = de.WAITING_TRACK;
                                            break
                                        }
                                        if (!v && this._streamEnded(l, i)) return this.hls.trigger(P.a.BUFFER_EOS, {
                                            type: "audio"
                                        }),
                                        void(this.state = de.ENDED);
                                        var _, g = i.fragments,
                                        y = g.length,
                                        b = g[0].start,
                                        S = g[y - 1].start + g[y - 1].duration;
                                        if (v) if (i.live && !i.PTSKnown) M.b.log("switching audiotrack, live stream, unknown PTS,load first fragment"),
                                        d = 0;
                                        else if (d = e, i.PTSKnown && e < b) {
                                            if (! (l.end > b || l.nextStart)) return;
                                            M.b.log("alt audio track ahead of main track, seek to start of alt audio track"),
                                            this.media.currentTime = b + .05
                                        }
                                        if (i.initSegment && !i.initSegment.data) _ = i.initSegment;
                                        else if (d <= b) {
                                            if (_ = g[0], null !== this.videoTrackCC && _.cc !== this.videoTrackCC && (_ = function(e, t) {
                                                return j.search(e,
                                                function(e) {
                                                    return e.cc < t ? 1 : e.cc > t ? -1 : 0
                                                })
                                            } (g, this.videoTrackCC)), i.live && _.loadIdx && _.loadIdx === this.fragLoadIdx) {
                                                var E = l.nextStart ? l.nextStart: b;
                                                return M.b.log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (E + .05)),
                                                void(this.media.currentTime = E + .05)
                                            }
                                        } else {
                                            var k, w = n.maxFragLookUpTolerance,
                                            T = c ? g[c.sn - g[0].sn + 1] : void 0,
                                            A = function(e) {
                                                var t = Math.min(w, e.duration);
                                                return e.start + e.duration - t <= d ? 1 : e.start - t > d && e.start ? -1 : 0
                                            }; (k = d < S ? (S - w < d && (w = 0), T && !A(T) ? T: j.search(g, A)) : g[y - 1]) && (b = (_ = k).start, c && _.level === c.level && _.sn === c.sn && (_.sn < i.endSN ? (_ = g[_.sn + 1 - i.startSN], M.b.log("SN just loaded, load next one: " + _.sn)) : _ = null))
                                        }
                                        _ && (_.encrypted ? (M.b.log("Loading key for " + _.sn + " of [" + i.startSN + " ," + i.endSN + "],track " + m), this.state = de.KEY_LOADING, r.trigger(P.a.KEY_LOADING, {
                                            frag: _
                                        })) : (M.b.log("Loading " + _.sn + ", cc: " + _.cc + " of [" + i.startSN + " ," + i.endSN + "],track " + m + ", currentTime:" + e + ",bufferEnd:" + d.toFixed(3)), this.fragCurrent = _, !v && this.fragmentTracker.getState(_) !== U || ("initSegment" !== _.sn && (this.startFragRequested = !0), Object(D.a)(_.sn) && (this.nextLoadPosition = _.start + _.duration), r.trigger(P.a.FRAG_LOADING, {
                                            frag: _
                                        }), this.state = de.FRAG_LOADING)))
                                    }
                                    break;
                                case de.WAITING_TRACK:
                                    (t = this.tracks[this.trackId]) && t.details && (this.state = de.IDLE);
                                    break;
                                case de.FRAG_LOADING_WAITING_RETRY:
                                    var R = ze.now(),
                                    I = this.retryDate,
                                    x = (a = this.media) && a.seeking; (!I || I <= R || x) && (M.b.log("audioStreamController: retryDate reached, switch back to IDLE state"), this.state = de.IDLE);
                                    break;
                                case de.WAITING_INIT_PTS:
                                    var O = this.videoTrackCC;
                                    if (void 0 === this.initPTS[O]) break;
                                    var C = this.waitingFragment;
                                    if (C) {
                                        var L = C.frag.cc;
                                        O !== L ? (t = this.tracks[this.trackId]).details && t.details.live && (M.b.warn("Waiting fragment CC (" + L + ") does not match video track CC (" + O + ")"), this.waitingFragment = null, this.state = de.IDLE) : (this.state = de.FRAG_LOADING, this.onFragLoaded(this.waitingFragment), this.waitingFragment = null)
                                    } else this.state = de.IDLE
                                }
                            },
                            n.onMediaAttached = function(e) {
                                var t = this.media = this.mediaBuffer = e.media;
                                this.onvseeking = this.onMediaSeeking.bind(this),
                                this.onvended = this.onMediaEnded.bind(this),
                                t.addEventListener("seeking", this.onvseeking),
                                t.addEventListener("ended", this.onvended);
                                var i = this.config;
                                this.tracks && i.autoStartLoad && this.startLoad(i.startPosition)
                            },
                            n.onMediaDetaching = function() {
                                var e = this.media;
                                e && e.ended && (M.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0),
                                e && (e.removeEventListener("seeking", this.onvseeking), e.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null),
                                this.media = this.mediaBuffer = this.videoBuffer = null,
                                this.loadedmetadata = !1,
                                this.stopLoad()
                            },
                            n.onAudioTracksUpdated = function(e) {
                                M.b.log("audio tracks updated"),
                                this.tracks = e.audioTracks
                            },
                            n.onAudioTrackSwitching = function(e) {
                                var t = !!e.url;
                                this.trackId = e.id,
                                this.fragCurrent = null,
                                this.state = de.PAUSED,
                                this.waitingFragment = null,
                                t ? this.setInterval(100) : this.demuxer && (this.demuxer.destroy(), this.demuxer = null),
                                t && (this.audioSwitch = !0, this.state = de.IDLE),
                                this.tick()
                            },
                            n.onAudioTrackLoaded = function(e) {
                                var t = e.details,
                                i = e.id,
                                r = this.tracks[i],
                                n = t.totalduration,
                                s = 0;
                                if (M.b.log("track " + i + " loaded [" + t.startSN + "," + t.endSN + "],duration:" + n), t.live) {
                                    var a = r.details;
                                    a && 0 < t.fragments.length ? (Q(a, t), s = t.fragments[0].start, t.PTSKnown ? M.b.log("live audio playlist sliding:" + s.toFixed(3)) : M.b.log("live audio playlist - outdated PTS, unknown sliding")) : (t.PTSKnown = !1, M.b.log("live audio playlist - first load, unknown sliding"))
                                } else t.PTSKnown = !1;
                                if (r.details = t, !this.startFragRequested) {
                                    if ( - 1 === this.startPosition) {
                                        var o = t.startTimeOffset;
                                        Object(D.a)(o) ? (M.b.log("start time offset found in playlist, adjust startPosition to " + o), this.startPosition = o) : this.startPosition = 0
                                    }
                                    this.nextLoadPosition = this.startPosition
                                }
                                this.state === de.WAITING_TRACK && (this.state = de.IDLE),
                                this.tick()
                            },
                            n.onKeyLoaded = function() {
                                this.state === de.KEY_LOADING && (this.state = de.IDLE, this.tick())
                            },
                            n.onFragLoaded = function(e) {
                                var t = this.fragCurrent,
                                i = e.frag;
                                if (this.state === de.FRAG_LOADING && t && "audio" === i.type && i.level === t.level && i.sn === t.sn) {
                                    var r = this.tracks[this.trackId],
                                    n = r.details,
                                    s = n.totalduration,
                                    a = t.level,
                                    o = t.sn,
                                    l = t.cc,
                                    u = this.config.defaultAudioCodec || r.audioCodec || "mp4a.40.2",
                                    h = this.stats = e.stats;
                                    if ("initSegment" === o) this.state = de.IDLE,
                                    h.tparsed = h.tbuffered = ze.now(),
                                    n.initSegment.data = e.payload,
                                    this.hls.trigger(P.a.FRAG_BUFFERED, {
                                        stats: h,
                                        frag: t,
                                        id: "audio"
                                    }),
                                    this.tick();
                                    else {
                                        this.state = de.PARSING,
                                        this.appended = !1,
                                        this.demuxer || (this.demuxer = new Z(this.hls, "audio"));
                                        var d = this.initPTS[l],
                                        c = n.initSegment ? n.initSegment.data: [];
                                        n.initSegment || void 0 !== d ? (this.pendingBuffering = !0, M.b.log("Demuxing " + o + " of [" + n.startSN + " ," + n.endSN + "],track " + a), this.demuxer.push(e.payload, c, u, null, t, s, !1, d)) : (M.b.log("unknown video PTS for continuity counter " + l + ", waiting for video PTS before demuxing audio frag " + o + " of [" + n.startSN + " ," + n.endSN + "],track " + a), this.waitingFragment = e, this.state = de.WAITING_INIT_PTS)
                                    }
                                }
                                this.fragLoadError = 0
                            },
                            n.onFragParsingInitSegment = function(e) {
                                var t = this.fragCurrent,
                                i = e.frag;
                                if (t && "audio" === e.id && i.sn === t.sn && i.level === t.level && this.state === de.PARSING) {
                                    var r, n = e.tracks;
                                    if (n.video && delete n.video, r = n.audio) {
                                        r.levelCodec = r.codec,
                                        r.id = e.id,
                                        this.hls.trigger(P.a.BUFFER_CODECS, n),
                                        M.b.log("audio track:audio,container:" + r.container + ",codecs[level/parsed]=[" + r.levelCodec + "/" + r.codec + "]");
                                        var s = r.initSegment;
                                        if (s) {
                                            var a = {
                                                type: "audio",
                                                data: s,
                                                parent: "audio",
                                                content: "initSegment"
                                            };
                                            this.audioSwitch ? this.pendingData = [a] : (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(P.a.BUFFER_APPENDING, a))
                                        }
                                        this.tick()
                                    }
                                }
                            },
                            n.onFragParsingData = function(t) {
                                var i = this,
                                e = this.fragCurrent,
                                r = t.frag;
                                if (e && "audio" === t.id && "audio" === t.type && r.sn === e.sn && r.level === e.level && this.state === de.PARSING) {
                                    var n = this.trackId,
                                    s = this.tracks[n],
                                    a = this.hls;
                                    Object(D.a)(t.endPTS) || (t.endPTS = t.startPTS + e.duration, t.endDTS = t.startDTS + e.duration),
                                    e.addElementaryStream(f.AUDIO),
                                    M.b.log("parsed " + t.type + ",PTS:[" + t.startPTS.toFixed(3) + "," + t.endPTS.toFixed(3) + "],DTS:[" + t.startDTS.toFixed(3) + "/" + t.endDTS.toFixed(3) + "],nb:" + t.nb),
                                    $(s.details, e, t.startPTS, t.endPTS);
                                    var o = this.audioSwitch,
                                    l = this.media,
                                    u = !1;
                                    if (o) if (l && l.readyState) {
                                        var h = l.currentTime;
                                        M.b.log("switching audio track : currentTime:" + h),
                                        h >= t.startPTS && (M.b.log("switching audio track : flushing all audio"), this.state = de.BUFFER_FLUSHING, a.trigger(P.a.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: Number.POSITIVE_INFINITY,
                                            type: "audio"
                                        }), u = !0, this.audioSwitch = !1, a.trigger(P.a.AUDIO_TRACK_SWITCHED, {
                                            id: n
                                        }))
                                    } else this.audioSwitch = !1,
                                    a.trigger(P.a.AUDIO_TRACK_SWITCHED, {
                                        id: n
                                    });
                                    var d = this.pendingData;
                                    if (!d) return M.b.warn("Apparently attempt to enqueue media payload without codec initialization data upfront"),
                                    void a.trigger(P.a.ERROR, {
                                        type: c.b.MEDIA_ERROR,
                                        details: null,
                                        fatal: !0
                                    });
                                    this.audioSwitch || ([t.data1, t.data2].forEach(function(e) {
                                        e && e.length && d.push({
                                            type: t.type,
                                            data: e,
                                            parent: "audio",
                                            content: "data"
                                        })
                                    }), !u && d.length && (d.forEach(function(e) {
                                        i.state === de.PARSING && (i.pendingBuffering = !0, i.hls.trigger(P.a.BUFFER_APPENDING, e))
                                    }), this.pendingData = [], this.appended = !0)),
                                    this.tick()
                                }
                            },
                            n.onFragParsed = function(e) {
                                var t = this.fragCurrent,
                                i = e.frag;
                                t && "audio" === e.id && i.sn === t.sn && i.level === t.level && this.state === de.PARSING && (this.stats.tparsed = ze.now(), this.state = de.PARSED, this._checkAppendedParsed())
                            },
                            n.onBufferReset = function() {
                                this.mediaBuffer = this.videoBuffer = null,
                                this.loadedmetadata = !1
                            },
                            n.onBufferCreated = function(e) {
                                var t = e.tracks.audio;
                                t && (this.mediaBuffer = t.buffer, this.loadedmetadata = !0),
                                e.tracks.video && (this.videoBuffer = e.tracks.video.buffer)
                            },
                            n.onBufferAppended = function(e) {
                                if ("audio" === e.parent) {
                                    var t = this.state;
                                    t !== de.PARSING && t !== de.PARSED || (this.pendingBuffering = 0 < e.pending, this._checkAppendedParsed())
                                }
                            },
                            n._checkAppendedParsed = function() {
                                if (! (this.state !== de.PARSED || this.appended && this.pendingBuffering)) {
                                    var e = this.fragCurrent,
                                    t = this.stats,
                                    i = this.hls;
                                    if (e) {
                                        this.fragPrevious = e,
                                        t.tbuffered = ze.now(),
                                        i.trigger(P.a.FRAG_BUFFERED, {
                                            stats: t,
                                            frag: e,
                                            id: "audio"
                                        });
                                        var r = this.mediaBuffer ? this.mediaBuffer: this.media;
                                        r && M.b.log("audio buffered : " + ie.toString(r.buffered)),
                                        this.audioSwitch && this.appended && (this.audioSwitch = !1, i.trigger(P.a.AUDIO_TRACK_SWITCHED, {
                                            id: this.trackId
                                        })),
                                        this.state = de.IDLE
                                    }
                                    this.tick()
                                }
                            },
                            n.onError = function(e) {
                                var t = e.frag;
                                if (!t || "audio" === t.type) switch (e.details) {
                                case c.a.FRAG_LOAD_ERROR:
                                case c.a.FRAG_LOAD_TIMEOUT:
                                    var i = e.frag;
                                    if (i && "audio" !== i.type) break;
                                    if (!e.fatal) {
                                        var r = this.fragLoadError;
                                        r ? r++:r = 1;
                                        var n = this.config;
                                        if (r <= n.fragLoadingMaxRetry) {
                                            this.fragLoadError = r;
                                            var s = Math.min(Math.pow(2, r - 1) * n.fragLoadingRetryDelay, n.fragLoadingMaxRetryTimeout);
                                            M.b.warn("AudioStreamController: frag loading failed, retry in " + s + " ms"),
                                            this.retryDate = ze.now() + s,
                                            this.state = de.FRAG_LOADING_WAITING_RETRY
                                        } else M.b.error("AudioStreamController: " + e.details + " reaches max retry, redispatch as fatal ..."),
                                        e.fatal = !0,
                                        this.state = de.ERROR
                                    }
                                    break;
                                case c.a.AUDIO_TRACK_LOAD_ERROR:
                                case c.a.AUDIO_TRACK_LOAD_TIMEOUT:
                                case c.a.KEY_LOAD_ERROR:
                                case c.a.KEY_LOAD_TIMEOUT:
                                    this.state !== de.ERROR && (this.state = e.fatal ? de.ERROR: de.IDLE, M.b.warn("AudioStreamController: " + e.details + " while loading frag, now switching to " + this.state + " state ..."));
                                    break;
                                case c.a.BUFFER_FULL_ERROR:
                                    if ("audio" === e.parent && (this.state === de.PARSING || this.state === de.PARSED)) {
                                        var a = this.mediaBuffer,
                                        o = this.media.currentTime;
                                        if (a && z.isBuffered(a, o) && z.isBuffered(a, o + .5)) {
                                            var l = this.config;
                                            l.maxMaxBufferLength >= l.maxBufferLength && (l.maxMaxBufferLength /= 2, M.b.warn("AudioStreamController: reduce max buffer length to " + l.maxMaxBufferLength + "s")),
                                            this.state = de.IDLE
                                        } else M.b.warn("AudioStreamController: buffer full error also media.currentTime is not buffered, flush audio buffer"),
                                        this.fragCurrent = null,
                                        this.state = de.BUFFER_FLUSHING,
                                        this.hls.trigger(P.a.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: Number.POSITIVE_INFINITY,
                                            type: "audio"
                                        })
                                    }
                                }
                            },
                            n.onBufferFlushed = function() {
                                var t = this,
                                e = this.pendingData;
                                e && e.length ? (M.b.log("AudioStreamController: appending pending audio data after buffer flushed"), e.forEach(function(e) {
                                    t.hls.trigger(P.a.BUFFER_APPENDING, e)
                                }), this.appended = !0, this.pendingData = [], this.state = de.PARSED) : (this.state = de.IDLE, this.fragPrevious = null, this.tick())
                            },
                            je(i.prototype, [{
                                key: "state",
                                set: function(e) {
                                    if (this.state !== e) {
                                        var t = this.state;
                                        this._state = e,
                                        M.b.log("audio stream:" + t + "->" + e)
                                    }
                                },
                                get: function() {
                                    return this._state
                                }
                            }]),
                            i
                        } (ce),
                        Ve = function() {
                            if ("undefined" != typeof window && window.VTTCue) return window.VTTCue;
                            var y = {
                                "": !0,
                                lr: !0,
                                rl: !0
                            },
                            t = {
                                start: !0,
                                middle: !0,
                                end: !0,
                                left: !0,
                                right: !0
                            };
                            function b(e) {
                                return "string" == typeof e && !!t[e.toLowerCase()] && e.toLowerCase()
                            }
                            function S(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var i = arguments[t];
                                    for (var r in i) e[r] = i[r]
                                }
                                return e
                            }
                            function e(e, t, i) {
                                var r = this,
                                n = {
                                    enumerable: !0
                                };
                                r.hasBeenReset = !1;
                                var s = "",
                                a = !1,
                                o = e,
                                l = t,
                                u = i,
                                h = null,
                                d = "",
                                c = !0,
                                f = "auto",
                                p = "start",
                                v = 50,
                                m = "middle",
                                _ = 50,
                                g = "middle";
                                Object.defineProperty(r, "id", S({},
                                n, {
                                    get: function() {
                                        return s
                                    },
                                    set: function(e) {
                                        s = "" + e
                                    }
                                })),
                                Object.defineProperty(r, "pauseOnExit", S({},
                                n, {
                                    get: function() {
                                        return a
                                    },
                                    set: function(e) {
                                        a = !!e
                                    }
                                })),
                                Object.defineProperty(r, "startTime", S({},
                                n, {
                                    get: function() {
                                        return o
                                    },
                                    set: function(e) {
                                        if ("number" != typeof e) throw new TypeError("Start time must be set to a number.");
                                        o = e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "endTime", S({},
                                n, {
                                    get: function() {
                                        return l
                                    },
                                    set: function(e) {
                                        if ("number" != typeof e) throw new TypeError("End time must be set to a number.");
                                        l = e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "text", S({},
                                n, {
                                    get: function() {
                                        return u
                                    },
                                    set: function(e) {
                                        u = "" + e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "region", S({},
                                n, {
                                    get: function() {
                                        return h
                                    },
                                    set: function(e) {
                                        h = e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "vertical", S({},
                                n, {
                                    get: function() {
                                        return d
                                    },
                                    set: function(e) {
                                        var t = function(e) {
                                            return "string" == typeof e && !!y[e.toLowerCase()] && e.toLowerCase()
                                        } (e);
                                        if (!1 === t) throw new SyntaxError("An invalid or illegal string was specified.");
                                        d = t,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "snapToLines", S({},
                                n, {
                                    get: function() {
                                        return c
                                    },
                                    set: function(e) {
                                        c = !!e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "line", S({},
                                n, {
                                    get: function() {
                                        return f
                                    },
                                    set: function(e) {
                                        if ("number" != typeof e && "auto" !== e) throw new SyntaxError("An invalid number or illegal string was specified.");
                                        f = e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "lineAlign", S({},
                                n, {
                                    get: function() {
                                        return p
                                    },
                                    set: function(e) {
                                        var t = b(e);
                                        if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                                        p = t,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "position", S({},
                                n, {
                                    get: function() {
                                        return v
                                    },
                                    set: function(e) {
                                        if (e < 0 || 100 < e) throw new Error("Position must be between 0 and 100.");
                                        v = e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "positionAlign", S({},
                                n, {
                                    get: function() {
                                        return m
                                    },
                                    set: function(e) {
                                        var t = b(e);
                                        if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                                        m = t,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "size", S({},
                                n, {
                                    get: function() {
                                        return _
                                    },
                                    set: function(e) {
                                        if (e < 0 || 100 < e) throw new Error("Size must be between 0 and 100.");
                                        _ = e,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                Object.defineProperty(r, "align", S({},
                                n, {
                                    get: function() {
                                        return g
                                    },
                                    set: function(e) {
                                        var t = b(e);
                                        if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                                        g = t,
                                        this.hasBeenReset = !0
                                    }
                                })),
                                r.displayState = void 0
                            }
                            return e.prototype.getCueAsHTML = function() {
                                return window.WebVTT.convertCueToDOMTree(window, this.text)
                            },
                            e
                        } (),
                        We = function() {
                            return {
                                decode: function(e) {
                                    if (!e) return "";
                                    if ("string" != typeof e) throw new Error("Error - expected string data.");
                                    return decodeURIComponent(encodeURIComponent(e))
                                }
                            }
                        };
                        function He() {
                            this.window = window,
                            this.state = "INITIAL",
                            this.buffer = "",
                            this.decoder = new We,
                            this.regionList = []
                        }
                        function Ke() {
                            this.values = Object.create(null)
                        }
                        function qe(e, t, i, r) {
                            var n = r ? e.split(r) : [e];
                            for (var s in n) if ("string" == typeof n[s]) {
                                var a = n[s].split(i);
                                2 === a.length && t(a[0], a[1])
                            }
                        }
                        Ke.prototype = {
                            set: function(e, t) {
                                this.get(e) || "" === t || (this.values[e] = t)
                            },
                            get: function(e, t, i) {
                                return i ? this.has(e) ? this.values[e] : t[i] : this.has(e) ? this.values[e] : t
                            },
                            has: function(e) {
                                return e in this.values
                            },
                            alt: function(e, t, i) {
                                for (var r = 0; r < i.length; ++r) if (t === i[r]) {
                                    this.set(e, t);
                                    break
                                }
                            },
                            integer: function(e, t) { / ^-?\d + $ / .test(t) && this.set(e, parseInt(t, 10))
                            },
                            percent: function(e, t) {
                                return !! (t.match(/^([\d]{1,3})(\.[\d]*)?%$/) && 0 <= (t = parseFloat(t)) && t <= 100) && (this.set(e, t), !0)
                            }
                        };
                        var Ye = new Ve(0, 0, 0),
                        Ze = "middle" === Ye.align ? "middle": "center";
                        function Xe(t, e, a) {
                            var i = t;
                            function r() {
                                var e = function(e) {
                                    function t(e, t, i, r) {
                                        return 3600 * (0 | e) + 60 * (0 | t) + (0 | i) + (0 | r) / 1e3
                                    }
                                    var i = e.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                                    return i ? i[3] ? t(i[1], i[2], i[3].replace(":", ""), i[4]) : 59 < i[1] ? t(i[1], i[2], 0, i[4]) : t(0, i[1], i[2], i[4]) : null
                                } (t);
                                if (null === e) throw new Error("Malformed timestamp: " + i);
                                return t = t.replace(/^[^\sa-zA-Z-]+/, ""),
                                e
                            }
                            function n() {
                                t = t.replace(/^\s+/, "")
                            }
                            if (n(), e.startTime = r(), n(), "--\x3e" !== t.substr(0, 3)) throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + i);
                            t = t.substr(3),
                            n(),
                            e.endTime = r(),
                            n(),
                            function(e, t) {
                                var s = new Ke;
                                qe(e,
                                function(e, t) {
                                    switch (e) {
                                    case "region":
                                        for (var i = a.length - 1; 0 <= i; i--) if (a[i].id === t) {
                                            s.set(e, a[i].region);
                                            break
                                        }
                                        break;
                                    case "vertical":
                                        s.alt(e, t, ["rl", "lr"]);
                                        break;
                                    case "line":
                                        var r = t.split(","),
                                        n = r[0];
                                        s.integer(e, n),
                                        s.percent(e, n) && s.set("snapToLines", !1),
                                        s.alt(e, n, ["auto"]),
                                        2 === r.length && s.alt("lineAlign", r[1], ["start", Ze, "end"]);
                                        break;
                                    case "position":
                                        r = t.split(","),
                                        s.percent(e, r[0]),
                                        2 === r.length && s.alt("positionAlign", r[1], ["start", Ze, "end", "line-left", "line-right", "auto"]);
                                        break;
                                    case "size":
                                        s.percent(e, t);
                                        break;
                                    case "align":
                                        s.alt(e, t, ["start", Ze, "end", "left", "right"])
                                    }
                                },
                                /:/, /\s/),
                                t.region = s.get("region", null),
                                t.vertical = s.get("vertical", "");
                                var i = s.get("line", "auto");
                                "auto" === i && -1 === Ye.line && (i = -1),
                                t.line = i,
                                t.lineAlign = s.get("lineAlign", "start"),
                                t.snapToLines = s.get("snapToLines", !0),
                                t.size = s.get("size", 100),
                                t.align = s.get("align", Ze);
                                var r = s.get("position", "auto");
                                "auto" === r && 50 === Ye.position && (r = "start" === t.align || "left" === t.align ? 0 : "end" === t.align || "right" === t.align ? 100 : 50),
                                t.position = r
                            } (t, e)
                        }
                        function Je(e) {
                            return e.replace(/<br(?: \/)?>/gi, "\n")
                        }
                        He.prototype = {
                            parse: function(e) {
                                var r = this;
                                function t() {
                                    var e = r.buffer,
                                    t = 0;
                                    for (e = Je(e); t < e.length && "\r" !== e[t] && "\n" !== e[t];)++t;
                                    var i = e.substr(0, t);
                                    return "\r" === e[t] && ++t,
                                    "\n" === e[t] && ++t,
                                    r.buffer = e.substr(t),
                                    i
                                }
                                e && (r.buffer += r.decoder.decode(e, {
                                    stream: !0
                                }));
                                try {
                                    var i;
                                    if ("INITIAL" === r.state) {
                                        if (!/\r\n|\n/.test(r.buffer)) return this;
                                        var n = (i = t()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                                        if (!n || !n[0]) throw new Error("Malformed WebVTT signature.");
                                        r.state = "HEADER"
                                    }
                                    for (var s = !1; r.buffer;) {
                                        if (!/\r\n|\n/.test(r.buffer)) return this;
                                        switch (s ? s = !1 : i = t(), r.state) {
                                        case "HEADER":
                                            /:/.test(i) ? qe(i,
                                            function(e, t) {},
                                            /:/) : i || (r.state = "ID");
                                            continue;
                                        case "NOTE":
                                            i || (r.state = "ID");
                                            continue;
                                        case "ID":
                                            if (/^NOTE($|[ \t])/.test(i)) {
                                                r.state = "NOTE";
                                                break
                                            }
                                            if (!i) continue;
                                            if (r.cue = new Ve(0, 0, ""), r.state = "CUE", -1 === i.indexOf("--\x3e")) {
                                                r.cue.id = i;
                                                continue
                                            }
                                        case "CUE":
                                            try {
                                                Xe(i, r.cue, r.regionList)
                                            } catch(e) {
                                                r.cue = null,
                                                r.state = "BADCUE";
                                                continue
                                            }
                                            r.state = "CUETEXT";
                                            continue;
                                        case "CUETEXT":
                                            var a = -1 !== i.indexOf("--\x3e");
                                            if (!i || a && (s = !0)) {
                                                r.oncue && r.oncue(r.cue),
                                                r.cue = null,
                                                r.state = "ID";
                                                continue
                                            }
                                            r.cue.text && (r.cue.text += "\n"),
                                            r.cue.text += i;
                                            continue;
                                        case "BADCUE":
                                            i || (r.state = "ID");
                                            continue
                                        }
                                    }
                                } catch(e) {
                                    "CUETEXT" === r.state && r.cue && r.oncue && r.oncue(r.cue),
                                    r.cue = null,
                                    r.state = "INITIAL" === r.state ? "BADWEBVTT": "BADCUE"
                                }
                                return this
                            },
                            flush: function() {
                                try {
                                    if (this.buffer += this.decoder.decode(), !this.cue && "HEADER" !== this.state || (this.buffer += "\n\n", this.parse()), "INITIAL" === this.state) throw new Error("Malformed WebVTT signature.")
                                } catch(e) {
                                    throw e
                                }
                                return this.onflush && this.onflush(),
                                this
                            }
                        };
                        var $e = He;
                        function Qe(e, t, i, r) {
                            for (var n, s, a, o, l, u = window.VTTCue || window.TextTrackCue,
                            h = 0; h < r.rows.length; h++) if (a = !0, o = 0, l = "", !(n = r.rows[h]).isEmpty()) {
                                for (var d = 0; d < n.chars.length; d++) n.chars[d].uchar.match(/\s/) && a ? o++:(l += n.chars[d].uchar, a = !1); (n.cueStartTime = t) === i && (i += 1e-4),
                                s = new u(t, i, Je(l.trim())),
                                16 <= o ? o--:o++,
                                navigator.userAgent.match(/Firefox\//) ? s.line = h + 1 : s.line = 7 < h ? h - 2 : h + 1,
                                s.align = "left",
                                s.position = Math.max(0, Math.min(100, o / 32 * 100 + (navigator.userAgent.match(/Firefox\//) ? 50 : 0))),
                                e.addCue(s)
                            }
                        }
                        var et = {
                            42 : 225,
                            92 : 233,
                            94 : 237,
                            95 : 243,
                            96 : 250,
                            123 : 231,
                            124 : 247,
                            125 : 209,
                            126 : 241,
                            127 : 9608,
                            128 : 174,
                            129 : 176,
                            130 : 189,
                            131 : 191,
                            132 : 8482,
                            133 : 162,
                            134 : 163,
                            135 : 9834,
                            136 : 224,
                            137 : 32,
                            138 : 232,
                            139 : 226,
                            140 : 234,
                            141 : 238,
                            142 : 244,
                            143 : 251,
                            144 : 193,
                            145 : 201,
                            146 : 211,
                            147 : 218,
                            148 : 220,
                            149 : 252,
                            150 : 8216,
                            151 : 161,
                            152 : 42,
                            153 : 8217,
                            154 : 9473,
                            155 : 169,
                            156 : 8480,
                            157 : 8226,
                            158 : 8220,
                            159 : 8221,
                            160 : 192,
                            161 : 194,
                            162 : 199,
                            163 : 200,
                            164 : 202,
                            165 : 203,
                            166 : 235,
                            167 : 206,
                            168 : 207,
                            169 : 239,
                            170 : 212,
                            171 : 217,
                            172 : 249,
                            173 : 219,
                            174 : 171,
                            175 : 187,
                            176 : 195,
                            177 : 227,
                            178 : 205,
                            179 : 204,
                            180 : 236,
                            181 : 210,
                            182 : 242,
                            183 : 213,
                            184 : 245,
                            185 : 123,
                            186 : 125,
                            187 : 92,
                            188 : 94,
                            189 : 95,
                            190 : 124,
                            191 : 8764,
                            192 : 196,
                            193 : 228,
                            194 : 214,
                            195 : 246,
                            196 : 223,
                            197 : 165,
                            198 : 164,
                            199 : 9475,
                            200 : 197,
                            201 : 229,
                            202 : 216,
                            203 : 248,
                            204 : 9487,
                            205 : 9491,
                            206 : 9495,
                            207 : 9499
                        },
                        tt = function(e) {
                            var t = e;
                            return et.hasOwnProperty(e) && (t = et[e]),
                            String.fromCharCode(t)
                        },
                        it = {
                            17 : 1,
                            18 : 3,
                            21 : 5,
                            22 : 7,
                            23 : 9,
                            16 : 11,
                            19 : 12,
                            20 : 14
                        },
                        rt = {
                            17 : 2,
                            18 : 4,
                            21 : 6,
                            22 : 8,
                            23 : 10,
                            19 : 13,
                            20 : 15
                        },
                        nt = {
                            25 : 1,
                            26 : 3,
                            29 : 5,
                            30 : 7,
                            31 : 9,
                            24 : 11,
                            27 : 12,
                            28 : 14
                        },
                        st = {
                            25 : 2,
                            26 : 4,
                            29 : 6,
                            30 : 8,
                            31 : 10,
                            27 : 13,
                            28 : 15
                        },
                        at = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"],
                        ot = {
                            verboseFilter: {
                                DATA: 3,
                                DEBUG: 3,
                                INFO: 2,
                                WARNING: 2,
                                TEXT: 1,
                                ERROR: 0
                            },
                            time: null,
                            verboseLevel: 0,
                            setTime: function(e) {
                                this.time = e
                            },
                            log: function(e, t) {
                                this.verboseFilter[e],
                                this.verboseLevel
                            }
                        },
                        lt = function(e) {
                            for (var t = [], i = 0; i < e.length; i++) t.push(e[i].toString(16));
                            return t
                        },
                        ut = function() {
                            function e(e, t, i, r, n) {
                                this.foreground = e || "white",
                                this.underline = t || !1,
                                this.italics = i || !1,
                                this.background = r || "black",
                                this.flash = n || !1
                            }
                            var t = e.prototype;
                            return t.reset = function() {
                                this.foreground = "white",
                                this.underline = !1,
                                this.italics = !1,
                                this.background = "black",
                                this.flash = !1
                            },
                            t.setStyles = function(e) {
                                for (var t = ["foreground", "underline", "italics", "background", "flash"], i = 0; i < t.length; i++) {
                                    var r = t[i];
                                    e.hasOwnProperty(r) && (this[r] = e[r])
                                }
                            },
                            t.isDefault = function() {
                                return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
                            },
                            t.equals = function(e) {
                                return this.foreground === e.foreground && this.underline === e.underline && this.italics === e.italics && this.background === e.background && this.flash === e.flash
                            },
                            t.copy = function(e) {
                                this.foreground = e.foreground,
                                this.underline = e.underline,
                                this.italics = e.italics,
                                this.background = e.background,
                                this.flash = e.flash
                            },
                            t.toString = function() {
                                return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                            },
                            e
                        } (),
                        ht = function() {
                            function e(e, t, i, r, n, s) {
                                this.uchar = e || " ",
                                this.penState = new ut(t, i, r, n, s)
                            }
                            var t = e.prototype;
                            return t.reset = function() {
                                this.uchar = " ",
                                this.penState.reset()
                            },
                            t.setChar = function(e, t) {
                                this.uchar = e,
                                this.penState.copy(t)
                            },
                            t.setPenState = function(e) {
                                this.penState.copy(e)
                            },
                            t.equals = function(e) {
                                return this.uchar === e.uchar && this.penState.equals(e.penState)
                            },
                            t.copy = function(e) {
                                this.uchar = e.uchar,
                                this.penState.copy(e.penState)
                            },
                            t.isEmpty = function() {
                                return " " === this.uchar && this.penState.isDefault()
                            },
                            e
                        } (),
                        dt = function() {
                            function e() {
                                this.chars = [];
                                for (var e = 0; e < 100; e++) this.chars.push(new ht);
                                this.pos = 0,
                                this.currPenState = new ut
                            }
                            var t = e.prototype;
                            return t.equals = function(e) {
                                for (var t = !0,
                                i = 0; i < 100; i++) if (!this.chars[i].equals(e.chars[i])) {
                                    t = !1;
                                    break
                                }
                                return t
                            },
                            t.copy = function(e) {
                                for (var t = 0; t < 100; t++) this.chars[t].copy(e.chars[t])
                            },
                            t.isEmpty = function() {
                                for (var e = !0,
                                t = 0; t < 100; t++) if (!this.chars[t].isEmpty()) {
                                    e = !1;
                                    break
                                }
                                return e
                            },
                            t.setCursor = function(e) {
                                this.pos !== e && (this.pos = e),
                                this.pos < 0 ? (ot.log("ERROR", "Negative cursor position " + this.pos), this.pos = 0) : 100 < this.pos && (ot.log("ERROR", "Too large cursor position " + this.pos), this.pos = 100)
                            },
                            t.moveCursor = function(e) {
                                var t = this.pos + e;
                                if (1 < e) for (var i = this.pos + 1; i < t + 1; i++) this.chars[i].setPenState(this.currPenState);
                                this.setCursor(t)
                            },
                            t.backSpace = function() {
                                this.moveCursor( - 1),
                                this.chars[this.pos].setChar(" ", this.currPenState)
                            },
                            t.insertChar = function(e) {
                                144 <= e && this.backSpace();
                                var t = tt(e);
                                100 <= this.pos ? ot.log("ERROR", "Cannot insert " + e.toString(16) + " (" + t + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(t, this.currPenState), this.moveCursor(1))
                            },
                            t.clearFromPos = function(e) {
                                var t;
                                for (t = e; t < 100; t++) this.chars[t].reset()
                            },
                            t.clear = function() {
                                this.clearFromPos(0),
                                this.pos = 0,
                                this.currPenState.reset()
                            },
                            t.clearToEndOfRow = function() {
                                this.clearFromPos(this.pos)
                            },
                            t.getTextString = function() {
                                for (var e = [], t = !0, i = 0; i < 100; i++) {
                                    var r = this.chars[i].uchar;
                                    " " !== r && (t = !1),
                                    e.push(r)
                                }
                                return t ? "": e.join("")
                            },
                            t.setPenStyles = function(e) {
                                this.currPenState.setStyles(e),
                                this.chars[this.pos].setPenState(this.currPenState)
                            },
                            e
                        } (),
                        ct = function() {
                            function e() {
                                this.rows = [];
                                for (var e = 0; e < 15; e++) this.rows.push(new dt);
                                this.currRow = 14,
                                this.nrRollUpRows = null,
                                this.reset()
                            }
                            var t = e.prototype;
                            return t.reset = function() {
                                for (var e = 0; e < 15; e++) this.rows[e].clear();
                                this.currRow = 14
                            },
                            t.equals = function(e) {
                                for (var t = !0,
                                i = 0; i < 15; i++) if (!this.rows[i].equals(e.rows[i])) {
                                    t = !1;
                                    break
                                }
                                return t
                            },
                            t.copy = function(e) {
                                for (var t = 0; t < 15; t++) this.rows[t].copy(e.rows[t])
                            },
                            t.isEmpty = function() {
                                for (var e = !0,
                                t = 0; t < 15; t++) if (!this.rows[t].isEmpty()) {
                                    e = !1;
                                    break
                                }
                                return e
                            },
                            t.backSpace = function() {
                                this.rows[this.currRow].backSpace()
                            },
                            t.clearToEndOfRow = function() {
                                this.rows[this.currRow].clearToEndOfRow()
                            },
                            t.insertChar = function(e) {
                                this.rows[this.currRow].insertChar(e)
                            },
                            t.setPen = function(e) {
                                this.rows[this.currRow].setPenStyles(e)
                            },
                            t.moveCursor = function(e) {
                                this.rows[this.currRow].moveCursor(e)
                            },
                            t.setCursor = function(e) {
                                ot.log("INFO", "setCursor: " + e),
                                this.rows[this.currRow].setCursor(e)
                            },
                            t.setPAC = function(e) {
                                ot.log("INFO", "pacData = " + JSON.stringify(e));
                                var t = e.row - 1;
                                if (this.nrRollUpRows && t < this.nrRollUpRows - 1 && (t = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== t) {
                                    for (var i = 0; i < 15; i++) this.rows[i].clear();
                                    var r = this.currRow + 1 - this.nrRollUpRows,
                                    n = this.lastOutputScreen;
                                    if (n) {
                                        var s = n.rows[r].cueStartTime;
                                        if (s && s < ot.time) for (var a = 0; a < this.nrRollUpRows; a++) this.rows[t - this.nrRollUpRows + a + 1].copy(n.rows[r + a])
                                    }
                                }
                                this.currRow = t;
                                var o = this.rows[this.currRow];
                                if (null !== e.indent) {
                                    var l = e.indent,
                                    u = Math.max(l - 1, 0);
                                    o.setCursor(e.indent),
                                    e.color = o.chars[u].penState.foreground
                                }
                                var h = {
                                    foreground: e.color,
                                    underline: e.underline,
                                    italics: e.italics,
                                    background: "black",
                                    flash: !1
                                };
                                this.setPen(h)
                            },
                            t.setBkgData = function(e) {
                                ot.log("INFO", "bkgData = " + JSON.stringify(e)),
                                this.backSpace(),
                                this.setPen(e),
                                this.insertChar(32)
                            },
                            t.setRollUpRows = function(e) {
                                this.nrRollUpRows = e
                            },
                            t.rollUp = function() {
                                if (null !== this.nrRollUpRows) {
                                    ot.log("TEXT", this.getDisplayText());
                                    var e = this.currRow + 1 - this.nrRollUpRows,
                                    t = this.rows.splice(e, 1)[0];
                                    t.clear(),
                                    this.rows.splice(this.currRow, 0, t),
                                    ot.log("INFO", "Rolling up")
                                } else ot.log("DEBUG", "roll_up but nrRollUpRows not set yet")
                            },
                            t.getDisplayText = function(e) {
                                e = e || !1;
                                for (var t = [], i = "", r = -1, n = 0; n < 15; n++) {
                                    var s = this.rows[n].getTextString();
                                    s && (r = n + 1, e ? t.push("Row " + r + ": '" + s + "'") : t.push(s.trim()))
                                }
                                return 0 < t.length && (i = e ? "[" + t.join(" | ") + "]": t.join("\n")),
                                i
                            },
                            t.getTextAndFormat = function() {
                                return this.rows
                            },
                            e
                        } (),
                        ft = function() {
                            function e(e, t) {
                                this.chNr = e,
                                this.outputFilter = t,
                                this.mode = null,
                                this.verbose = 0,
                                this.displayedMemory = new ct,
                                this.nonDisplayedMemory = new ct,
                                this.lastOutputScreen = new ct,
                                this.currRollUpRow = this.displayedMemory.rows[14],
                                this.writeScreen = this.displayedMemory,
                                this.mode = null,
                                this.cueStartTime = null
                            }
                            var t = e.prototype;
                            return t.reset = function() {
                                this.mode = null,
                                this.displayedMemory.reset(),
                                this.nonDisplayedMemory.reset(),
                                this.lastOutputScreen.reset(),
                                this.currRollUpRow = this.displayedMemory.rows[14],
                                this.writeScreen = this.displayedMemory,
                                this.mode = null,
                                this.cueStartTime = null,
                                this.lastCueEndTime = null
                            },
                            t.getHandler = function() {
                                return this.outputFilter
                            },
                            t.setHandler = function(e) {
                                this.outputFilter = e
                            },
                            t.setPAC = function(e) {
                                this.writeScreen.setPAC(e)
                            },
                            t.setBkgData = function(e) {
                                this.writeScreen.setBkgData(e)
                            },
                            t.setMode = function(e) {
                                e !== this.mode && (this.mode = e, ot.log("INFO", "MODE=" + e), "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory: (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null, this.nonDisplayedMemory.nrRollUpRows = null), this.mode = e)
                            },
                            t.insertChars = function(e) {
                                for (var t = 0; t < e.length; t++) this.writeScreen.insertChar(e[t]);
                                var i = this.writeScreen === this.displayedMemory ? "DISP": "NON_DISP";
                                ot.log("INFO", i + ": " + this.writeScreen.getDisplayText(!0)),
                                "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (ot.log("TEXT", "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)), this.outputDataUpdate())
                            },
                            t.ccRCL = function() {
                                ot.log("INFO", "RCL - Resume Caption Loading"),
                                this.setMode("MODE_POP-ON")
                            },
                            t.ccBS = function() {
                                ot.log("INFO", "BS - BackSpace"),
                                "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                            },
                            t.ccAOF = function() {},
                            t.ccAON = function() {},
                            t.ccDER = function() {
                                ot.log("INFO", "DER- Delete to End of Row"),
                                this.writeScreen.clearToEndOfRow(),
                                this.outputDataUpdate()
                            },
                            t.ccRU = function(e) {
                                ot.log("INFO", "RU(" + e + ") - Roll Up"),
                                this.writeScreen = this.displayedMemory,
                                this.setMode("MODE_ROLL-UP"),
                                this.writeScreen.setRollUpRows(e)
                            },
                            t.ccFON = function() {
                                ot.log("INFO", "FON - Flash On"),
                                this.writeScreen.setPen({
                                    flash: !0
                                })
                            },
                            t.ccRDC = function() {
                                ot.log("INFO", "RDC - Resume Direct Captioning"),
                                this.setMode("MODE_PAINT-ON")
                            },
                            t.ccTR = function() {
                                ot.log("INFO", "TR"),
                                this.setMode("MODE_TEXT")
                            },
                            t.ccRTD = function() {
                                ot.log("INFO", "RTD"),
                                this.setMode("MODE_TEXT")
                            },
                            t.ccEDM = function() {
                                ot.log("INFO", "EDM - Erase Displayed Memory"),
                                this.displayedMemory.reset(),
                                this.outputDataUpdate(!0)
                            },
                            t.ccCR = function() {
                                ot.log("CR - Carriage Return"),
                                this.writeScreen.rollUp(),
                                this.outputDataUpdate(!0)
                            },
                            t.ccENM = function() {
                                ot.log("INFO", "ENM - Erase Non-displayed Memory"),
                                this.nonDisplayedMemory.reset()
                            },
                            t.ccEOC = function() {
                                if (ot.log("INFO", "EOC - End Of Caption"), "MODE_POP-ON" === this.mode) {
                                    var e = this.displayedMemory;
                                    this.displayedMemory = this.nonDisplayedMemory,
                                    this.nonDisplayedMemory = e,
                                    this.writeScreen = this.nonDisplayedMemory,
                                    ot.log("TEXT", "DISP: " + this.displayedMemory.getDisplayText())
                                }
                                this.outputDataUpdate(!0)
                            },
                            t.ccTO = function(e) {
                                ot.log("INFO", "TO(" + e + ") - Tab Offset"),
                                this.writeScreen.moveCursor(e)
                            },
                            t.ccMIDROW = function(e) {
                                var t = {
                                    flash: !1
                                };
                                if (t.underline = e % 2 == 1, t.italics = 46 <= e, t.italics) t.foreground = "white";
                                else {
                                    var i = Math.floor(e / 2) - 16;
                                    t.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][i]
                                }
                                ot.log("INFO", "MIDROW: " + JSON.stringify(t)),
                                this.writeScreen.setPen(t)
                            },
                            t.outputDataUpdate = function(e) {
                                void 0 === e && (e = !1);
                                var t = ot.time;
                                null !== t && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue && (this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen), !0 === e && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue()), this.cueStartTime = this.displayedMemory.isEmpty() ? null: t) : this.cueStartTime = t, this.lastOutputScreen.copy(this.displayedMemory))
                            },
                            t.cueSplitAtTime = function(e) {
                                this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, e, this.displayedMemory), this.cueStartTime = e))
                            },
                            e
                        } (),
                        pt = function() {
                            function e(e, t, i) {
                                this.field = e || 1,
                                this.outputs = [t, i],
                                this.channels = [new ft(1, t), new ft(2, i)],
                                this.currChNr = -1,
                                this.lastCmdA = null,
                                this.lastCmdB = null,
                                this.bufferedData = [],
                                this.startTime = null,
                                this.lastTime = null,
                                this.dataCounters = {
                                    padding: 0,
                                    char: 0,
                                    cmd: 0,
                                    other: 0
                                }
                            }
                            var t = e.prototype;
                            return t.getHandler = function(e) {
                                return this.channels[e].getHandler()
                            },
                            t.setHandler = function(e, t) {
                                this.channels[e].setHandler(t)
                            },
                            t.addData = function(e, t) {
                                var i, r, n, s = !1;
                                this.lastTime = e,
                                ot.setTime(e);
                                for (var a = 0; a < t.length; a += 2) r = 127 & t[a],
                                n = 127 & t[a + 1],
                                0 != r || 0 != n ? (ot.log("DATA", "[" + lt([t[a], t[a + 1]]) + "] -> (" + lt([r, n]) + ")"), (i = this.parseCmd(r, n)) || (i = this.parseMidrow(r, n)), (i = (i = i || this.parsePAC(r, n)) || this.parseBackgroundAttributes(r, n)) || (s = this.parseChars(r, n)) && (this.currChNr && 0 <= this.currChNr ? this.channels[this.currChNr - 1].insertChars(s) : ot.log("WARNING", "No channel found yet. TEXT-MODE?")), i ? this.dataCounters.cmd += 2 : s ? this.dataCounters.char += 2 : (this.dataCounters.other += 2, ot.log("WARNING", "Couldn't parse cleaned data " + lt([r, n]) + " orig: " + lt([t[a], t[a + 1]])))) : this.dataCounters.padding += 2
                            },
                            t.parseCmd = function(e, t) {
                                var i = null;
                                if (! ((20 === e || 28 === e) && 32 <= t && t <= 47 || (23 === e || 31 === e) && 33 <= t && t <= 35)) return ! 1;
                                if (e === this.lastCmdA && t === this.lastCmdB) return this.lastCmdA = null,
                                this.lastCmdB = null,
                                ot.log("DEBUG", "Repeated command (" + lt([e, t]) + ") is dropped"),
                                !0;
                                i = 20 === e || 23 === e ? 1 : 2;
                                var r = this.channels[i - 1];
                                return 20 === e || 28 === e ? 32 === t ? r.ccRCL() : 33 === t ? r.ccBS() : 34 === t ? r.ccAOF() : 35 === t ? r.ccAON() : 36 === t ? r.ccDER() : 37 === t ? r.ccRU(2) : 38 === t ? r.ccRU(3) : 39 === t ? r.ccRU(4) : 40 === t ? r.ccFON() : 41 === t ? r.ccRDC() : 42 === t ? r.ccTR() : 43 === t ? r.ccRTD() : 44 === t ? r.ccEDM() : 45 === t ? r.ccCR() : 46 === t ? r.ccENM() : 47 === t && r.ccEOC() : r.ccTO(t - 32),
                                this.lastCmdA = e,
                                this.lastCmdB = t,
                                this.currChNr = i,
                                !0
                            },
                            t.parseMidrow = function(e, t) {
                                var i = null;
                                return (17 === e || 25 === e) && 32 <= t && t <= 47 && ((i = 17 === e ? 1 : 2) !== this.currChNr ? (ot.log("ERROR", "Mismatch channel in midrow parsing"), !1) : (this.channels[i - 1].ccMIDROW(t), ot.log("DEBUG", "MIDROW (" + lt([e, t]) + ")"), !0))
                            },
                            t.parsePAC = function(e, t) {
                                var i, r = null;
                                if (! ((17 <= e && e <= 23 || 25 <= e && e <= 31) && 64 <= t && t <= 127 || (16 === e || 24 === e) && 64 <= t && t <= 95)) return ! 1;
                                if (e === this.lastCmdA && t === this.lastCmdB) return this.lastCmdA = null,
                                !(this.lastCmdB = null);
                                i = e <= 23 ? 1 : 2,
                                r = 64 <= t && t <= 95 ? 1 == i ? it[e] : nt[e] : 1 == i ? rt[e] : st[e];
                                var n = this.interpretPAC(r, t);
                                return this.channels[i - 1].setPAC(n),
                                this.lastCmdA = e,
                                this.lastCmdB = t,
                                this.currChNr = i,
                                !0
                            },
                            t.interpretPAC = function(e, t) {
                                var i = t,
                                r = {
                                    color: null,
                                    italics: !1,
                                    indent: null,
                                    underline: !1,
                                    row: e
                                };
                                return i = 95 < t ? t - 96 : t - 64,
                                r.underline = 1 == (1 & i),
                                i <= 13 ? r.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(i / 2)] : i <= 15 ? (r.italics = !0, r.color = "white") : r.indent = 4 * Math.floor((i - 16) / 2),
                                r
                            },
                            t.parseChars = function(e, t) {
                                var i = null,
                                r = null,
                                n = null;
                                if (17 <= (n = 25 <= e ? (i = 2, e - 8) : (i = 1, e)) && n <= 19) {
                                    var s = t;
                                    s = 17 === n ? t + 80 : 18 === n ? t + 112 : t + 144,
                                    ot.log("INFO", "Special char '" + tt(s) + "' in channel " + i),
                                    r = [s]
                                } else 32 <= e && e <= 127 && (r = 0 === t ? [e] : [e, t]);
                                if (r) {
                                    var a = lt(r);
                                    ot.log("DEBUG", "Char codes =  " + a.join(",")),
                                    this.lastCmdA = null,
                                    this.lastCmdB = null
                                }
                                return r
                            },
                            t.parseBackgroundAttributes = function(e, t) {
                                var i, r, n;
                                return ((16 === e || 24 === e) && 32 <= t && t <= 47 || (23 === e || 31 === e) && 45 <= t && t <= 47) && (i = {},
                                16 === e || 24 === e ? (r = Math.floor((t - 32) / 2), i.background = at[r], t % 2 == 1 && (i.background = i.background + "_semi")) : 45 === t ? i.background = "transparent": (i.foreground = "black", 47 === t && (i.underline = !0)), n = e < 24 ? 1 : 2, this.channels[n - 1].setBkgData(i), this.lastCmdA = null, !(this.lastCmdB = null))
                            },
                            t.reset = function() {
                                for (var e = 0; e < this.channels.length; e++) this.channels[e] && this.channels[e].reset();
                                this.lastCmdA = null,
                                this.lastCmdB = null
                            },
                            t.cueSplitAtTime = function(e) {
                                for (var t = 0; t < this.channels.length; t++) this.channels[t] && this.channels[t].cueSplitAtTime(e)
                            },
                            e
                        } (),
                        vt = function() {
                            function e(e, t) {
                                this.timelineController = e,
                                this.trackName = t,
                                this.startTime = null,
                                this.endTime = null,
                                this.screen = null
                            }
                            var t = e.prototype;
                            return t.dispatchCue = function() {
                                null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen), this.startTime = null)
                            },
                            t.newCue = function(e, t, i) { (null === this.startTime || this.startTime > e) && (this.startTime = e),
                                this.endTime = t,
                                this.screen = i,
                                this.timelineController.createCaptionsTrack(this.trackName)
                            },
                            e
                        } (),
                        mt = function(e, t, i) {
                            return e.substr(i || 0, t.length) === t
                        },
                        _t = function(e) {
                            for (var t = 5381,
                            i = e.length; i;) t = 33 * t ^ e.charCodeAt(--i);
                            return (t >>> 0).toString()
                        },
                        gt = {
                            parse: function(e, t, r, n, i, s) {
                                var a, o = Object(ge.b)(new Uint8Array(e)).trim().replace(/\r\n|\n\r|\n|\r/g, "\n").split("\n"),
                                l = "00:00.000",
                                u = 0,
                                h = 0,
                                d = 0,
                                c = [],
                                f = !0,
                                p = !1,
                                v = new $e;
                                v.oncue = function(e) {
                                    var t = r[n],
                                    i = r.ccOffset;
                                    t && t.new && (void 0 !== h ? i = r.ccOffset = t.start: function(e, t, i) {
                                        var r = e[t],
                                        n = e[r.prevCC];
                                        if (!n || !n.new && r.new) return e.ccOffset = e.presentationOffset = r.start,
                                        r.new = !1;
                                        for (; n && n.new;) e.ccOffset += r.start - n.start,
                                        r.new = !1,
                                        n = e[(r = n).prevCC];
                                        e.presentationOffset = i
                                    } (r, n, d)),
                                    d && (i = d - r.presentationOffset),
                                    p && (e.startTime += i - h, e.endTime += i - h),
                                    e.id = _t(e.startTime.toString()) + _t(e.endTime.toString()) + _t(e.text),
                                    e.text = decodeURIComponent(encodeURIComponent(e.text)),
                                    0 < e.endTime && c.push(e)
                                },
                                v.onparsingerror = function(e) {
                                    a = e
                                },
                                v.onflush = function() {
                                    a && s ? s(a) : i(c)
                                },
                                o.forEach(function(e) {
                                    if (f) {
                                        if (mt(e, "X-TIMESTAMP-MAP=")) {
                                            p = !(f = !1),
                                            e.substr(16).split(",").forEach(function(e) {
                                                mt(e, "LOCAL:") ? l = e.substr(6) : mt(e, "MPEGTS:") && (u = parseInt(e.substr(7)))
                                            });
                                            try {
                                                t + (9e4 * r[n].start || 0) < 0 && (t += 8589934592),
                                                u -= t,
                                                h = function(e) {
                                                    var t = parseInt(e.substr( - 3)),
                                                    i = parseInt(e.substr( - 6, 2)),
                                                    r = parseInt(e.substr( - 9, 2)),
                                                    n = 9 < e.length ? parseInt(e.substr(0, e.indexOf(":"))) : 0;
                                                    if (! (Object(D.a)(t) && Object(D.a)(i) && Object(D.a)(r) && Object(D.a)(n))) throw Error("Malformed X-TIMESTAMP-MAP: Local:" + e);
                                                    return t += 1e3 * i,
                                                    t += 6e4 * r,
                                                    t += 36e5 * n
                                                } (l) / 1e3,
                                                d = u / 9e4
                                            } catch(e) {
                                                p = !1,
                                                a = e
                                            }
                                            return
                                        }
                                        "" === e && (f = !1)
                                    }
                                    v.parse(e + "\n")
                                }),
                                v.flush()
                            }
                        };
                        function yt(e) {
                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }
                        var bt = function(n) {
                            var e, t;
                            function i(e) {
                                var t;
                                if ((t = n.call(this, e, P.a.MEDIA_ATTACHING, P.a.MEDIA_DETACHING, P.a.FRAG_PARSING_USERDATA, P.a.FRAG_DECRYPTED, P.a.MANIFEST_LOADING, P.a.MANIFEST_LOADED, P.a.FRAG_LOADED, P.a.LEVEL_SWITCHING, P.a.INIT_PTS_FOUND) || this).hls = e, t.config = e.config, t.enabled = !0, t.Cues = e.config.cueHandler, t.textTracks = [], t.tracks = [], t.unparsedVttFrags = [], t.initPTS = [], t.cueRanges = [], t.captionsTracks = {},
                                t.captionsProperties = {
                                    textTrack1: {
                                        label: t.config.captionsTextTrack1Label,
                                        languageCode: t.config.captionsTextTrack1LanguageCode
                                    },
                                    textTrack2: {
                                        label: t.config.captionsTextTrack2Label,
                                        languageCode: t.config.captionsTextTrack2LanguageCode
                                    }
                                },
                                t.config.enableCEA708Captions) {
                                    var i = new vt(yt(yt(t)), "textTrack1"),
                                    r = new vt(yt(yt(t)), "textTrack2");
                                    t.cea608Parser = new pt(0, i, r)
                                }
                                return t
                            }
                            t = n,
                            (e = i).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var r = i.prototype;
                            return r.addCues = function(e, t, i, r) {
                                for (var n, s, a, o, l = this.cueRanges,
                                u = !1,
                                h = l.length; h--;) {
                                    var d = l[h],
                                    c = (n = d[0], s = d[1], a = t, o = i, Math.min(s, o) - Math.max(n, a));
                                    if (0 <= c && (d[0] = Math.min(d[0], t), d[1] = Math.max(d[1], i), u = !0, .5 < c / (i - t))) return
                                }
                                u || l.push([t, i]),
                                this.Cues.newCue(this.captionsTracks[e], t, i, r)
                            },
                            r.onInitPtsFound = function(e) {
                                var t = this;
                                if ("main" === e.id && (this.initPTS[e.frag.cc] = e.initPTS), this.unparsedVttFrags.length) {
                                    var i = this.unparsedVttFrags;
                                    this.unparsedVttFrags = [],
                                    i.forEach(function(e) {
                                        t.onFragLoaded(e)
                                    })
                                }
                            },
                            r.getExistingTrack = function(e) {
                                var t = this.media;
                                if (t) for (var i = 0; i < t.textTracks.length; i++) {
                                    var r = t.textTracks[i];
                                    if (r[e]) return r
                                }
                                return null
                            },
                            r.createCaptionsTrack = function(e) {
                                var t = this.captionsProperties[e],
                                i = t.label,
                                r = t.languageCode,
                                n = this.captionsTracks;
                                if (!n[e]) {
                                    var s = this.getExistingTrack(e);
                                    if (s) n[e] = s,
                                    be(n[e]),
                                    ye(n[e], this.media);
                                    else {
                                        var a = this.createTextTrack("captions", i, r);
                                        a && (a[e] = !0, n[e] = a)
                                    }
                                }
                            },
                            r.createTextTrack = function(e, t, i) {
                                var r = this.media;
                                if (r) return r.addTextTrack(e, t, i)
                            },
                            r.destroy = function() {
                                o.prototype.destroy.call(this)
                            },
                            r.onMediaAttaching = function(e) {
                                this.media = e.media,
                                this._cleanTracks()
                            },
                            r.onMediaDetaching = function() {
                                var t = this.captionsTracks;
                                Object.keys(t).forEach(function(e) {
                                    be(t[e]),
                                    delete t[e]
                                })
                            },
                            r.onManifestLoading = function() {
                                this.lastSn = -1,
                                this.prevCC = -1,
                                this.vttCCs = {
                                    ccOffset: 0,
                                    presentationOffset: 0,
                                    0 : {
                                        start: 0,
                                        prevCC: -1,
                                        new: !1
                                    }
                                },
                                this._cleanTracks()
                            },
                            r._cleanTracks = function() {
                                var e = this.media;
                                if (e) {
                                    var t = e.textTracks;
                                    if (t) for (var i = 0; i < t.length; i++) be(t[i])
                                }
                            },
                            r.onManifestLoaded = function(e) {
                                var o = this;
                                if (this.textTracks = [], this.unparsedVttFrags = this.unparsedVttFrags || [], this.initPTS = [], this.cueRanges = [], this.config.enableWebVTT) {
                                    this.tracks = e.subtitles || [];
                                    var l = this.media ? this.media.textTracks: [];
                                    this.tracks.forEach(function(e, t) {
                                        var i, r, n;
                                        if (t < l.length) {
                                            for (var s = null,
                                            a = 0; a < l.length; a++) if (r = l[a], n = e, r && r.label === n.name && !r.textTrack1 && !r.textTrack2) {
                                                s = l[a];
                                                break
                                            }
                                            s && (i = s)
                                        }
                                        i = i || o.createTextTrack("subtitles", e.name, e.lang),
                                        e.
                                    default ? i.mode = o.hls.subtitleDisplay ? "showing": "hidden": i.mode = "disabled",
                                        o.textTracks.push(i)
                                    })
                                }
                            },
                            r.onLevelSwitching = function() {
                                this.enabled = "NONE" !== this.hls.currentLevel.closedCaptions
                            },
                            r.onFragLoaded = function(e) {
                                var t = e.frag,
                                i = e.payload;
                                if ("main" === t.type) {
                                    var r = t.sn;
                                    if (r !== this.lastSn + 1) {
                                        var n = this.cea608Parser;
                                        n && n.reset()
                                    }
                                    this.lastSn = r
                                } else if ("subtitle" === t.type) if (i.byteLength) {
                                    if (!Object(D.a)(this.initPTS[t.cc])) return this.unparsedVttFrags.push(e),
                                    void(this.initPTS.length && this.hls.trigger(P.a.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: t
                                    }));
                                    var s = t.decryptdata;
                                    null != s && null != s.key && "AES-128" === s.method || this._parseVTTs(t, i)
                                } else this.hls.trigger(P.a.SUBTITLE_FRAG_PROCESSED, {
                                    success: !1,
                                    frag: t
                                })
                            },
                            r._parseVTTs = function(t, e) {
                                var i = this.vttCCs;
                                i[t.cc] || (i[t.cc] = {
                                    start: t.start,
                                    prevCC: this.prevCC,
                                    new: !0
                                },
                                this.prevCC = t.cc);
                                var n = this.textTracks,
                                s = this.hls;
                                gt.parse(e, this.initPTS[t.cc], i, t.cc,
                                function(e) {
                                    var r = n[t.level];
                                    "disabled" !== r.mode ? (e.forEach(function(t) {
                                        if (!r.cues.getCueById(t.id)) try {
                                            r.addCue(t)
                                        } catch(e) {
                                            var i = new window.TextTrackCue(t.startTime, t.endTime, t.text);
                                            i.id = t.id,
                                            r.addCue(i)
                                        }
                                    }), s.trigger(P.a.SUBTITLE_FRAG_PROCESSED, {
                                        success: !0,
                                        frag: t
                                    })) : s.trigger(P.a.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: t
                                    })
                                },
                                function(e) {
                                    M.b.log("Failed to parse VTT cue: " + e),
                                    s.trigger(P.a.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: t
                                    })
                                })
                            },
                            r.onFragDecrypted = function(e) {
                                var t = e.payload,
                                i = e.frag;
                                if ("subtitle" === i.type) {
                                    if (!Object(D.a)(this.initPTS[i.cc])) return void this.unparsedVttFrags.push(e);
                                    this._parseVTTs(i, t)
                                }
                            },
                            r.onFragParsingUserdata = function(e) {
                                if (this.enabled && this.config.enableCEA708Captions) for (var t = 0; t < e.samples.length; t++) {
                                    var i = this.extractCea608Data(e.samples[t].bytes);
                                    this.cea608Parser.addData(e.samples[t].pts, i)
                                }
                            },
                            r.extractCea608Data = function(e) {
                                for (var t, i, r, n = 31 & e[0], s = 2, a = [], o = 0; o < n; o++) t = e[s++],
                                i = 127 & e[s++],
                                r = 127 & e[s++],
                                0 == i && 0 == r || 0 != (4 & t) && 0 == (3 & t) && (a.push(i), a.push(r));
                                return a
                            },
                            i
                        } (o);
                        function St(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        function Et(e) {
                            for (var t = [], i = 0; i < e.length; i++) {
                                var r = e[i];
                                "subtitles" === r.kind && r.label && t.push(e[i])
                            }
                            return t
                        }
                        var kt = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.MEDIA_ATTACHED, P.a.MEDIA_DETACHING, P.a.MANIFEST_LOADED, P.a.SUBTITLE_TRACK_LOADED) || this).tracks = [],
                                t.trackId = -1,
                                t.media = null,
                                t.stopped = !0,
                                t.subtitleDisplay = !0,
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.destroy = function() {
                                o.prototype.destroy.call(this)
                            },
                            n.onMediaAttached = function(e) {
                                var t = this;
                                this.media = e.media,
                                this.media && (this.queuedDefaultTrack && (this.subtitleTrack = this.queuedDefaultTrack, delete this.queuedDefaultTrack), this.trackChangeListener = this._onTextTracksChanged.bind(this), this.useTextTrackPolling = !(this.media.textTracks && "onchange" in this.media.textTracks), this.useTextTrackPolling ? this.subtitlePollingInterval = setInterval(function() {
                                    t.trackChangeListener()
                                },
                                500) : this.media.textTracks.addEventListener("change", this.trackChangeListener))
                            },
                            n.onMediaDetaching = function() {
                                this.media && (this.useTextTrackPolling ? clearInterval(this.subtitlePollingInterval) : this.media.textTracks.removeEventListener("change", this.trackChangeListener), this.media = null)
                            },
                            n.onManifestLoaded = function(e) {
                                var t = this,
                                i = e.subtitles || [];
                                this.tracks = i,
                                this.hls.trigger(P.a.SUBTITLE_TRACKS_UPDATED, {
                                    subtitleTracks: i
                                }),
                                i.forEach(function(e) {
                                    e.
                                default && (t.media ? t.subtitleTrack = e.id: t.queuedDefaultTrack = e.id)
                                })
                            },
                            n.onSubtitleTrackLoaded = function(e) {
                                var t = this,
                                i = e.id,
                                r = e.details,
                                n = this.trackId,
                                s = this.tracks,
                                a = s[n];
                                if (i >= s.length || i !== n || !a || this.stopped) this._clearReloadTimer();
                                else if (M.b.log("subtitle track " + i + " loaded"), r.live) {
                                    var o = te(a.details, r, e.stats.trequest);
                                    M.b.log("Reloading live subtitle playlist in " + o + "ms"),
                                    this.timer = setTimeout(function() {
                                        t._loadCurrentTrack()
                                    },
                                    o)
                                } else this._clearReloadTimer()
                            },
                            n.startLoad = function() {
                                this.stopped = !1,
                                this._loadCurrentTrack()
                            },
                            n.stopLoad = function() {
                                this.stopped = !0,
                                this._clearReloadTimer()
                            },
                            n._clearReloadTimer = function() {
                                this.timer && (clearTimeout(this.timer), this.timer = null)
                            },
                            n._loadCurrentTrack = function() {
                                var e = this.trackId,
                                t = this.tracks,
                                i = this.hls,
                                r = t[e];
                                e < 0 || !r || r.details && !r.details.live || (M.b.log("Loading subtitle track " + e), i.trigger(P.a.SUBTITLE_TRACK_LOADING, {
                                    url: r.url,
                                    id: e
                                }))
                            },
                            n._toggleTrackModes = function(e) {
                                var t = this.media,
                                i = this.subtitleDisplay,
                                r = this.trackId;
                                if (t) {
                                    var n = Et(t.textTracks);
                                    if ( - 1 === e)[].slice.call(n).forEach(function(e) {
                                        e.mode = "disabled"
                                    });
                                    else {
                                        var s = n[r];
                                        s && (s.mode = "disabled")
                                    }
                                    var a = n[e];
                                    a && (a.mode = i ? "showing": "hidden")
                                }
                            },
                            n._setSubtitleTrackInternal = function(e) {
                                var t = this.hls,
                                i = this.tracks; ! Object(D.a)(e) || e < -1 || e >= i.length || (this.trackId = e, M.b.log("Switching to subtitle track " + e), t.trigger(P.a.SUBTITLE_TRACK_SWITCH, {
                                    id: e
                                }), this._loadCurrentTrack())
                            },
                            n._onTextTracksChanged = function() {
                                if (this.media) {
                                    for (var e = -1,
                                    t = Et(this.media.textTracks), i = 0; i < t.length; i++) if ("hidden" === t[i].mode) e = i;
                                    else if ("showing" === t[i].mode) {
                                        e = i;
                                        break
                                    }
                                    this.subtitleTrack = e
                                }
                            },
                            St(r.prototype, [{
                                key: "subtitleTracks",
                                get: function() {
                                    return this.tracks
                                }
                            },
                            {
                                key: "subtitleTrack",
                                get: function() {
                                    return this.trackId
                                },
                                set: function(e) {
                                    this.trackId !== e && (this._toggleTrackModes(e), this._setSubtitleTrackInternal(e))
                                }
                            }]),
                            r
                        } (o),
                        wt = i(7);
                        function Tt(e) {
                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }
                        var At, Rt = window.performance,
                        It = function(r) {
                            var e, t;
                            function i(e, t) {
                                var i;
                                return (i = r.call(this, e, P.a.MEDIA_ATTACHED, P.a.MEDIA_DETACHING, P.a.ERROR, P.a.KEY_LOADED, P.a.FRAG_LOADED, P.a.SUBTITLE_TRACKS_UPDATED, P.a.SUBTITLE_TRACK_SWITCH, P.a.SUBTITLE_TRACK_LOADED, P.a.SUBTITLE_FRAG_PROCESSED, P.a.LEVEL_UPDATED) || this).fragmentTracker = t,
                                i.config = e.config,
                                i.state = de.STOPPED,
                                i.tracks = [],
                                i.tracksBuffered = [],
                                i.currentTrackId = -1,
                                i.decrypter = new wt.a(e, e.config),
                                i.lastAVStart = 0,
                                i._onMediaSeeking = i.onMediaSeeking.bind(Tt(Tt(i))),
                                i
                            }
                            t = r,
                            (e = i).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = i.prototype;
                            return n.onSubtitleFragProcessed = function(e) {
                                var t = e.frag,
                                i = e.success;
                                if (this.fragPrevious = t, this.state = de.IDLE, i) {
                                    var r = this.tracksBuffered[this.currentTrackId];
                                    if (r) {
                                        for (var n, s = t.start,
                                        a = 0; a < r.length; a++) if (s >= r[a].start && s <= r[a].end) {
                                            n = r[a];
                                            break
                                        }
                                        var o = t.start + t.duration;
                                        n ? n.end = o: (n = {
                                            start: s,
                                            end: o
                                        },
                                        r.push(n))
                                    }
                                }
                            },
                            n.onMediaAttached = function(e) {
                                var t = e.media; (this.media = t).addEventListener("seeking", this._onMediaSeeking),
                                this.state = de.IDLE
                            },
                            n.onMediaDetaching = function() {
                                this.media.removeEventListener("seeking", this._onMediaSeeking),
                                this.media = null,
                                this.state = de.STOPPED
                            },
                            n.onError = function(e) {
                                var t = e.frag;
                                t && "subtitle" === t.type && (this.state = de.IDLE)
                            },
                            n.onSubtitleTracksUpdated = function(e) {
                                var t = this;
                                M.b.log("subtitle tracks updated"),
                                this.tracksBuffered = [],
                                this.tracks = e.subtitleTracks,
                                this.tracks.forEach(function(e) {
                                    t.tracksBuffered[e.id] = []
                                })
                            },
                            n.onSubtitleTrackSwitch = function(e) {
                                if (this.currentTrackId = e.id, this.tracks && -1 !== this.currentTrackId) {
                                    var t = this.tracks[this.currentTrackId];
                                    t && t.details && this.setInterval(500)
                                } else this.clearInterval()
                            },
                            n.onSubtitleTrackLoaded = function(e) {
                                var t = e.id,
                                i = e.details,
                                r = this.currentTrackId,
                                n = this.tracks,
                                s = n[r];
                                t >= n.length || t !== r || !s || (i.live &&
                                function(e, t, i) {
                                    void 0 === i && (i = 0);
                                    var r = -1;
                                    ee(e, t,
                                    function(e, t, i) {
                                        t.start = e.start,
                                        r = i
                                    });
                                    var n = t.fragments;
                                    if (r < 0) n.forEach(function(e) {
                                        e.start += i
                                    });
                                    else for (var s = r + 1; s < n.length; s++) n[s].start = n[s - 1].start + n[s - 1].duration
                                } (s.details, i, this.lastAVStart), s.details = i, this.setInterval(500))
                            },
                            n.onKeyLoaded = function() {
                                this.state === de.KEY_LOADING && (this.state = de.IDLE)
                            },
                            n.onFragLoaded = function(e) {
                                var t = this.fragCurrent,
                                i = e.frag.decryptdata,
                                r = e.frag,
                                n = this.hls;
                                if (this.state === de.FRAG_LOADING && t && "subtitle" === e.frag.type && t.sn === e.frag.sn && 0 < e.payload.byteLength && i && i.key && "AES-128" === i.method) {
                                    var s = Rt.now();
                                    this.decrypter.decrypt(e.payload, i.key.buffer, i.iv.buffer,
                                    function(e) {
                                        var t = Rt.now();
                                        n.trigger(P.a.FRAG_DECRYPTED, {
                                            frag: r,
                                            payload: e,
                                            stats: {
                                                tstart: s,
                                                tdecrypt: t
                                            }
                                        })
                                    })
                                }
                            },
                            n.onLevelUpdated = function(e) {
                                var t = e.details.fragments;
                                this.lastAVStart = t.length ? t[0].start: 0
                            },
                            n.doTick = function() {
                                if (this.media) switch (this.state) {
                                case de.IDLE:
                                    var e = this.config,
                                    t = this.currentTrackId,
                                    i = this.fragmentTracker,
                                    r = this.media,
                                    n = this.tracks;
                                    if (!n || !n[t] || !n[t].details) break;
                                    var s, a = e.maxBufferHole,
                                    o = e.maxFragLookUpTolerance,
                                    l = Math.min(e.maxBufferLength, e.maxMaxBufferLength),
                                    u = z.bufferedInfo(this._getBuffered(), r.currentTime, a),
                                    h = u.end,
                                    d = u.len,
                                    c = n[t].details,
                                    f = c.fragments,
                                    p = f.length,
                                    v = f[p - 1].start + f[p - 1].duration;
                                    if (l < d) return;
                                    var m = this.fragPrevious; (s = h < v ? (m && c.hasProgramDateTime && (s = se(f, m.endProgramDateTime, o)), s || ae(m, f, h, o)) : f[p - 1]) && s.encrypted ? (M.b.log("Loading key for " + s.sn), this.state = de.KEY_LOADING, this.hls.trigger(P.a.KEY_LOADING, {
                                        frag: s
                                    })) : s && i.getState(s) === U && (this.fragCurrent = s, this.state = de.FRAG_LOADING, this.hls.trigger(P.a.FRAG_LOADING, {
                                        frag: s
                                    }))
                                } else this.state = de.IDLE
                            },
                            n.stopLoad = function() {
                                this.lastAVStart = 0,
                                r.prototype.stopLoad.call(this)
                            },
                            n._getBuffered = function() {
                                return this.tracksBuffered[this.currentTrackId] || []
                            },
                            n.onMediaSeeking = function() {
                                this.fragPrevious = null
                            },
                            i
                        } (ce);
                        function xt(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        } !
                        function(e) {
                            e.WIDEVINE = "com.widevine.alpha",
                            e.PLAYREADY = "com.microsoft.playready"
                        } (At = At || {});
                        var Ot = function(i) {
                            var e, t;
                            function r(e) {
                                var t;
                                return (t = i.call(this, e, P.a.MEDIA_ATTACHED, P.a.MEDIA_DETACHED, P.a.MANIFEST_PARSED) || this)._widevineLicenseUrl = void 0,
                                t._licenseXhrSetup = void 0,
                                t._emeEnabled = void 0,
                                t._requestMediaKeySystemAccess = void 0,
                                t._mediaKeysList = [],
                                t._media = null,
                                t._hasSetMediaKeys = !1,
                                t._requestLicenseFailureCount = 0,
                                t._onMediaEncrypted = function(e) {
                                    M.b.log('Media is encrypted using "' + e.initDataType + '" init data type'),
                                    t._attemptSetMediaKeys(),
                                    t._generateRequestWithPreferredKeySession(e.initDataType, e.initData)
                                },
                                t._widevineLicenseUrl = e.config.widevineLicenseUrl,
                                t._licenseXhrSetup = e.config.licenseXhrSetup,
                                t._emeEnabled = e.config.emeEnabled,
                                t._requestMediaKeySystemAccess = e.config.requestMediaKeySystemAccessFunc,
                                t
                            }
                            t = i,
                            (e = r).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t;
                            var n = r.prototype;
                            return n.getLicenseServerUrl = function(e) {
                                switch (e) {
                                case At.WIDEVINE:
                                    return this._widevineLicenseUrl
                                }
                                throw new Error('no license server URL configured for key-system "' + e + '"')
                            },
                            n._attemptKeySystemAccess = function(t, e, i) {
                                var r = this,
                                n = function(e, t, i) {
                                    switch (e) {
                                    case At.WIDEVINE:
                                        return function(e, t) {
                                            var i = {
                                                videoCapabilities: []
                                            };
                                            return t.forEach(function(e) {
                                                i.videoCapabilities.push({
                                                    contentType: 'video/mp4; codecs="' + e + '"'
                                                })
                                            }),
                                            [i]
                                        } (0, i);
                                    default:
                                        throw new Error("Unknown key-system: " + e)
                                    }
                                } (t, 0, i);
                                M.b.log("Requesting encrypted media key-system access"),
                                this.requestMediaKeySystemAccess(t, n).then(function(e) {
                                    r._onMediaKeySystemAccessObtained(t, e)
                                }).
                                catch(function(e) {
                                    M.b.error('Failed to obtain key-system "' + t + '" access:', e)
                                })
                            },
                            n._onMediaKeySystemAccessObtained = function(t, e) {
                                var i = this;
                                M.b.log('Access for key-system "' + t + '" obtained');
                                var r = {
                                    mediaKeysSessionInitialized: !1,
                                    mediaKeySystemAccess: e,
                                    mediaKeySystemDomain: t
                                };
                                this._mediaKeysList.push(r),
                                e.createMediaKeys().then(function(e) {
                                    r.mediaKeys = e,
                                    M.b.log('Media-keys created for key-system "' + t + '"'),
                                    i._onMediaKeysCreated()
                                }).
                                catch(function(e) {
                                    M.b.error("Failed to create media-keys:", e)
                                })
                            },
                            n._onMediaKeysCreated = function() {
                                var t = this;
                                this._mediaKeysList.forEach(function(e) {
                                    e.mediaKeysSession || (e.mediaKeysSession = e.mediaKeys.createSession(), t._onNewMediaKeySession(e.mediaKeysSession))
                                })
                            },
                            n._onNewMediaKeySession = function(t) {
                                var i = this;
                                M.b.log("New key-system session " + t.sessionId),
                                t.addEventListener("message",
                                function(e) {
                                    i._onKeySessionMessage(t, e.message)
                                },
                                !1)
                            },
                            n._onKeySessionMessage = function(t, e) {
                                M.b.log("Got EME message event, creating license request"),
                                this._requestLicense(e,
                                function(e) {
                                    M.b.log("Received license data, updating key-session"),
                                    t.update(e)
                                })
                            },
                            n._attemptSetMediaKeys = function() {
                                if (!this._media) throw new Error("Attempted to set mediaKeys without first attaching a media element");
                                if (!this._hasSetMediaKeys) {
                                    var e = this._mediaKeysList[0];
                                    if (!e || !e.mediaKeys) return M.b.error("Fatal: Media is encrypted but no CDM access or no keys have been obtained yet"),
                                    void this.hls.trigger(P.a.ERROR, {
                                        type: c.b.KEY_SYSTEM_ERROR,
                                        details: c.a.KEY_SYSTEM_NO_KEYS,
                                        fatal: !0
                                    });
                                    M.b.log("Setting keys for encrypted media"),
                                    this._media.setMediaKeys(e.mediaKeys),
                                    this._hasSetMediaKeys = !0
                                }
                            },
                            n._generateRequestWithPreferredKeySession = function(e, t) {
                                var i = this,
                                r = this._mediaKeysList[0];
                                if (!r) return M.b.error("Fatal: Media is encrypted but not any key-system access has been obtained yet"),
                                void this.hls.trigger(P.a.ERROR, {
                                    type: c.b.KEY_SYSTEM_ERROR,
                                    details: c.a.KEY_SYSTEM_NO_ACCESS,
                                    fatal: !0
                                });
                                if (r.mediaKeysSessionInitialized) M.b.warn("Key-Session already initialized but requested again");
                                else {
                                    var n = r.mediaKeysSession;
                                    if (!n) return M.b.error("Fatal: Media is encrypted but no key-session existing"),
                                    void this.hls.trigger(P.a.ERROR, {
                                        type: c.b.KEY_SYSTEM_ERROR,
                                        details: c.a.KEY_SYSTEM_NO_SESSION,
                                        fatal: !0
                                    });
                                    M.b.log('Generating key-session request for "' + e + '" init data type'),
                                    r.mediaKeysSessionInitialized = !0,
                                    n.generateRequest(e, t).then(function() {
                                        M.b.debug("Key-session generation succeeded")
                                    }).
                                    catch(function(e) {
                                        M.b.error("Error generating key-session request:", e),
                                        i.hls.trigger(P.a.ERROR, {
                                            type: c.b.KEY_SYSTEM_ERROR,
                                            details: c.a.KEY_SYSTEM_NO_SESSION,
                                            fatal: !1
                                        })
                                    })
                                }
                            },
                            n._createLicenseXhr = function(e, t, i) {
                                var r = new XMLHttpRequest,
                                n = this._licenseXhrSetup;
                                try {
                                    if (n) try {
                                        n(r, e)
                                    } catch(t) {
                                        r.open("POST", e, !0),
                                        n(r, e)
                                    }
                                    r.readyState || r.open("POST", e, !0)
                                } catch(e) {
                                    throw new Error("issue setting up KeySystem license XHR " + e)
                                }
                                return r.responseType = "arraybuffer",
                                r.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, r, e, t, i),
                                r
                            },
                            n._onLicenseRequestReadyStageChange = function(e, t, i, r) {
                                switch (e.readyState) {
                                case 4:
                                    if (200 === e.status) this._requestLicenseFailureCount = 0,
                                    M.b.log("License request succeeded"),
                                    "arraybuffer" !== e.responseType && M.b.warn("xhr response type was not set to the expected arraybuffer for license request"),
                                    r(e.response);
                                    else {
                                        if (M.b.error("License Request XHR failed (" + t + "). Status: " + e.status + " (" + e.statusText + ")"), this._requestLicenseFailureCount++, 3 < this._requestLicenseFailureCount) return void this.hls.trigger(P.a.ERROR, {
                                            type: c.b.KEY_SYSTEM_ERROR,
                                            details: c.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                            fatal: !0
                                        });
                                        var n = 3 - this._requestLicenseFailureCount + 1;
                                        M.b.warn("Retrying license request, " + n + " attempts left"),
                                        this._requestLicense(i, r)
                                    }
                                }
                            },
                            n._generateLicenseRequestChallenge = function(e, t) {
                                switch (e.mediaKeySystemDomain) {
                                case At.WIDEVINE:
                                    return t
                                }
                                throw new Error("unsupported key-system: " + e.mediaKeySystemDomain)
                            },
                            n._requestLicense = function(e, t) {
                                M.b.log("Requesting content license for key-system");
                                var i = this._mediaKeysList[0];
                                if (!i) return M.b.error("Fatal error: Media is encrypted but no key-system access has been obtained yet"),
                                void this.hls.trigger(P.a.ERROR, {
                                    type: c.b.KEY_SYSTEM_ERROR,
                                    details: c.a.KEY_SYSTEM_NO_ACCESS,
                                    fatal: !0
                                });
                                try {
                                    var r = this.getLicenseServerUrl(i.mediaKeySystemDomain),
                                    n = this._createLicenseXhr(r, e, t);
                                    M.b.log("Sending license request to URL: " + r);
                                    var s = this._generateLicenseRequestChallenge(i, e);
                                    n.send(s)
                                } catch(e) {
                                    M.b.error("Failure requesting DRM license: " + e),
                                    this.hls.trigger(P.a.ERROR, {
                                        type: c.b.KEY_SYSTEM_ERROR,
                                        details: c.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0
                                    })
                                }
                            },
                            n.onMediaAttached = function(e) {
                                if (this._emeEnabled) {
                                    var t = e.media; (this._media = t).addEventListener("encrypted", this._onMediaEncrypted)
                                }
                            },
                            n.onMediaDetached = function() {
                                this._media && (this._media.removeEventListener("encrypted", this._onMediaEncrypted), this._media = null)
                            },
                            n.onManifestParsed = function(e) {
                                if (this._emeEnabled) {
                                    var t = e.levels.map(function(e) {
                                        return e.audioCodec
                                    }),
                                    i = e.levels.map(function(e) {
                                        return e.videoCodec
                                    });
                                    this._attemptKeySystemAccess(At.WIDEVINE, t, i)
                                }
                            },
                            xt(r.prototype, [{
                                key: "requestMediaKeySystemAccess",
                                get: function() {
                                    if (!this._requestMediaKeySystemAccess) throw new Error("No requestMediaKeySystemAccess function configured");
                                    return this._requestMediaKeySystemAccess
                                }
                            }]),
                            r
                        } (o),
                        Ct = function(n) {
                            for (var e = 1; e < arguments.length; e++) {
                                var s = null != arguments[e] ? arguments[e] : {},
                                t = Object.keys(s);
                                "function" == typeof Object.getOwnPropertySymbols && (t = t.concat(Object.getOwnPropertySymbols(s).filter(function(e) {
                                    return Object.getOwnPropertyDescriptor(s, e).enumerable
                                }))),
                                t.forEach(function(e) {
                                    var t, i, r;
                                    t = n,
                                    r = s[i = e],
                                    i in t ? Object.defineProperty(t, i, {
                                        value: r,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : t[i] = r
                                })
                            }
                            return n
                        } ({
                            autoStartLoad: !0,
                            startPosition: -1,
                            defaultAudioCodec: void 0,
                            debug: !1,
                            capLevelOnFPSDrop: !1,
                            capLevelToPlayerSize: !1,
                            initialLiveManifestSize: 1,
                            maxBufferLength: 30,
                            maxBufferSize: 6e7,
                            maxBufferHole: .5,
                            lowBufferWatchdogPeriod: .5,
                            highBufferWatchdogPeriod: 3,
                            nudgeOffset: .1,
                            nudgeMaxRetry: 3,
                            maxFragLookUpTolerance: .25,
                            liveSyncDurationCount: 3,
                            liveMaxLatencyDurationCount: 1 / 0,
                            liveSyncDuration: void 0,
                            liveMaxLatencyDuration: void 0,
                            liveDurationInfinity: !1,
                            liveBackBufferLength: 1 / 0,
                            maxMaxBufferLength: 600,
                            enableWorker: !0,
                            enableSoftwareAES: !0,
                            manifestLoadingTimeOut: 1e4,
                            manifestLoadingMaxRetry: 1,
                            manifestLoadingRetryDelay: 1e3,
                            manifestLoadingMaxRetryTimeout: 64e3,
                            startLevel: void 0,
                            levelLoadingTimeOut: 1e4,
                            levelLoadingMaxRetry: 4,
                            levelLoadingRetryDelay: 1e3,
                            levelLoadingMaxRetryTimeout: 64e3,
                            fragLoadingTimeOut: 2e4,
                            fragLoadingMaxRetry: 6,
                            fragLoadingRetryDelay: 1e3,
                            fragLoadingMaxRetryTimeout: 64e3,
                            startFragPrefetch: !1,
                            fpsDroppedMonitoringPeriod: 5e3,
                            fpsDroppedMonitoringThreshold: .2,
                            appendErrorMaxRetry: 3,
                            loader: Ne,
                            fLoader: void 0,
                            pLoader: void 0,
                            xhrSetup: void 0,
                            licenseXhrSetup: void 0,
                            abrController: Re,
                            bufferController: xe,
                            capLevelController: Ce,
                            fpsController: De,
                            stretchShortVideoTrack: !1,
                            maxAudioFramesDrift: 1,
                            forceKeyFrameOnDiscontinuity: !0,
                            abrEwmaFastLive: 3,
                            abrEwmaSlowLive: 9,
                            abrEwmaFastVoD: 3,
                            abrEwmaSlowVoD: 9,
                            abrEwmaDefaultEstimate: 5e5,
                            abrBandWidthFactor: .95,
                            abrBandWidthUpFactor: .7,
                            abrMaxWithRealBitrate: !1,
                            maxStarvationDelay: 4,
                            maxLoadingDelay: 4,
                            minAutoBitrate: 0,
                            emeEnabled: !1,
                            widevineLicenseUrl: void 0,
                            requestMediaKeySystemAccessFunc: "undefined" != typeof window && window.navigator && window.navigator.requestMediaKeySystemAccess ? window.navigator.requestMediaKeySystemAccess.bind(window.navigator) : null
                        },
                        {
                            cueHandler: r,
                            enableCEA708Captions: !0,
                            enableWebVTT: !0,
                            captionsTextTrack1Label: "English",
                            captionsTextTrack1LanguageCode: "en",
                            captionsTextTrack2Label: "Spanish",
                            captionsTextTrack2LanguageCode: "es"
                        },
                        {
                            subtitleStreamController: It,
                            subtitleTrackController: kt,
                            timelineController: bt,
                            audioStreamController: Ge,
                            audioTrackController: Ue,
                            emeController: Ot
                        });
                        function Lt(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var r = t[i];
                                r.enumerable = r.enumerable || !1,
                                r.configurable = !0,
                                "value" in r && (r.writable = !0),
                                Object.defineProperty(e, r.key, r)
                            }
                        }
                        function Dt(e, t, i) {
                            return t && Lt(e.prototype, t),
                            i && Lt(e, i),
                            e
                        }
                        function Pt(e) {
                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return e
                        }
                        i.d(t, "default",
                        function() {
                            return Mt
                        });
                        var Mt = function(b) {
                            var e, t;
                            function S(e) {
                                var t;
                                void 0 === e && (e = {}),
                                t = b.call(this) || this;
                                var i = S.DefaultConfig;
                                if ((e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) && (e.liveSyncDuration || e.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                                for (var r in i) r in e || (e[r] = i[r]);
                                if (void 0 !== e.liveMaxLatencyDurationCount && e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                                if (void 0 !== e.liveMaxLatencyDuration && (e.liveMaxLatencyDuration <= e.liveSyncDuration || void 0 === e.liveSyncDuration)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                                Object(M.a)(e.debug),
                                t.config = e,
                                t._autoLevelCapping = -1;
                                var n = t.abrController = new e.abrController(Pt(Pt(t))),
                                s = new e.bufferController(Pt(Pt(t))),
                                a = t.capLevelController = new e.capLevelController(Pt(Pt(t))),
                                o = new e.fpsController(Pt(Pt(t))),
                                l = new k(Pt(Pt(t))),
                                u = new w(Pt(Pt(t))),
                                h = new T(Pt(Pt(t))),
                                d = new Se(Pt(Pt(t))),
                                c = t.levelController = new _e(Pt(Pt(t))),
                                f = new R(Pt(Pt(t))),
                                p = [c, t.streamController = new pe(Pt(Pt(t)), f)],
                                v = e.audioStreamController;
                                v && p.push(new v(Pt(Pt(t)), f)),
                                t.networkControllers = p;
                                var m = [l, u, h, n, s, a, o, d, f];
                                if (v = e.audioTrackController) {
                                    var _ = new v(Pt(Pt(t)));
                                    t.audioTrackController = _,
                                    m.push(_)
                                }
                                if (v = e.subtitleTrackController) {
                                    var g = new v(Pt(Pt(t)));
                                    t.subtitleTrackController = g,
                                    p.push(g)
                                }
                                if (v = e.emeController) {
                                    var y = new v(Pt(Pt(t)));
                                    t.emeController = y,
                                    m.push(y)
                                }
                                return (v = e.subtitleStreamController) && p.push(new v(Pt(Pt(t)), f)),
                                (v = e.timelineController) && m.push(new v(Pt(Pt(t)))),
                                t.coreComponents = m,
                                t
                            }
                            t = b,
                            (e = S).prototype = Object.create(t.prototype),
                            (e.prototype.constructor = e).__proto__ = t,
                            S.isSupported = function() {
                                return e = W(),
                                t = SourceBuffer || window.WebKitSourceBuffer,
                                i = e && "function" == typeof e.isTypeSupported && e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
                                r = !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove,
                                !!i && !!r;
                                var e, t, i, r
                            }, Dt(S, null, [{
                                key: "version",
                                get: function() {}
                            },
                            {
                                key: "Events",
                                get: function() {
                                    return P.a
                                }
                            },
                            {
                                key: "ErrorTypes",
                                get: function() {
                                    return c.b
                                }
                            },
                            {
                                key: "ErrorDetails",
                                get: function() {
                                    return c.a
                                }
                            },
                            {
                                key: "DefaultConfig",
                                get: function() {
                                    return S.defaultConfig ? S.defaultConfig: Ct
                                },
                                set: function(e) {
                                    S.defaultConfig = e
                                }
                            }]);
                            var i = S.prototype;
                            return i.destroy = function() {
                                M.b.log("destroy"),
                                this.trigger(P.a.DESTROYING),
                                this.detachMedia(),
                                this.coreComponents.concat(this.networkControllers).forEach(function(e) {
                                    e.destroy()
                                }),
                                this.url = null,
                                this.removeAllListeners(),
                                this._autoLevelCapping = -1
                            },
                            i.attachMedia = function(e) {
                                M.b.log("attachMedia"),
                                this.media = e,
                                this.trigger(P.a.MEDIA_ATTACHING, {
                                    media: e
                                })
                            },
                            i.detachMedia = function() {
                                M.b.log("detachMedia"),
                                this.trigger(P.a.MEDIA_DETACHING),
                                this.media = null
                            },
                            i.loadSource = function(e) {
                                e = n.buildAbsoluteURL(window.location.href, e, {
                                    alwaysNormalize: !0
                                }),
                                M.b.log("loadSource:" + e),
                                this.url = e,
                                this.trigger(P.a.MANIFEST_LOADING, {
                                    url: e
                                })
                            },
                            i.startLoad = function(t) {
                                void 0 === t && (t = -1),
                                M.b.log("startLoad(" + t + ")"),
                                this.networkControllers.forEach(function(e) {
                                    e.startLoad(t)
                                })
                            },
                            i.stopLoad = function() {
                                M.b.log("stopLoad"),
                                this.networkControllers.forEach(function(e) {
                                    e.stopLoad()
                                })
                            },
                            i.swapAudioCodec = function() {
                                M.b.log("swapAudioCodec"),
                                this.streamController.swapAudioCodec()
                            },
                            i.recoverMediaError = function() {
                                M.b.log("recoverMediaError");
                                var e = this.media;
                                this.detachMedia(),
                                this.attachMedia(e)
                            },
                            Dt(S, [{
                                key: "levels",
                                get: function() {
                                    return this.levelController.levels
                                }
                            },
                            {
                                key: "currentLevel",
                                get: function() {
                                    return this.streamController.currentLevel
                                },
                                set: function(e) {
                                    M.b.log("set currentLevel:" + e),
                                    this.loadLevel = e,
                                    this.streamController.immediateLevelSwitch()
                                }
                            },
                            {
                                key: "nextLevel",
                                get: function() {
                                    return this.streamController.nextLevel
                                },
                                set: function(e) {
                                    M.b.log("set nextLevel:" + e),
                                    this.levelController.manualLevel = e,
                                    this.streamController.nextLevelSwitch()
                                }
                            },
                            {
                                key: "loadLevel",
                                get: function() {
                                    return this.levelController.level
                                },
                                set: function(e) {
                                    M.b.log("set loadLevel:" + e),
                                    this.levelController.manualLevel = e
                                }
                            },
                            {
                                key: "nextLoadLevel",
                                get: function() {
                                    return this.levelController.nextLoadLevel
                                },
                                set: function(e) {
                                    this.levelController.nextLoadLevel = e
                                }
                            },
                            {
                                key: "firstLevel",
                                get: function() {
                                    return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                                },
                                set: function(e) {
                                    M.b.log("set firstLevel:" + e),
                                    this.levelController.firstLevel = e
                                }
                            },
                            {
                                key: "startLevel",
                                get: function() {
                                    return this.levelController.startLevel
                                },
                                set: function(e) {
                                    M.b.log("set startLevel:" + e),
                                    -1 !== e && (e = Math.max(e, this.minAutoLevel)),
                                    this.levelController.startLevel = e
                                }
                            },
                            {
                                key: "capLevelToPlayerSize",
                                set: function(e) {
                                    var t = !!e;
                                    t !== this.config.capLevelToPlayerSize && (t ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(), this.autoLevelCapping = -1, this.streamController.nextLevelSwitch()), this.config.capLevelToPlayerSize = t)
                                }
                            },
                            {
                                key: "autoLevelCapping",
                                get: function() {
                                    return this._autoLevelCapping
                                },
                                set: function(e) {
                                    M.b.log("set autoLevelCapping:" + e),
                                    this._autoLevelCapping = e
                                }
                            },
                            {
                                key: "bandwidthEstimate",
                                get: function() {
                                    var e = this.abrController._bwEstimator;
                                    return e ? e.getEstimate() : NaN
                                }
                            },
                            {
                                key: "autoLevelEnabled",
                                get: function() {
                                    return - 1 === this.levelController.manualLevel
                                }
                            },
                            {
                                key: "manualLevel",
                                get: function() {
                                    return this.levelController.manualLevel
                                }
                            },
                            {
                                key: "minAutoLevel",
                                get: function() {
                                    for (var e = this.levels,
                                    t = this.config.minAutoBitrate,
                                    i = e ? e.length: 0, r = 0; r < i; r++) if ((e[r].realBitrate ? Math.max(e[r].realBitrate, e[r].bitrate) : e[r].bitrate) > t) return r;
                                    return 0
                                }
                            },
                            {
                                key: "maxAutoLevel",
                                get: function() {
                                    var e = this.levels,
                                    t = this.autoLevelCapping;
                                    return - 1 === t && e && e.length ? e.length - 1 : t
                                }
                            },
                            {
                                key: "nextAutoLevel",
                                get: function() {
                                    return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel)
                                },
                                set: function(e) {
                                    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, e)
                                }
                            },
                            {
                                key: "audioTracks",
                                get: function() {
                                    var e = this.audioTrackController;
                                    return e ? e.audioTracks: []
                                }
                            },
                            {
                                key: "audioTrack",
                                get: function() {
                                    var e = this.audioTrackController;
                                    return e ? e.audioTrack: -1
                                },
                                set: function(e) {
                                    var t = this.audioTrackController;
                                    t && (t.audioTrack = e)
                                }
                            },
                            {
                                key: "liveSyncPosition",
                                get: function() {
                                    return this.streamController.liveSyncPosition
                                }
                            },
                            {
                                key: "subtitleTracks",
                                get: function() {
                                    var e = this.subtitleTrackController;
                                    return e ? e.subtitleTracks: []
                                }
                            },
                            {
                                key: "subtitleTrack",
                                get: function() {
                                    var e = this.subtitleTrackController;
                                    return e ? e.subtitleTrack: -1
                                },
                                set: function(e) {
                                    var t = this.subtitleTrackController;
                                    t && (t.subtitleTrack = e)
                                }
                            },
                            {
                                key: "subtitleDisplay",
                                get: function() {
                                    var e = this.subtitleTrackController;
                                    return !! e && e.subtitleDisplay
                                },
                                set: function(e) {
                                    var t = this.subtitleTrackController;
                                    t && (t.subtitleDisplay = e)
                                }
                            }]),
                            S
                        } (K)
                    }]).
                default)
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
                    function(e) {
                        return typeof e
                    }: function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
                    },
                    n = function(e, t, i) {
                        return t && s(e.prototype, t),
                        i && s(e, i),
                        e
                    };
                    function s(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var a, y = i(399),
                    b = i(333),
                    S = i(334),
                    o = i(400),
                    l = (a = o) && a.__esModule ? a: {
                    default:
                        a
                    };
                    var u = (n(h, [{
                        key: "_createToolbar",
                        value: function(e, i) {
                            var r = this,
                            t = b.Toolkit.deepMerge({},
                            e);
                            if (t.items) {
                                this.vOpt.toolbarEleArr.forEach(function(e, t) {
                                    e.type == i && (e.toolbarEle && e.toolbarEle.parentNode && e.toolbarEle.parentNode.removeChild(e.toolbarEle), r.vOpt.toolbarEleArr.splice(t, 1))
                                });
                                var n = document.createElement("div");
                                n.className = i + " toolbar-panel toolbar-" + this.vOpt.uuid + " h5Player-toolbar-layer";
                                var s = document.createElement("div");
                                s.className = "toolbar-panel-inner",
                                n.appendChild(s),
                                this.vOpt.videoC.appendChild(n),
                                this.vOpt.toolbarEleArr.push({
                                    type: i,
                                    toolbarEle: n
                                });
                                var a = this;
                                S.EventUtil.addHandler(n, "dblclick",
                                function(e) {
                                    e.stopPropagation()
                                }),
                                S.EventUtil.addHandler(n, "click",
                                function(e) {
                                    a.videoCMouseOverFlag = !1
                                }),
                                S.EventUtil.addHandler(n, "mousemove",
                                function(e) { ! 0 !== a.isDragProgress && e.stopPropagation(),
                                    a.isShowPtzRedArrow(!1, e)
                                }),
                                S.EventUtil.addHandler(n, "mouseenter",
                                function(e) {
                                    e.stopPropagation(),
                                    a.isShowPtzRedArrow(!1, e)
                                }),
                                S.EventUtil.addHandler(n, "mouseleave",
                                function(e) {
                                    e.stopPropagation()
                                }),
                                S.EventUtil.addHandler(n, "mousedown",
                                function(e) {
                                    e.stopPropagation(),
                                    a.isShowPtzRedArrow(!1, e)
                                }),
                                S.EventUtil.addHandler(n, "contextmenu",
                                function(e) {
                                    e.stopPropagation(),
                                    e.preventDefault ? e.preventDefault() : e.returnValue = !1
                                });
                                for (var o = t.items,
                                l = o.length,
                                u = 0; u < l; u++) this._createToolbarItems(o[u], "panel", s)
                            } else this._createToolbarItems(t, "single")
                        }
                    },
                    {
                        key: "_createToolbarItems",
                        value: function(t, e, i) {
                            var r = this;
                            if ("self-defined" !== t.style) if ("string" == typeof t) {
                                var n = b.Toolkit.deepMerge({},
                                y.defaultToolbarConf[t]);
                                if ("videoRatio" === t) n.menuList.list.map(function(e) {
                                    r._videoRatio === e.value ? e.checked = !0 : e.checked = !1
                                });
                                else if ("videoZoom" === t) {
                                    var s = this.getZoomStatus();
                                    "init" != s && "end" != s && (n.className = "video-inzoom")
                                } else if ("steplessZoom" === t) 0 != this.getIZoomStatus() && (n.className = "video-inizoom");
                                else if ("videoSound" === t) {
                                    var a = this._videoplayer;
                                    a && a.audioinit && (n.title = "声音", 1 == a.muted || 0 == a.volume ? n.className = "video-sound-off": n.className = "video-sound-on")
                                } else if ("videoPlay" == t) {
                                    var o = this._videoplayer;
                                    o && o.paused && (n.show = !0)
                                } else if ("videoPause" == t) {
                                    var l = this._videoplayer;
                                    l && l.paused && (n.show = !1)
                                } else if ("curRate" == t) {
                                    var u = this._videoplayer;
                                    if (u && 1 != u.playbackRate) {
                                        var h = "",
                                        d = u.playbackRate;
                                        h = .5 == d || .25 == d || .125 == d || .0625 == d ? "x1/" + 1 / d: -1 !== d.toString().indexOf(".") ? (h = "x" + d).substr(0, h.indexOf(".") + 3) : "x" + d,
                                        n.text = h
                                    }
                                }
                                this.defaultToolbarConf[t] = n,
                                t = n
                            } else if (t.id) {
                                if (y.defaultToolbarConf[t.id]) {
                                    var c = b.Toolkit.deepMerge({},
                                    y.defaultToolbarConf[t.id]);
                                    t = b.Toolkit.deepMerge(c, t)
                                }
                                this.defaultToolbarConf[t.id] = t
                            }
                            var f = this,
                            p = document.createElement("div"),
                            v = void 0;
                            switch (i ? i.appendChild(p) : (this.vOpt.videoC.appendChild(p), this.vOpt.toolbarEleArr.push({
                                type: null,
                                toolbarEle: p
                            })), "progress" === t.style ? p.className = t.className: t.className && ("button" === t.type ? t.menuList ? p.className = "toolbar-item-btn": (p.className = "toolbar-item " + t.style + " " + t.className + " item-button", t.text && (p.innerText = t.text)) : p.className = "toolbar-item " + t.style + " " + t.className), t.show ? p.style.display = "inline-block": p.style.display = "none", p.setAttribute("data-id", t.id), t.style && "self-defined" !== t.style && "progress" !== t.style && ( - 1 < t.style.indexOf("right") ? v = "right": -1 < t.style.indexOf("left") && (v = "left"), p.style.float = v), t.type) {
                            case "static":
                                if (!t.menuList) {
                                    if (p.setAttribute("data-type", t.type), p.className = p.className + " item-" + t.type, this.setStaticContent(t.id, t.text), "videoTitle" === t.id) {
                                        var m = this._videoTitle ? this._videoTitle: "未知视频";
                                        this.setStaticContent(t.id, m)
                                    }
                                    return
                                }
                                this._createMenuList(p, t);
                                break;
                            case "button":
                                if (!t.menuList) return t.tooltip && p.setAttribute("title", t.tooltip),
                                S.EventUtil.addHandler(p, "click",
                                function(e) {
                                    e.stopPropagation(),
                                    f._btnClickFunction(t, p)
                                }),
                                S.EventUtil.addHandler(p, "mousedown",
                                function(e) {
                                    e.stopPropagation()
                                }),
                                S.EventUtil.addHandler(p, "mouseup",
                                function(e) {}),
                                S.EventUtil.addHandler(p, "dblclick",
                                function(e) {
                                    e.stopPropagation()
                                }),
                                void p.setAttribute("data-type", t.type);
                                this._createMenuList(p, t);
                                break;
                            case "progress":
                                p.setAttribute("data-type", "static"),
                                this._videoProressD = document.createElement("div"),
                                this._videoProressD.className = "video-progress-detail",
                                p.appendChild(this._videoProressD),
                                this._bufferedProress = document.createElement("div"),
                                this._bufferedProress.className = "video-progress-buffered",
                                this._videoProressD.appendChild(this._bufferedProress),
                                this._realProress = document.createElement("div"),
                                this._realProress.className = "video-progress-real",
                                this._videoProressD.appendChild(this._realProress),
                                this._circleRange = document.createElement("span"),
                                this._circleRange.className = "video-circle-range",
                                p.appendChild(this._circleRange);
                                var _ = document.createElement("span");
                                _.className = "video-progress-tip",
                                p.appendChild(_);
                                var g = this._videoProressD;
                                try {
                                    g = this._videoProressD.closest(".video-progress")
                                } catch(e) {
                                    g = this._videoProressD.parentNode
                                }
                                S.EventUtil.addHandler(g, "click",
                                function(e) {
                                    var t = e || window.event,
                                    i = f._videoProressD.offsetWidth,
                                    r = t.offsetX,
                                    n = void 0;
                                    e.stopPropagation(),
                                    (t.target.classList.contains("video-circle-range") || t.target.classList.contains("video-progress-tip")) && (r = (n = (n = S.EventUtil.getEleToParentDistance(t.target, "video-progress").offsetLeft) < 0 ? 0 : n) + r),
                                    f._videoplayer && (f.currentT = r / i * f.durationT, f._videoplayer.currentTime = f.currentT - f._playtimeOffset, f.updatePorgress())
                                }),
                                S.EventUtil.addHandler(g, "mousemove", b.Toolkit.debounce(function(e) {
                                    if (! (f.durationT <= 0) && isFinite(f.durationT)) {
                                        var t = e || window.event,
                                        i = f._videoProressD.offsetWidth,
                                        r = t.offsetX,
                                        n = void 0;
                                        e.stopPropagation(),
                                        (t.target.classList.contains("video-circle-range") || t.target.classList.contains("video-progress-tip")) && (r = (n = (n = S.EventUtil.getEleToParentDistance(t.target, "video-progress").offsetLeft) < 0 ? 0 : n) + r);
                                        var s = (r = i < (r = r < 0 ? 0 : r) ? i: r) / i * f.durationT;
                                        f._srcStartPts && f.vOpt.enableProgressShowPts ? _.innerText = new Date(f._srcStartPts + 1e3 * s).format("yyyy-MM-dd hh:mm:ss") : _.innerText = f.formartTime(s),
                                        _.style.visibility = "visible";
                                        var a = _.clientWidth;
                                        _.style.left = r - 12 + "px",
                                        _.style.left = r < a / 2 ? 0 : i < r + a / 2 ? i - a + "px": r - a / 2 + "px"
                                    }
                                },
                                0, !0)),
                                S.EventUtil.addHandler(g, "mouseout",
                                function(e) {
                                    _.style.visibility = "hidden",
                                    e.stopPropagation()
                                }),
                                S.EventUtil.addHandler(this._circleRange, "mousedown",
                                function(e) {
                                    f.isDragProgress = !0,
                                    f.showOrHideRightMenu(!1),
                                    S.EventUtil.addHandler(f.vOpt.videoC, "mousemove",
                                    function(e) {
                                        if (f.isDragProgress) {
                                            var t = e || window.event,
                                            i = t.offsetX,
                                            r = f._videoProressD.offsetWidth;
                                            "video" === t.target.nodeName.toLowerCase() || t.target.classList.contains("toolbar-panel") ? i = (i -= 10) < 0 ? 0 : i: t.target.classList.contains("video-progress-detail") || t.target.classList.contains("toolbar-panel-inner") || t.target.classList.contains("video-progress-real") || (i = (i = S.EventUtil.getEleToParentDistance(t.target, "h5vp-video-container").offsetLeft - 10 + i) < 0 ? 0 : i);
                                            var n = i / r * 100;
                                            n = 100 < n ? 100 : n,
                                            f.currentP = n,
                                            setTimeout(function() {
                                                f._realProress && (f._realProress.style.width = n + "%"),
                                                f._circleRange && (f._circleRange.style.left = n + "%")
                                            },
                                            0)
                                        }
                                    }),
                                    S.EventUtil.addHandler(document, "mouseup",
                                    function(e) {
                                        e.stopPropagation(),
                                        f.isDragProgress && (f.updatePorgress(!0), f.isDragProgress = !1)
                                    })
                                })
                            }
                        }
                    },
                    {
                        key: "getPlayTime",
                        value: function() {
                            return this._videoplayer ? this._videoplayer.currentTime + this._playtimeOffset: 0
                        }
                    },
                    {
                        key: "setPlayTime",
                        value: function(e) {
                            return !! this._videoplayer && (this._videoplayer.currentTime = e - this._playtimeOffset, !0)
                        }
                    },
                    {
                        key: "getPlaySpeed",
                        value: function() {
                            return this._videoplayer ? this._videoplayer.playbackRate: 1
                        }
                    },
                    {
                        key: "setPlaySpeed",
                        value: function(e) {
                            if (this._videoplayer && "number" == typeof e) {
                                if (this._videoplayer.playbackRate = e, this.getToobarBtnById("curRate")) {
                                    var t = "";
                                    t = .5 == e || .25 == e || .125 == e || .0625 == e ? "x1/" + 1 / e: -1 !== e.toString().indexOf(".") ? (t = "x" + e).substr(0, t.indexOf(".") + 3) : "x" + e,
                                    this.setStaticContent("curRate", t)
                                }
                                return ! 0
                            }
                            return ! 1
                        }
                    },
                    {
                        key: "setVideoCanvasPosition",
                        value: function(e) {
                            var t = this.vOpt.videoCvs;
                            t && (t.style.left = e.left + "px", t.style.top = e.top + "px", t.style.width = e.width + "px", t.style.height = e.height + "px")
                        }
                    },
                    {
                        key: "_getOriginVideoSize",
                        value: function() {
                            var e = this.vOpt.videoC,
                            t = e.clientWidth,
                            i = e.clientHeight,
                            r = {
                                left: 0,
                                top: 0,
                                width: t,
                                height: i
                            };
                            return 0 < this._videoWidth && 0 < this._videoHeight && (this._videoWidth / t <= this._videoHeight / i ? (r.height = i, r.width = Math.round(this._videoWidth / this._videoHeight * i), r.top = 0, r.left = Math.round((t - r.width) / 2)) : (r.width = t, r.height = Math.round(this._videoHeight / this._videoWidth * t), r.left = 0, r.top = Math.round((i - r.height) / 2))),
                            r
                        }
                    },
                    {
                        key: "setRatio",
                        value: function(e) {
                            if ("origin" !== e && "stretch" !== e && "4:3" !== e && "16:9" !== e && "16:10" !== e) return ! 1;
                            var t = {};
                            switch (this._videoRatio = e) {
                            case "origin":
                                this.vOpt.videoEle.style.objectFit = "contain",
                                this.vOpt.displayC.style.padding = 0;
                                var i = this._getOriginVideoSize();
                                t = this.setZoomSVGPosition(i),
                                this.setVMCanvasPosition(t),
                                this.setRTSVGPosition(t),
                                this.setVideoCanvasPosition(t);
                                break;
                            case "stretch":
                                this.vOpt.videoEle.style.objectFit = "fill",
                                this.vOpt.displayC.style.padding = 0,
                                t = this.setZoomSVGPosition({
                                    left: 0,
                                    top: 0,
                                    width: parseInt(this.vOpt.displayC.clientWidth),
                                    height: parseInt(this.vOpt.displayC.clientHeight)
                                }),
                                this.setVMCanvasPosition(t),
                                this.setRTSVGPosition(t),
                                this.setVideoCanvasPosition(t);
                                break;
                            case "4:3":
                                this._ratioAdjust(.75);
                                break;
                            case "16:9":
                                this._ratioAdjust(9 / 16);
                                break;
                            case "16:10":
                                this._ratioAdjust(.625)
                            }
                            if (this.getToobarBtnById("videoRatio")) {
                                var r = this.getToobarItemStatusById("videoRatio"),
                                n = r && r.menuList && r.menuList.list ? r.menuList.list: [],
                                s = [];
                                if (r.isExecuteDefaultFunc) {
                                    for (var a = 0; a < n.length; a++) e == n[a].value ? s.push({
                                        id: n[a].id,
                                        checked: !0
                                    }) : s.push({
                                        id: n[a].id,
                                        checked: !1
                                    });
                                    this.setToolbarMenuById("videoRatio", s)
                                }
                            }
                            return ! 0
                        }
                    },
                    {
                        key: "getRatioCode",
                        value: function() {
                            return this._videoRatio ? this._videoRatio: this.vOpt.ratio
                        }
                    },
                    {
                        key: "_ratioAdjust",
                        value: function(e) {
                            var t = this.vOpt.videoC.style.width,
                            i = this.vOpt.videoC.style.height,
                            r = parseInt(i) / parseInt(t);
                            if (r !== e) {
                                this.vOpt.videoEle.style.objectFit = "fill";
                                var n = 0,
                                s = {};
                                0 < r - e ? (n = (parseInt(i) - parseInt(t) * e) / 2, this.vOpt.displayC.style.paddingTop = n + "px", this.vOpt.displayC.style.paddingLeft = 0, this.vOpt.displayC.style.paddingRight = 0, this.vOpt.displayC.style.paddingBottom = n + "px", s = this.setZoomSVGPosition({
                                    left: 0,
                                    top: n,
                                    width: parseInt(this.vOpt.displayC.clientWidth),
                                    height: parseInt(this.vOpt.displayC.clientHeight) - n - n
                                }), this.setVMCanvasPosition(s), this.setRTSVGPosition(s), this.setVideoCanvasPosition(s)) : r - e < 0 && (n = (parseInt(t) - parseInt(i) / e) / 2, this.vOpt.displayC.style.paddingTop = 0, this.vOpt.displayC.style.paddingLeft = n + "px", this.vOpt.displayC.style.paddingRight = n + "px", this.vOpt.displayC.style.paddingBottom = 0, s = this.setZoomSVGPosition({
                                    left: n,
                                    top: 0,
                                    width: parseInt(this.vOpt.displayC.clientWidth) - n - n,
                                    height: parseInt(this.vOpt.displayC.clientHeight)
                                }), this.setVMCanvasPosition(s), this.setRTSVGPosition(s), this.setVideoCanvasPosition(s))
                            }
                        }
                    },
                    {
                        key: "_createMenuList",
                        value: function(e, d) {
                            e.setAttribute("data-type", d.type + "-menu"),
                            d.tooltip && e.setAttribute("title", d.tooltip);
                            var t = document.createDocumentFragment(),
                            i = void 0;
                            if ("static" === d.type) e.className = "static-menu-box item-" + d.type,
                            (i = document.createElement("span")).className = "static-menu-text",
                            e.appendChild(i);
                            else {
                                var r = document.createElement("i");
                                r.className = d.className + " item-button-icon",
                                e.appendChild(r)
                            }
                            var c = document.createElement("ul");
                            c.className = "video-menu-list-box  h5Player-menulist-layer" + d.style,
                            e.appendChild(c);
                            for (var n = 0; n < d.menuList.list.length; n++) {
                                var s = document.createElement("li"),
                                a = d.menuList.list[n];
                                a.checked ? s.className = "video-menu-list-li active": (a.checked = !1, s.className = "video-menu-list-li"),
                                a.gray ? s.className = "video-menu-list-li not-allowed": a.gray = !1,
                                i && a.checked && (i.innerText = a.text, i.title = a.text),
                                s.setAttribute("data-value", a.value),
                                s.setAttribute("data-text", a.text),
                                s.setAttribute("data-id", a.id);
                                var o = document.createElement("div");
                                o.className = "toolbar-menu-icon-box",
                                s.appendChild(o);
                                var l = document.createElement("span");
                                l.className = "checked-icon",
                                o.appendChild(l);
                                var u = document.createElement("div");
                                u.className = "menu-text-text",
                                s.appendChild(u),
                                u.innerText = a.text,
                                t.appendChild(s)
                            }
                            c.appendChild(t);
                            var f = this;
                            S.EventUtil.addHandler(e, "mouseenter",
                            function(e) {
                                c.style.display = "block",
                                c.style.left = f._getVidoContainerEventInfo(e).x + "px"
                            }),
                            S.EventUtil.addHandler(e, "mouseleave",
                            function(e) {
                                c.style.display = "none"
                            }),
                            S.EventUtil.addHandler(c, "click",
                            function(e) {
                                e.stopPropagation();
                                var t = e || window.event;
                                if (! ( - 1 < t.target.className.indexOf("active"))) {
                                    var i = b.Toolkit.findNearAncestor(t.target, "video-menu-list-li");
                                    if (i) {
                                        for (var r = i.parentNode.children,
                                        n = r.length,
                                        s = [], a = 0; a < n; a++) {
                                            var o = r[a].getAttribute("data-value"),
                                            l = r[a].getAttribute("data-text"),
                                            u = r[a].getAttribute("data-id");
                                            if (i == r[a]) {
                                                var h = d.menuList.list[a].checked;
                                                d.isOnlyOneChecked && (d.isExecuteDefaultFunc && ("videoRateChange" === d.id && f.setPlaySpeed(o), "videoRatio" === d.id && f.setRatio(o)), f.setStaticContent(d.id, l)),
                                                d.menuList.list[a].
                                                function && d.menuList.list[a].
                                                function({
                                                    index: f.vOpt.index,
                                                    item: d,
                                                    clickedItem: d.menuList.list[a]
                                                }),
                                                s.push({
                                                    id: u,
                                                    checked: !(h && !d.menuList.list[a].checked)
                                                })
                                            } else d.isOnlyOneChecked && s.push({
                                                id: u,
                                                checked: !1
                                            })
                                        }
                                        f.setToolbarMenuById(d.id, s),
                                        c.style.display = "none"
                                    }
                                }
                            })
                        }
                    },
                    {
                        key: "checkZoomBtnStatus",
                        value: function() {
                            var e = this.getZoomStatus(),
                            t = this.getToobarBtnById("videoZoom");
                            t && ("init" == e || "end" == e ? (t.classList.remove("video-inzoom"), t.classList.add("video-zoom")) : (t.classList.remove("video-zoom"), t.classList.add("video-inzoom")))
                        }
                    },
                    {
                        key: "checkSteplessZoomZoomBtnStatus",
                        value: function() {
                            var e = this.getIZoomStatus(),
                            t = this.getToobarBtnById("steplessZoom");
                            t && (0 == e ? (t.classList.remove("video-inizoom"), t.classList.add("video-izoom")) : (t.classList.remove("video-izoom"), t.classList.add("video-inizoom")))
                        }
                    },
                    {
                        key: "_btnClickFunction",
                        value: function(e, t) {
                            if (!e.gray) if (e.id) {
                                switch (e.id) {
                                case "videoClose":
                                    e.isExecuteDefaultFunc && this._videoCloseFunc();
                                    break;
                                case "videoPrintScreen":
                                case "videoRatio":
                                    break;
                                case "videoSound":
                                    if (e.isExecuteDefaultFunc) {
                                        var i = this._videoplayer,
                                        r = this.getToobarBtnById("videoSound");
                                        if (!i.audioinit) return; ! i || 1 != i.muted && 0 != i.volume ? (i.muted = !0, r.classList.remove("video-sound-on", "video-sound-disable"), r.classList.add("video-sound-off")) : (i.muted = !1, i.volume = 1, r.classList.remove("video-sound-off", "video-sound-disable"), r.classList.add("video-sound-on"))
                                    }
                                    break;
                                case "videoZoom":
                                    if (e.isExecuteDefaultFunc) {
                                        var n = this.getZoomStatus(),
                                        s = this.getToobarBtnById("videoZoom");
                                        "init" == n || "end" == n ? (this.startZoom(), s.classList.remove("video-zoom"), s.classList.add("video-inzoom")) : (this.stopZoom(), s.classList.remove("video-inzoom"), s.classList.add("video-zoom"))
                                    }
                                    break;
                                case "steplessZoom":
                                    if (e.isExecuteDefaultFunc) {
                                        var a = this.getIZoomStatus(),
                                        o = this.getToobarBtnById("steplessZoom");
                                        0 == a ? (this.startIZoom(), o.classList.remove("video-izoom"), o.classList.add("video-inizoom")) : (this.stopIZoom(), o.classList.remove("video-inizoom"), o.classList.add("video-izoom"))
                                    }
                                    break;
                                case "videoPause":
                                    e.isExecuteDefaultFunc && (this.pause(), this.showOrHideBtn("videoPause", !1), this.showOrHideBtn("videoPlay", !0));
                                    break;
                                case "videoPlay":
                                    e.isExecuteDefaultFunc && (this.play(), this.showOrHideBtn("videoPlay", !1), this.showOrHideBtn("videoPause", !0));
                                    break;
                                case "slowPlay":
                                    if (e.isExecuteDefaultFunc) {
                                        for (var l = this._videoplayer.playbackRate,
                                        u = [16, 8, 4, 2, 1, .5, .25, .125, .0625], h = void 0, d = u.length - 1; 0 <= d; d--) if (l <= u[d]) {
                                            h = u[d + 1];
                                            break
                                        }
                                        h = "number" == typeof h ? h: .0625,
                                        this.setPlaySpeed(h)
                                    }
                                    break;
                                case "fastPlay":
                                    if (e.isExecuteDefaultFunc) {
                                        for (var c = this._videoplayer.playbackRate,
                                        f = [16, 8, 4, 2, 1, .5, .25, .125, .0625], p = void 0, v = 0, m = f.length; v < m; v++) if (f[v] <= c) {
                                            p = f[v - 1];
                                            break
                                        }
                                        p = "number" == typeof p ? p: 16,
                                        this.setPlaySpeed(p)
                                    }
                                    break;
                                case "stepPlay":
                                    e.isExecuteDefaultFunc && (this.showOrHideBtn("videoPause", !1), this.showOrHideBtn("videoPlay", !0), this.singleFramePlay());
                                    break;
                                case "videoRealNormal":
                                case "videoRealHover":
                                    var _ = this.getToobarBtnById("videoRealNormal") || this.getToobarBtnById("videoRealHover"),
                                    g = this.getToobarBtnById("videoHisNormal") || this.getToobarBtnById("videoHisHover");
                                    _.classList.contains("video-real-normal") && (_.classList.remove("video-real-normal"), _.classList.add("video-real-hover"), g.classList.remove("video-history-hover"), g.classList.add("video-history-normal"));
                                    break;
                                case "videoHisNormal":
                                case "videoHisHover":
                                    var y = this.getToobarBtnById("videoRealNormal") || this.getToobarBtnById("videoRealHover"),
                                    b = this.getToobarBtnById("videoHisNormal") || this.getToobarBtnById("videoHisHover");
                                    b.classList.contains("video-history-normal") && (b.classList.remove("video-history-normal"), b.classList.add("video-history-hover"), y.classList.remove("video-real-hover"), y.classList.add("video-real-normal"));
                                    break;
                                default:
                                    e.hasOwnProperty("_rightmenu") && !e.menuList && this.rightMenuEle && (this.rightMenuEle.style.display = "none")
                                }
                                e.
                                function && e.
                                function({
                                    index: this.vOpt.index,
                                    item: e,
                                    ele: t
                                })
                            } else e.
                            function && e.
                            function({
                                index: this.vOpt.index,
                                item: e,
                                ele: t
                            })
                        }
                    },
                    {
                        key: "_showError",
                        value: function(e, t, i) {
                            this._showOrHideLoading(!1),
                            this._setBgImg(!0),
                            this.SetWindowPTZ(!1),
                            this.stopIZoom(),
                            this.stopZoom(),
                            this._changeVideoCursor(),
                            this.ptzDirection = -1,
                            this.mousewheelTimer && (clearTimeout(this.mousewheelTimer), this.mousewheelTimer = null);
                            var r = "";
                            "StreamError" == e ? (r = l.
                        default["" + (i.error ? i.error: i.code)]) && "" != r || (r = i.h5ms ? "H5MS：开流失败[" + (i.error ? i.error: i.code) + "]": "开流失败[" + (i.error ? i.error: i.code) + "]") : "MediaError" == e ? r = "MediaVideoError" == t ? 1 == i.code ? "取回过程被用户中止": 2 == i.code ? "下载发生错误": 3 == i.code ? "解码发生错误": 4 == i.code ? "不支持的视音频": "播放标签其他异常": "MediaMSEError" == t ? "源扩展发生错误": "解封装发生错误": "NetworkError" == e ? r = "Exception" == t ? "网络异常": (t = "Unsupport") ? "网络协议不支持": "HTTP状态错误": "WasmError" == e && ("WasmWorkError" === t ? r = "WebWorker创建失败": "WasmDecoderError" === t && (r = "wasm解码失败")),
                            r && "" != r || (r = e + "-未知错误"),
                            this.addWaterMark({
                                id: "_showError_",
                                text: r,
                                color: "rgba(255,255,255,.7)",
                                fontSize: "17px",
                                top: "50%",
                                marginTop: "60px",
                                opacity: this.vOpt.showerror && this.vOpt.showerrorDetail ? 1 : 0
                            })
                        }
                    },
                    {
                        key: "_showErrorOpacity",
                        value: function() {
                            this.changeWaterMarkById("_showError_", {
                                opacity: this.vOpt.showerror && this.vOpt.showerrorDetail ? 1 : 0
                            })
                        }
                    },
                    {
                        key: "_videoCloseFunc",
                        value: function(e) {
                            this.delAllWaterMark(),
                            this.stopDrawing(!0),
                            this.stopVideo(e),
                            this.destroyImage(),
                            this.removeToolbar(),
                            this.removeRightMenu()
                        }
                    },
                    {
                        key: "showOrHideBtn",
                        value: function(e, t) {
                            var i = this.getToobarBtnById(e);
                            i && (i.style.display = t ? "inline-block": "none"),
                            this.setToobarItemStatusById(e, {
                                show: t
                            })
                        }
                    },
                    {
                        key: "_deepTraversal",
                        value: function(e, t) {
                            if (e) for (var i = e.children,
                            r = 0,
                            n = i.length; r < n; r++) i[r].getAttribute("data-id") === t ? this.curOperateNode = i[r] : this._deepTraversal(i[r], t)
                        }
                    },
                    {
                        key: "getToobarBtnById",
                        value: function(e) {
                            this.curOperateNode = null;
                            for (var t = 0,
                            i = this.vOpt.toolbarEleArr.length; t < i; t++) {
                                var r = this.vOpt.toolbarEleArr[t].toolbarEle;
                                this._deepTraversal(r, e)
                            }
                            return this.curOperateNode
                        }
                    },
                    {
                        key: "setToobarItemStatusById",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !t || t && "object" != (void 0 === t ? "undefined": r(t))) return null;
                            e && this.defaultToolbarConf[e] && (this.defaultToolbarConf[e] = b.Toolkit.deepMerge(this.defaultToolbarConf[e], t))
                        }
                    },
                    {
                        key: "setToolbarItemAttrsById",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !t || t && "object" != (void 0 === t ? "undefined": r(t))) return null;
                            e && this.defaultToolbarConf[e] && (this.defaultToolbarConf[e] = b.Toolkit.deepMerge(this.defaultToolbarConf[e], t));
                            var i = this.getToobarBtnById(e);
                            i && (t.hasOwnProperty("checked") && (t.checked ? this._setToolbarCheckedStyle(i) : this._setToolbarNotCheckedStyle(i)), t.hasOwnProperty("gray") && (t.gray ? this._setToolbarGrayStyle(i) : this._setToolbarNotGrayStyle(i)), t.hasOwnProperty("text") && (this.setToolbarItemText(e, t.text), i.children[1] && (i.children[1].innerHTML = t.text)))
                        }
                    },
                    {
                        key: "_setToolbarCheckedStyle",
                        value: function(e) {
                            e.classList.add("active"),
                            e.classList.remove("not-allowed")
                        }
                    },
                    {
                        key: "_setToolbarNotCheckedStyle",
                        value: function(e) {
                            e.classList.remove("active")
                        }
                    },
                    {
                        key: "setToolbarItemChecked",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !0 !== t && !1 !== t) return null;
                            this.defaultToolbarConf[e] && (this.defaultToolbarConf[e] = b.Toolkit.deepMerge(this.defaultToolbarConf[e], {
                                checked: t
                            }));
                            var i = this.getToobarBtnById(e);
                            t ? this._setToolbarCheckedStyle(i) : this._setToolbarNotCheckedStyle(i)
                        }
                    },
                    {
                        key: "_setToolbarGrayStyle",
                        value: function(e) {
                            e.classList.add("not-allowed"),
                            e.classList.remove("active")
                        }
                    },
                    {
                        key: "_setToolbarNotGrayStyle",
                        value: function(e) {
                            e.classList.remove("not-allowed")
                        }
                    },
                    {
                        key: "setToolbarItemGray",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !0 !== t && !1 !== t) return null;
                            this.defaultToolbarConf[e] && (this.defaultToolbarConf[e] = b.Toolkit.deepMerge(this.defaultToolbarConf[e], {
                                gray: t
                            }));
                            var i = this.getToobarBtnById(e);
                            t ? this._setToolbarGrayStyle(i) : this._setToolbarNotGrayStyle(i)
                        }
                    },
                    {
                        key: "setToolbarItemText",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || t && "string" != typeof t) return null;
                            this.defaultToolbarConf[e] && (this.defaultToolbarConf[e] = b.Toolkit.deepMerge(this.defaultToolbarConf[e], {
                                text: t
                            }));
                            var i = this.getToobarBtnById(e);
                            i && i.children[1] && (i.children[1].innerHTML = t)
                        }
                    },
                    {
                        key: "getToobarItemStatusById",
                        value: function(e) {
                            return e && this.defaultToolbarConf[e] ? this.defaultToolbarConf[e] : null
                        }
                    },
                    {
                        key: "setToolbarMenuById",
                        value: function(e, t) {
                            if (e && t && (!t || 0 !== t.length)) {
                                var i = this.defaultToolbarConf[e],
                                r = this.getToobarBtnById(e).lastChild.children;
                                if (i && i.menuList && i.menuList.list && 0 < i.menuList.list.length) for (var n = i.menuList.list,
                                s = 0,
                                a = t.length; s < a; s++) for (var o = 0,
                                l = n.length; o < l; o++) {
                                    var u = r[o];
                                    if (t[s].id == n[o].id) {
                                        b.Toolkit.deepMerge(n[o], t[s]),
                                        n[o] && n[o].checked ? (u.classList.add("active"), u.classList.remove("not-allowed")) : u.classList.remove("active"),
                                        n[o] && n[o].gray ? (u.classList.add("not-allowed"), u.classList.remove("active")) : u.classList.remove("not-allowed");
                                        break
                                    }
                                }
                            }
                        }
                    },
                    {
                        key: "showToolbarAuto",
                        value: function(e) {
                            e ? this.vOpt.videoC.classList.add("hoverClass") : this.vOpt.videoC.classList.remove("hoverClass")
                        }
                    },
                    {
                        key: "showOrHideToolbar",
                        value: function(e, t) {
                            if (t) {
                                var i = this.getToobarBtnById(t);
                                i && (i.style.display = e ? "block": "none"),
                                this.setToobarItemStatusById(t, {
                                    show: e
                                })
                            } else {
                                var r = "";
                                void 0 === e || (r = e ? 1 : 0);
                                for (var n = 0,
                                s = this.vOpt.toolbarEleArr.length; n < s; n++) this.vOpt.toolbarEleArr[n].toolbarEle.style.opacity = r
                            }
                        }
                    },
                    {
                        key: "createToolbar",
                        value: function(e) {
                            for (var t in e) this._createToolbar(e[t], t)
                        }
                    },
                    {
                        key: "removeToolbar",
                        value: function(e) {
                            if (!e) {
                                for (var t = 0,
                                i = this.vOpt.toolbarEleArr.length; t < i; t++) {
                                    var r = this.vOpt.toolbarEleArr[t].toolbarEle;
                                    r && r.parentNode && r.parentNode.removeChild(r)
                                }
                                return this.defaultToolbarConf = {},
                                this._bufferedProress && (this._bufferedProress = null),
                                this._circleRange && (this._circleRange = null),
                                this._realProress && (this._realProress = null),
                                this._videoProressD && (this._videoProressD = null),
                                void(this.vOpt.toolbarEleArr = [])
                            }
                            var n = this.getToobarBtnById(e);
                            n && n.parentNode && n.parentNode.removeChild(n),
                            this.defaultToolbarConf[e] && delete this.defaultToolbarConf[e]
                        }
                    },
                    {
                        key: "setStaticContent",
                        value: function(e, t) {
                            if (e && t) {
                                var i = this.getToobarBtnById(e);
                                if (i && "static" === i.getAttribute("data-type") && (i.innerText = t, i.setAttribute("title", t), this.setToobarItemStatusById(e, {
                                    text: t,
                                    tooltip: t
                                })), i && "static-menu" === i.getAttribute("data-type")) {
                                    var r = i.firstChild;
                                    r.innerText = t,
                                    r.setAttribute("title", t),
                                    this.setToobarItemStatusById(e, {
                                        text: t,
                                        tooltip: t
                                    })
                                }
                            }
                        }
                    },
                    {
                        key: "getStaticContent",
                        value: function(e) {
                            if (e) {
                                var t = this.getToobarBtnById(e);
                                return t && "static" === t.getAttribute("data-type") ? t.innerText: void 0
                            }
                        }
                    },
                    {
                        key: "updatePorgress",
                        value: function(e) {
                            if (e) {
                                var t = this.currentP / 100 * this.durationT;
                                this._videoplayer && (this._videoplayer.currentTime = t - this._playtimeOffset, this._updateCurrentTText())
                            } else this.currentP = Number(this.currentT / this.durationT * 100),
                            this.currentP = 100 < this.currentP ? 100 : this.currentP,
                            this._realProress && (this._realProress.style.width = this.currentP + "%"),
                            this._circleRange && (this._circleRange.style.left = this.currentP + "%"),
                            this._updateCurrentTText()
                        }
                    },
                    {
                        key: "_updateDateRate",
                        value: function() {
                            var e = "--";
                            this._dataRate && !isNaN(this._dataRate) && 0 < this._dataRate && (e = Math.floor(this._dataRate) + "KB"),
                            this.setStaticContent("videoRate", e);
                            var t = this._fps ? this._fps + "FPS": "--";
                            this.setStaticContent("videoFps", t)
                        }
                    },
                    {
                        key: "_updateCurrentTText",
                        value: function() {
                            var e = 0 < this.durationT && isFinite(this.durationT) ? this.formartTime(this.durationT) : "--",
                            t = "";
                            t = 0 < this.currentT ? this.formartTime(this.currentT) + "/" + e: "--/" + e,
                            this.setStaticContent("videoTime", t)
                        }
                    }]), h);
                    function h() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, h),
                        this.defaultToolbarConf = {}
                    }
                    t.
                default = u
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = {
                        videoClose: {
                            id: "videoClose",
                            text: "关闭当前流",
                            gray: !1,
                            checked: !1,
                            isExecuteDefaultFunc: !0
                        },
                        lineSplit: {
                            type: 1,
                            name: "lineSplit"
                        },
                        videoRatio: {
                            id: "videoRatio",
                            text: "设置画面比例",
                            gray: !1,
                            checked: !1,
                            menuList: [{
                                id: "orignRatio",
                                text: "原始",
                                value: "origin",
                                gray: !1,
                                originId: "videoRatio",
                                checked: !0,
                                function: function(e) {
                                    console.log(e.item.value)
                                }
                            },
                            {
                                id: "stretchRatio",
                                text: "拉伸",
                                value: "stretch",
                                gray: !1,
                                originId: "videoRatio",
                                checked: !1,
                                function: function(e) {
                                    console.log(e.item.value)
                                }
                            },
                            {
                                id: "4R3Ratio",
                                text: "4:3",
                                value: "4:3",
                                gray: !1,
                                originId: "videoRatio",
                                checked: !1,
                                function: function(e) {
                                    console.log(e.item.value)
                                }
                            },
                            {
                                id: "16R9Ratio",
                                text: "16:9",
                                value: "16:9",
                                gray: !1,
                                checked: !1,
                                originId: "videoRatio",
                                function: function(e) {
                                    console.log(e.item.value)
                                }
                            },
                            {
                                id: "16R10Ratio",
                                text: "16:10",
                                value: "16:10",
                                gray: !1,
                                originId: "videoRatio",
                                checked: !1,
                                function: function(e) {
                                    console.log(e.item.value)
                                }
                            }]
                        }
                    };
                    t.defaultToolbarConf = {
                        videoTitle: {
                            id: "videoTitle",
                            className: "video-title",
                            style: "left-top",
                            type: "static",
                            show: !0,
                            text: "无视频",
                            tooltip: "无视频"
                        },
                        videoRate: {
                            id: "videoRate",
                            className: "video-rate",
                            style: "left-top",
                            type: "static",
                            show: !0,
                            text: "--",
                            tooltip: "--"
                        },
                        videoFps: {
                            id: "videoFps",
                            className: "video-rate",
                            style: "left-top",
                            type: "static",
                            show: !0,
                            text: "--",
                            tooltip: "--"
                        },
                        videoClose: {
                            id: "videoClose",
                            isExecuteDefaultFunc: !0,
                            className: "video-close",
                            type: "button",
                            style: "right-top",
                            show: !0,
                            tooltip: "关闭"
                        },
                        videoPrintScreen: {
                            id: "videoPrintScreen",
                            isExecuteDefaultFunc: !0,
                            className: "video-printscreen",
                            type: "button",
                            style: "right-top",
                            show: !0,
                            tooltip: "抓图"
                        },
                        videoRatio: {
                            id: "videoRatio",
                            className: "video-ratio",
                            type: "button",
                            style: "right-top",
                            show: !0,
                            tooltip: "画面比例",
                            isExecuteDefaultFunc: !0,
                            isOnlyOneChecked: !0,
                            menuList: {
                                list: [{
                                    id: "orignRatio",
                                    text: "原始",
                                    value: "origin",
                                    gray: !1,
                                    checked: !0
                                },
                                {
                                    id: "stretchRatio",
                                    text: "拉伸",
                                    value: "stretch",
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "4R3Ratio",
                                    text: "4:3",
                                    value: "4:3",
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "16R9Ratio",
                                    text: "16:9",
                                    value: "16:9",
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "16R10Ratio",
                                    text: "16:10",
                                    value: "16:10",
                                    gray: !1,
                                    checked: !1
                                }]
                            }
                        },
                        videoZoom: {
                            id: "videoZoom",
                            isExecuteDefaultFunc: !0,
                            className: "video-zoom",
                            type: "button",
                            style: "right-buttom",
                            show: !0,
                            tooltip: "数字放大"
                        },
                        steplessZoom: {
                            id: "steplessZoom",
                            isExecuteDefaultFunc: !0,
                            className: "video-izoom",
                            type: "button",
                            style: "right-buttom",
                            show: !0,
                            tooltip: "无级缩放"
                        },
                        videoRealHover: {
                            id: "videoRealHover",
                            className: "video-real-hover",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            text: "实时",
                            tooltip: "实时"
                        },
                        videoRealNormal: {
                            id: "videoRealNormal",
                            className: "video-real-normal",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            text: "实时",
                            tooltip: "实时"
                        },
                        videoHisNormal: {
                            id: "videoHisNormal",
                            className: "video-history-normal",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            text: "历史",
                            tooltip: "历史"
                        },
                        videoHisHover: {
                            id: "videoHisHover",
                            className: "video-history-hover",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            text: "历史",
                            tooltip: "历史"
                        },
                        videoPause: {
                            id: "videoPause",
                            isExecuteDefaultFunc: !0,
                            className: "video-pause",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            tooltip: "暂停"
                        },
                        videoPlay: {
                            id: "videoPlay",
                            isExecuteDefaultFunc: !0,
                            className: "video-play",
                            type: "button",
                            style: "left-bottom",
                            show: !1,
                            tooltip: "播放"
                        },
                        slowPlay: {
                            id: "slowPlay",
                            isExecuteDefaultFunc: !0,
                            className: "slow-play",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            tooltip: "慢放"
                        },
                        stepPlay: {
                            id: "stepPlay",
                            isExecuteDefaultFunc: !0,
                            className: "step-play",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            tooltip: "单帧播放"
                        },
                        fastPlay: {
                            id: "fastPlay",
                            isExecuteDefaultFunc: !0,
                            className: "fast-play",
                            type: "button",
                            style: "left-bottom",
                            show: !0,
                            tooltip: "快放"
                        },
                        curRate: {
                            id: "curRate",
                            className: "cur-rate",
                            style: "left-bottom",
                            type: "static",
                            show: !0,
                            text: "x1"
                        },
                        videoRateChange: {
                            id: "videoRateChange",
                            type: "static",
                            style: "left-bottom",
                            show: !0,
                            text: "",
                            isExecuteDefaultFunc: !0,
                            isOnlyOneChecked: !0,
                            menuList: {
                                list: [{
                                    id: "16Rate",
                                    text: "x16",
                                    value: 16,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "8Rate",
                                    text: "x8",
                                    value: 8,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "4Rate",
                                    text: "x4",
                                    value: 4,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "2Rate",
                                    text: "x2",
                                    value: 2,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "1Rate",
                                    text: "x1",
                                    value: 1,
                                    gray: !1,
                                    checked: !0
                                },
                                {
                                    id: "0.5Rate",
                                    text: "x1/2",
                                    value: .5,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "0.25Rate",
                                    text: "x1/4",
                                    value: .25,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "0.125Rate",
                                    text: "x1/8",
                                    value: .125,
                                    gray: !1,
                                    checked: !1
                                },
                                {
                                    id: "0.0625Rate",
                                    text: "x1/16",
                                    value: .0625,
                                    gray: !1,
                                    checked: !1
                                }]
                            }
                        },
                        videoProgress: {
                            id: "videoProgress",
                            className: "video-progress",
                            type: "progress",
                            key: 1,
                            show: !0
                        },
                        videoTime: {
                            id: "videoTime",
                            className: "video-time",
                            style: "right-bottom",
                            type: "static",
                            key: 1,
                            show: !0,
                            text: "--/--",
                            tooltip: "--/--"
                        },
                        videoSound: {
                            id: "videoSound",
                            isExecuteDefaultFunc: !0,
                            className: "video-sound-disable",
                            type: "button",
                            style: "right-top",
                            show: !0,
                            tooltip: ""
                        }
                    },
                    t.defaultRightMenuConf = r
                },
                function(e, t, i) {
                    "use strict";
                    e.exports = {
                        1 : "操作成功并重起",
                        2 : "夹带数据",
                        3 : "操作成功但需要重起",
                        4 : "该指令需被重定向到其它服务器执行",
                        5 : "传输地址被自动协商和补齐",
                        11 : "请求类型与本驱动/过滤器不匹配，请尝试其它驱动/过滤器",
                        12 : "操作成功但没有连接",
                        13 : "操作成功，作为一个false结果",
                        101 : "成功新建db",
                        "-1": "未分类错误",
                        "-2": "avport错误",
                        "-3": "服务器配置信息被破坏",
                        "-4": "服务器必须重新启动",
                        "-5": "字符串的长度超出预设长度",
                        "-6": "指令已经过时",
                        "-7": "指令没有实现",
                        "-8": "运行时异常",
                        "-9": "驱动程序内部故障",
                        "-10": "内部程序逻辑错误",
                        "-11": "对象不支持的POSA接口",
                        "-12": "创建线程失败",
                        "-13": "空函数，不应该调用到此处",
                        "-14": "缺少或没有配置驱动(POSA对象构造器)",
                        "-15": "该功能限制使用",
                        "-16": "指令用法错误，程序逻辑错误",
                        "-17": "输出参数缓冲区太小",
                        "-18": "路由连接失败，找不到匹配网关主机模式集",
                        "-19": "试图注销尚未注册的POSA对象构造器",
                        "-20": "重复注册已经注册的POSA对象构造器",
                        "-21": "设置系统时间失败",
                        "-22": "设置服务器ip失败",
                        "-23": "取得服务器ip失败",
                        "-24": "更新系统文件失败",
                        "-25": "接收夹带数据失败",
                        "-26": "没有足够的内存",
                        "-27": "错误的组播地址数量",
                        "-28": "服务端检测到无法解析的请求",
                        "-29": "IO操作超时",
                        "-30": "IO操作被取消",
                        "-31": "连接正在进行中",
                        "-32": "未被挂装的Host",
                        "-33": "被固定挂装的Host",
                        "-34": "系统退出中，请求无法完成",
                        "-35": "外部程序逻辑错误",
                        "-41": "读取avsetting配置信息错误",
                        "-42": "写avsetting配置信息错误",
                        "-43": "没有找到要保存的类型",
                        "-45": "av名字错误",
                        "-46": "坐标不正确",
                        "-47": "宽度或是高度不正确",
                        "-48": "设置叠加位图不正确",
                        "-49": "获得动态感知错误",
                        "-50": "功能限制",
                        "-51": "设置编码参数失败",
                        "-52": "矩阵端口参数越界",
                        "-53": "视频尺寸参数错误",
                        "-54": "视频制式参数错误",
                        "-55": "视频编码器av口参数越界",
                        "-56": "视频编码器未知错误",
                        "-57": "视频解码器未知错误",
                        "-81": "列出用户信息失败",
                        "-82": "加入用户失败",
                        "-83": "删除用户失败",
                        "-84": "没有此用户",
                        "-85": "保存用户失败",
                        "-86": "用户数超出限制",
                        "-87": "没有请求的功能",
                        "-88": "没有权限访问",
                        "-89": "用户名或密码不正确",
                        "-90": "用户级别太低",
                        "-91": "已经有用户登录",
                        "-92": "本用户已经登录",
                        "-93": "不正确的对象名字",
                        "-94": "DDB存取出错",
                        "-95": "Ticket无效",
                        "-96": "登录失败",
                        "-97": "TCP Session连接数限制",
                        "-101": "设置的长度不能小于0",
                        "-102": "打开目录失败",
                        "-103": "删除文件失败",
                        "-104": "设置文件生存期错误",
                        "-105": "错误的时间格式",
                        "-106": "smf文件已经开始存储数据，请在存储数据前添加所有的流信息",
                        "-107": "被保护的文件无法删除，请取消保护后再删除",
                        "-110": "参数重复设置",
                        "-111": "参数不存在",
                        "-112": "磁盘空间不足",
                        "-141": "串口的端口号错误",
                        "-142": "打开串口失败",
                        "-143": "保存串口配置失败",
                        "-144": "读串口配置失败",
                        "-145": "setpioHelper错误",
                        "-146": "摄像头已经被锁定",
                        "-147": "摄像头不能被控制",
                        "-148": "访问受限",
                        "-149": "设备PTZControl失败",
                        "-150": "不支持的设备型号",
                        "-151": "向串口发送数据失败",
                        "-152": "获取PTZ操作信息失败",
                        "-153": "获取PTZ控制信息失败",
                        "-161": "磁盘号错误",
                        "-162": "磁盘格式化错误",
                        "-163": "错误的分区号",
                        "-164": "格式化磁盘分区错误",
                        "-166": "正在录像的文件不能删除",
                        "-167": "错误的文件名",
                        "-168": "没有找到满足条件的文件",
                        "-169": "错误的文件类型",
                        "-170": "缺少标题，不能录像",
                        "-171": "没有找到自动录像指令",
                        "-172": "设置自动录像失败",
                        "-173": "清除自动录像失败",
                        "-174": "分配地址失败",
                        "-175": "设置视频输出制式错误",
                        "-176": "设置视频输入制式错误",
                        "-177": "初始化MP4编码器错误",
                        "-178": "初始化MP4解码器错误",
                        "-179": "设定视频输入颜色",
                        "-180": "视频采集驱动初始化错误",
                        "-181": "视频显示驱动初始化错误",
                        "-182": "管理的objs超过系统范围",
                        "-183": "本sobj所拥有的targets超过限制",
                        "-184": "增加一个sobj错误",
                        "-185": "增加一个tboj错误",
                        "-186": "打开文件失败",
                        "-187": "没有找到指定的目标",
                        "-188": "处于disable状态",
                        "-189": "avsobj没有初始化",
                        "-190": "avtobj没有初始化",
                        "-191": "不能启动大图模式",
                        "-192": "在大图模式无法完成此操作",
                        "-193": "音频输入驱动初始化错误",
                        "-194": "音频输出驱动初始化错误",
                        "-195": "源重复打开",
                        "-196": "目标重复打开",
                        "-197": "MP3编码器初始化失败",
                        "-198": "MP3解码器初始化失败",
                        "-199": "错误的目标通道名",
                        "-200": "文件数目太多",
                        "-201": "错误的target数量(只支持一个target)",
                        "-202": "传输不存在或用户没有发起该target",
                        "-203": "错误的指令",
                        "-204": "错误的事件类型",
                        "-205": "错误的音频编码码率",
                        "-206": "串口处于disable状态",
                        "-207": "设置自动录像的条件重复",
                        "-208": "目标流不存在",
                        "-209": "节点处于断线状态",
                        "-210": "CarryId重复",
                        "-211": "CarryId不存在",
                        "-212": "设备处于断线状态",
                        "-213": "关闭文件错误",
                        "-214": "要读的长度错误",
                        "-215": "文件句柄错误",
                        "-216": "读文件错误",
                        "-217": "seekfile错误",
                        "-218": "得到文件长度错误",
                        "-219": "得到文件当前位置错误",
                        "-220": "没有音频数据",
                        "-221": "没有视频数据",
                        "-222": "写文件错误",
                        "-223": "系统资源(非内存)不足",
                        "-224": "PosaClass对象不存在",
                        "-225": "不是一个PosaSourceStream",
                        "-226": "不是一个PosaTargetStream",
                        "-227": "PosaHost对象已经存在",
                        "-228": "PosaHost对象不存在",
                        "-229": "PosaPort对象已经存在",
                        "-230": "PosaPort对象不存在",
                        "-231": "没有找到合适的PosaHost驱动",
                        "-232": "没有找到合适的PosaSourceStream驱动",
                        "-233": "没有找到合适的PosaTargetStream驱动",
                        "-234": "没有找到合适的PosaDecoder驱动",
                        "-235": "没有找到合适的PosaSilenceGenerator驱动",
                        "-236": "Posa对象已经存在",
                        "-237": "PosaSourceChannel已经被关闭",
                        "-238": "分配本地地址或端口失败",
                        "-239": "请求传输失败",
                        "-240": "请求接收数据失败",
                        "-241": "对象不存在",
                        "-242": "对象已经存在",
                        "-243": "对象属性设置错误",
                        "-244": "属性值为空或非法",
                        "-245": "不能分配到路径",
                        "-246": "目标必须是本地的，不能是远程的",
                        "-247": "路径连接失败",
                        "-248": "属性不存在",
                        "-249": "资源被抢占",
                        "-250": "资源编号错误",
                        "-251": "资源编号不存在",
                        "-252": "超过该网段最大数字码流数",
                        "-253": "POSA流I/O超时",
                        "-254": "POSA流格式不匹配",
                        "-255": "没有为软解码器设置Renderer",
                        "-256": "没有为POSA目标流设置源",
                        "-257": "POSA流的url格式不正确",
                        "-258": "UDP或TCP端口已经被占用",
                        "-259": "源流不存在",
                        "-260": "解码器初始化失败",
                        "-261": "解码失败",
                        "-262": "没有初始化POSA运行支持库",
                        "-263": "已经初始化过了POSA运行支持库",
                        "-264": "没有提供定时器API",
                        "-265": "加入到组播失败",
                        "-266": "连接设备失败",
                        "-267": "本地矩阵切换线路被抢占",
                        "-268": "选定的节点路由(PassNODE)中不包括本节点或者找不到对应的网关",
                        "-269": "传输的源和目标NPS地址不能都要求自动分配",
                        "-270": "服务器连接其它设备或服务器时发生网络断线错误",
                        "-271": "选定的节点路由(PassNODE)已经包括本节点",
                        "-272": "断线重连动作现在不能进行, 必须推迟",
                        "-273": "看门狗线程检查到源流在设定时间内没收到任何码流数据",
                        "-274": "非法的目标通道名称",
                        "-275": "检查到TCP socket已经无效(无法获取对方IP)",
                        "-276": "视频丢失",
                        "-277": "非法XML字符串",
                        "-278": "XML格式不匹配",
                        "-279": "抢占数字干线优先级不够",
                        "-300": "正在重连中",
                        "-301": "模块引用计数不为0",
                        "-302": "缓冲区长度不够",
                        "-320": "打开Sqlite数据库失败",
                        "-321": "查询Sqlite数据库失败",
                        "-322": "不支持的数据类型",
                        "-323": "创建数据表失败",
                        "-324": "删除数据表失败",
                        "-325": "删除数据失败",
                        "-326": "插入数据失败",
                        "-327": "更新数据失败",
                        "-350": "授权过期",
                        "-351": "录像达到授权最大路数或未授权",
                        "-352": "实时流达到授权最大路数或未授权",
                        "-353": "点播达到授权最大路数或未授权",
                        "-354": "矩阵模块功能未授权",
                        "-355": "帧标记模块功能未授权",
                        "-356": "报警主机模块功能未授权",
                        "-357": "PTZ控制功能未授权",
                        "-501": "函数或参数格式不正确",
                        "-502": "连接服务器失败",
                        "-503": "客户端功能未实现",
                        "-504": "客户端内存溢出",
                        "-505": "客户端不认识的属性类型",
                        "-506": "尚未连接服务器",
                        "-507": "发送失败",
                        "-508": "接收失败",
                        "-509": "客户端不能打开文件",
                        "-510": "客户端文件格式不正确",
                        "-511": "客户端不能读文件",
                        "-512": "客户端检测到无法解析的应答",
                        "-513": "已经连接了服务器",
                        "-514": "不正确的IP地址或主机名称",
                        "-515": "无法创建新的RawObject",
                        "-517": "服务器没有响应",
                        "-518": "收到无法处理的应答",
                        "-519": "传输已经发起",
                        "-520": "摄像机没有设置传输协议",
                        "-521": "摄像机的传输协议目前不支持",
                        "-522": "用户没有登录",
                        "-523": "网络接收超时",
                        "-524": "网络地址PING不通",
                        "-525": "服务器TCP端口错误",
                        "-526": "对方已经关闭连接",
                        "-527": "用户登录次数太多",
                        "-528": "设备不支持的参数配置",
                        "-600": "非法的服务器本地数据库文件",
                        "-601": "程序没有初始化",
                        "-702": "非法db对象ID",
                        "-703": "db缓冲区太小",
                        "-704": "db对象或者属性不存在",
                        "-705": "db对象或者属性已经存在",
                        "-706": "db内存不足",
                        "-707": "db没有初始化",
                        "-708": "db打开文件失败",
                        "-709": "db数据check失败",
                        "-710": "db类型不匹配",
                        "-711": "db非法对象名",
                        "-712": "db错误的文档",
                        "-713": "db密码不可读",
                        "-800": "设备尺寸太小",
                        "-801": "不能识别分区格式",
                        "-802": "存储设备上的ROFS版本高于当前程序支持版本",
                        "-803": "分区尺寸改变",
                        "-804": "分区头信息损坏",
                        "-805": "缺少关键Slice",
                        "-806": "Slice时间差过大",
                        "-807": "Package时间长度大于时间段最大允许值",
                        "-808": "磁盘空间不足",
                        "-809": "磁盘设备参数异常",
                        "-810": "Package数量为0",
                        "-811": "无效的Package序列号",
                        "-812": "没有与读mask匹配的Slice",
                        "-813": "打开ROFS原始设备失败",
                        "-814": "ROFS原始设备重复打开",
                        "-815": "非法ROFS存储设备名",
                        "-816": "只有未格式化或者停止态的磁盘才进行格式化/反格式化操作",
                        "-817": "不存在的StgName",
                        "-818": "缺少同步Slice",
                        "-819": "ROFS设备未格式化",
                        "-820": "ROFS设备录像中",
                        "-821": "ROFS设备数据修复中",
                        "-822": "ROFS设备未打开",
                        "-823": "无法获取ROFS设备信息",
                        "-824": "ROFS管理器已经初始化",
                        "-825": "ROFS管理器未初始化",
                        "-826": "ROFS固定区标识信息不匹配",
                        "-827": "ROFS固定区标识信息太大",
                        "-828": "ROFS Package内slice数太多",
                        "-829": "数据包信息损坏",
                        "-830": "数据信息不一致",
                        "-831": "用户取消ROFS设备数据修复",
                        "-832": "未处于修复状态",
                        "-833": "不是ROFS主设备",
                        "-834": "ROFS辅设备忙",
                        "-835": "ROFS索引数据损坏",
                        "-836": "ROFS时间段数据损坏",
                        "-837": "ROFS设备未开始同步拷贝",
                        "-838": "ROFS设备已经开始同步拷贝",
                        "-839": "不是ROFS辅设备",
                        "-840": "循环同步",
                        "-841": "ROFS设备写失败",
                        "-842": "ROFS设备读失败",
                        "-843": "没有与查询时间匹配的Package",
                        "-844": "没有与读条件时间匹配的Package索引",
                        "-845": "创建元数据文件失败",
                        "-846": "打开元数据文件失败",
                        "-847": "元数据文件尺寸错误",
                        "-848": "元数据文件内容错误",
                        "-855": "重复配置ROFS原始设备",
                        "-856": "ROFS2设备(StoreGroup)太小，无法格式化",
                        "-857": "存在通道时，ROFS2不能格式化",
                        "-858": "ROFS2基本头信息损坏",
                        "-859": "ROFS2非法块数量",
                        "-860": "ROFS2非法通道数量",
                        "-861": "ROFS2块头信息损坏",
                        "-862": "ROFS2通道头信息损坏",
                        "-863": "ROFS2剩余空间不足",
                        "-864": "ROFS2命名重复",
                        "-865": "ROFS2没有可用块",
                        "-866": "ROFS2未找到可删除的最旧数据块",
                        "-867": "ROFS2非法块大小",
                        "-868": "ROFS2构造组的磁盘路径不匹配",
                        "-869": "ROFS2数据已经加锁",
                        "-870": "ROFS2没有剩余可用空间，已经录像数据总时间没有满足设定值",
                        "-871": "通道名称不存在！",
                        "-872": "ROFS2块空间不足",
                        "-873": "ROFS2 由于录像周期已到达或是空间不足，未发生写设备动作",
                        "-874": "Player,ID 错误",
                        "-875": "Player,缓冲区需要数据",
                        "-876": "Player,缓冲区已满",
                        "-877": "Player, input slice缓冲区回调函数没有设置",
                        "-10002": "系统调用失败",
                        "-10003": "系统资源不足/被占用",
                        "-10004": "内存不足",
                        "-10005": "未分类异常",
                        "-10006": "内部程序逻辑错误",
                        "-10007": "外部程序逻辑错误",
                        "-10008": "不支持的功能",
                        "-10009": "功能未实现",
                        "-10010": "系统/任务退出中，请求无法完成",
                        "-10011": "服务端对象状态不支持，请求被拒绝",
                        "-10012": "参数值或格式不正确",
                        "-10013": "任务未完成",
                        "-10014": "服务已经存在",
                        "-10015": "服务不存在",
                        "-10016": "会话已经存在",
                        "-10017": "会话不存在",
                        "-10018": "TCP服务端口已经被使用",
                        "-10019": "网络对端关闭/或断线",
                        "-10020": "会话被放弃",
                        "-10021": "服务退出中",
                        "-10022": "连接服务器/设备失败",
                        "-10023": "未连接服务/设备",
                        "-10024": "接收数据失败",
                        "-10025": "发送数据失败",
                        "-10026": "无法解析的请求",
                        "-10027": "无法解析的应答",
                        "-10028": "功能已经启动",
                        "-10029": "功能未启动",
                        "-10030": "系统忙，请求/调用被忽略",
                        "-10031": "非法网络请求协议头",
                        "-10032": "巨大网络请求数据，拒绝",
                        "-10033": "动作已被请求",
                        "-10034": "动作未被请求",
                        "-10035": "服务连接中，稍后再试",
                        "-10036": "当前上下文中，无效IP地址",
                        "-10037": "请求端对象状态不支持，请求被拒绝",
                        "-10038": "网络连接超时",
                        "-10039": "资源使用中，不能卸载或删除",
                        "-10040": "ISCM授权失败",
                        "-10041": "对象已存在",
                        "-10042": "对象不存在",
                        "-10043": "会话处于并行调用模式，只支持并行posting型方法",
                        "-10044": "会话处于并行回调模式，只支持并行posting型回调/无法解析的网络数据",
                        "-10045": "对象状态不支持，调用被忽略",
                        "-10046": "TCP/UDP无有效端口可用",
                        "-10047": "检测到线程死锁，调用被忽略",
                        "-10048": "消息队列满，投递消息失败",
                        "-10049": "消息队列满，发送消息失败",
                        "-10050": "接口未定义",
                        "-10051": "对端方法不存在或不匹配，请检查网络两端接口版本是否一致",
                        "-10052": "对端回调不存在或不匹配，请检查网络两端接口版本是否一致",
                        "-10053": "回调未就绪，调用被忽略",
                        "-10054": "绑定回调连接失败",
                        "-10055": "方法匹配失败，请尝试调用其它方法集",
                        "-10056": "ISCM回调未实现，请在派生类中重载实现",
                        "-10057": "已经登录",
                        "-10058": "未登录",
                        "-10059": "ISCM客户端接口对象服务IPP无效",
                        "-10060": "ISCM接口对象异步调用队列满",
                        "-10061": "没有此用户",
                        "-10062": "用户名或密码不正确",
                        "-10063": "没有权限访问",
                        "-10064": "异步调用缓存内存大小限制",
                        "-10065": "会话未连接或正在关闭中",
                        "-10066": "此用户已被禁用",
                        "-10067": "无效UDP连接key",
                        "-10068": "对象名或路径名含有非法字符",
                        "-10069": "ISCM流式回调未实现，继续调用普通方式回调",
                        "-10100": "已在服务群组中",
                        "-10101": "不在服务群组中",
                        "-10102": "应用服务IPP冲突",
                        "-10103": "启动服务进程失败",
                        "-10104": "文件已存在",
                        "-10105": "文件不存在",
                        "-10106": "文件打开失败",
                        "-10107": "文件读失败",
                        "-10108": "文件写失败",
                        "-10109": "禁止操作此文件/路径名（服务使用中，或未授权路径）",
                        "-10110": "创建目录失败",
                        "-10111": "订阅回调已发起",
                        "-10112": "订阅回调未发起",
                        "-10113": "无效ISCM远程任务库",
                        "-10114": "无效ISCM远程任务函数",
                        "-10115": "ISCM远程任务已存在",
                        "-10116": "ISCM远程任务不存在",
                        "-10117": "无效ISCM模块",
                        "-10118": "ISCM模块已存在",
                        "-10119": "ISCM模块不存在",
                        "-20000": "基本错误边界值",
                        "-20001": "不支持",
                        "-20002": "功能暂未实现",
                        "-20003": "未初始化",
                        "-20005": "内存不足",
                        "-20004": "打开太多句柄，系统资源不足",
                        "-20006": "无效句柄，可能已经关闭",
                        "-20007": "无效对象名，没有这个对象",
                        "-20008": "参数错误",
                        "-20009": "没有文件",
                        "-20010": "正在查找文件",
                        "-20011": "查找文件时没有更多的文件",
                        "-20012": "查找文件时异常",
                        "-20013": "文件Url全路径错误",
                        "-20014": "元素已存在ESIST",
                        "-20015": "对象不存在",
                        "-20016": "OSD叠加文本错误",
                        "-20017": "OSD类型错误",
                        "-20018": "OSD显示错误",
                        "-20019": "获取默认端口错误",
                        "-20020": "登录失败",
                        "-20021": "没有更多查讯数据",
                        "-20022": "设置密码错误",
                        "-20023": "设置键值不存在",
                        "-20024": "对应的键没有值",
                        "-20025": "功能未实现",
                        "-20026": "获得句柄错误",
                        "-20027": "事件重复订阅",
                        "-20028": "读到文件末尾",
                        "-20029": "句柄不存在",
                        "-20030": "对象指针为空",
                        "-20031": "第一侦不是I侦",
                        "-20032": "不支持的平台",
                        "-20033": "缓冲区太小",
                        "-20034": "不支持的服务器类型",
                        "-20035": "没有权限",
                        "-20036": "超过最多画面数",
                        "-20037": "磁盘空间不足",
                        "-20038": "转码时内存错误（转码库返回）",
                        "-20039": "打开编码器错误（转码库返回）",
                        "-20040": "未查询到该分段录像",
                        "-21001": "句柄错误,获取窗口坐标失败",
                        "-21002": "播放缓冲区需要数据",
                        "-21003": "播放缓冲区已满",
                        "-21004": "输入多个slice方式下回调函数没有设置",
                        "-21005": "错误的播放命令",
                        "-21006": "错误的播放速度",
                        "-21007": "实时播放时不能采用回调方式输入Slice数据",
                        "-21008": "资源已经释放",
                        "-21009": "播放线程已经停止",
                        "-21010": "资源重复打开",
                        "-21011": "打开音频设备失败",
                        "-21012": "开始采集音频失败",
                        "-21013": "停止采集音频失败",
                        "-21014": "视频信息获取失败",
                        "-21015": "超过最大警告本地缓存",
                        "-21016": "小于最小警告本地缓存",
                        "-22001": "未定义的错误类型",
                        "-22002": "数据查询结果不正确",
                        40025 : "文件结束 桶结束",
                        40026 : "没有更多文件",
                        40027 : "没有系统错误",
                        "-30001": "流化已完成",
                        "-30002 ": "功能暂未实现",
                        "-30003": "流不存在或没流化",
                        "-30004": "不能识别",
                        "-30005": "正在转码",
                        "-30006": "转码失败",
                        "-30007": "正在流化",
                        "-30008": "流化失败",
                        "-30009": "流数据损坏",
                        "-30010": "版本不一致",
                        "-30011": "等待流化中",
                        "-30012": "对象不可写",
                        "-30013": "没有打开",
                        "-30014": "写入不完整",
                        "-30015": "文件不完整",
                        "-30016": "读不完整",
                        "-30017": "丢失文件",
                        "-30018": "上传流失败，可能是原始文件已经存在或者无法打开",
                        "-30019": "流状态不正常",
                        "-30020": "流化任务已经被取消",
                        "-30021": "函数调用顺序不正确",
                        "-30022": "无效的数据",
                        "-30023": "集群不存在",
                        "-30024": "成员不在集群中",
                        "-30025": "成员已经在当前集群中了",
                        "-30026": "成员已经在另外一个集群中了",
                        "-30027": "更新成员信息失败",
                        "-30028": "系统繁忙，请稍后再试",
                        "-30029": "引用的模块发生了错误",
                        "-30030": "数据校对出错",
                        "-30031": "操作对象为空，还未赋值",
                        "-40000": "文件或目录或桶不存在",
                        "-40001": "IO错误",
                        "-40002": "无效的句柄",
                        "-40003": "配置信息错误",
                        "-40004": "无效的参数",
                        "-40005": "创建句柄失败",
                        "-40006": "无效的路径",
                        "-40007": "文件或目录或桶已存在",
                        "-40008 ": "此路径是一个目录",
                        "-40009": "对象被写保护",
                        "-40010 ": "此路径不是一个目录",
                        "-40011": "存储空间已满",
                        "-40012": "对象不能创建",
                        "-40013": "路径太长",
                        "-40014": '无效的名称,文件名不能包含后面任何字符：/  : * " ? < > | ',
                        "-40015": "设备IO错误",
                        "-40016": "文件已经删除",
                        "-40017": "文件太大",
                        "-40018": "不能偏移",
                        "-40019": "操作被禁止",
                        "-40020": "目录非空",
                        "-40021": "过期的文件句柄",
                        "-40022": "对象没有初始化",
                        "-40023": "内存不足",
                        "-40024": "打开太多句柄，系统资源不足",
                        "-40028 ": "对象正在被使用",
                        "-40029 ": "创建cache对象失败",
                        "-40030 ": "bfs前缀路径为空",
                        "-40031 ": "系统read读取文件失败",
                        "-40032 ": "系统pread错误",
                        "-40033 ": "未知的文件类型",
                        "-40034 ": "服务对象不存在",
                        "-41001 ": "数据库查询失败",
                        "-41002 ": "数据库查询结果不唯一",
                        "-41003 ": "更新数据库失败",
                        "-41004 ": "数据库删除操作失败",
                        "-41005 ": "查询记录中没有对应的键值",
                        "-41006 ": "数据库插入数据失败",
                        "-45001": "桶索引已经被打开",
                        "-45002": "桶操作 new 申请内存失败",
                        "-45003": "打开桶索引文件失败",
                        "-45004": "索引文件写失败",
                        "-45005": "索引文件读失败",
                        "-45006": "连接主节点超时",
                        "-45007": "key-v内存写入失败",
                        "-45008": "写dat文件失败",
                        "-45009": "关闭dat文件失败",
                        "-45010": "attr文件打开失败",
                        "-45011": "attr为空",
                        "-45012": "写入文件超时",
                        "-45013": "获取zk中桶打开个数失败",
                        "-45014": "桶正在被使用",
                        "-45015": "桶被损坏(索引文件或打包文件被损坏)",
                        "-45016": "未发现桶id",
                        "-45017": "桶的主节点未加载完成",
                        "-45018": "从桶的主节点获取桶信息失败",
                        "-45019": "选举桶主节点失败",
                        "-45020": "正在选举桶主节点",
                        "-45021": "与主节点所在PFS服务失去连接，正在尝试连接",
                        "-45022": "桶内索引文件不存在",
                        "-45023": "桶内索引文件或属性文件创建失败",
                        "-45024": "非主桶",
                        "-45025": "关闭主桶失败",
                        "-45026": "打开主桶失败",
                        "-50000": "小文件系统初始化失败",
                        "-50001": "获取桶Index文件错误",
                        "-50002": "监测桶路径错误，路径为/或为空或者此目录下含有其他文件夹",
                        "-80000 ": "参数错误",
                        "-80003 ": "创建流化器失败",
                        "-80005 ": "打开文件失败",
                        "-80006 ": "读取文件失败",
                        "-80007": "写入文件失败",
                        "-80008": "关闭文件失败",
                        "-80009": "移动文件指针失败",
                        "-80010": "第三方SDK失败",
                        "-80011": "空指针错误",
                        "-80012": "创建流化进程失败",
                        "-80013": "不支持的文件类型",
                        "-80014": "创建线程失败",
                        "-80015": "申请内存失败",
                        "-80016": "不支持的视频格式",
                        "-80017": "不支持的音频格式",
                        "-80018": "流化进程崩溃",
                        "-80019": "流化进程死掉",
                        "-101001": "未分配SS",
                        "-101002": "未分配FS",
                        "-101003": "未分配PAU",
                        "-101004": "设备未分配PAU",
                        "-101005": "超出用户流控限制",
                        "-101006": "超出平台流控限制",
                        "-101007": "非法的JSON字符串",
                        "-101008": "与PAU之间通信失败",
                        "-101030": "监视器已经被锁定",
                        "-101031": "监视器不能被控制",
                        "-102001": "会话无效（不存在）",
                        "-102002": "FS流断线",
                        "-102003": "非节点内部监视器",
                        "-102004": "监视器被锁定",
                        "-103001": "通道不可用",
                        "-103002": "PAU不可用",
                        "-103003": "未分配日志服务",
                        "-103004": "与PAU服务OPEN失败",
                        "-103005": "与PVG服务OPEN失败",
                        "-103006": "本地数据库未初始化",
                        "-103007": "本地数据库异常",
                        "-103008": "通道已在录像",
                        "-103009": "未分配PVG",
                        "-103010": "喊话通道被占用",
                        "-103011": "设备不存在",
                        "-103012": "请求的路径已经存在",
                        "-103013": "无可用的rofs3s",
                        "-103014": "PAU服务无法连接",
                        "-103015": "无资源权限(资源屏蔽)",
                        "-103016": "键盘巡检已存在",
                        "-103017": "键盘宏已存在",
                        "-103018": "调用次序错误",
                        "-103019": "用户被禁用",
                        "-103020": "通道录像被复用",
                        "-21200": "未播放",
                        "-21201": "已播放",
                        "-21202": "未下载",
                        "-21203": "未在sdk动态链接库中找到对应函数",
                        "-21204": "动态加载sdk失败",
                        "-21205": "输入参数非法",
                        "-21206": "登陆服务器失败",
                        "-21207": "功能未实现或不支持",
                        "-21208": "内存不足",
                        "-21209": "该命名对象不存在",
                        "-21210": "对象类型不匹配",
                        "-21211": "打开国标实时流失败",
                        "-21212": "打开国标录像流失败",
                        "-21213": "国标不支持单帧播放录像",
                        "-21214": "打开AVI文件失败",
                        "-21215": "初始化YUVd对象失败",
                        "-21216": "yuv对象的画图对象还未初始化",
                        "-21217": "传给yuv画图对象的key值已经被占用",
                        "-21218": "初始化yuv画图对象失败",
                        "-21219": "非不妨布控模式不支持图形元素操作",
                        "-21220": "创建事件失败",
                        "-21221": "启动线程失败",
                        "-21222": "窗口句柄失效",
                        "-21223": "窗口太小,不能画图",
                        "-21224": "录像文件长度为0",
                        "-21225": "还没有得到第一个关键帧,请稍后再试",
                        "-21226": "为uuid开的buffer太小",
                        "-21227": "pvg file sdk不支持avi转码",
                        "-21228": "查找配置文件失败",
                        "-21229": "配置文件内容无效",
                        "-21230": "硬解码模式下不支持该功能",
                        "-21231": "HW开通道失败",
                        "-21232": "需要登陆服务器",
                        "-21233": "打开流失败",
                        "-21234": "下载录像时间间隔过短",
                        "-21235": "接收到错误的应答",
                        "-21236": "创建文件失败",
                        "-21237": "查询失败",
                        "-21238": "不支持的编码方式",
                        "-21239": "无编码数据回调",
                        "-21240": "mp4文件无法打开",
                        "-21241": "写文件失败",
                        "-21242": "创建TrackID错误",
                        "-21243": "rofs open reader错误",
                        "-21244": "编码错误",
                        "-21245": "20秒无数据",
                        "-21246": "非标准码流，转MP4需要强制转码",
                        "-49999": "未知错误",
                        "-49998": "分配内存错误",
                        "-49997": "非法参数",
                        "-49996": "连接服务器失败",
                        "-49995": "未连接服务器",
                        "-49994": "接收失败",
                        "-49993": "发送失败",
                        "-49992": "接收到错误的应答",
                        "-49991": "网络接收超时",
                        "-49990": "网络发送超时",
                        "-49989": "XXX不存在",
                        "-49988": "XXX不存在",
                        "-49987": "功能未实现",
                        "-49986": "非法指令",
                        "-49985": "系统资源错误",
                        "-49984": "XXX已存在",
                        "-49983": "处理中、稍后再试",
                        "-49982": "抓图失败",
                        "-49981": "本次设置无效",
                        "-49980": "不支持此功能",
                        "-49979": "无权限",
                        "-49978": "用户放弃选择",
                        "-49977": "请求服务超时",
                        "-49976": "设备进程已达到极限、且各进程已达到内存限制",
                        "-49975": "创建线程失败",
                        "-49974": "重复的工具条类型",
                        "-49973": "xml配置文件创建失败",
                        "-49972": "工具条饱和",
                        "-49971": "工具条图片下载失败",
                        "-49970": "工具条图片下载版本回退",
                        "-49969": "工具条未找到对应的id",
                        "-49968": "无法写",
                        "-49967": "没有找到设置的类型",
                        "-49966": "重复设置类型",
                        "-49965": "创建文件夹失败",
                        "-49964": "拷贝文件夹失败",
                        "-49963": "删除文件夹失败",
                        "-49962": "开启进程失败",
                        "-49961": "拷贝文件失败",
                        "-49960": "删除文件失败",
                        "-49959": "脱壳失败-未知编码方式",
                        "-49958": "解压失败",
                        "-49957": "关闭进程失败",
                        "-49956": "读取文件失败",
                        "-49955": "sdk 格式或内容非法",
                        "-49954": "打开文件失败",
                        "-49953": "获取IP地址",
                        "-49952": "没有pva_json文件",
                        "-49951": "没有目录",
                        "-49950": "写文件失败",
                        "-49949": "PFS定位失败",
                        "-49948": "PFS文件检测超时",
                        "-49947": "不支持的编码类型",
                        "-49946": "不支持的编码类型-H265",
                        "-49945": "不支持的编码类型-SVAC",
                        "-49944": "不支持的编码类型-MPEG4",
                        "-49943": "RTSP开流失败",
                        "-49942": "编码方式改变",
                        "-104999": "与H5MS连接失败",
                        "-105000": "H5MS:内部错误",
                        "-105001": "H5MS:暂无客户端连接可用",
                        "-105002": "H5MS:参数错误",
                        "-105003": "H5MS:设置头域失败",
                        "-105004": "H5MS:创建socket失败",
                        "-105005": "H5MS:连接socket失败",
                        "-105006": "H5MS:socket发送失败",
                        "-105007": "H5MS:socke接收失败",
                        "-105008": "H5MS:对方socket已关闭",
                        "-105009": "RTSP开流失败"
                    }
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ?
                    function(e) {
                        return typeof e
                    }: function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol": typeof e
                    },
                    n = function(e, t, i) {
                        return t && s(e.prototype, t),
                        i && s(e, i),
                        e
                    };
                    function s(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var m = i(399),
                    _ = i(333),
                    g = i(334);
                    var a = (n(o, [{
                        key: "initializer",
                        value: function() {
                            this.defaultRightMenuConf = {},
                            this.rightMenuMouseOverFlag = !1
                        }
                    },
                    {
                        key: "createRightMenu",
                        value: function(e) {
                            e.menuList ? (this.rightMenuEle = document.createElement("ul"), this.rightMenuEle.className = "right-menu-box h5Player-rightmenu-layer", e.width && (this.rightMenuEle.style.width = e.width), this.vOpt.videoC.appendChild(this.rightMenuEle), this._createRightMenuList(e.menuList, this.rightMenuEle), g.EventUtil.addHandler(this.rightMenuEle, "mousedown",
                            function(e) {
                                e.stopPropagation()
                            }), g.EventUtil.addHandler(this.rightMenuEle, "mouseup",
                            function(e) {
                                e.stopPropagation()
                            })) : console.log("传入的参数不正确！")
                        }
                    },
                    {
                        key: "showOrHideRightMenu",
                        value: function(e, t) {
                            this.rightMenuEle && (e ? this._setRightMenuPosition(t) : this.rightMenuEle.style.display = "none")
                        }
                    },
                    {
                        key: "getRightMenuItemById",
                        value: function(e) {
                            return e && this.defaultRightMenuConf[e] ? this.defaultRightMenuConf[e] : null
                        }
                    },
                    {
                        key: "_deepTraversal",
                        value: function(e, t) {
                            if (e) for (var i = e.children,
                            r = 0,
                            n = i.length; r < n; r++) i[r].getAttribute("data-id") === t ? this.curOperateNode = i[r] : this._deepTraversal(i[r], t)
                        }
                    },
                    {
                        key: "_getRightMenuEleById",
                        value: function(e) {
                            return ! e || e && "string" != typeof e ? null: this.rightMenuEle ? (this._deepTraversal(this.rightMenuEle, e), this.curOperateNode) : void 0
                        }
                    },
                    {
                        key: "setRightMenuItemAttrsById",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !t || t && "object" != (void 0 === t ? "undefined": r(t))) return null;
                            this.defaultRightMenuConf[e] && (this.defaultRightMenuConf[e] = _.Toolkit.deepMerge(this.defaultRightMenuConf[e], t));
                            var i = this._getRightMenuEleById(e);
                            t.hasOwnProperty("checked") && (t.checked ? this._setRightMenuCheckedStyle(i) : this._setRightMenuNotCheckedStyle(i)),
                            t.hasOwnProperty("gray") && (t.gray ? this._setRightMenuGrayStyle(i) : this._setRightMenuNotGrayStyle(i)),
                            t.hasOwnProperty("text") && (this.setRightMenuItemText(e, t.text), i.children[1].innerHTML = t.text)
                        }
                    },
                    {
                        key: "_setRightMenuCheckedStyle",
                        value: function(e) {
                            e.classList.add("active"),
                            e.classList.remove("not-allowed")
                        }
                    },
                    {
                        key: "_setRightMenuNotCheckedStyle",
                        value: function(e) {
                            e.classList.remove("active")
                        }
                    },
                    {
                        key: "setRightMenuItemChecked",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !0 !== t && !1 !== t) return null;
                            this.defaultRightMenuConf[e] && (this.defaultRightMenuConf[e] = _.Toolkit.deepMerge(this.defaultRightMenuConf[e], {
                                checked: t
                            }));
                            var i = this._getRightMenuEleById(e);
                            t ? this._setRightMenuCheckedStyle(i) : this._setRightMenuNotCheckedStyle(i)
                        }
                    },
                    {
                        key: "_setRightMenuGrayStyle",
                        value: function(e) {
                            e.classList.add("not-allowed"),
                            e.classList.remove("active"),
                            e.setAttribute("isShowChildren", !1)
                        }
                    },
                    {
                        key: "_setRightMenuNotGrayStyle",
                        value: function(e) {
                            e.classList.remove("not-allowed"),
                            e.setAttribute("isShowChildren", !0)
                        }
                    },
                    {
                        key: "setRightMenuItemGray",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || !0 !== t && !1 !== t) return null;
                            this.defaultRightMenuConf[e] && (this.defaultRightMenuConf[e] = _.Toolkit.deepMerge(this.defaultRightMenuConf[e], {
                                gray: t
                            }));
                            var i = this._getRightMenuEleById(e);
                            t ? this._setRightMenuGrayStyle(i) : this._setRightMenuNotGrayStyle(i)
                        }
                    },
                    {
                        key: "setRightMenuItemText",
                        value: function(e, t) {
                            if (!e || e && "string" != typeof e || t && "string" != typeof t) return null;
                            this.defaultRightMenuConf[e] && (this.defaultRightMenuConf[e] = _.Toolkit.deepMerge(this.defaultRightMenuConf[e], {
                                text: t
                            })),
                            this._getRightMenuEleById(e).children[1].innerHTML = t
                        }
                    },
                    {
                        key: "removeRightMenu",
                        value: function() {
                            this.rightMenuEle && (this.rightMenuEle.parentNode && this.rightMenuEle.parentNode.removeChild(this.rightMenuEle), this.rightMenuEle = null),
                            this.defaultRightMenuConf = {}
                        }
                    },
                    {
                        key: "_createRightMenuSubmenu",
                        value: function(e, t) {
                            var i = document.createElement("ul");
                            return i.className = "right-menu-box item_" + e,
                            i.style.width = this.rightMenuEle.style.width,
                            t.appendChild(i),
                            i.style.display = "none",
                            i
                        }
                    },
                    {
                        key: "_createRightMenuList",
                        value: function(f, p) {
                            for (var v = this,
                            e = function(e, t) {
                                var i = f[e],
                                n = void 0;
                                if (i.name && (i.id = i.name), i.id) {
                                    if (m.defaultRightMenuConf[i.id]) {
                                        var r = _.Toolkit.deepMerge({},
                                        m.defaultRightMenuConf[i.id]);
                                        i = _.Toolkit.deepMerge(r, i)
                                    } else i.checked || (i.checked = !1),
                                    i.gray || (i.gray = !1);
                                    i._rightmenu = !0,
                                    v.defaultRightMenuConf[i.id] = i
                                }
                                if (1 === i.type) { (n = document.createElement("li")).className = "right-menu-line-box",
                                    p.appendChild(n);
                                    var s = document.createElement("div");
                                    s.className = "right-menu-icon-box",
                                    n.appendChild(s);
                                    var a = document.createElement("div");
                                    a.className = "right-menu-line",
                                    n.appendChild(a)
                                } else { (n = document.createElement("li")).className = "right-menu-text-box",
                                    p.appendChild(n),
                                    i.id && n.setAttribute("data-id", i.id);
                                    var o = document.createElement("div");
                                    o.className = "right-menu-icon-box",
                                    n.appendChild(o);
                                    var l = document.createElement("span");
                                    l.className = "checked-icon",
                                    o.appendChild(l),
                                    i.checked && n.classList.add("active");
                                    var u = document.createElement("div");
                                    u.className = "right-menu-text-text",
                                    n.appendChild(u),
                                    u.innerText = i.text;
                                    var h = v;
                                    if (g.EventUtil.addHandler(n, "click",
                                    function(e) {
                                        e.stopPropagation(),
                                        h.videoCMouseOverFlag = !1,
                                        i.menuList || i.gray ? h.rightMenuMouseOverFlag = !1 : h.rightMenuMouseOverFlag = !0,
                                        "videoRatio" === i.originId ? h._setRightMenuCheckStyle(i) : h._btnClickFunction(i)
                                    }), g.EventUtil.addHandler(n, "dblclick",
                                    function(e) {
                                        e.stopPropagation()
                                    }), i.menuList) {
                                        n.classList.add("sub");
                                        var d = document.createElement("div");
                                        d.className = "right-menu-icon-arrow",
                                        n.appendChild(d);
                                        var c = v._createRightMenuSubmenu(i.id, n);
                                        v._createRightMenuList(i.menuList, c),
                                        g.EventUtil.addHandler(n, "mousemove",
                                        function(e) {
                                            h.rightMenuMouseOverFlag = !0
                                        }),
                                        g.EventUtil.addHandler(n, "mouseenter",
                                        function(e) {
                                            if (h.rightMenuMouseOverFlag = !0, "false" !== n.getAttribute("isShowChildren") && c) {
                                                if (c.style.display = "inline-block", !h.rightMenuEle || !h.vOpt.videoC) return;
                                                c.style.top = n.offsetTop + "px",
                                                c.style.left = n.offsetWidth + "px";
                                                var t = document.documentElement.offsetWidth - c.offsetWidth,
                                                i = document.documentElement.offsetHeight - c.offsetHeight,
                                                r = g.EventUtil.getEleToParentDistance(c);
                                                t < r.offsetLeft && (c.style.left = -c.clientWidth + "px"),
                                                i < r.offsetTop && (c.style.top = -c.clientHeight + n.offsetTop + n.clientHeight + "px")
                                            }
                                        }),
                                        g.EventUtil.addHandler(n, "mouseleave",
                                        function(e) {
                                            h.rightMenuMouseOverFlag && c && (c.style.display = "none")
                                        })
                                    } else i.gray ? v._setRightMenuGrayStyle(n) : v._setRightMenuNotGrayStyle(n)
                                }
                            },
                            t = 0, i = (f = f.filter(function(e) {
                                return e
                            })).length; t < i; t++) e(t)
                        }
                    },
                    {
                        key: "_setRightMenuPosition",
                        value: function(e) {
                            if (this.rightMenuEle && this.rightMenuEle.parentNode) {
                                var t = e || window.event,
                                i = this.rightMenuEle.parentNode.getBoundingClientRect();
                                this.rightMenuEle.style.display = "block",
                                this.rightMenuEle.style.top = t.clientY - i.top + "px",
                                this.rightMenuEle.style.left = t.clientX - i.left + "px";
                                var r = document.documentElement.offsetWidth - this.rightMenuEle.offsetWidth - i.offsetLeft,
                                n = document.documentElement.offsetHeight - this.rightMenuEle.offsetHeight - i.offsetTop;
                                this.rightMenuEle.offsetTop > n && (this.rightMenuEle.style.top = n + "px"),
                                this.rightMenuEle.offsetLeft > r && (this.rightMenuEle.style.left = r + "px")
                            }
                        }
                    },
                    {
                        key: "_setRightMenuCheckStyle",
                        value: function(t) {
                            switch (t.originId) {
                            case "videoRatio":
                                var e = document.querySelector(".item_videoRatio").children; [].concat(function(e) {
                                    if (Array.isArray(e)) {
                                        for (var t = 0,
                                        i = Array(e.length); t < e.length; t++) i[t] = e[t];
                                        return i
                                    }
                                    return Array.from(e)
                                } (e)).forEach(function(e) {
                                    e.getAttribute("data-id") === t.id ? e.classList.add("active") : e.classList.remove("active")
                                }),
                                this.setRatio(t.value);
                            default:
                                this.rightMenuEle && (this.rightMenuEle.style.display = "none")
                            }
                        }
                    }]), o);
                    function o() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, o)
                    }
                    t.
                default = a
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(334),
                    o = i(333),
                    l = i(403),
                    u = (s = l) && s.__esModule ? s: {
                    default:
                        s
                    };
                    var h = (r(d, [{
                        key: "initializer",
                        value: function() {
                            this.isVideoPtz = !1,
                            this.ptzRangeMode = 1,
                            this.top_bottom = 20,
                            this.left_right = 20,
                            this.ptzDirection = -1,
                            this._bPtzing = !1,
                            this._keyDownFlag = !1
                        }
                    },
                    {
                        key: "EnablePTZ",
                        value: function(e) {
                            this.vOpt.enablePtzMotion = e
                        }
                    },
                    {
                        key: "SetWindowPTZ",
                        value: function(e) {
                            return this.isVideoPtz = e,
                            !0
                        }
                    },
                    {
                        key: "isWindowPTZ",
                        value: function() {
                            return this.isVideoPtz
                        }
                    },
                    {
                        key: "SetWndPtzSpeed",
                        value: function(e) {
                            this.vOpt.windowPtzSpeed = e
                        }
                    },
                    {
                        key: "setPTZRange",
                        value: function(e, t, i) {
                            o.Toolkit.isPositiveInteger(e) && (0 === e || 1 === e) && o.Toolkit.isPositiveInteger(t) && o.Toolkit.isPositiveInteger(i) && (0 === e ? (this.vOpt.ptzRangeMode = e, this.vOpt.top_bottom = t, this.vOpt.left_right = i) : 1 === e && t <= 49 && i <= 49 && (this.vOpt.ptzRangeMode = e, this.vOpt.top_bottom = t, this.vOpt.left_right = i))
                        }
                    },
                    {
                        key: "isInPtzRange",
                        value: function(e, t) {
                            if (!this.isVideoPtz) return ! 1;
                            var i = this.ptzPositionFlag(e, t);
                            return - 1 !== i && 0 !== i
                        }
                    },
                    {
                        key: "ptzPositionFlag",
                        value: function(e, t) {
                            var i = this.vOpt.videoC.offsetWidth,
                            r = this.vOpt.videoC.offsetHeight,
                            n = void 0,
                            s = void 0;
                            return i <= e + 16 || r <= t + 16 ? 0 : (0 === this.vOpt.ptzRangeMode ? (n = this.vOpt.top_bottom, s = this.vOpt.left_right) : 1 === this.vOpt.ptzRangeMode && (n = this.vOpt.top_bottom * r / 100, s = this.vOpt.left_right * i / 100), e <= s ? t <= n && 0 <= t ? 1 : r - n < t ? 7 : 8 : i - s < e ? t <= n && 0 <= t ? 3 : r - n < t ? 5 : 4 : t <= n && 0 <= t ? 2 : r - n < t ? 6 : 0)
                        }
                    },
                    {
                        key: "isShowPtzRedArrow",
                        value: function(e, t) {
                            if (this.isVideoPtz) {
                                if (!e) return this._changeVideoCursor(),
                                void(this.ptzDirection = -1);
                                var i = this._getVidoContainerEventInfo(t),
                                r = i.x,
                                n = i.y;
                                switch (this.ptzPositionFlag(r, n)) {
                                case 0:
                                    this._changeVideoCursor(),
                                    this.ptzDirection = -1;
                                    break;
                                case 1:
                                    this._changeVideoCursor("ptz-leftup"),
                                    this.ptzDirection = 3;
                                    break;
                                case 2:
                                    this._changeVideoCursor("ptz-up"),
                                    this.ptzDirection = 2;
                                    break;
                                case 3:
                                    this._changeVideoCursor("ptz-rightup"),
                                    this.ptzDirection = 1;
                                    break;
                                case 4:
                                    this._changeVideoCursor("ptz-right"),
                                    this.ptzDirection = 0;
                                    break;
                                case 5:
                                    this._changeVideoCursor("ptz-rightdown"),
                                    this.ptzDirection = 7;
                                    break;
                                case 6:
                                    this._changeVideoCursor("ptz-down"),
                                    this.ptzDirection = 6;
                                    break;
                                case 7:
                                    this._changeVideoCursor("ptz-leftdown"),
                                    this.ptzDirection = 5;
                                    break;
                                case 8:
                                    this._changeVideoCursor("ptz-left"),
                                    this.ptzDirection = 4
                                }
                            }
                        }
                    },
                    {
                        key: "_changeVideoCursor",
                        value: function(e) {
                            this.vOpt.videoC.classList.remove("ptz-left", "ptz-leftup", "ptz-up", "ptz-leftdown", "ptz-rightup", "ptz-right", "ptz-rightdown", "ptz-down"),
                            e && this.vOpt.videoC.classList.add(e)
                        }
                    },
                    {
                        key: "_getVidoContainerEventInfo",
                        value: function(e) {
                            var t = (e = a.EventUtil.getEvent(e)).target || e.srcElement,
                            i = a.EventUtil.getEleToParentDistance(t, "h5vp-video-container");
                            return {
                                x: e.offsetX + i.offsetLeft,
                                y: e.offsetY + i.offsetTop
                            }
                        }
                    },
                    {
                        key: "_ptzOnkeydown",
                        value: function(e) {
                            if (this.isFocusScreen && this.isVideoPtz) {
                                var t = a.EventUtil.getEvent(e),
                                i = t.keyCode || t.which || t.charCode,
                                r = this.vOpt.windowPtzSpeed;
                                if (37 === i || 38 === i || 39 === i || 40 === i || 33 === i || 34 === i || 35 === i || 36 === i || 45 === i || 46 === i) {
                                    switch (i) {
                                    case 33:
                                        this.ptzDirection = 11;
                                        break;
                                    case 34:
                                        this.ptzDirection = 11,
                                        r = 0 - r;
                                        break;
                                    case 35:
                                        this.ptzDirection = 12,
                                        r = 0 - r;
                                        break;
                                    case 36:
                                        this.ptzDirection = 12;
                                        break;
                                    case 37:
                                        this.ptzDirection = 4;
                                        break;
                                    case 38:
                                        this.ptzDirection = 2;
                                        break;
                                    case 39:
                                        this.ptzDirection = 0;
                                        break;
                                    case 40:
                                        this.ptzDirection = 6;
                                        break;
                                    case 45:
                                        this.ptzDirection = 10;
                                        break;
                                    case 46:
                                        this.ptzDirection = 10,
                                        r = 0 - r
                                    }
                                    this._keyDownFlag = !0,
                                    this._ptzControlByWin(this.ptzDirection, r, 1, i)
                                }
                            }
                        }
                    },
                    {
                        key: "_ptzOnkeyup",
                        value: function(e) {
                            var t = a.EventUtil.getEvent(e),
                            i = t.keyCode || t.which || t.charCode;
                            this._keyDownFlag && (this._ptzControlByWin(this.ptzDirection, 0, 2, i), this._keyDownFlag = !1)
                        }
                    },
                    {
                        key: "_ptzScrollFunc",
                        value: function(e) {
                            var t = this;
                            function i() {
                                t.mousewheelTimer = setTimeout(function() {
                                    t._ptzControlByWin(11, 0)
                                },
                                500)
                            } (e = e || window.event).preventDefault(),
                            e.stopPropagation(),
                            this.isVideoPtz && (e.wheelDelta ? (clearTimeout(this.mousewheelTimer), 0 < e.wheelDelta ? this._ptzControlByWin(11, this.vOpt.windowPtzSpeed, 5) : this._ptzControlByWin(11, 0 - this.vOpt.windowPtzSpeed, 6), i()) : e.detail && (clearTimeout(this.mousewheelTimer), 0 < e.detail ? this._ptzControlByWin(11, this.vOpt.windowPtzSpeed, 5) : this._ptzControlByWin(11, 0 - this.vOpt.windowPtzSpeed, 6), i()))
                        }
                    },
                    {
                        key: "_ptzControlByWin",
                        value: function(e, t, i, r) {
                            this.isVideoPtz && (this._bPtzing && 0 == t || 0 != t) && (this._emitter.emit(u.
                        default.OnPTZControlEvent, this.vOpt.index, e, t, this.vOpt.enablePtzMotion, i, r), this.vOpt.enablePtzMotion && this.ptzControl(e, t), this._bPtzing = 0 != t)
                        }
                    },
                    {
                        key: "ptzControl",
                        value: function(e, t) {
                            return !! this._videoplayer && this._videoplayer.ptzControl(e, t)
                        }
                    },
                    {
                        key: "ptzControl3d",
                        value: function(e, t, i, r, n) {
                            return !! this._videoplayer && this._videoplayer.ptzControl3D(e, t, i, r, n)
                        }
                    },
                    {
                        key: "ptzLock",
                        value: function(e) {
                            return !! this._videoplayer && this._videoplayer.ptzLock(e)
                        }
                    }]), d);
                    function d() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, d)
                    }
                    t.
                default = h
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    t.
                default = {
                        OnFocusChange: "OnFocusChange",
                        OnWndClick: "OnWndClick",
                        OnWndDClik: "OnWndDClik",
                        OnSwitchWindow: "OnSwitchWindow",
                        OnUnexecutedSwitchWindow: "OnUnexecutedSwitchWindow",
                        OnFullScreen: "OnFullScreen",
                        OnExitFullScreen: "OnExitFullScreen",
                        OnLayoutChange: "OnLayoutChange",
                        OnSizeChange: "OnSizeChange",
                        OnPTZControlEvent: "OnPTZControlEvent",
                        OnPTZControl3DEvent: "OnPTZControl3DEvent",
                        OnMouseEnter: "OnMouseEnter",
                        OnMouseLeave: "OnMouseLeave",
                        OnMouseDown: "OnMouseDown",
                        OnMouseUp: "OnMouseUp",
                        OnMouseMove: "OnMouseMove",
                        OnVideoClose: "OnVideoClose",
                        OnVideoStart: "OnVideoStart",
                        OnTimeaxisLevel: "OnTimeaxisLevel",
                        OnDrawingObject: "OnDrawingObject",
                        OnZoomStatusChange: "OnZoomStatusChange",
                        OnH5msError: "OnH5msError",
                        OnH5msInit: "OnH5msInit"
                    }
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s = i(333);
                    var a = (r(o, [{
                        key: "initializer",
                        value: function() {
                            this.watermkArr = [],
                            this._watermkC = null
                        }
                    },
                    {
                        key: "resetWaterMarkPos",
                        value: function(e, t, i, r) {
                            if (e !== i || t !== r) for (var n = null,
                            s = void 0,
                            a = void 0,
                            o = 0,
                            l = this.watermkArr.length; o < l; o++) n = document.getElementById(this.watermkArr[o].eleid),
                            s = i / e * parseInt(n.style.left) + "px",
                            a = r / t * parseInt(n.style.top) + "px",
                            this.watermkArr[o].moving && "static" !== this.watermkArr[o].moving || (this.watermkArr[o].left ? 0 < this.watermkArr[o].left.indexOf("%") && (s = this.watermkArr[o].left) : s = (i - n.clientWidth) / 2 + "px", this.watermkArr[o].top ? 0 < this.watermkArr[o].top.indexOf("%") && (a = this.watermkArr[o].top) : a = (r - n.clientHeight) / 2 + "px"),
                            n.style.left = s,
                            n.style.top = a
                        }
                    },
                    {
                        key: "changeWaterMarkById",
                        value: function(e, t) {
                            for (var i = null,
                            r = 0,
                            n = this.watermkArr.length; r < n; r++) if (e === this.watermkArr[r].id) {
                                if (! (i = document.getElementById(this.watermkArr[r].eleid))) return;
                                for (var s in t)"text" === s ? i.innerHTML = t[s] : "icon" === s ? i.style.backgroundImage = "url(" + t[s] + ")": i.style[s] = t[s],
                                this.watermkArr[r][s] = t[s];
                                break
                            }
                        }
                    },
                    {
                        key: "delWaterMarkById",
                        value: function(e) {
                            if (this._watermkC) if (e) {
                                for (var t = 0,
                                i = this.watermkArr.length; t < i; t++) if (e === this.watermkArr[t].id) {
                                    var r = document.getElementById(this.watermkArr[t].eleid);
                                    r && r.parentNode && r.parentNode.removeChild(r),
                                    this.watermkArr[t].watermkInterval && clearInterval(this.watermkArr[t].watermkInterval),
                                    this.watermkArr.splice(t, 1);
                                    break
                                }
                                0 == this.watermkArr.length && this._watermkC && (this._watermkC.parentNode.removeChild(this._watermkC), this._watermkC = null)
                            } else this.delAllWaterMark()
                        }
                    },
                    {
                        key: "delAllWaterMark",
                        value: function() {
                            for (var e = 0,
                            t = this.watermkArr.length; e < t; e++) {
                                var i = document.getElementById(this.watermkArr[e].eleid);
                                i && i.parentNode && i.parentNode.removeChild(i),
                                this.watermkArr[e].watermkInterval && clearInterval(this.watermkArr[e].watermkInterval)
                            }
                            this.watermkArr.splice(0, this.watermkArr.length),
                            this._watermkC && (this._watermkC.parentNode.removeChild(this._watermkC), this._watermkC = null)
                        }
                    },
                    {
                        key: "getWaterMarkById",
                        value: function(e) {
                            if (e) {
                                for (var t = null,
                                i = 0,
                                r = this.watermkArr.length; i < r; i++) e === this.watermkArr[i].id && (t = s.Toolkit.deepMerge({},
                                this.watermkArr[i]));
                                return t
                            }
                            return s.Toolkit.deepMerge([], this.watermkArr)
                        }
                    },
                    {
                        key: "addWaterMark",
                        value: function(e) {
                            var t = this;
                            e instanceof Array ? e.forEach(function(e) {
                                e.watermkDiv = null,
                                e.watermkInfo = null,
                                e.watermkInterval = null,
                                t._addSingleWatermark(e)
                            }) : (e.watermkDiv = null, e.watermkInfo = null, e.watermkInterval = null, this._addSingleWatermark(e))
                        }
                    },
                    {
                        key: "_generateWatermkRandomTop",
                        value: function(e) {
                            var t = this.vOpt.videoC,
                            i = Math.random() * t.offsetHeight,
                            r = t.offsetHeight - e.watermkDiv.clientHeight;
                            e.watermkDiv.style.top = (r < i ? r: i) + "px"
                        }
                    },
                    {
                        key: "_generateWatermkRandomLeft",
                        value: function(e) {
                            var t = this.vOpt.videoC,
                            i = Math.random() * t.offsetWidth,
                            r = t.offsetWidth - e.watermkDiv.clientWidth;
                            e.watermkDiv.style.left = (r < i ? r: i) + "px"
                        }
                    },
                    {
                        key: "_watermkMoving",
                        value: function(e) {
                            for (var t = !1,
                            i = 0,
                            r = this.watermkArr.length; i < r; i++) e.id === this.watermkArr[i].id && (t = !0);
                            if (t) {
                                var n = this.vOpt.videoC;
                                e.watermkDiv && ("cycle" === e.moving.toLowerCase() ? (e.watermkDiv.style.left = parseInt(e.watermkDiv.style.left) - parseInt(e.step) + "px", parseInt(e.watermkDiv.style.left) < 0 ? (e.watermkDiv.style.left = n.offsetWidth - e.watermkDiv.clientWidth + "px", this._generateWatermkRandomTop(e)) : parseInt(e.watermkDiv.style.left) > n.offsetWidth - e.watermkDiv.clientWidth && (e.watermkDiv.style.left = n.offsetWidth - e.watermkDiv.clientWidth + "px", this._generateWatermkRandomTop(e))) : "static" != e.moving.toLowerCase() && (this._generateWatermkRandomTop(e), this._generateWatermkRandomLeft(e)))
                            } else clearInterval(e.watermkInterval)
                        }
                    },
                    {
                        key: "_addSingleWatermark",
                        value: function(e) {
                            this._watermkC || (this._watermkC = document.createElement("div"), this._watermkC.className = "h5Player-layer-common h5Player-waterMark-layer", this._watermkC.draggable = !0, s.Toolkit.insertAfter(this._watermkC, this.vOpt.displayC));
                            var t = Object.assign({
                                moving: "static"
                            },
                            e),
                            i = this.vOpt.videoC;
                            if (t.eleid = t.id + s.Toolkit.getUuid(), t.watermkDiv || (t.watermkDiv = document.createElement("div"), t.watermkDiv.setAttribute("id", t.eleid), t.watermkDiv.className = "player-watermk", this._watermkC.appendChild(t.watermkDiv)), "cycle" === t.moving.toLowerCase() && (t.step = "1"), t.icon && (t.watermkDiv.style.backgroundImage = "url(" + t.icon + ")", t.watermkDiv.style.width = t.width, t.watermkDiv.style.height = t.height), t.text && (t.watermkDiv.innerHTML = t.text, t.watermkDiv.style.fontSize = t.fontSize, t.watermkDiv.style.fontWeight = t.fontWeight, t.watermkDiv.style.fontFamily = t.fontFamily, t.watermkDiv.style.color = t.color), t.watermkDiv.style.opacity = t.opacity, t.watermkDiv.style.webkitTransform = t.transform, t.watermkDiv.style.msTransform = t.transform, t.watermkDiv.style.transform = t.transform, t.watermkDiv.style.marginTop = t.marginTop, t.watermkInterval && (window.clearInterval(t.watermkInterval), t.watermkInterval = null), "static" === t.moving.toLowerCase()) t.watermkDiv.style.top = t.top ? t.top: (i.offsetHeight - t.watermkDiv.clientHeight) / 2 + "px",
                            t.watermkDiv.style.left = t.left ? t.left: (i.offsetWidth - t.watermkDiv.clientWidth) / 2 + "px";
                            else {
                                var r = 20;
                                this._generateWatermkRandomTop(t),
                                t.moving && "cycle" === t.moving.toLowerCase() ? t.watermkDiv.style.left = i.offsetWidth - t.watermkDiv.clientWidth + "px": (this._generateWatermkRandomLeft(t), r = 1e3),
                                t.watermkInterval = window.setInterval(this._watermkMoving.bind(this, t), r)
                            }
                            this.watermkArr.push(t)
                        }
                    }]), o);
                    function o() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, o)
                    }
                    t.
                default = a
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s = i(333);
                    var a = (r(o, [{
                        key: "initializer",
                        value: function() {
                            this.VMRealVideoOverlayFlag = !1,
                            this.drawVMCanvas = null,
                            this._objectinfoBuffer = [],
                            this.RTVOTimeHandler = null,
                            this.lastPts = -1,
                            this.timer = null,
                            this.drawVMCanvasSize = {
                                left: 0,
                                top: 0,
                                width: 0,
                                height: 0
                            }
                        }
                    },
                    {
                        key: "RTVOInit",
                        value: function(e) {
                            this._objectinfoBuffer.push(e),
                            !1 === this.VMRealVideoOverlayFlag && (this.drawVMCanvas && this.setVMCanvasPosition(this.drawVMCanvasSize), window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame, this.RTVOTimeHandler = window.requestAnimationFrame(this._VMRealTimeVideoOverlayEx.bind(this)), this.VMRealVideoOverlayFlag = !0, null == this.timer && (this.timer = window.setInterval(this._VMRealTimeVideoOverlay.bind(this), 1e3)))
                        }
                    },
                    {
                        key: "stopRTVO",
                        value: function() {
                            this.VMRealVideoOverlayFlag && (window.cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.webkitCancelRequestAnimationFrame, window.cancelAnimationFrame(this.RTVOTimeHandler), this.drawVMCanvas && (this.drawVMCanvas.getContext("2d").clearRect(0, 0, this.drawVMCanvas.width, this.drawVMCanvas.height), this.drawVMCanvas.parentNode.removeChild(this.drawVMCanvas), this.drawVMCanvas = null), this._objectinfoBuffer = [], this.timer && (window.clearInterval(this.timer), this.timer = null), this.VMRealVideoOverlayFlag = !1)
                        }
                    },
                    {
                        key: "_VMRealTimeVideoOverlay",
                        value: function() {
                            if (this._objectinfoBuffer.length) for (; this._objectinfoBuffer.length;) {
                                var e = 1e3 * this._videoplayer.currentTime,
                                t = this._objectinfoBuffer.shift(),
                                i = e - t.pts;
                                if (this.lastPts = t.pts, !(50 < i)) {
                                    if (i < -20) {
                                        this._objectinfoBuffer.unshift(t);
                                        break
                                    }
                                    this._drawVMFrameCanvas(t);
                                    break
                                }
                                console.log(this.vOpt.ele, " delete : ", e, t.pts)
                            } else {
                                var r = 1e3 * this._videoplayer.currentTime - this.lastPts; - 1 !== this.lastPts && 100 < r && (this.drawVMCanvas && this.drawVMCanvas.getContext("2d").clearRect(0, 0, this.drawVMCanvas.width, this.drawVMCanvas.height), this.lastPts = -1)
                            }
                        }
                    },
                    {
                        key: "_VMRealTimeVideoOverlayEx",
                        value: function() {
                            this._VMRealTimeVideoOverlay(),
                            this.RTVOTimeHandler = window.requestAnimationFrame(this._VMRealTimeVideoOverlayEx.bind(this))
                        }
                    },
                    {
                        key: "setVMCanvasPosition",
                        value: function(e) {
                            this.drawVMCanvas && (this.drawVMCanvas.style.left = e.left + "px", this.drawVMCanvas.style.top = e.top + "px", this.drawVMCanvas.style.width = e.width + "px", this.drawVMCanvas.style.height = e.height + "px", this.drawVMCanvas.width = e.width, this.drawVMCanvas.height = e.height),
                            this.drawVMCanvasSize = s.Toolkit.deepMerge({},
                            e)
                        }
                    },
                    {
                        key: "enableShowAttribute",
                        value: function(e) {
                            this.vOpt.vmShowAttribute = e
                        }
                    },
                    {
                        key: "_getRGBAColor",
                        value: function(e) {
                            return - 1 !== e.indexOf("#") && (e = s.Toolkit.hexToRgb(e)),
                            s.Toolkit.rgbAndOpacityToRgba(e, .5)
                        }
                    },
                    {
                        key: "_drawVMFrameCanvas",
                        value: function(e) {
                            this.drawVMCanvas || (this.drawVMCanvas = document.createElement("canvas"), this.drawVMCanvas.draggable = !0, this.drawVMCanvas.className = "VMCanvasEx", this.vOpt.displayC.appendChild(this.drawVMCanvas), this.setVMCanvasPosition(this.drawVMCanvasSize));
                            var t = this.drawVMCanvas.getContext("2d"),
                            i = null,
                            r = null,
                            n = -1,
                            s = "",
                            a = "",
                            o = [];
                            t.clearRect(0, 0, this.drawVMCanvas.width, this.drawVMCanvas.height);
                            for (var l = 0,
                            u = e.objects.length; l < u; l++) if (n = (i = e.objects[l]).type, a = this.vOpt.VMTitleObj[n], (r = i.rect).left = this._calHorSizeByCanvasResolution(r.left), r.right = this._calHorSizeByCanvasResolution(r.right), r.top = this._calVerByCanvasResolution(r.top), r.bottom = this._calVerByCanvasResolution(r.bottom), o = i.attributes, s = this.vOpt.VMStrokeColorObj[n], t.strokeStyle = s, t.lineWidth = 1, t.strokeRect(r.left, r.top, r.right - r.left, r.bottom - r.top), t.lineJoin = "round", t.lineWidth = 3, t.beginPath(), t.moveTo(r.left + 8, r.top), t.lineTo(r.left, r.top), t.lineTo(r.left, r.top + 8), t.moveTo(r.right - 8, r.top), t.lineTo(r.right, r.top), t.lineTo(r.right, r.top + 8), t.moveTo(r.right, r.bottom - 8), t.lineTo(r.right, r.bottom), t.lineTo(r.right - 8, r.bottom), t.moveTo(r.left, r.bottom - 8), t.lineTo(r.left, r.bottom), t.lineTo(r.left + 8, r.bottom), t.stroke(), t.fillStyle = s, t.font = "10px 微软雅黑", r.top - 5 < 8 ? t.fillText(i.id + "_" + a, r.left - 3, r.bottom + 15) : t.fillText(i.id + "_" + a, r.left - 3, r.top - 5), this.vOpt.vmShowAttribute && o && o.length) for (var h = this._getRGBAColor(s), d = o.length, c = 18 * d + 4 * (d - 1), f = void 0, p = void 0, v = void 0, m = void 0, _ = 0; _ < d; _++) v = (f = r.right + 4 + 90 > this.drawVMCanvas.width ? r.left - 90 - 4 : r.right + 4) + 4,
                            m = (p = r.bottom + c - (r.bottom - r.top) > this.drawVMCanvas.height ? this.drawVMCanvas.height - 18 * (d - _) - 4 * (d - _ - 1) : r.top + 18 * _ + 4 * _) + 13,
                            t.fillStyle = h,
                            t.fillRect(f, p, 90, 18),
                            t.fillStyle = "#FFF",
                            t.fillText(o[_].key + ":" + o[_].value, v, m)
                        }
                    },
                    {
                        key: "_calHorSizeByCanvasResolution",
                        value: function(e) {
                            var t = this._videoWidth;
                            return this.drawVMCanvas.clientWidth / t * e
                        }
                    },
                    {
                        key: "_calVerByCanvasResolution",
                        value: function(e) {
                            var t = this._videoHeight;
                            return this.drawVMCanvas.clientHeight / t * e
                        }
                    }]), o);
                    function o() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, o)
                    }
                    t.
                default = a
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(334),
                    c = i(333),
                    o = i(403),
                    l = (s = o) && s.__esModule ? s: {
                    default:
                        s
                    };
                    var u = 0,
                    h = 1,
                    _ = 2,
                    d = 3,
                    f = 4,
                    p = 5,
                    g = 6,
                    v = 7,
                    m = 8,
                    y = (r(b, [{
                        key: "initializer",
                        value: function() {
                            this.drawSvg = null,
                            this.drawSvgC = null,
                            this.RTDrawInfo = {
                                type: "",
                                status: u,
                                ele: null,
                                eleGroup: null,
                                polygonArr: [],
                                pointCount: 0,
                                direction: "",
                                adjustIndex: -1,
                                move: {},
                                arrow: 0,
                                arrowpos: -1,
                                distance: 4,
                                title: null,
                                titleStyle: {}
                            },
                            this._defVideoSize = {
                                w: 1920,
                                h: 1080
                            },
                            this.RTAdjustInfo = c.Toolkit.deepMerge({},
                            this.RTDrawInfo),
                            this.RTDrawResult = [],
                            this.svgLastSize = {
                                left: 0,
                                top: 0,
                                width: 0,
                                height: 0
                            },
                            this.lastHoverShape = null,
                            this.lastSelectShape = null,
                            this.lastMouseStyle = null,
                            this._resultCB = null
                        }
                    },
                    {
                        key: "deleteDrawingById",
                        value: function(i) {
                            if (i) {
                                if (this.drawSvg) {
                                    for (var e = this.drawSvg,
                                    t = e.children,
                                    r = null,
                                    n = "",
                                    s = -1,
                                    a = this,
                                    o = 0,
                                    l = t.length; o < l; o++) if (n = (r = t[o]).children[0].getAttribute("id"), i === n) {
                                        e.removeChild(r),
                                        this.RTDrawResult.every(function(e, t) {
                                            return i !== e.id || (a.lastHoverShape && e == a.lastHoverShape && (a.lastHoverShape = null), a.lastSelectShape && e == a.lastSelectShape && (a.lastSelectShape = null), s = t, !1)
                                        }),
                                        this.RTDrawResult.splice(s, 1);
                                        break
                                    }
                                    "" == this.RTDrawInfo.type && 0 == this.RTDrawResult.length && this._removeDrawing()
                                }
                            } else this._deleteAllDrawing()
                        }
                    },
                    {
                        key: "addDrawingCallback",
                        value: function(e) {
                            "function" == typeof e && (this._resultCB = e)
                        }
                    },
                    {
                        key: "startDrawing",
                        value: function(e, t, i) {
                            e = e || "rect",
                            this.RTDrawInfo.type != e && ("polygon" == this.RTDrawInfo.type && this._finishPolygon(!0), this.RTDrawInfo.type = e, this.RTDrawInfo.status = u, this.RTDrawInfo.title = null, this.RTDrawInfo.titleStyle = {}),
                            t = c.Toolkit.deepMerge({
                                lineWidth: "2px",
                                lineColor: "#00F",
                                fillOpacity: .1,
                                opacity: .7,
                                dasharray: ""
                            },
                            t),
                            this.RTDrawInfo.lineWidth = t.lineWidth,
                            this.RTDrawInfo.lineColor = t.lineColor,
                            this.RTDrawInfo.fillOpacity = t.fillOpacity,
                            this.RTDrawInfo.opacity = t.opacity,
                            this.RTDrawInfo.dasharray = t.dasharray,
                            this.RTDrawInfo.arrow = parseInt(t.arrow) || 0,
                            this.RTDrawInfo.distance = parseInt(t.distance) || 10,
                            this.RTDrawInfo.arrow && (this.RTDrawInfo.arrowpos = 1, "doubleline" === e && (this.RTDrawInfo.arrow = 1)),
                            "function" == typeof i && (this._resultCB = i),
                            this.drawSvg || this._initSvg()
                        }
                    },
                    {
                        key: "stopDrawing",
                        value: function(e) {
                            this.drawSvgC && (this.RTDrawInfo.status = u, this.RTDrawInfo.type = "", this.drawSvgC.draggable = !0, e && this._deleteAllDrawing(), 0 == this.RTDrawResult.length && this._removeDrawing())
                        }
                    },
                    {
                        key: "addDrawingObject",
                        value: function(e, t) {
                            "function" == typeof t && (this._resultCB = t);
                            var i = this;
                            e instanceof Array ? e.forEach(function(e) {
                                i._addDrawingShape(e)
                            }) : this._addDrawingShape(e)
                        }
                    },
                    {
                        key: "getAllDrawingObject",
                        value: function() {
                            return c.Toolkit.deepMerge([], this.RTDrawResult)
                        }
                    },
                    {
                        key: "removeSelectDrawing",
                        value: function() {
                            this.drawSvgC && this._hideAllGrapthPoint()
                        }
                    },
                    {
                        key: "finishDrawing",
                        value: function() {
                            this._finishPolygon(!0)
                        }
                    },
                    {
                        key: "_addDrawingShape",
                        value: function(e) {
                            if (e && ("rect" == e.type || "polygon" == e.type || "line" == e.type || "doubleline" == e.type) && (this.drawSvg || this._initSvg(), this._hideAllGrapthPoint(), "polygon" != e.type && 2 == e.posinfo.length || "polygon" === e.type && 2 < e.posinfo.length)) {
                                this.RTAdjustInfo.type = e.type,
                                this.RTAdjustInfo.status = d,
                                this.RTAdjustInfo.lineWidth = e.lineWidth ? e.lineWidth: "1px",
                                this.RTAdjustInfo.lineColor = e.lineColor ? e.lineColor: "#00F",
                                this.RTAdjustInfo.fillOpacity = e.fillOpacity ? e.fillOpacity: 0,
                                this.RTAdjustInfo.title = e.title,
                                this.RTAdjustInfo.titleStyle = e.titleStyle || {},
                                this.RTAdjustInfo.dasharray = e.dasharray,
                                this.RTAdjustInfo.arrow = parseInt(e.arrow) || 0,
                                this.RTAdjustInfo.distance = parseInt(e.distance) || 10;
                                var t = parseInt(e.arrowpos) || 0;
                                this.RTAdjustInfo.arrow && (this.RTAdjustInfo.arrowpos = 1 === t ? 1 : 0, "doubleline" === e.type && (this.RTAdjustInfo.arrow = 1));
                                var i = this.svgLastSize.width,
                                r = this.svgLastSize.height,
                                n = e.posinfo,
                                s = [];
                                e.postype && 1 == e.postype && (r = 0 < this._videoWidth && 0 < this._videoHeight ? (i = this.svgLastSize.width / this._videoWidth, this.svgLastSize.height / this._videoHeight) : (i = this.svgLastSize.width / this._defVideoSize.w, this.svgLastSize.height / this._defVideoSize.h));
                                for (var a = 0,
                                o = n.length; a < o; a++) s.push({
                                    x: Math.min(parseInt(n[a].x * i), this.svgLastSize.width),
                                    y: Math.min(parseInt(n[a].y * r), this.svgLastSize.height)
                                });
                                "rect" === e.type ? (this.RTAdjustInfo.polygonArr = c.Toolkit.deepMerge([], s), this._createShape(this.RTAdjustInfo), e.min && this.RTAdjustInfo.ele.setAttribute("minsize", JSON.stringify(e.min)), e.max && this.RTAdjustInfo.ele.setAttribute("maxsize", JSON.stringify(e.max)), "string" == typeof e.id && 0 < e.id.length && this.RTAdjustInfo.ele.setAttribute("id", e.id), this._drawRect(this.RTAdjustInfo)) : "doubleline" === e.type ? (this.RTAdjustInfo.polygonArr = s, this._createShape(this.RTAdjustInfo), this._drawDoubleline(this.RTAdjustInfo)) : (this.RTAdjustInfo.polygonArr = s, this._createShape(this.RTAdjustInfo), this._drawPolygonOrLine(this.RTAdjustInfo))
                            }
                        }
                    },
                    {
                        key: "_removeDrawing",
                        value: function() {
                            this.drawSvg && (this.drawSvgC.parentNode.removeChild(this.drawSvgC), this.drawSvgC = null, this.drawSvg = null)
                        }
                    },
                    {
                        key: "_deleteAllDrawing",
                        value: function() {
                            if (this.drawSvg) {
                                this.lastHoverShape = null,
                                this.lastSelectShape = null,
                                this.lastMouseStyle = null;
                                for (var e = this.drawSvg,
                                t = e.children; 0 < t.length;) e.removeChild(t[0]);
                                this.RTDrawResult.splice(0, this.RTDrawResult.length),
                                "" == this.RTDrawInfo.type && this._removeDrawing()
                            }
                        }
                    },
                    {
                        key: "_createSVGEleTag",
                        value: function(e, t) {
                            var i = document.createElementNS("http://www.w3.org/2000/svg", e);
                            return this._setSvgAttr(i, t),
                            i
                        }
                    },
                    {
                        key: "_setSvgAttr",
                        value: function(e, t) {
                            try {
                                for (var i in t) e.setAttribute(i, t[i])
                            } catch(e) {}
                        }
                    },
                    {
                        key: "_initSvg",
                        value: function() {
                            this.drawSvg || (this.drawSvgC = document.createElement("div"), this.drawSvgC.className = "draw-svg-container h5Player-drawing-layer", this.drawSvg = this._createSVGEleTag("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                class: "draw-svg"
                            }), this.setRTSVGPosition(this.svgLastSize), this.drawSvgC.appendChild(this.drawSvg), this._watermkC ? c.Toolkit.insertAfter(this.drawSvgC, this._watermkC) : c.Toolkit.insertAfter(this.drawSvgC, this.vOpt.displayC), this.drawSvgC.draggable = !0, this._bindSvgEvent())
                        }
                    },
                    {
                        key: "_modifySVGAllShapeXY",
                        value: function(e, t) {
                            if (0 != e && 0 != t && 0 != this.svgLastSize.width && 0 != this.svgLastSize.height) {
                                for (var i = this.drawSvg,
                                r = e / this.svgLastSize.width,
                                n = t / this.svgLastSize.height,
                                s = i.children,
                                a = null,
                                o = null,
                                l = [], u = "", h = 0, d = s.length; h < d; h++) for (var c = 0,
                                f = (a = s[h]).children.length; c < f; c++) if ("path" === (o = a.children[c]).nodeName) {
                                    u = o.getAttribute("type");
                                    for (var p = 0,
                                    v = (l = JSON.parse(o.getAttribute("pointArr"))).length; p < v; p++) l[p].x *= r,
                                    l[p].y *= n;
                                    o === this.RTDrawInfo.ele && (this.RTDrawInfo.polygonArr = l);
                                    var m = {
                                        type: u,
                                        arrow: o.getAttribute("arrow") - "0",
                                        arrowpos: o.getAttribute("arrowpos") - "0",
                                        distance: o.getAttribute("distance") - "0",
                                        ele: o,
                                        polygonArr: l
                                    };
                                    "polygon" === u || "line" === u ? (this.RTDrawInfo.status === _ && o === this.RTDrawInfo.ele && (m.status = _), this._drawPolygonOrLine(m)) : "rect" === u ? this._drawRect(m) : "doubleline" === u && this._drawDoubleline(m)
                                }
                                this.RTDrawResult.forEach(function(e) {
                                    e._points = JSON.parse(e._ele.getAttribute("pointArr"))
                                })
                            }
                        }
                    },
                    {
                        key: "setRTSVGPosition",
                        value: function(e) {
                            this.drawSvg && (this.drawSvg.style.left = e.left + "px", this.drawSvg.style.top = e.top + "px", this.drawSvg.style.width = e.width + "px", this.drawSvg.style.height = e.height + "px", this._setSvgAttr(this.drawSvg, {
                                width: e.width,
                                height: e.height
                            }), this._modifySVGAllShapeXY(e.width, e.height)),
                            0 == e.width || 0 == e.height || (this.svgLastSize = c.Toolkit.deepMerge({},
                            e))
                        }
                    },
                    {
                        key: "_drawGraphPoint",
                        value: function(e, t) {
                            var i = e.ele.closest("g").getElementsByClassName("rtd-point");
                            if (i.length) for (var r = 0,
                            n = t.length; r < n; r++) this._setSvgAttr(i[r], {
                                x: t[r].x - 3,
                                y: t[r].y - 3
                            });
                            else for (var s = 0,
                            a = t.length; s < a; s++) {
                                var o = this._createSVGEleTag("rect", {
                                    style: "fill:" + e.lineColor + "; stroke-width: 6; stroke-opacity: 0; stroke:" + e.lineColor + ";",
                                    class: "rtd-point",
                                    width: 6,
                                    height: 6,
                                    x: t[s].x - 3,
                                    y: t[s].y - 3
                                });
                                e.eleGroup.appendChild(o)
                            }
                        }
                    },
                    {
                        key: "_drawLineArrow",
                        value: function(e) {
                            1 === e.arrow ? this._drawLineArrow1(e) : 2 === e.arrow ? this._drawLineArrow2(e) : (e.ele.setAttribute("arrow", 0), e.ele.setAttribute("arrowpos", -1))
                        }
                    },
                    {
                        key: "_drawLineArrow1",
                        value: function(e) {
                            var t = e.ele.closest("g").getElementsByClassName("rtd-arrow"),
                            i = e.polygonArr,
                            r = i[1],
                            n = i[0],
                            s = 0 === e.arrowpos ? 0 : 1,
                            a = i[s],
                            o = parseInt(Math.atan2(r.y - n.y, r.x - n.x) * (180 / Math.PI)) + 90 + (1 == s ? 0 : 180);
                            if (t.length) {
                                e.ele.setAttribute("arrowpos", s);
                                for (var l = e.ele.getAttribute("xoffset") - "0", u = e.ele.getAttribute("yoffset") - "0", h = 0, d = 0, c = t.length; d < c; d++) {
                                    1 == (h = t[d]).getAttribute("index") - "0" ? this._setSvgAttr(h, {
                                        x: a.x - 20 + l,
                                        y: a.y - 20 + u
                                    }) : this._setSvgAttr(h, {
                                        x: a.x - 20,
                                        y: a.y - 20
                                    });
                                    for (var f = 0,
                                    p = h.children.length; f < p; f++) this._setSvgAttr(h.children[f], {
                                        transform: "rotate(" + o + " 0 0)"
                                    })
                                }
                            } else {
                                e.ele.setAttribute("arrow", e.arrow),
                                e.ele.setAttribute("arrowpos", e.arrowpos);
                                var v = this._createSVGEleTag("svg", {
                                    xmlns: "http://www.w3.org/2000/svg",
                                    class: "rtd-arrow",
                                    x: a.x - 20,
                                    y: a.y - 20,
                                    width: 60,
                                    height: 60,
                                    viewBox: "-20 -20 60 60",
                                    fill: e.lineColor,
                                    "fill-opacity": e.fillOpacity,
                                    "stroke-width": e.lineWidth,
                                    stroke: e.lineColor,
                                    index: 0
                                }),
                                m = this._createSVGEleTag("polygon", {
                                    points: "-10,20 0,0 10,20 0,0 -10,20",
                                    transform: "rotate(" + o + ",0,0)"
                                });
                                if (v.appendChild(m), e.eleGroup.appendChild(v), "doubleline" === e.type) {
                                    var _ = e.ele.getAttribute("xoffset") - "0",
                                    g = e.ele.getAttribute("yoffset") - "0",
                                    y = this._createSVGEleTag("svg", {
                                        xmlns: "http://www.w3.org/2000/svg",
                                        class: "rtd-arrow",
                                        x: a.x - 20 + _,
                                        y: a.y - 20 + g,
                                        width: 60,
                                        height: 60,
                                        viewBox: "-20 -20 60 60",
                                        fill: e.lineColor,
                                        "fill-opacity": e.fillOpacity,
                                        "stroke-width": e.lineWidth,
                                        stroke: e.lineColor,
                                        index: 1
                                    }),
                                    b = this._createSVGEleTag("polygon", {
                                        points: "-10,20 0,0 10,20 0,0 -10,20",
                                        transform: "rotate(" + o + ",0,0)"
                                    });
                                    y.appendChild(b),
                                    e.eleGroup.appendChild(y)
                                }
                            }
                        }
                    },
                    {
                        key: "_drawLineArrow2",
                        value: function(e) {
                            var t = e.ele.closest("g").getElementsByClassName("rtd-arrow"),
                            i = e.polygonArr,
                            r = i[1],
                            n = i[0],
                            s = e.arrowpos,
                            a = parseInt(Math.atan2(r.y - n.y, r.x - n.x) * (180 / Math.PI)),
                            o = (n.x + r.x) / 2,
                            l = (n.y + r.y) / 2;
                            if (t.length) {
                                e.ele.setAttribute("arrowpos", s);
                                for (var u = 0,
                                h = t.length; u < h; u++) {
                                    var d = 0,
                                    c = t[u];
                                    this._setSvgAttr(c, {
                                        x: o - 40,
                                        y: l - 40
                                    });
                                    for (var f = 0,
                                    p = c.children.length; f < p; f++) d = c.children[f].getAttribute("index") - "0",
                                    this._setSvgAttr(c.children[f], {
                                        transform: "rotate(" + a + " 0 0)",
                                        opacity: d == s || 2 == s ? 1 : 0
                                    })
                                }
                            } else {
                                e.ele.setAttribute("arrow", e.arrow),
                                e.ele.setAttribute("arrowpos", e.arrowpos),
                                e.ele.setAttribute("lastarrowpos", 1 == e.arrowpos ? 0 : 1);
                                var v = this._createSVGEleTag("svg", {
                                    xmlns: "http://www.w3.org/2000/svg",
                                    class: "rtd-arrow",
                                    x: o - 40,
                                    y: l - 40,
                                    width: 80,
                                    height: 80,
                                    viewBox: "-40 -40 80 80",
                                    fill: e.lineColor,
                                    "fill-opacity": e.fillOpacity,
                                    "stroke-width": e.lineWidth,
                                    stroke: e.lineColor
                                }),
                                m = this._createSVGEleTag("polygon", {
                                    points: "-10,-20 0,-30 10,-20 0,-30 0,-10, 0,-30 -10,-20",
                                    transform: "rotate(" + a + ",0,0)",
                                    opacity: 0 === s ? 0 : 1,
                                    index: 1
                                }),
                                _ = this._createSVGEleTag("polygon", {
                                    points: "-10,20 0,30 10,20 0,30 0,10, 0,30 -10,20",
                                    transform: "rotate(" + a + ",0,0)",
                                    opacity: 1 === s ? 0 : 1,
                                    index: 0
                                });
                                v.appendChild(m),
                                v.appendChild(_),
                                e.eleGroup.appendChild(v)
                            }
                        }
                    },
                    {
                        key: "_adjustLineArrow",
                        value: function() {
                            var t = this.RTAdjustInfo.arrowpos,
                            e = this.RTAdjustInfo.type;
                            if (1 != this.RTAdjustInfo.arrow || "line" !== e && "doubleline" !== e) {
                                if (2 == this.RTAdjustInfo.arrow && "line" === e) {
                                    var i = this.RTAdjustInfo.ele;
                                    if (0 == t) t = 2,
                                    i.setAttribute("lastarrowpos", 0);
                                    else if (1 == t) t = 2,
                                    i.setAttribute("lastarrowpos", 1);
                                    else if (2 == t) {
                                        var r = i.getAttribute("lastarrowpos") - "0";
                                        t = 1 == r ? 0 : 1,
                                        this.lastMouseStyle.index != t && (this.lastMouseStyle.mouse = "crosshair", this._addSVGMouseStyle(this.drawSvg, "crosshair"))
                                    }
                                }
                            } else t = 1 === t ? 0 : 1,
                            this.lastMouseStyle.mouse = "crosshair",
                            this._addSVGMouseStyle(this.drawSvg, "crosshair");
                            this.RTAdjustInfo.arrowpos = t,
                            this._drawLineArrow(this.RTAdjustInfo);
                            var n = this.RTAdjustInfo.ele.getAttribute("id"),
                            s = {
                                arrowpos: t
                            };
                            this.RTDrawResult.every(function(e) {
                                return n !== e.id || (e.arrowpos = t, e = c.Toolkit.deepMerge(s, e), !1)
                            }),
                            this._resultCB && this._resultCB(c.Toolkit.deepMerge({
                                index: this.vOpt.index
                            },
                            s)),
                            this._emitter.emit(l.
                        default.OnDrawingObject, c.Toolkit.deepMerge({
                                index: this.vOpt.index
                            },
                            s))
                        }
                    },
                    {
                        key: "_drawPolygonOrLine",
                        value: function(e) {
                            for (var t = e.type,
                            i = this.svgLastSize.width,
                            r = this.svgLastSize.height,
                            n = e.polygonArr,
                            s = "",
                            a = [], o = 0, l = n.length; o < l; o++) s += n[o].x + "," + n[o].y + " ",
                            a.push({
                                x: n[o].x / i,
                                y: n[o].y / r
                            });
                            s = "M " + s,
                            "polygon" === t && e.status != _ ? (s += " Z", this._drawGraphPoint(e, n)) : "polygon" != t && this._drawGraphPoint(e, n),
                            "line" === t && this._drawLineArrow(e),
                            this._setSvgAttr(e.ele, {
                                d: s,
                                pointArr: JSON.stringify(n),
                                type: t
                            }),
                            this._changeTextPos(e.ele, [{
                                x: n[0].x,
                                y: n[0].y
                            }]),
                            this._emitEvent(e, a, n)
                        }
                    },
                    {
                        key: "_emitEvent",
                        value: function(e, t, i) {
                            if (e.status === d) {
                                var r = e.ele.getAttribute("id");
                                r || (r = c.Toolkit.getUuid(), this._setSvgAttr(e.ele, {
                                    id: r
                                })),
                                this._setSvgAttr(e.ele, {
                                    id: r
                                });
                                var n = {
                                    id: r,
                                    type: e.type,
                                    status: e.status,
                                    lineColor: e.lineColor,
                                    lineWidth: e.lineWidth,
                                    opacity: e.opacity,
                                    fillOpacity: e.fillOpacity,
                                    videoWidth: this._videoWidth,
                                    videoHeight: this._videoHeight,
                                    title: e.title,
                                    posinfo: t,
                                    arrow: e.arrow,
                                    arrowpos: e.arrowpos,
                                    min: JSON.parse(e.ele.getAttribute("minsize")),
                                    max: JSON.parse(e.ele.getAttribute("maxsize")),
                                    _ele: e.ele,
                                    _points: i
                                };
                                this.RTDrawResult.push(n),
                                this.lastSelectShape = {
                                    id: r,
                                    lineWidth: e.lineWidth,
                                    _ele: e.ele
                                },
                                this._resultCB && this._resultCB(c.Toolkit.deepMerge({
                                    index: this.vOpt.index
                                },
                                n)),
                                this._emitter.emit(l.
                            default.OnDrawingObject, c.Toolkit.deepMerge({
                                    index: this.vOpt.index
                                },
                                n))
                            } else if (e.status === g || e.status === m) {
                                var s = e.ele.getAttribute("id"),
                                a = {
                                    status: e.status,
                                    arrowpos: e.arrowpos,
                                    posinfo: t,
                                    _points: i
                                };
                                this.RTDrawResult.every(function(e) {
                                    return s !== e.id || (e = c.Toolkit.deepMerge(e, a), a = c.Toolkit.deepMerge(a, e), !1)
                                }),
                                this._resultCB && this._resultCB(c.Toolkit.deepMerge({
                                    index: this.vOpt.index
                                },
                                a)),
                                this._emitter.emit(l.
                            default.OnDrawingObject, c.Toolkit.deepMerge({
                                    index: this.vOpt.index
                                },
                                a))
                            }
                        }
                    },
                    {
                        key: "_drawDoubleline",
                        value: function(e) {
                            for (var t = e.type,
                            i = this.svgLastSize.width,
                            r = this.svgLastSize.height,
                            n = c.Toolkit.deepMerge([], e.polygonArr), s = c.Toolkit.getLinePoint(n, e.distance), a = "", o = [], l = 0, u = n.length; l < u; l++) a += n[l].x + "," + n[l].y + " ",
                            o.push({
                                x: n[l].x / i,
                                y: n[l].y / r
                            });
                            a = "M " + a + " M";
                            for (var h = 0,
                            d = s.length; h < d; h++) a += s[h].x + "," + s[h].y + " ";
                            this._setSvgAttr(e.ele, {
                                d: a,
                                pointArr: JSON.stringify(n),
                                type: t,
                                distance: e.distance,
                                xoffset: s[0].x - n[0].x,
                                yoffset: s[0].y - n[0].y
                            }),
                            s.push.apply(s, n),
                            this._drawGraphPoint(e, s),
                            this._drawLineArrow(e),
                            this._changeTextPos(e.ele, [{
                                x: n[0].x,
                                y: n[0].y
                            }]),
                            this._emitEvent(e, o, n)
                        }
                    },
                    {
                        key: "_changeTextPos",
                        value: function(e, t) {
                            var i = e.closest("g").getElementsByTagName("text");
                            if (i && i.length) {
                                var r = parseInt(i[0].style.fontSize),
                                n = i[0].getAttribute("text"),
                                s = {
                                    x: t[0].x,
                                    y: t[0].y
                                },
                                a = {};
                                1 < t.length && (t[0].x > t[1].x ? (s.x = t[1].x, a.w = t[0].x - t[1].x) : (s.x = t[0].x, a.w = t[1].x - t[0].x), t[0].y > t[1].y ? (s.y = t[1].y, a.h = t[0].y - t[1].y) : (s.y = t[0].y, a.h = t[1].y - t[0].y), a.w + 7 >= this.svgLastSize.width ? a.w = this._videoWidth: a.w = a.w * this._videoWidth / this.svgLastSize.width, a.h + 7 >= this.svgLastSize.height ? a.h = this._videoHeight: a.h = a.h * this._videoHeight / this.svgLastSize.height),
                                this._setSvgAttr(i[0], {
                                    x0: s.x,
                                    y0: s.y
                                }),
                                s.x = s.x + 2,
                                s.y > r + 2 ? s.y = s.y - 3 : s.y = s.y + r + 3,
                                this._setSvgAttr(i[0], {
                                    x: s.x,
                                    y: s.y
                                }),
                                n && 1 < t.length && (i[0].innerHTML = n + "(" + Math.round(a.w) + "X" + Math.round(a.h) + ")")
                            }
                        }
                    },
                    {
                        key: "_drawRect",
                        value: function(e) {
                            var t = this.svgLastSize.width,
                            i = this.svgLastSize.height,
                            r = e.polygonArr,
                            n = r[0].x,
                            s = r[0].y,
                            a = r[1].x,
                            o = r[1].y,
                            l = [{
                                x: n / t,
                                y: s / i
                            },
                            {
                                x: a / t,
                                y: o / i
                            }],
                            u = [{
                                x: n,
                                y: s
                            },
                            {
                                x: n,
                                y: o
                            },
                            {
                                x: a,
                                y: o
                            },
                            {
                                x: a,
                                y: s
                            },
                            {
                                x: (n + a) / 2,
                                y: s
                            },
                            {
                                x: n,
                                y: (s + o) / 2
                            },
                            {
                                x: (n + a) / 2,
                                y: o
                            },
                            {
                                x: a,
                                y: (s + o) / 2
                            }];
                            this._setSvgAttr(e.ele, {
                                d: "M " + n + "," + s + " " + n + "," + o + " " + a + "," + o + " " + a + "," + s + " Z",
                                pointArr: JSON.stringify(r),
                                type: "rect"
                            }),
                            this._drawGraphPoint(e, u),
                            this._changeTextPos(e.ele, [{
                                x: n,
                                y: s
                            },
                            {
                                x: a,
                                y: o
                            }]),
                            this._emitEvent(e, l, r)
                        }
                    },
                    {
                        key: "_createShape",
                        value: function(e) {
                            if (e.ele = this._createSVGEleTag("path", {
                                style: " fill:" + e.lineColor + "; fill-opacity:" + e.fillOpacity + "; stroke-width: " + e.lineWidth + "; stroke: " + e.lineColor + "; stroke-opacity: " + e.opacity + "; stroke-dasharray: " + e.dasharray
                            }), e.eleGroup = this._createSVGEleTag("g"), e.eleGroup.appendChild(e.ele), this.drawSvg.appendChild(e.eleGroup), e.title) {
                                var t = c.Toolkit.deepMerge({
                                    fontSize: "15px",
                                    color: e.lineColor,
                                    fontWeight: "normal"
                                },
                                e.titleStyle),
                                i = this._createSVGEleTag("text", {
                                    x: 0,
                                    y: 0,
                                    fill: t.color,
                                    text: e.title,
                                    style: "font-size: " + t.fontSize + "; font-weight: " + t.fontWeight
                                });
                                i.innerHTML = e.title,
                                e.eleGroup.appendChild(i)
                            }
                        }
                    },
                    {
                        key: "_adjustRect",
                        value: function(e, t) {
                            var i = this.RTAdjustInfo.polygonArr,
                            r = this.RTAdjustInfo.direction,
                            n = this.RTAdjustInfo.move,
                            s = 0 < this._videoWidth ? this._videoWidth: this._defVideoSize.w,
                            a = 0 < this._videoHeight ? this._videoHeight: this._defVideoSize.h,
                            o = this.svgLastSize.width,
                            l = this.svgLastSize.height,
                            u = JSON.parse(this.RTAdjustInfo.ele.getAttribute("minsize")),
                            h = JSON.parse(this.RTAdjustInfo.ele.getAttribute("maxsize")),
                            d = i[this.RTAdjustInfo.adjustIndex],
                            c = i[0 == this.RTAdjustInfo.adjustIndex ? 1 : 0];
                            if (this.RTAdjustInfo.status != g) if ("x" === r && e != n.x) d.x = d.x + e - n.x;
                            else if ("y" === r && t != n.y) d.y = d.y + t - n.y;
                            else {
                                if ("xy" !== r || e == n.x && t == n.y) return;
                                d.x = d.x + e - n.x,
                                d.y = d.y + t - n.y
                            }
                            if (u && 0 < u.x || h && 0 < h.x) if (d.x > c.x) {
                                var f = (d.x - c.x) * s / o;
                                u && 0 < u.x && f < u.x ? d.x = c.x + u.x * o / s: h && 0 < h.x && f > h.x && (d.x = c.x + h.x * o / s)
                            } else {
                                var p = (c.x - d.x) * s / o;
                                u && 0 < u.x && p < u.x ? d.x = c.x - u.x * o / s: h && 0 < h.x && p > h.x && (d.x = c.x - h.x * o / s)
                            }
                            if (u && 0 < u.y || h && 0 < h.y) if (d.y > c.y) {
                                var v = (d.y - c.y) * a / l;
                                u && 0 < u.y && v < u.y ? d.y = c.y + u.y * l / a: h && 0 < h.y && v > h.y && (d.y = c.y + h.y * l / a)
                            } else {
                                var m = (c.y - d.y) * a / l;
                                u && 0 < u.y && m < u.y ? d.y = c.y - u.y * l / a: h && 0 < h.y && m > h.y && (d.y = c.y - h.y * l / a)
                            }
                            d.x > o ? d.x = o: d.x < 0 && (d.x = 0),
                            d.y > l ? d.y = l: d.y < 0 && (d.y = 0),
                            this.RTAdjustInfo.move = {
                                x: e,
                                y: t
                            },
                            this._drawRect(this.RTAdjustInfo)
                        }
                    },
                    {
                        key: "_adjustPolygonOrLine",
                        value: function(e, t) {
                            var i = this.RTAdjustInfo.type,
                            r = this.RTAdjustInfo.polygonArr,
                            n = this.RTAdjustInfo.adjustIndex,
                            s = this.RTAdjustInfo.move,
                            a = this.svgLastSize.width,
                            o = this.svgLastSize.height;
                            e == s.x && t == s.y && this.RTAdjustInfo.status != g || (r[n].x = r[n].x + e - s.x, r[n].y = r[n].y + t - s.y, r[n].x > a ? r[n].x = a: r[n].x < 0 && (r[n].x = 0), r[n].y > o ? r[n].y = o: r[n].y < 0 && (r[n].y = 0), this.RTAdjustInfo.move = {
                                x: e,
                                y: t
                            },
                            "polygon" === i || "line" === i ? this._drawPolygonOrLine(this.RTAdjustInfo) : "doubleline" === i && this._drawDoubleline(this.RTAdjustInfo))
                        }
                    },
                    {
                        key: "_calMoveGapobj",
                        value: function(e, t, i, r) {
                            var n, s, a, o, l, u, h = i - e.move.x,
                            d = r - e.move.y,
                            c = this.svgLastSize.width,
                            f = this.svgLastSize.height;
                            return l = t.map(function(e) {
                                return e.x
                            }),
                            n = Math.max.apply(null, l),
                            a = Math.min.apply(null, l),
                            u = t.map(function(e) {
                                return e.y
                            }),
                            s = Math.max.apply(null, u),
                            o = Math.min.apply(null, u),
                            c < n + h ? h = c - n: a + h < 0 && (h = 0 - a),
                            f < s + d ? d = f - s: o + d < 0 && (d = 0 - o),
                            {
                                xGap: h,
                                yGap: d
                            }
                        }
                    },
                    {
                        key: "_moveShape",
                        value: function(e, t) {
                            for (var i = this.RTAdjustInfo.type,
                            r = this.RTAdjustInfo.ele,
                            n = JSON.parse(r.getAttribute("pointArr")), s = this._calMoveGapobj(this.RTAdjustInfo, n, e, t), a = s.xGap, o = s.yGap, l = 0, u = n.length; l < u; l++) n[l].x += a,
                            n[l].y += o;
                            this.RTAdjustInfo.polygonArr = n,
                            "polygon" === i || "line" === i ? this._drawPolygonOrLine(this.RTAdjustInfo) : "rect" === i ? this._drawRect(this.RTAdjustInfo) : "doubleline" === i && this._drawDoubleline(this.RTAdjustInfo),
                            this.RTAdjustInfo.move.x = e,
                            this.RTAdjustInfo.move.y = t
                        }
                    },
                    {
                        key: "_addSVGMouseStyle",
                        value: function(e, t) {
                            e.style.cursor = t
                        }
                    },
                    {
                        key: "_onSvgMouseUp",
                        value: function(e) {
                            var t = e || window.event,
                            i = t.offsetX,
                            r = t.offsetY;
                            i < 0 ? i = 0 : i > this.svgLastSize.width && (i = this.svgLastSize.width),
                            r < 0 ? r = 0 : r > this.svgLastSize.height && (r = this.svgLastSize.height);
                            var n = this.RTDrawInfo.type;
                            if (this.RTDrawInfo.status !== h) {
                                if (this.RTDrawInfo.status !== _) {
                                    if ("" === n && (this.drawSvgC.draggable = !0), n = this.RTAdjustInfo.type, this.RTAdjustInfo.status === p) return this.RTAdjustInfo.status = g,
                                    void("rect" === n ? this._adjustRect(i, r) : "polygon" !== n && "line" !== n && "doubleline" !== n || this._adjustPolygonOrLine(i, r));
                                    if (this.RTAdjustInfo.status !== f) return this.RTAdjustInfo.status === v ? (this.RTAdjustInfo.status = m, void this._moveShape(i, r)) : void 0;
                                    this.RTAdjustInfo.status = d
                                } else if ("rect" === n || "line" === n || "doubleline" === n) {
                                    var s = this.RTDrawInfo.polygonArr,
                                    a = s[0].x - i,
                                    o = s[0].y - r;
                                    5 < a || a < -5 || 5 < o || o < -5 ? (s[1].x = i, s[1].y = r, this.RTDrawInfo.status = d, "rect" === n ? this._drawRect(this.RTDrawInfo) : "line" === n ? this._drawPolygonOrLine(this.RTDrawInfo) : this._drawDoubleline(this.RTDrawInfo)) : (this.RTDrawInfo.eleGroup && this.drawSvg.removeChild(this.RTDrawInfo.eleGroup), this.RTDrawInfo.status = u),
                                    this.RTDrawInfo.eleGroup = null
                                }
                            } else "rect" !== n && "line" !== n && "doubleline" !== n || (this.RTDrawInfo.status = u, this.RTDrawInfo.eleGroup && this.drawSvg.removeChild(this.RTDrawInfo.eleGroup), this.RTDrawInfo.status = u, this.RTDrawInfo.eleGroup = null)
                        }
                    },
                    {
                        key: "_getAdjustShapePoint",
                        value: function() {
                            var e = this.RTAdjustInfo.ele.closest("g").getElementsByTagName("path")[0],
                            t = JSON.parse(e.getAttribute("pointArr"));
                            if ("rect" === this.RTAdjustInfo.type) {
                                var i = t[0].x,
                                r = t[0].y,
                                n = t[1].x,
                                s = t[1].y,
                                a = this.lastMouseStyle.index; (0 === a || 3 === a) && i < n ? (t[0].x = n, t[1].x = i) : (1 === a || 2 === a) && n < i && (t[0].x = n, t[1].x = i),
                                (0 === a || 1 === a) && r < s ? (t[0].y = s, t[1].y = r) : (2 === a || 3 === a) && s < r && (t[0].y = s, t[1].y = r),
                                this.lastMouseStyle.index = 1
                            }
                            this.RTAdjustInfo.polygonArr = t,
                            this.RTAdjustInfo.adjustIndex = this.lastMouseStyle.index,
                            this.RTAdjustInfo.direction = this.lastMouseStyle.direction
                        }
                    },
                    {
                        key: "_checkAdjustShape",
                        value: function(e) {
                            if (this.lastHoverShape) {
                                var t = this.lastHoverShape._ele;
                                return this._showCurShapePoint(this.lastHoverShape),
                                this.RTAdjustInfo.type = t.getAttribute("type"),
                                this.RTAdjustInfo.arrow = t.getAttribute("arrow") - "0",
                                this.RTAdjustInfo.arrowpos = t.getAttribute("arrowpos") - "0",
                                this.RTAdjustInfo.distance = t.getAttribute("distance") - "0",
                                this.RTAdjustInfo.ele = t,
                                this.lastMouseStyle && ("move" != this.lastMouseStyle.mouse ? (this._getAdjustShapePoint(this.lastHoverShape), "pointer" === this.lastMouseStyle.mouse ? (this.RTAdjustInfo.status = g, this._adjustLineArrow()) : this.RTAdjustInfo.status = f) : this.RTAdjustInfo.status = v),
                                this.RTAdjustInfo.move.x = e.offsetX,
                                this.RTAdjustInfo.move.y = e.offsetY,
                                !0
                            }
                            return ! 1
                        }
                    },
                    {
                        key: "_finishPolygon",
                        value: function(e, t, i) {
                            if ("polygon" === this.RTDrawInfo.type && (this.RTDrawInfo.status == h || this.RTDrawInfo.status == _)) {
                                if (this.RTDrawInfo.status = d, this.RTDrawInfo.pointCount = 0, e) return this.RTDrawInfo.eleGroup && this.drawSvg.removeChild(this.RTDrawInfo.eleGroup),
                                !(this.RTDrawInfo.eleGroup = null);
                                var r = this.RTDrawInfo.polygonArr.pop();
                                if (r.x = t, r.y = i, this.RTDrawInfo.polygonArr.push(r), this.RTDrawInfo.polygonArr.length = this.RTDrawInfo.polygonArr.length - 2, 2 < this.RTDrawInfo.polygonArr.length) return this._drawPolygonOrLine(this.RTDrawInfo),
                                !0;
                                if (this.RTDrawInfo.eleGroup && this.drawSvg.removeChild(this.RTDrawInfo.eleGroup), this.RTDrawInfo.eleGroup = null, 2 == this.RTDrawInfo.polygonArr.length) {
                                    var n = this.RTDrawInfo.polygonArr,
                                    s = n[0].x - n[1].x,
                                    a = n[0].y - n[1].y;
                                    if (5 < s || s < -5 || 5 < a || a < -5) return ! 0
                                }
                            }
                            return ! 1
                        }
                    },
                    {
                        key: "_bindSvgEvent",
                        value: function() {
                            var u = this;
                            a.EventUtil.addHandler(this.drawSvg, "click",
                            function(e) {
                                e.stopPropagation(),
                                u._emitter.emit(l.
                            default.OnWndClick, u.vOpt.index)
                            }),
                            a.EventUtil.addHandler(this.drawSvg, "mousedown",
                            function(e) {
                                e.stopPropagation(),
                                u._emitter.emit(l.
                            default.OnMouseDown, u.vOpt.index, "drawsvg");
                                var t = e || window.event;
                                if (0 === t.button) {
                                    var i = t.offsetX,
                                    r = t.offsetY;
                                    if (u.RTDrawInfo.status != h && u.RTDrawInfo.status != _) {
                                        if (u._checkHoverShape(t, !0), u._checkAdjustShape(t)) return void(u.drawSvgC.draggable = !1);
                                        "" === u.RTDrawInfo.type ? u.drawSvgC.draggable = !0 : u.drawSvgC.draggable = !1
                                    }
                                    u._hideAllGrapthPoint();
                                    var n = u.RTDrawInfo.type;
                                    "rect" === n || "line" === n || "doubleline" === n ? (u.RTDrawInfo.status = h, u._createShape(u.RTDrawInfo), u.RTDrawInfo.polygonArr = [{
                                        x: i,
                                        y: r
                                    },
                                    {
                                        x: i,
                                        y: r
                                    }]) : "polygon" === n && (0 === u.RTDrawInfo.pointCount && (u.RTDrawInfo.status = h, u._createShape(u.RTDrawInfo), u.RTDrawInfo.polygonArr = [{
                                        x: i,
                                        y: r
                                    }]), u.RTDrawInfo.pointCount++, u.RTDrawInfo.polygonArr.push({
                                        x: i,
                                        y: r
                                    }))
                                } else u._finishPolygon(!0)
                            }),
                            a.EventUtil.addHandler(this.drawSvg, "mousemove",
                            function(e) {
                                e.stopPropagation();
                                var t = e || window.event,
                                i = t.offsetX,
                                r = t.offsetY,
                                n = u.RTDrawInfo.type;
                                if (u.RTDrawInfo.status !== h && u.RTDrawInfo.status !== _) {
                                    if (n = u.RTAdjustInfo.type, u.RTAdjustInfo.status === f || u.RTAdjustInfo.status === p) return u.RTAdjustInfo.status = p,
                                    void("rect" === n ? u._adjustRect(i, r) : "polygon" !== n && "line" !== n && "doubleline" !== n || u._adjustPolygonOrLine(i, r));
                                    u.RTAdjustInfo.status !== v ? u._checkHoverShape(t) : u._moveShape(i, r)
                                } else if (u.RTDrawInfo.status = _, "rect" === n || "line" === n || "doubleline" === n) {
                                    var s = u.RTDrawInfo.polygonArr,
                                    a = s[0].x - i,
                                    o = s[0].y - r; (5 < a || a < -5 || 5 < o || o < -5) && (s[1].x = i, s[1].y = r, "rect" === n ? u._drawRect(u.RTDrawInfo) : "line" === n ? u._drawPolygonOrLine(u.RTDrawInfo) : "doubleline" === n && u._drawDoubleline(u.RTDrawInfo))
                                } else if ("polygon" === n) {
                                    var l = u.RTDrawInfo.polygonArr.pop();
                                    l.x = i,
                                    l.y = r,
                                    u.RTDrawInfo.polygonArr.push(l),
                                    u._drawPolygonOrLine(u.RTDrawInfo)
                                }
                            }),
                            a.EventUtil.addHandler(this.drawSvg, "mouseleave",
                            function(e) {
                                u.lastHoverShape && (u.lastHoverShape._ele.style.strokeWidth = u.lastHoverShape.lineWidth, u.lastHoverShape = null),
                                u._onSvgMouseUp(e)
                            }),
                            a.EventUtil.addHandler(this.drawSvg, "mouseup",
                            function(e) {
                                u._onSvgMouseUp(e)
                            }),
                            a.EventUtil.addHandler(this.drawSvg, "dblclick",
                            function(e) {
                                e.stopPropagation();
                                var t = e || window.event,
                                i = t.offsetX,
                                r = t.offsetY;
                                u._finishPolygon(!1, i, r) || u._emitter.emit(l.
                            default.OnWndDClik, u.vOpt.index)
                            })
                        }
                    },
                    {
                        key: "_showCurShapePoint",
                        value: function(e) {
                            this.lastSelectShape && this.lastSelectShape.id != e.id && this._hideHoverGrapthPoint();
                            for (var t = e._ele.closest("g").getElementsByClassName("rtd-point"), i = 0, r = t.length; i < r; i++) t[i].style.opacity = 1;
                            this.lastSelectShape = {
                                id: e.id,
                                lineWidth: e.lineWidth,
                                _ele: e._ele
                            }
                        }
                    },
                    {
                        key: "_hideHoverGrapthPoint",
                        value: function() {
                            if (this.lastSelectShape) {
                                for (var e = this.lastSelectShape._ele.closest("g").getElementsByClassName("rtd-point"), t = 0, i = e.length; t < i; t++) e[t].style.opacity = 0;
                                this.lastSelectShape = null,
                                this._emitter.emit(l.
                            default.OnDrawingObject, {
                                    index: this.vOpt.index
                                })
                            }
                        }
                    },
                    {
                        key: "_hideAllGrapthPoint",
                        value: function() {
                            for (var e = this.drawSvgC.getElementsByClassName("rtd-point"), t = 0, i = e.length; t < i; t++) e[t].style.opacity = 0;
                            this.lastSelectShape = null
                        }
                    },
                    {
                        key: "_checkHoverShape",
                        value: function(e, t) {
                            if (! (!t && 0 != e.buttons || this.svgLastSize.width <= 0 || this.svgLastSize.height <= 0)) {
                                var r = null,
                                n = {
                                    x: e.offsetX,
                                    y: e.offsetY
                                },
                                s = -1,
                                a = {},
                                o = this;
                                if (this.RTDrawResult.every(function(e) {
                                    var t = {
                                        direction: "",
                                        mouse: "move",
                                        index: 0
                                    };
                                    if ("rect" === e.type && c.Toolkit.isPointInRect(n, e._points, t) || "polygon" === e.type && c.Toolkit.isPointInPolygon(n, e._points, t) || "line" === e.type && c.Toolkit.isPointInLine(n, e._points, t, e.arrowpos, e.arrow) || "doubleline" === e.type && c.Toolkit.isPointInDoubleline(n, e._points, t, e.arrowpos, e.arrow, e._ele.getAttribute("xoffset"), e._ele.getAttribute("yoffset"))) {
                                        if (o.lastSelectShape && o.lastSelectShape.id == e.id && "move" != t.mouse) return r = e,
                                        a = c.Toolkit.deepMerge({},
                                        t),
                                        !1;
                                        var i = c.Toolkit.getShapeDistance(n, e._points); (s < 0 || i < s) && (r = e, s = i, a = c.Toolkit.deepMerge({},
                                        t))
                                    }
                                    return ! 0
                                }), r ? this.lastSelectShape && r && this.lastSelectShape.id == r.id || (a.mouse = "move") : a.mouse = "" != this.RTDrawInfo.type ? "crosshair": "Default", this.lastMouseStyle = a, this._addSVGMouseStyle(this.drawSvg, a.mouse), this.lastHoverShape != r || this.lastHoverShape && r && this.lastHoverShape.id != r.id) if (this.lastHoverShape && (this.lastHoverShape._ele.style.strokeWidth = this.lastHoverShape.lineWidth), r) {
                                    var i = parseInt(r.lineWidth) + 1;
                                    r._ele.style.strokeWidth = i + "px",
                                    this.lastHoverShape = {
                                        id: r.id,
                                        lineWidth: r.lineWidth,
                                        _ele: r._ele
                                    }
                                } else this.lastHoverShape = null
                            }
                        }
                    }]), b);
                    function b() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, b)
                    }
                    t.
                default = y
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(334),
                    o = i(403),
                    l = (s = o) && s.__esModule ? s: {
                    default:
                        s
                    };
                    var u = "h5vp-time",
                    h = [u + "-bg-axis", u + "-bg-axis6", u + "-bg-axis5", u + "-bg-axis2", u + "-bg-axis3", u + "-bg-axis4", u + "-bg-axis3", u + "-bg-axis2", u + "-bg-axis4", u + "-bg-axis5", u + "-bg-axis2", u + "-bg-axis3"],
                    g = [10, 60, 300, 600, 1800, 3600, 10800, 21600, 86400, 432e3, 2592e3, 90.4 * 24 * 3600],
                    d = (r(c, [{
                        key: "initializer",
                        value: function() {
                            this._timeAxisBox = null,
                            this._timeAxisTranslate = null,
                            this._subLabelBox = null,
                            this._axisBtn = null,
                            this._isDragTimeAxis = !1,
                            this._offsetXTimeAxis = 0,
                            this._isDragAxisBtn = !1,
                            this._offsetYAxisBtn = 0,
                            this._isClickAxisBtn = !0,
                            this._dragStartTime = 0,
                            this._defaultLevel = 0,
                            this._curremtLevel = 0,
                            this._axisLabelContainer = null,
                            this._topTimeLabel = null,
                            this._startTime = 0,
                            this._endTime = 0,
                            this._rcdtimershaft = null,
                            this._updateTimeAxisChecker = null,
                            this._topAxisPos = 0,
                            this._topAxisOffset = 0,
                            this._thumbPos = .5
                        }
                    },
                    {
                        key: "resetVariays",
                        value: function() {
                            this._axisBtn = null,
                            this._isDragTimeAxis = !1,
                            this._offsetXTimeAxis = 0,
                            this._dragStartTime = 0,
                            this._isDragAxisBtn = !1,
                            this._offsetYAxisBtn = 0,
                            this._isClickAxisBtn = !0,
                            this._defaultLevel = 0,
                            this._curremtLevel = 0,
                            this._topTimeLabel = null,
                            this._startTime = 0,
                            this._endTime = 0,
                            this._rcdtimershaft = null,
                            this._topAxisPos = 0,
                            this._topAxisOffset = 0,
                            this._thumbPos = .5
                        }
                    },
                    {
                        key: "isShowTimeAxis",
                        value: function() {
                            return !! this._timeAxisBox
                        }
                    },
                    {
                        key: "showTimeAxis",
                        value: function(e) {
                            this.resetVariays(),
                            this.closeTimeAxis(),
                            this._rcdtimershaft = e || this.vOpt.rcdtimershaft,
                            this._defaultLevel = this._rcdtimershaft.level || 0;
                            var t = this.getVideoRange();
                            t || ((t = {}).begintime = (new Date).getTime(), t.endtime = t.begintime, this._updateTimeAxisChecker = window.setInterval(this._updateHistoryTimeAxis.bind(this), 1e3));
                            var i = t.begintime,
                            r = t.endtime;
                            this._startTime = i,
                            this._endTime = r,
                            this._createTimeAxis(i)
                        }
                    },
                    {
                        key: "updateTimeAxis",
                        value: function() {
                            this._topAxisOffset = this._timeAxisBox.offsetWidth * this._thumbPos - this._topAxisPos,
                            this._updateHistoryTimeAxis(new Date(this._topTimeLabel.innerText).getTime()),
                            this._controlAxisPositon(),
                            this._resizeDeviceName()
                        }
                    },
                    {
                        key: "_createTimeAxis",
                        value: function(e) {
                            this._timeAxisBox = document.createElement("div"),
                            this._timeAxisBox.className = u + "-axis h5Player-timeaxis-layer",
                            this._timeAxisBox.style.background = this._rcdtimershaft.backcolor,
                            this.vOpt.fatherEle.firstElementChild.appendChild(this._timeAxisBox),
                            this._axisLabelContainer = document.createElement("div"),
                            this._axisLabelContainer.className = u + "-axis-label-container",
                            this._axisLabelContainer.classList.add("" + h[this._defaultLevel]),
                            this._timeAxisBox.appendChild(this._axisLabelContainer);
                            var t = document.createElement("span"),
                            i = document.createElement("p");
                            this._topTimeLabel = i,
                            t.className = u + "-top-axis",
                            this._thumbPos = parseInt(this._rcdtimershaft.thumbpos) / 100,
                            t.style.left = parseInt(this._rcdtimershaft.thumbpos) + "%",
                            t.style.background = this._rcdtimershaft.thumbcolor,
                            this._timeAxisBox.appendChild(t);
                            var r = document.createElement("span");
                            r.className = u + "-title",
                            r.style.color = this._rcdtimershaft.captioncolor,
                            r.innerText = this.isVodPlay() ? this._videoTitle: "",
                            this._timeAxisBox.appendChild(r),
                            i.innerText = "",
                            i.className = u + "-center-label",
                            i.style.left = 100 * this._thumbPos - 50 + "%",
                            i.style.color = this._rcdtimershaft.curtimecolor,
                            this._timeAxisBox.appendChild(i),
                            this._axisBtn = document.createElement("div"),
                            this._axisBtn.className = u + "-axis-expand-botton",
                            this._axisBtn.setAttribute("title", "按住鼠标拖动"),
                            this._axisBtn.style.background = this._rcdtimershaft.backcolor,
                            this._timeAxisBox.appendChild(this._axisBtn),
                            this._controlAxisPositon(),
                            this._resizeDeviceName();
                            var n = this.getPlayPts();
                            this._timeAxisUpdate(n < e ? e: n),
                            this._addEventFn()
                        }
                    },
                    {
                        key: "_controlAxisPositon",
                        value: function() {
                            switch (this.vOpt.fatherEle.firstElementChild.style.height = "100%", this._rcdtimershaft.curPositon) {
                            case "top":
                                this._timeAxisBox.style.bottom = this.vOpt.fatherEle.firstElementChild.offsetHeight - this._timeAxisBox.offsetHeight + "px",
                                this._timeAxisBox.setAttribute("offset-y", -(this.vOpt.fatherEle.firstElementChild.offsetHeight - this._timeAxisBox.offsetHeight));
                                break;
                            case "bottom":
                                this._timeAxisBox.style.bottom = "0px",
                                this._timeAxisBox.setAttribute("offset-y", 0);
                                break;
                            case "fix":
                                this.vOpt.fatherEle.firstElementChild.style.height = this.vOpt.fatherEle.firstElementChild.offsetHeight - this._timeAxisBox.offsetHeight + "px",
                                this._timeAxisBox.style.bottom = -this._timeAxisBox.offsetHeight + "px",
                                this._axisBtn && (this._axisBtn.style.opacity = "0");
                                break;
                            default:
                                this._rcdtimershaft.curPositon >= this.vOpt.fatherEle.firstElementChild.offsetHeight - this._timeAxisBox.offsetHeight && (this._rcdtimershaft.curPositon = this.vOpt.fatherEle.firstElementChild.offsetHeight - this._timeAxisBox.offsetHeight),
                                this._timeAxisBox.style.bottom = 1 * this._rcdtimershaft.curPositon + "px",
                                this._timeAxisBox.setAttribute("offset-y", 1 * -this._rcdtimershaft.curPositon)
                            }
                        }
                    },
                    {
                        key: "_timeAxisUpdate",
                        value: function(e) {
                            var t = this._timeAxisBox.offsetWidth * this._thumbPos,
                            i = this._timeAxisBox.offsetWidth - t,
                            r = this._getScaleArray(e, this._defaultLevel, t, i, this._startTime);
                            this._subLabelBox ? this._updateBottomTime(r) : this._createBottomTime(r),
                            this._timeAxisTranslate ? this._updateTopTimeAxis(r) : this._createTopTimeAxis(r),
                            this._updateCurrentTime(e)
                        }
                    },
                    {
                        key: "_resizeDeviceName",
                        value: function() {
                            var e = this._timeAxisBox.querySelectorAll("." + u + "-title")[0];
                            e.offsetWidth >= this._timeAxisBox.offsetWidth * this._thumbPos - 100 ? e.style.opacity = "0": e.style.opacity = "1"
                        }
                    },
                    {
                        key: "_updateTopTimeAxis",
                        value: function(e) {
                            this._timeAxisTranslate.style.marginLeft = this._topAxisOffset + e.offsetbg + "px",
                            this._axisLabelContainer.style.backgroundPositionX = e.offset + this._timeAxisBox.offsetWidth * this._thumbPos % 150 + "px"
                        }
                    },
                    {
                        key: "_updateCurrentTime",
                        value: function(e) {
                            this._topTimeLabel.innerText = new Date(e).format("yyyy-MM-dd hh:mm:ss")
                        }
                    },
                    {
                        key: "_createBottomTime",
                        value: function(e) {
                            var t = document.createElement("div"),
                            i = e.arr;
                            t.className = u + "-sublabel-container",
                            this._subLabelBox = t;
                            for (var r = 0; r < i.length; r++) {
                                var n = document.createElement("span");
                                n.className = u + "-line-axis-label",
                                n.style.width = "100px",
                                n.style.left = this._timeAxisBox.offsetWidth * this._thumbPos + i[r].pos - 50 + "px",
                                n.innerText = i[r].time,
                                t.appendChild(n)
                            }
                            this._timeAxisBox.appendChild(t)
                        }
                    },
                    {
                        key: "_updateBottomTime",
                        value: function(e) {
                            try {
                                var t = e.arr,
                                i = this._timeAxisBox.querySelectorAll("." + u + "-line-axis-label");
                                if (i.length > t.length) for (var r = 0; r < i.length - t.length; r++) this._subLabelBox.removeChild(i[t.length]);
                                for (var n = 0; n < t.length; n++) {
                                    var s = i[n];
                                    if (s) s.style.left = this._timeAxisBox.offsetWidth * this._thumbPos + t[n].pos - 50 + "px",
                                    s.innerText = t[n].time;
                                    else {
                                        var a = document.createElement("span");
                                        a.className = u + "-line-axis-label",
                                        a.style.width = "100px",
                                        a.style.left = this._timeAxisBox.offsetWidth * this._thumbPos + t[n].pos - 50 + "px",
                                        a.innerText = t[n].time,
                                        this._subLabelBox.appendChild(a)
                                    }
                                }
                            } catch(e) {}
                        }
                    },
                    {
                        key: "_createTopTimeAxis",
                        value: function(e) {
                            var t = this._timeAxisBox.offsetWidth;
                            this._axisLabelContainer && (this._axisLabelContainer.style.backgroundPositionX = e.offset + t * this._thumbPos % 150 + "px"),
                            this._startTime,
                            this._timeAxisTranslate = document.createElement("div"),
                            this._timeAxisTranslate.style.height = "25px",
                            this._timeAxisTranslate.style.marginTop = "18px",
                            this._timeAxisTranslate.style.backgroundColor = this._rcdtimershaft.novodcolor,
                            this._timeAxisTranslate.className = u + "-translate-box",
                            this._timeAxisTranslate.style.left = t * this._thumbPos + "px",
                            this._timeAxisTranslate.style.width = Math.ceil(15 * (this._endTime - this._startTime) / 1e3) / (g[this._defaultLevel] / 10) + "px",
                            this._timeAxisTranslate.setAttribute("origin-width", Math.ceil(15 * (this._endTime - this._startTime) / 1e3)),
                            this._timeAxisBox.insertBefore(this._timeAxisTranslate, this._axisLabelContainer),
                            this._createVideoListDiv(this.getRecordList()),
                            this._topAxisPos = t * this._thumbPos,
                            this._topAxisOffset = 0,
                            this._timeAxisTranslate.style.marginLeft = e.offsetbg + "px"
                        }
                    },
                    {
                        key: "_createVideoListDiv",
                        value: function(e) {
                            for (var t = this._timeAxisTranslate; t.hasChildNodes();) t.removeChild(t.firstChild);
                            for (var i = this._startTime,
                            r = g[this._defaultLevel] / 10, n = 0; e && n < e.length; n++) {
                                var s, a, o = document.createElement("div");
                                o.className = u + "-block " + u + "-hasvod",
                                o.style.background = this._rcdtimershaft.vodcolor,
                                s = 15 * (e[n][1] - e[n][0]) / 1e3,
                                o.style.width = s / r + "px",
                                a = 15 * (e[n][0] - i) / 1e3,
                                o.style.left = a / r + "px",
                                o.setAttribute("origin-width", s),
                                o.setAttribute("origin-left", a),
                                this._timeAxisTranslate.appendChild(o)
                            }
                        }
                    },
                    {
                        key: "_topBackgroundUpdate",
                        value: function(e) {
                            if (this._defaultLevel = this._defaultLevel - e, this._defaultLevel < 0) this._defaultLevel = 0;
                            else if (this._defaultLevel > h.length - 1) this._defaultLevel = h.length - 1;
                            else {
                                this._emitter.emit(l.
                            default.OnTimeaxisLevel, this.vOpt.index, this._defaultLevel);
                                for (var t = g[this._defaultLevel] / 10, i = document.querySelectorAll("." + u + "-block"), r = 0; r < i.length; r++) {
                                    var n = i[r],
                                    s = n.getAttribute("origin-width") / t,
                                    a = n.getAttribute("origin-left") / t;
                                    n.style.width = s + "px",
                                    n.style.left = a + "px"
                                }
                                this._timeAxisTranslate && (this._timeAxisTranslate.style.width = this._timeAxisTranslate.getAttribute("origin-width") / t + "px"),
                                this._axisLabelContainer.classList.remove(this._axisLabelContainer.classList[1]),
                                this._axisLabelContainer.classList.add("" + h[this._defaultLevel]),
                                this._timeAxisUpdate(new Date(this._topTimeLabel.innerText).getTime())
                            }
                        }
                    },
                    {
                        key: "_addEventFn",
                        value: function() {
                            var n = this;
                            a.EventUtil.addHandler(this._axisLabelContainer, "contextmenu",
                            function(e) {
                                return e.preventDefault(),
                                e.stopPropagation(),
                                !1
                            }),
                            a.EventUtil.addHandler(this._axisLabelContainer, "mousedown",
                            function(e) {
                                e.preventDefault(),
                                e.stopPropagation();
                                var t = e || window.event;
                                n._isDragTimeAxis = !0,
                                n._offsetXTimeAxis = t.clientX,
                                n._dragStartTime = new Date(n._topTimeLabel.innerText).getTime(),
                                t.clientX
                            }),
                            a.EventUtil.addHandler(document, "mousemove",
                            function(e) {
                                if (n._isDragTimeAxis) {
                                    e.stopPropagation(),
                                    e.preventDefault();
                                    var t = (e || window.event).clientX - n._offsetXTimeAxis;
                                    t < 2 && -2 < t || n._timeAxisUpdate(n._dragStartTime - 1e3 * g[n._defaultLevel] * t / 150)
                                }
                            }),
                            a.EventUtil.addHandler(document, "mouseup",
                            function(e) {
                                if (n._isDragTimeAxis) {
                                    e.stopPropagation(),
                                    e.preventDefault();
                                    var t = e || window.event;
                                    n._isDragTimeAxis = !1;
                                    var i = t.clientX - n._offsetXTimeAxis;
                                    if (! (i < 2 && -2 < i)) {
                                        var r = new Date(n._topTimeLabel.innerText).getTime();
                                        2e3 < Math.abs(r - n._dragStartTime) && n.setPlayPts(r)
                                    }
                                }
                            }),
                            a.EventUtil.addHandler(this._axisLabelContainer, "mousewheel",
                            function(e) { (e = e || window.event).stopPropagation(),
                                e.preventDefault();
                                var t = e.wheelDelta && (0 < e.wheelDelta ? 1 : -1);
                                n._topBackgroundUpdate(t)
                            }),
                            a.EventUtil.addHandler(this._axisBtn, "mousedown",
                            function(e) { (e = e || window.event).preventDefault(),
                                e.stopPropagation(),
                                n._isClickAxisBtn = !0,
                                "fix" != n._rcdtimershaft.curPositon && (n._isDragAxisBtn = !0, n._offsetYAxisBtn = e.clientY, a.EventUtil.addHandler(document, "mousemove",
                                function(e) {
                                    if (n._isDragAxisBtn) { (e = e || window.event).stopPropagation(),
                                        e.preventDefault();
                                        var t = e.clientY - n._offsetYAxisBtn;
                                        if (! (Math.abs(t) <= 10)) {
                                            n._isClickAxisBtn = !1;
                                            var i = -(t + (1 * n._timeAxisBox.getAttribute("offset-y") || 0)),
                                            r = n.vOpt.fatherEle.firstElementChild.offsetHeight - n._timeAxisBox.offsetHeight;
                                            r < i && (i = r),
                                            i < 0 && (i = 0),
                                            n._timeAxisBox.style.bottom = i + "px",
                                            n._timeAxisBox.setAttribute("offset-y", -i),
                                            n._rcdtimershaft.curPositon = i,
                                            n._offsetYAxisBtn = e.clientY
                                        }
                                    }
                                }), a.EventUtil.addHandler(document, "mouseup",
                                function(e) {
                                    if (n._isDragAxisBtn) { (e = e || window.event).stopPropagation(),
                                        e.preventDefault(),
                                        n._isDragAxisBtn = !1;
                                        var t = n;
                                        window.setTimeout(function() {
                                            t._isClickAxisBtn = !0
                                        }.bind(n), 100)
                                    }
                                }))
                            }),
                            a.EventUtil.addHandler(this._axisBtn, "click",
                            function(e) {
                                n._isClickAxisBtn && ((e = e || window.event).preventDefault(), e.stopPropagation(), n._timeAxisBox.style.transition = "all 0.6s ease-in", "30px" == n._timeAxisBox.style.width ? (n._axisBtn.classList.remove("expand"), n._timeAxisBox.style.width = "100%", n._topTimeLabel.style.opacity = "1", n._emitter.emit(l.
                            default.OnTimeaxisLevel, n.vOpt.index, n._defaultLevel, !0)) : (n._axisBtn.classList.add("expand"), n._timeAxisBox.style.width = "30px", n._topTimeLabel.style.opacity = "0", n._emitter.emit(l.
                            default.OnTimeaxisLevel, n.vOpt.index, n._defaultLevel, !1)))
                            }),
                            this._rcdtimershaft.shrink || (this._axisBtn.classList.add("expand"), this._topTimeLabel.style.opacity = "0", this._timeAxisBox.style.width = "30px")
                        }
                    },
                    {
                        key: "_removeEventFn",
                        value: function() {
                            this._timeAxisTranslate && (a.EventUtil.removeHandler(this._timeAxisTranslate, "mousedown",
                            function(e) {
                                e.stopPropagation()
                            }), a.EventUtil.removeHandler(this._timeAxisTranslate, "mouseup",
                            function(e) {
                                e.stopPropagation()
                            }))
                        }
                    },
                    {
                        key: "closeTimeAxis",
                        value: function() {
                            return this._removeEventFn(),
                            this._timeAxisTranslate && (this._timeAxisTranslate.remove(), this._timeAxisTranslate = null),
                            this._subLabelBox && (this._subLabelBox.remove(), this._subLabelBox = null),
                            this._timeAxisBox && (this._timeAxisBox.remove(), this._timeAxisBox = null),
                            this._updateTimeAxisChecker && (window.clearInterval(this._updateTimeAxisChecker), this._updateTimeAxisChecker = null),
                            this._defaultLevel
                        }
                    },
                    {
                        key: "_updateHistoryTimeAxisRecord",
                        value: function(e) {
                            this._timeAxisTranslate && this._createVideoListDiv(e)
                        }
                    },
                    {
                        key: "_updateHistoryTimeAxis",
                        value: function(e) { ! this._isDragTimeAxis && this._timeAxisBox && (null != e && 0 !== e || (e = (new Date).getTime()), this._timeAxisUpdate(e))
                        }
                    },
                    {
                        key: "_getScaleArray",
                        value: function(e, t, i, r, n) {
                            var s = [],
                            a = this._getShowTime(t),
                            o = 1e3 * g[t],
                            l = 1e3 * [0, 0, 0, 0, 0, 0, -7200, -7200, -28800, -28800, 0, 0][t],
                            u = 0,
                            h = e;
                            if (10 == t) {
                                var d = new Date(n),
                                c = new Date(d.getFullYear(), d.getMonth(), 1);
                                l = d.getTime() - c.getTime(),
                                u = parseInt(l / o * 150),
                                h = c.getTime()
                            } else if (11 == t) {
                                var f = new Date(n),
                                p = f.getMonth(),
                                v = new Date(f.getFullYear(), p - p % 3, 1);
                                l = f.getTime() - v.getTime(),
                                u = parseInt(l / o * 150),
                                h = v.getTime()
                            } else u = parseInt((e % o - l) / o * 150),
                            h = parseInt(e + l - e % o);
                            150 < u && (u -= 150, h += o),
                            i += 37.5,
                            r += 37.5;
                            for (var m = u,
                            _ = h; m <= i; m += 150, _ -= o) s.unshift({
                                pos: 0 - m,
                                time: a(_)
                            });
                            for (m = 150 - u, _ = h + o; m <= r; m += 150, _ += o) s.push({
                                pos: m,
                                time: a(_)
                            });
                            return {
                                offset: 0 - u,
                                arr: s,
                                offsetbg: parseInt((n - e) / o * 150)
                            }
                        }
                    },
                    {
                        key: "_getShowTime",
                        value: function(e) {
                            return 9 < e ?
                            function(e) {
                                var t = new Date(e),
                                i = t.getMonth() + 1;
                                return t.getDate() < 15 || (i += 1),
                                12 < i ? t.getFullYear() + 1 + "-01": 1 == i ? t.getFullYear() + "-01": 10 <= i ? "" + i: "0" + i
                            }: 7 < e ?
                            function(e) {
                                var t = new Date(e);
                                return 0 == t.getMonth() && 1 == t.getDate() ? t.format("yyyy-MM-dd") : t.format("MM-dd")
                            }: 1 < e ?
                            function(e) {
                                var t = new Date(e);
                                return 0 == t.getHours() && 0 == t.getMinutes() ? 0 == t.getMonth() && 1 == t.getDate() ? t.format("yyyy-MM-dd hh:mm") : t.format("MM-dd hh:mm") : t.format("hh:mm")
                            }: function(e) {
                                var t = new Date(e);
                                return 0 == t.getHours() && 0 == t.getMinutes() && 0 == t.getSeconds() ? 0 == t.getMonth() && 1 == t.getDate() ? t.format("yyyy-MM-dd hh:mm:ss") : t.format("MM-dd hh:mm:ss") : t.format("hh:mm:ss")
                            }
                        }
                    }]), c);
                    function c() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, c)
                    }
                    t.
                default = d
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(334),
                    o = i(333),
                    l = i(403),
                    c = (s = l) && s.__esModule ? s: {
                    default:
                        s
                    };
                    var f = 0,
                    p = 1,
                    v = 2,
                    m = 3,
                    _ = 4,
                    g = 5,
                    y = 7,
                    u = "init",
                    h = "begin",
                    d = "drawing",
                    b = "zooming",
                    S = "end",
                    E = (r(k, [{
                        key: "initializer",
                        value: function() {
                            this._zmSvg = null,
                            this._zmSvgC = null,
                            this._zmCanvas = null,
                            this._zmTimer = null,
                            this._zmInfo = {
                                status: f,
                                ele: null,
                                rect: {},
                                move: {}
                            },
                            this._ptzInfo = {
                                status: f,
                                ele: null,
                                rect: {}
                            },
                            this._zmCvsSize = {
                                left: 0,
                                top: 0,
                                width: 0,
                                height: 0
                            },
                            this._zmSvgSize = {
                                left: 0,
                                top: 0,
                                width: 0,
                                height: 0
                            },
                            this._zmPos = {},
                            this._bPtz = !1,
                            this._bZoom = !1,
                            this._ptzStyle = {},
                            this._zmStyle = {},
                            this._zmStatus = u
                        }
                    },
                    {
                        key: "startPtz3D",
                        value: function(e) {
                            return ! (!this._videoplayer && !this.isFirstCanPlay || (this._ptzStyle = o.Toolkit.deepMerge({
                                lineWidth: "2px",
                                lineColor: "#0F0",
                                fillOpacity: 0
                            },
                            e), this._bPtz || (this._ptzInfo.status = f, this._bPtz = !0, this._zmSvg || this._initZmSvg(), this._zmSvg.style.cursor = "crosshair"), 0))
                        }
                    },
                    {
                        key: "stopPtz3D",
                        value: function() {
                            return this._zmSvgC && (this._bPtz = !1, this._ptzInfo.status = f, this._ptzInfo.ele = null, this._bPtz || this._bZoom || (this._zmSvgC.parentNode.removeChild(this._zmSvgC), this._zmSvgC = null, this._zmSvg = null)),
                            !0
                        }
                    },
                    {
                        key: "getZoomStatus",
                        value: function() {
                            return this._zmStatus
                        }
                    },
                    {
                        key: "getPtz3DStatus",
                        value: function() {
                            return this._bPtz
                        }
                    },
                    {
                        key: "stopZoomByDblclick",
                        value: function(e) {
                            this.vOpt.enableStopZoomByDblclick = e
                        }
                    },
                    {
                        key: "startZoom",
                        value: function(e) {
                            return ! (!this._videoplayer && !this.isFirstCanPlay || (this.stopIZoom(), this._zmStyle = o.Toolkit.deepMerge({
                                lineWidth: "2px",
                                lineColor: "#F00",
                                fillOpacity: 0
                            },
                            e), this._bZoom || (this._zmInfo.status = f, this._bZoom = !0, this._zmSvg || this._initZmSvg(), this._zmSvg.style.cursor = "crosshair", this._zmStatus = h, this._emitter.emit(c.
                        default.OnZoomStatusChange, this.vOpt.index, h)), 0))
                        }
                    },
                    {
                        key: "stopZoom",
                        value: function() {
                            if (this._zmSvgC) {
                                if (this._bZoom && (this.setRTSVGPosition(this._zmCvsSize), this.setVMCanvasPosition(this._zmCvsSize), this.setVideoCanvasPosition(this._zmCvsSize)), this._bZoom = !1, this._zmInfo.status = f, this._zmInfo.ele = null, this._zmSvg.style.cursor = "crosshair", this._zmTimer && (window.cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.webkitCancelRequestAnimationFrame, window.cancelAnimationFrame(this._zmTimer), this._zmTimer = null), this._zmCanvas) {
                                    this._zmCanvas.parentNode.removeChild(this._zmCanvas),
                                    this._zmCanvas = null;
                                    var e = this.vOpt.videoEle;
                                    e.style.position = "",
                                    e.style.left = "",
                                    e.style.top = "",
                                    e.style.width = "",
                                    e.style.height = ""
                                }
                                this._bPtz || this._bZoom || (this._zmSvgC.parentNode.removeChild(this._zmSvgC), this._zmSvgC = null, this._zmSvg = null),
                                this._zmStatus = u,
                                this._emitter.emit(c.
                            default.OnZoomStatusChange, this.vOpt.index, S)
                            }
                        }
                    },
                    {
                        key: "setZoomFilter",
                        value: function() {
                            var e = this.vOpt.videoEle;
                            this._zmCanvas && e && (this._zmCanvas.style.webkitFilter = e.style.webkitFilter, this._zmCanvas.style.filter = e.style.filter)
                        }
                    },
                    {
                        key: "_createZmSVGEleTag",
                        value: function(e, t) {
                            var i = document.createElementNS("http://www.w3.org/2000/svg", e);
                            return this._setZmSvgAttr(i, t),
                            i
                        }
                    },
                    {
                        key: "_setZmSvgAttr",
                        value: function(e, t) {
                            for (var i in t) e.setAttribute(i, t[i])
                        }
                    },
                    {
                        key: "_initZmSvg",
                        value: function() {
                            this._zmSvg || (this._zmSvgC = document.createElement("div"), this._zmSvgC.className = "zoom-svg-container h5Player-zooming-layer", this._zmSvgC.draggable = !0, this._zmSvg = this._createZmSVGEleTag("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                class: "zoom-svg"
                            }), this.setZoomSVGPosition(this._zmCvsSize), this._zmSvgC.appendChild(this._zmSvg), this.drawSvgC ? (o.Toolkit.insertAfter(this._zmSvgC, this.drawSvgC), this.finishDrawing()) : this._watermkC ? o.Toolkit.insertAfter(this._zmSvgC, this._watermkC) : o.Toolkit.insertAfter(this._zmSvgC, this.vOpt.displayC), this._bindZmSvgEvent())
                        }
                    },
                    {
                        key: "_initZoomCanvas",
                        value: function() {
                            this._zmCanvas || (this._zmCanvas = document.createElement("canvas"), this._zmCanvas.className = "ZoomCanvas h5Player-videozoom-layer", this.vOpt.videoC.insertBefore(this._zmCanvas, this.vOpt.displayC)),
                            this._zmTimer || (window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame, this._zmTimer = window.requestAnimationFrame(this._drawZoomVideo.bind(this)))
                        }
                    },
                    {
                        key: "_modifyZoomShape",
                        value: function(e, t) {
                            if (this._bZoom && this._zmInfo.status >= v && this._zmInfo.ele) {
                                var i = this._zmInfo.rect,
                                r = e / this._zmSvgSize.width,
                                n = t / this._zmSvgSize.height;
                                i.x1 = i.x1 * r,
                                i.y1 = i.y1 * n,
                                i.x2 = i.x2 * r,
                                i.y2 = i.y2 * n;
                                var s = "M " + i.x1 + "," + i.y1 + " " + i.x1 + "," + i.y2 + " " + i.x2 + "," + i.y2 + " " + i.x2 + "," + i.y1 + " Z";
                                this._zmInfo.ele.setAttribute("d", s)
                            }
                        }
                    },
                    {
                        key: "setZoomSVGPosition",
                        value: function(e) {
                            var t = o.Toolkit.deepMerge({},
                            e);
                            this._zmCvsSize = o.Toolkit.deepMerge({},
                            t);
                            var i = this._zmSvg;
                            if (i) {
                                var r = this._zmCanvas;
                                if (this._bZoom && this._zmStatus == b && r) {
                                    r.style.left = t.left + "px",
                                    r.style.top = t.top + "px",
                                    r.style.width = t.width + "px",
                                    r.style.height = t.height + "px",
                                    r.width = t.width,
                                    r.height = t.height;
                                    var n = Math.round(2 * t.width / 3),
                                    s = Math.round(2 * t.height / 3);
                                    t.left = t.left + n,
                                    t.top = t.top + s,
                                    t.width = t.width - n,
                                    t.height = t.height - s;
                                    var a = this.vOpt.videoEle;
                                    a.style.position = "absolute",
                                    a.style.left = t.left + "px",
                                    a.style.top = t.top + "px",
                                    a.style.width = t.width + "px",
                                    a.style.height = t.height + "px"
                                }
                                i.style.left = t.left + "px",
                                i.style.top = t.top + "px",
                                i.style.width = t.width + "px",
                                i.style.height = t.height + "px",
                                this._setZmSvgAttr(i, {
                                    width: t.width,
                                    height: t.height
                                }),
                                this._modifyZoomShape(t.width, t.height),
                                this._zmSvgSize = o.Toolkit.deepMerge({},
                                t)
                            }
                            return o.Toolkit.deepMerge({},
                            t)
                        }
                    },
                    {
                        key: "_drawZmRect",
                        value: function(e, t) {
                            var i = e.rect.x1,
                            r = e.rect.y1,
                            n = e.rect.x2,
                            s = e.rect.y2;
                            null == e.ele && this._createZoomRect(e, t),
                            this._setZmSvgAttr(e.ele, {
                                d: "M " + i + "," + r + " " + i + "," + s + " " + n + "," + s + " " + n + "," + r + " Z"
                            })
                        }
                    },
                    {
                        key: "_createZoomRect",
                        value: function(e, t) {
                            t = t || {},
                            e.ele = this._createZmSVGEleTag("path", {
                                style: " fill:" + t.lineColor + "; fill-opacity:" + t.fillOpacity + "; stroke-width: " + t.lineWidth + "; stroke: " + t.lineColor
                            }),
                            this._zmSvg.appendChild(e.ele)
                        }
                    },
                    {
                        key: "_adjustZmRect",
                        value: function(e, t) {
                            if (this._bZoom && (this._zmInfo.status == _ || this._zmInfo.status == g)) {
                                var i = this._zmInfo.rect,
                                r = i.direction,
                                n = this._zmInfo.move;
                                if ("x" === r && e != n.x) i.x2 = i.x2 + e - n.x;
                                else if ("y" === r && t != n.y) i.y2 = i.y2 + t - n.y;
                                else {
                                    if ("xy" !== r || e == n.x && t == n.y) return;
                                    i.x2 = i.x2 + e - n.x,
                                    i.y2 = i.y2 + t - n.y
                                }
                                i.x2 > this._zmSvgSize.width ? i.x2 = this._zmSvgSize.width: i.x2 < 0 && (i.x2 = 0),
                                i.y2 > this._zmSvgSize.height ? i.y2 = this._zmSvgSize.height: i.y2 < 0 && (i.y2 = 0),
                                this._zmInfo.move = {
                                    x: e,
                                    y: t
                                },
                                this._drawZmRect(this._zmInfo)
                            }
                        }
                    },
                    {
                        key: "_calMoveXY",
                        value: function(e, t, i, r) {
                            var n = i - t.x,
                            s = r - t.y,
                            a = this._zmSvgSize.width,
                            o = this._zmSvgSize.height,
                            l = Math.max(e.x1, e.x2),
                            u = Math.max(e.y1, e.y2),
                            h = Math.min(e.x1, e.x2),
                            d = Math.min(e.y1, e.y2);
                            return a < l + n ? n = a - l: h + n < 0 && (n = 0 - h),
                            o < u + s ? s = o - u: d + s < 0 && (s = 0 - d),
                            {
                                xGap: n,
                                yGap: s
                            }
                        }
                    },
                    {
                        key: "_moveZmRect",
                        value: function(e, t) {
                            if (this._bZoom && this._zmInfo.status == y && this._zmInfo.ele) {
                                var i = this._zmInfo.rect,
                                r = this._calMoveXY(i, this._zmInfo.move, e, t),
                                n = r.xGap,
                                s = r.yGap;
                                this._zmInfo.rect = {
                                    x1: i.x1 + n,
                                    y1: i.y1 + s,
                                    x2: i.x2 + n,
                                    y2: i.y2 + s
                                },
                                this._drawZmRect(this._zmInfo),
                                this._zmInfo.move.x = e,
                                this._zmInfo.move.y = t
                            }
                        }
                    },
                    {
                        key: "_getZoomVideoPos",
                        value: function(e) {
                            this._zmPos = {};
                            var t = this._videoWidth / this._zmSvgSize.width,
                            i = this._videoHeight / this._zmSvgSize.height;
                            e.x1 > e.x2 ? (this._zmPos.left = e.x2 * t, this._zmPos.width = (e.x1 - e.x2) * t) : (this._zmPos.left = e.x1 * t, this._zmPos.width = (e.x2 - e.x1) * t),
                            e.y1 > e.y2 ? (this._zmPos.top = e.y2 * i, this._zmPos.height = (e.y1 - e.y2) * i) : (this._zmPos.top = e.y1 * i, this._zmPos.height = (e.y2 - e.y1) * i)
                        }
                    },
                    {
                        key: "_drawZoomVideo",
                        value: function() {
                            if (this._zmCanvas) {
                                var e = this._videoplayer ? this._videoplayer.mediaElement: this.vOpt.videoEle;
                                this._zmCanvas.getContext("2d").drawImage(e, this._zmPos.left, this._zmPos.top, this._zmPos.width, this._zmPos.height, 0, 0, this._zmCvsSize.width, this._zmCvsSize.height),
                                this._zmTimer = window.requestAnimationFrame(this._drawZoomVideo.bind(this))
                            }
                        }
                    },
                    {
                        key: "_beginZoom",
                        value: function() {
                            this._getZoomVideoPos(this._zmInfo.rect),
                            this._initZoomCanvas(),
                            this._zmStatus = b;
                            var e = this.setZoomSVGPosition(this._zmCvsSize);
                            this.setRTSVGPosition(e),
                            this.setVMCanvasPosition(e),
                            this.setVideoCanvasPosition(e),
                            this.setZoomFilter(),
                            this._zmSvgC.draggable = !0,
                            this._emitter.emit(c.
                        default.OnZoomStatusChange, this.vOpt.index, b)
                        }
                    },
                    {
                        key: "_onZmSvgMouseUp",
                        value: function(e) {
                            var t = e || window.event,
                            i = t.offsetX,
                            r = t.offsetY,
                            n = this._zmSvgSize.width,
                            s = this._zmSvgSize.height;
                            if (i < 0 ? i = 0 : n < i && (i = n), r < 0 ? r = 0 : s < r && (r = s), !this._bPtz || this._ptzInfo.status != p && this._ptzInfo.status != v) if (!this._bZoom || this._zmInfo.status != p && this._zmInfo.status != v) this._bZoom && this._zmInfo.status == y ? (this._moveZmRect(i, r), this._getZoomVideoPos(this._zmInfo.rect), this._zmInfo.status = m, this._zmSvgC.draggable = !0) : !this._bZoom || this._zmInfo.status != _ && this._ptzInfo.status != g || (this._adjustZmRect(i, r), this._getZoomVideoPos(this._zmInfo.rect), this._zmInfo.status = m, this._zmSvgC.draggable = !0);
                            else {
                                if (Math.abs(i - this._zmInfo.rect.x1) < 1 && Math.abs(r - this._zmInfo.rect.y1) < 1) return void(this._zmInfo.status = f);
                                this._zmInfo.status = m,
                                this._zmInfo.rect.x2 = i,
                                this._zmInfo.rect.y2 = r,
                                this._drawZmRect(this._zmInfo, this._zmStyle),
                                this._beginZoom()
                            } else {
                                if (0 < n && 0 < s) {
                                    var a = this._ptzInfo.rect,
                                    o = -1,
                                    l = 0,
                                    u = 0,
                                    h = 0,
                                    d = 0;
                                    d = a.y1 > a.y2 ? (h = a.y2 / s, (a.y1 - a.y2) / s) : (h = a.y1 / s, (a.y2 - a.y1) / s),
                                    a.x1 == a.x2 && a.y1 == a.y2 ? (o = 2, l = a.x1 / n) : u = a.x1 > a.x2 ? (o = 1, l = a.x2 / n, (a.x1 - a.x2) / n) : (o = 0, l = a.x1 / n, (a.x2 - a.x1) / n),
                                    this.vOpt.enablePtzMotion && this.ptzControl3d(o, l, h, u, d),
                                    this._emitter.emit(c.
                                default.OnPTZControl3DEvent, this.vOpt.index, o, l, h, u, d, this.vOpt.enablePtzMotion),
                                    this._zmSvgC.draggable = !0
                                }
                                this._ptzInfo.ele && this._zmSvg.removeChild(this._ptzInfo.ele),
                                this._ptzInfo.ele = null,
                                this._ptzInfo.status = f
                            }
                        }
                    },
                    {
                        key: "_getAdjustRectPoint",
                        value: function(e) {
                            var t = this._zmInfo.rect,
                            i = t.x1,
                            r = t.y1,
                            n = t.x2,
                            s = t.y2;
                            this._zmInfo.rect.direction = e.direction,
                            0 === e.index || 3 === e.index ? i < n && (this._zmInfo.rect.x1 = n, this._zmInfo.rect.x2 = i) : 1 !== e.index && 2 !== e.index || n < i && (this._zmInfo.rect.x1 = n, this._zmInfo.rect.x2 = i),
                            0 === e.index || 1 === e.index ? r < s && (this._zmInfo.rect.y1 = s, this._zmInfo.rect.y2 = r) : 2 !== e.index && 3 !== e.index || s < r && (this._zmInfo.rect.y1 = s, this._zmInfo.rect.y2 = r)
                        }
                    },
                    {
                        key: "_checkZoomStatus",
                        value: function(e, t) {
                            if (this._bZoom && this._zmInfo.status == m) {
                                var i = {
                                    direction: "",
                                    mouse: "default",
                                    index: 0
                                },
                                r = {
                                    x: e.offsetX,
                                    y: e.offsetY
                                },
                                n = this._zmInfo.rect,
                                s = [{
                                    x: n.x1,
                                    y: n.y1
                                },
                                {
                                    x: n.x2,
                                    y: n.y2
                                }];
                                o.Toolkit.isPointInRect(r, s, i) && t && (this._zmSvgC.draggable = !1, "move" === i.mouse ? this._zmInfo.status = y: (this._zmInfo.status = _, this._getAdjustRectPoint(i)), this._zmInfo.move.x = e.offsetX, this._zmInfo.move.y = e.offsetY),
                                this._zmSvg.style.cursor = i.mouse
                            }
                        }
                    },
                    {
                        key: "_bindZmSvgEvent",
                        value: function() {
                            var n = this;
                            a.EventUtil.addHandler(this._zmSvg, "click",
                            function(e) {
                                e.stopPropagation(),
                                n._emitter.emit(c.
                            default.OnWndClick, n.vOpt.index)
                            }),
                            a.EventUtil.addHandler(this._zmSvg, "mousedown",
                            function(e) {
                                e.stopPropagation(),
                                n._emitter.emit(c.
                            default.OnMouseDown, n.vOpt.index);
                                var t = e || window.event;
                                if (0 === t.button) {
                                    var i = t.offsetX,
                                    r = t.offsetY;
                                    n._bPtz ? (n._zmSvgC && (n._zmSvgC.draggable = !1), n._ptzInfo.status = p, n._ptzInfo.ele = null, n._ptzInfo.rect = {
                                        x1: i,
                                        y1: r,
                                        x2: i,
                                        y2: r
                                    }) : n._bZoom && (n._zmInfo.status == f ? (n._zmSvgC && (n._zmSvgC.draggable = !1), n._zmInfo.status = p, n._zmInfo.ele = null, n._zmInfo.rect = {
                                        x1: i,
                                        y1: r,
                                        x2: i,
                                        y2: r
                                    },
                                    n._zmStatus = d, n._emitter.emit(c.
                                default.OnZoomStatusChange, n.vOpt.index, d)) : n._zmInfo.status == m && n._checkZoomStatus(t, !0))
                                }
                            }),
                            a.EventUtil.addHandler(this._zmSvg, "mousemove",
                            function(e) {
                                e.stopPropagation();
                                var t = e || window.event,
                                i = t.offsetX,
                                r = t.offsetY;
                                n._bPtz && 1 == t.buttons ? n._ptzInfo.status != p && n._ptzInfo.status != v || n._ptzInfo.rect.x1 === i && n._ptzInfo.rect.y1 === r || (n._ptzInfo.status = v, n._ptzInfo.rect.x2 = i, n._ptzInfo.rect.y2 = r, n._drawZmRect(n._ptzInfo, n._ptzStyle)) : n._bZoom && 1 == t.buttons ? n._zmInfo.status == p || n._zmInfo.status == v ? (n._zmInfo.status = v, n._zmInfo.rect.x2 = i, n._zmInfo.rect.y2 = r, n._drawZmRect(n._zmInfo, n._zmStyle)) : n._zmInfo.status == _ || n._zmInfo.status == g ? (n._adjustZmRect(i, r), n._getZoomVideoPos(n._zmInfo.rect)) : n._zmInfo.status === y && (n._moveZmRect(i, r), n._getZoomVideoPos(n._zmInfo.rect)) : !n._bPtz && n._bZoom && 0 == t.buttons && n._checkZoomStatus(t, !1)
                            }),
                            a.EventUtil.addHandler(this._zmSvg, "mouseleave",
                            function(e) {
                                n._onZmSvgMouseUp(e)
                            }),
                            a.EventUtil.addHandler(this._zmSvg, "mouseup",
                            function(e) {
                                n._onZmSvgMouseUp(e)
                            }),
                            a.EventUtil.addHandler(this._zmSvg, "dblclick",
                            function(e) {
                                e.stopPropagation(),
                                n._bZoom && n.vOpt.enableStopZoomByDblclick && n._zmStatus == b ? n.stopZoom() : n._emitter.emit(c.
                            default.OnWndDClik, n.vOpt.index)
                            })
                        }
                    }]), k);
                    function k() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, k)
                    }
                    t.
                default = E
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var l = i(333);
                    var s = (r(a, [{
                        key: "createBarrage",
                        value: function(e) {
                            var t = this;
                            this._initBarrage(),
                            e && (0 < e.length ? e.forEach(function(e) {
                                t.shotBarrage(e)
                            }) : this.shotBarrage(e))
                        }
                    },
                    {
                        key: "getContainer",
                        value: function() {
                            return this._panel
                        }
                    },
                    {
                        key: "shotBarrage",
                        value: function(t) {
                            var r = this;
                            if (t.text || "string" == typeof t) {
                                var n = document.createElement("div"),
                                e = "#" + Math.floor(16777215 * Math.random()).toString(16);
                                if (n.className = (this.barrageConfig.className ? this.barrageConfig.className: "") + " barrage-item", n.style.left = this._panel.offsetWidth + "px", n.style.top = 40 + (this._panel.offsetHeight - 80) * Math.random().toFixed(2) + "px", t.top && (n.style.top = "35px"), t.rolltimes) {
                                    var i = parseInt(t.rolltimes);
                                    isFinite(i) && 1 < i && n.setAttribute("rolltimes", i)
                                }
                                var s = t.lifetime ? t.lifetime: this.barrageConfig.lifetime;
                                if (t.style) {
                                    var a = l.Toolkit.deepMerge(JSON.parse(JSON.stringify(this.barrageConfig.style)), t.style);
                                    n.style.color = a.color || e,
                                    n.style.fontSize = a.fontSize,
                                    n.style.zIndex = a.zIndex,
                                    n.style.opacity = a.opacity
                                } else n.style.color = this.barrageConfig.color || e,
                                n.style.fontSize = this.barrageConfig.style.fontSize,
                                n.style.zIndex = this.barrageConfig.style.zIndex,
                                n.style.opacity = this.barrageConfig.style.opacity;
                                n.innerText = t.text ? t.text: t,
                                this._panel.appendChild(n);
                                var o = this._panel.offsetWidth / (60 * s);
                                t.fn && (n.style.cursor = "pointer", n.addEventListener("mousedown",
                                function(e) {
                                    t.fn(r.vOpt.index, t),
                                    e.stopPropagation()
                                }), t.hoverFixed && (n.addEventListener("mouseenter",
                                function(e) {
                                    n.setAttribute("hoverFixed", 1)
                                }), n.addEventListener("mouseleave",
                                function(e) {
                                    n.setAttribute("hoverFixed", 0)
                                }))),
                                function e() {
                                    if (null != r._panel) {
                                        var t = +n.style.left.replace("px", "");
                                        if (t <= -n.offsetWidth) {
                                            var i = n.getAttribute("rolltimes") - "0";
                                            i && 1 < i ? (n.setAttribute("rolltimes", i - 1), n.style.left = r._panel.offsetWidth + "px", requestAnimationFrame(e)) : r._panel && r._panel.removeChild(n)
                                        } else n.getAttribute("hoverFixed") - "0" != 1 && (t -= o, n.style.left = t + "px"),
                                        requestAnimationFrame(e)
                                    }
                                } ()
                            }
                        }
                    },
                    {
                        key: "switchBarrage",
                        value: function(e) {
                            this._panel && (this._panel.style.visibility = e ? "visible": "hidden")
                        }
                    },
                    {
                        key: "closeBarrage",
                        value: function() {
                            this._panel && (this.vOpt.videoC.removeChild(this._panel), this._panel = null)
                        }
                    },
                    {
                        key: "_initBarrage",
                        value: function() {
                            null == this._panel && (this._panel = document.createElement("div"), this._panel.className = "h5Player-barrage-layer h5Player-layer-common", this._panel.draggable = !0, this.vOpt.videoC.appendChild(this._panel))
                        }
                    }]), a);
                    function a(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, a);
                        this._panel = null,
                        this.vOpt = e,
                        this.barrageConfig = l.Toolkit.deepMerge({
                            style: {
                                color: "",
                                fontSize: "16px",
                                zIndex: 1,
                                opacity: 1
                            },
                            lifetime: 5,
                            enableBarrage: !0
                        },
                        e.Barrage)
                    }
                    t.
                default = s
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(334),
                    o = i(333),
                    l = i(403); (s = l) && s.__esModule;
                    var u = (r(h, [{
                        key: "initializer",
                        value: function() {
                            this._izmRation = 1,
                            this._izmEnable = !1,
                            this._izmOffset = null,
                            this._izmOrigin = null,
                            this._izmnClient = null,
                            this._isDragIzmLayer = !1,
                            this._izmC = null
                        }
                    },
                    {
                        key: "startIZoom",
                        value: function() {
                            if (!this.isFirstCanPlay) return ! 1;
                            this.finishDrawing(),
                            this.stopZoom(),
                            null == this._izmC && (this._izmC = document.createElement("div"), this._izmC.className = "h5Player-layer-common h5Player-izooming-layer", this._izmC.draggable = !0, this._izmC.classList.add("openhand_cursor"), o.Toolkit.insertAfter(this._izmC, this.vOpt.displayC), this._izmBindEvent()),
                            this._izmEnable = !0,
                            this.checkSteplessZoomZoomBtnStatus()
                        }
                    },
                    {
                        key: "stopIZoom",
                        value: function() {
                            this._izmOffset = null,
                            this._izmOrigin = null,
                            this._izmEnable = !1,
                            this._izmnClient = null,
                            this._isDragIzmLayer = !1,
                            this._izmRation = 1,
                            this.vOpt.displayC.style.transform = "",
                            this.vOpt.videoC.style.overflow = "",
                            this._izmC && (this._izmC.parentNode.removeChild(this._izmC), this._izmC = null),
                            this.checkSteplessZoomZoomBtnStatus()
                        }
                    },
                    {
                        key: "getIZoomStatus",
                        value: function() {
                            return this._izmEnable
                        }
                    },
                    {
                        key: "resetIZoomOrigin",
                        value: function(e, t, i, r) {
                            var n = this._izmOrigin;
                            if (! (null == n || this._izmRation <= 1 || e === i && t === r)) {
                                n.x = n.x * i / e,
                                n.y = n.y * r / t;
                                var s = n.x.toFixed(2) + "px " + n.y.toFixed(2) + "px";
                                this.vOpt.displayC.style.transformOrigin = s,
                                this._izmC.style.transformOrigin = s
                            }
                        }
                    },
                    {
                        key: "_resetiZoom",
                        value: function() {
                            this._izmEnable && (this._izmRation = 1, this.vOpt.displayC.style.transform = "", this.vOpt.videoC.style.overflow = "")
                        }
                    },
                    {
                        key: "_izmBindEvent",
                        value: function() {
                            var t = this;
                            a.EventUtil.addHandler(this._izmC, "mousewheel", this._izmScrollFunc.bind(this)),
                            a.EventUtil.addHandler(this._izmC, "mousedown",
                            function(e) {
                                t._izmOffset = {
                                    x: e.offsetX,
                                    y: e.offsetY
                                },
                                0 === (e = e || window.event).button ? (t._izmC.classList.remove("openhand_cursor"), t._izmC.classList.add("closehand_cursor"), e.stopPropagation(), t._isDragIzmLayer = !0, t._izmnClient = {
                                    x: e.clientX,
                                    y: e.clientY
                                }) : t._resetiZoom()
                            }),
                            a.EventUtil.addHandler(this._izmC, "mousemove",
                            function(e) {
                                t._isDragIzmLayer && ((e = e || window.event).stopPropagation(), t._izmMoveOrigin(e))
                            }),
                            a.EventUtil.addHandler(this._izmC, "mouseleave",
                            function(e) {
                                t._onIzmMouseup(e)
                            }),
                            a.EventUtil.addHandler(this._izmC, "mouseup",
                            function(e) {
                                t._onIzmMouseup(e)
                            })
                        }
                    },
                    {
                        key: "_izmMoveOrigin",
                        value: function(e) {
                            var t = this._izmOrigin;
                            if (! (null == t || this._izmRation <= 1)) {
                                var i = this._izmnClient,
                                r = e.clientX - i.x,
                                n = e.clientY - i.y;
                                if (! (r <= 1 && -1 <= r && n <= 1 && -1 <= n)) {
                                    r /= this._izmRation - 1,
                                    n /= this._izmRation - 1;
                                    var s = this.vOpt,
                                    a = s.videoC.getBoundingClientRect(),
                                    o = parseInt(s.videoC.style.borderWidth || "0"),
                                    l = a.left - o,
                                    u = a.top - o,
                                    h = a.right - o,
                                    d = a.bottom - o,
                                    c = this._izmC.getBoundingClientRect(),
                                    f = 0,
                                    p = 0;
                                    0 < r ? (f = l - c.left) < r && (r = 0 < f ? f: 0) : r < (f = h - c.right) && (r = f < 0 ? f: 0),
                                    0 < n ? (p = u - c.top) < n && (n = 0 < p ? p: 0) : n < (p = d - c.bottom) && (n = p < 0 ? p: 0),
                                    t.x -= r,
                                    t.y -= n;
                                    var v = t.x.toFixed(2) + "px " + t.y.toFixed(2) + "px";
                                    this.vOpt.displayC.style.transformOrigin = v,
                                    this._izmC.style.transformOrigin = v,
                                    this._izmnClient = {
                                        x: e.clientX,
                                        y: e.clientY
                                    }
                                }
                            }
                        }
                    },
                    {
                        key: "_onIzmMouseup",
                        value: function(e) {
                            this._izmC.classList.remove("closehand_cursor"),
                            this._izmC.classList.add("openhand_cursor"),
                            this._isDragIzmLayer && (e = e || window.event, this._isDragIzmLayer = !1, this._izmMoveOrigin(e))
                        }
                    },
                    {
                        key: "_izmScrollFunc",
                        value: function(e) {
                            if ((e = e || window.event).preventDefault(), e.stopPropagation(), this._izmEnable) {
                                if (10 < this._izmRation && (this._izmRation = 10), e.wheelDelta && 0 < e.wheelDelta || e.detail && 0 < e.detail) {
                                    if (10 == this._izmRation) return;
                                    if (this._izmRation += .5, 10 < this._izmRation && (this._izmRation = 10), null == this._izmOffset) {
                                        var t = this._izmC.getBoundingClientRect();
                                        this._izmOffset = {
                                            x: parseInt((t.right - t.left) / 2),
                                            y: parseInt((t.bottom - t.top) / 2)
                                        }
                                    }
                                    var i = this._izmOrigin = {
                                        x: this._izmOffset.x,
                                        y: this._izmOffset.y
                                    },
                                    r = i.x + "px " + i.y + "px";
                                    this._izmC.style.transformOrigin = r,
                                    this.vOpt.displayC.style.transformOrigin = r
                                } else {
                                    if (1 == this._izmRation) return;
                                    this._izmRation -= .5,
                                    this._izmRation < 1 && (this._izmRation = 1)
                                }
                                this.vOpt.displayC.style.transform = "scale(" + this._izmRation + ")",
                                this._izmC.style.transform = "scale(" + this._izmRation + ")",
                                this._izmC.draggable = this._izmRation <= 1,
                                this.vOpt.videoC.style.overflow = this._izmRation <= 1 ? "": "hidden",
                                this.showOrHideRightMenu(!1)
                            }
                        }
                    }]), h);
                    function h() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, h)
                    }
                    t.
                default = u
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(346),
                    o = ((s = a) && s.__esModule, i(412)),
                    l = i(352);
                    var u = (r(h, null, [{
                        key: "isSupported",
                        value: function() {
                            try {
                                return void 0 === self.WebSocket && window && void 0 === window.WebSocket && (self.WebSocket = window.WebSocket),
                                void 0 !== self.WebSocket
                            } catch(e) {
                                return ! 1
                            }
                        }
                    }]), r(h, [{
                        key: "destroy",
                        value: function() {
                            this._ws && this.abort(),
                            this._status = o.ControllerStatus.kIdle,
                            this._onError = null,
                            this._onComplete = null,
                            this._onCommand = null
                        }
                    },
                    {
                        key: "isWorking",
                        value: function() {
                            return this._status === o.ControllerStatus.kConnecting || this._status === o.ControllerStatus.kBuffering
                        }
                    },
                    {
                        key: "open",
                        value: function(e) {
                            e = e || this._url;
                            try {
                                var t = this._ws = new self.WebSocket(e);
                                return t.binaryType = "arraybuffer",
                                t.onopen = this._onWebSocketOpen.bind(this),
                                t.onclose = this._onWebSocketClose.bind(this),
                                t.onmessage = this._onWebSocketMessage.bind(this),
                                t.onerror = this._onWebSocketError.bind(this),
                                this._status = o.ControllerStatus.kConnecting,
                                !0
                            } catch(e) {
                                this._clearResouse("open"),
                                this._status = o.ControllerStatus.kError;
                                var i = {
                                    code: e.code,
                                    msg: e.message
                                };
                                if (!this._onError) throw new l.RuntimeException(i.msg);
                                return this._onError(o.ControllerErrors.EXCEPTION, i),
                                !1
                            }
                        }
                    },
                    {
                        key: "_send",
                        value: function(e, t) {
                            var i = this._ws;
                            if (i && 1 === i.readyState) {
                                var r = e;
                                "string" == typeof r && (r = JSON.parse(r));
                                var n = ++this._id;
                                r._innerid = "_" + n,
                                this._cmdCallback[r.name + r._innerid] = t,
                                i.send(JSON.stringify(r))
                            } else {
                                "function" == typeof t && t({
                                    error: -1,
                                    message: "websocketError - " + (i ? i.readyState: "ws is null")
                                }),
                                this._clearResouse("send"),
                                this._status = o.ControllerStatus.kError;
                                var s = {
                                    code: -1,
                                    msg: "Unsupported WebSocket readyState while sending"
                                };
                                if (!this._onError) throw new l.RuntimeException(s.msg);
                                this._onError(o.ControllerErrors.EXCEPTION, s)
                            }
                        }
                    },
                    {
                        key: "abort",
                        value: function() {
                            var e = this._ws; ! e || 0 !== e.readyState && 1 !== e.readyState || (this._requestAbort = !0, e.close()),
                            this._ws = null,
                            this._status = o.ControllerStatus.kComplete
                        }
                    },
                    {
                        key: "listObject",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "ListObject",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "queryRecord",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "QueryRecord",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "startServerRecord",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "StartServerRecord",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "stopServerRecord",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "StopServerRecord",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "startTalkback",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "StartTalkBack",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "stopTalkback",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "StopTalkBack",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "getTalkbackMode",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "GetTalkBackMode",
                                param: e
                            };
                            return this._status === o.ControllerStatus.kConnecting ? this._commandArr.push({
                                cmd: i,
                                onresponse: t
                            }) : this._send(i, t),
                            !0
                        }
                    },
                    {
                        key: "_onWebSocketOpen",
                        value: function(e) {
                            this._status = o.ControllerStatus.kBuffering;
                            for (var t = this._commandArr.pop(); t;) this._send(t.cmd, t.onresponse),
                            t = this._commandArr.pop()
                        }
                    },
                    {
                        key: "_onWebSocketClose",
                        value: function(e) {
                            this._clearResouse("close"),
                            !0 !== this._requestAbort ? (this._status = o.ControllerStatus.kComplete, this._onComplete && this._onComplete()) : this._requestAbort = !1
                        }
                    },
                    {
                        key: "_onWebSocketMessage",
                        value: function(e) {
                            "string" == typeof e.data && this._onCommandResponse(e.data)
                        }
                    },
                    {
                        key: "_onCommandResponse",
                        value: function(e) {
                            var t = JSON.parse(e),
                            i = t.name + t._innerid,
                            r = this._cmdCallback[i];
                            "function" == typeof r && r(t.param, t.rederved),
                            delete this._cmdCallback[i],
                            this._onCommand && this._onCommand(t)
                        }
                    },
                    {
                        key: "_onWebSocketError",
                        value: function(e) {
                            this._clearResouse("error"),
                            this._status = o.ControllerStatus.kError;
                            var t = {
                                code: e.code,
                                msg: e.message
                            };
                            if (!this._onError) throw new l.RuntimeException(t.msg);
                            this._onError(o.ControllerErrors.EXCEPTION, t)
                        }
                    },
                    {
                        key: "_clearResouse",
                        value: function(e) {
                            for (var t = this._commandArr.pop(); t;)"function" == typeof t.onresponse && t.onresponse({
                                error: -1,
                                message: "websocketError - " + e
                            }),
                            t = this._commandArr.pop();
                            for (var i in this._cmdCallback) {
                                var r = this._cmdCallback[i];
                                "function" == typeof r && r({
                                    error: -1,
                                    message: "websocketError - " + e
                                })
                            }
                            this._cmdCallback = {}
                        }
                    },
                    {
                        key: "type",
                        get: function() {
                            return this._type
                        }
                    },
                    {
                        key: "status",
                        get: function() {
                            return this._status
                        }
                    },
                    {
                        key: "onCommand",
                        get: function() {
                            return this._onCommand
                        },
                        set: function(e) {
                            this._onCommand = e
                        }
                    },
                    {
                        key: "onError",
                        get: function() {
                            return this._onError
                        },
                        set: function(e) {
                            this._onError = e
                        }
                    },
                    {
                        key: "onComplete",
                        get: function() {
                            return this._onComplete
                        },
                        set: function(e) {
                            this._onComplete = e
                        }
                    }]), h);
                    function h(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, h),
                        this.TAG = "WebSocketController",
                        this._type = "websocket-controller",
                        this._status = o.ControllerStatus.kIdle,
                        this._onError = null,
                        this._onComplete = null,
                        this._onCommand = null,
                        this._ws = null,
                        this._requestAbort = !1,
                        this._commandArr = [],
                        this._id = 0,
                        this._cmdCallback = {},
                        this._url = e
                    }
                    t.
                default = u
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    }),
                    t.ControllerErrors = t.ControllerStatus = void 0;
                    i(352),
                    t.ControllerStatus = {
                        kIdle: 0,
                        kConnecting: 1,
                        kBuffering: 2,
                        kError: 3,
                        kComplete: 4
                    },
                    t.ControllerErrors = {
                        OK: "OK",
                        EXCEPTION: "Exception",
                        HTTP_STATUS_CODE_INVALID: "HttpStatusCodeInvalid",
                        CONNECTING_TIMEOUT: "ConnectingTimeout"
                    }
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    i(333);
                    var s = (r(a, [{
                        key: "createBarrage",
                        value: function(e, t) {
                            var i = parseInt(e);
                            return i < 0 || i >= this.videos.length || !this.videos[i] || !this.opt.enableBarrage ? (this._showDebuggInfo("Barrage() param error!"), !1) : this.videos[i].Barrage.createBarrage(t)
                        }
                    },
                    {
                        key: "getBarrageContainer",
                        value: function(e) {
                            var t = parseInt(e);
                            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("Barrage() param error!"), !1) : this.videos[t].Barrage.getContainer()
                        }
                    },
                    {
                        key: "shotBarrage",
                        value: function(e, t) {
                            var i = parseInt(e);
                            return i < 0 || i >= this.videos.length || !this.videos[i] || !this.opt.enableBarrage ? (this._showDebuggInfo("Barrage() param error!"), !1) : this.videos[i].Barrage.shotBarrage(t)
                        }
                    },
                    {
                        key: "closeBarrage",
                        value: function(e) {
                            var t = parseInt(e);
                            return t < 0 || t >= this.videos.length || !this.videos[t] ? (this._showDebuggInfo("Barrage() param error!"), !1) : this.videos[t].Barrage.closeBarrage()
                        }
                    },
                    {
                        key: "switchBarrage",
                        value: function(e, t) {
                            var i = parseInt(e);
                            return i < 0 || i >= this.videos.length || !this.videos[i] ? (this._showDebuggInfo("Barrage() param error!"), !1) : this.videos[i].Barrage.switchBarrage(t)
                        }
                    },
                    {
                        key: "enableBarrage",
                        set: function(e) {
                            if (this.opt.enableBarrage = e, this.opt.enableBarrage);
                            else for (var t = 0,
                            i = this.videos.length; t < i; t++) this.videos[t].Barrage.closeBarrage()
                        },
                        get: function() {
                            return this.opt.enableBarrage || !1
                        }
                    }]), a);
                    function a() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, a)
                    }
                    t.
                default = s
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(412),
                    o = i(355),
                    l = (s = o) && s.__esModule ? s: {
                    default:
                        s
                    };
                    var u = (r(h, [{
                        key: "initializer",
                        value: function(e) {
                            this._exStatus = a.ControllerStatus.kIdle,
                            this._exWS = null,
                            this._exCommandArr = [],
                            this._exId = 0,
                            this._exCmdCallback = {},
                            this._exUrl = e,
                            this._processname = "",
                            l.
                        default.chrome ? this._processname = "chrome.exe": l.
                        default.msedge ? this._processname = "MicroftEdgeCP.exe": l.
                        default.msie && (this._processname = "iexplore.exe")
                        }
                    },
                    {
                        key: "destroy",
                        value: function() {
                            this._exWS && (this._exAbort(), this._exWS = null),
                            this._exStatus = a.ControllerStatus.kIdle
                        }
                    },
                    {
                        key: "_exOpen",
                        value: function(e) {
                            if (this._exWS) return ! 0;
                            e = e || this._exUrl;
                            try {
                                var t = this._exWS = new window.WebSocket(e);
                                return t.binaryType = "arraybuffer",
                                t.onopen = this._onExwsOpen.bind(this),
                                t.onclose = this._onExwsClose.bind(this),
                                t.onmessage = this._onExwsMessage.bind(this),
                                t.onerror = this._onExwsError.bind(this),
                                this._exStatus = a.ControllerStatus.kConnecting,
                                !0
                            } catch(e) {
                                return this._exClearResouse(),
                                this._exStatus = a.ControllerStatus.kError,
                                !1
                            }
                        }
                    },
                    {
                        key: "_exSend",
                        value: function(e, t, i) {
                            if (i && !this._exWS && this._exOpen(), this._exWS && this._exStatus === a.ControllerStatus.kConnecting) this._exCommandArr.push({
                                cmd: e,
                                onresponse: t
                            });
                            else if (this._exWS && this._exStatus == a.ControllerStatus.kBuffering) {
                                var r = e;
                                "string" == typeof r && (r = JSON.parse(r));
                                var n = ++this._exId;
                                r._innerid = "_" + n,
                                this._exCmdCallback[r.name + r._innerid] = t,
                                this._exWS.send(JSON.stringify(r))
                            } else "function" == typeof t && t({
                                error: -1,
                                message: "websocketError"
                            }),
                            this._exClearResouse(),
                            this._exStatus = a.ControllerStatus.kError
                        }
                    },
                    {
                        key: "_exAbort",
                        value: function() {
                            var e = this._exWS; ! e || 0 !== e.readyState && 1 !== e.readyState || e.close(),
                            this._exClearResouse(),
                            this._exStatus = a.ControllerStatus.kComplete
                        }
                    },
                    {
                        key: "_onExwsOpen",
                        value: function(e) {
                            this._exStatus = a.ControllerStatus.kBuffering;
                            for (var t = this._exCommandArr.pop(); t;) this._exSend(t.cmd, t.onresponse, !1),
                            t = this._exCommandArr.pop()
                        }
                    },
                    {
                        key: "_onExwsClose",
                        value: function(e) {
                            this._exClearResouse(),
                            this._exStatus = a.ControllerStatus.kComplete
                        }
                    },
                    {
                        key: "_onExwsMessage",
                        value: function(e) {
                            "string" == typeof e.data && this._onCommandResponseEx(e.data)
                        }
                    },
                    {
                        key: "_onCommandResponseEx",
                        value: function(e) {
                            var t = JSON.parse(e),
                            i = t.name + t._innerid,
                            r = this._exCmdCallback[i];
                            "function" == typeof r && r(t.param, t.rederved),
                            delete this._exCmdCallback[i]
                        }
                    },
                    {
                        key: "_onExwsError",
                        value: function(e) {
                            this._exClearResouse(),
                            this._exStatus = a.ControllerStatus.kError
                        }
                    },
                    {
                        key: "_exClearResouse",
                        value: function() {
                            for (var e = this._exCommandArr.pop(); e;)"function" == typeof e.onresponse && e.onresponse({
                                error: -1,
                                message: "websocketError"
                            }),
                            e = this._exCommandArr.pop();
                            for (var t in this._exCmdCallback) {
                                var i = this._exCmdCallback[t];
                                "function" == typeof i && i({
                                    error: -1,
                                    message: "websocketError"
                                })
                            }
                            this._exCmdCallback = {},
                            this._exWS = null
                        }
                    },
                    {
                        key: "setupversion",
                        value: function(e) {
                            return this._exSend({
                                type: "command",
                                name: "GetVersion",
                                param: {}
                            },
                            e, !0),
                            !0
                        }
                    },
                    {
                        key: "getMacString",
                        value: function(e) {
                            return this._exSend({
                                type: "command",
                                name: "GetMacString",
                                param: {}
                            },
                            e, !0),
                            !0
                        }
                    },
                    {
                        key: "getCpuMemory",
                        value: function(e) {
                            return this._exSend({
                                type: "command",
                                name: "GetCpuMemory",
                                param: {}
                            },
                            e, !0),
                            !0
                        }
                    },
                    {
                        key: "getExpandScreenInfo",
                        value: function(e) {
                            return this._exSend({
                                type: "command",
                                name: "GetExpandScreenInfo",
                                param: {}
                            },
                            e, !0),
                            !0
                        }
                    },
                    {
                        key: "getRegistryInfo",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "GetRegistryInfo",
                                param: {
                                    key: e
                                }
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "runProcess",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "RunProcess",
                                param: e
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "openFileDirectory",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "OpenFileDirectory",
                                param: {
                                    filepath: e
                                }
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "moveProcessWindow",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "MoveProcessWindow",
                                param: e
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "savePicture",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "SavePicture",
                                param: e
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "copyToClipboard",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "CopyToClipboard",
                                param: {
                                    context: e
                                }
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "isFileExist",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "IsFileExist",
                                param: {
                                    filepath: e
                                }
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "removeFile",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "RemoveFile",
                                param: {
                                    filepath: e
                                }
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "openSaveFileDlg",
                        value: function(e, t) {
                            var i = e;
                            Object.assign(i, {
                                processname: this._processname,
                                titlename: document.title
                            });
                            var r = {
                                type: "command",
                                name: "OpenSaveFileDlg",
                                param: i
                            };
                            return this._exSend(r, t, !0),
                            !0
                        }
                    },
                    {
                        key: "openLocalSelectFolderDlg",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "OpenLocalSelectFolderDlg",
                                param: {
                                    defpath: e,
                                    processname: this._processname,
                                    titlename: document.title
                                }
                            };
                            return this._exSend(i, t, !0),
                            !0
                        }
                    },
                    {
                        key: "isUpdateSetup",
                        value: function(e, t) {
                            var i = {
                                type: "command",
                                name: "IsUpdate",
                                param: {
                                    versioninfo: e
                                }
                            };
                            this._exSend(i, t, !0)
                        }
                    }]), h);
                    function h(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, h),
                        this.initializer(e)
                    }
                    t.
                default = u
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(370),
                    o = (s = a) && s.__esModule ? s: {
                    default:
                        s
                    },
                    l = i(341);
                    var u = (r(h, null, [{
                        key: "supportMSEH264Playback",
                        value: function() {
                            return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"')
                        }
                    },
                    {
                        key: "supportNetworkStreamIO",
                        value: function() {
                            return o.
                        default.isSupported()
                        }
                    },
                    {
                        key: "supportNetworkStreamIOFlv",
                        value: function() {
                            var e = new o.
                        default({},
                            (0, l.createDefaultConfig)()),
                            t = e.loaderType;
                            return e.destroy(),
                            "fetch-stream-loader" == t || "xhr-moz-chunked-loader" == t
                        }
                    },
                    {
                        key: "getNetworkLoaderTypeName",
                        value: function() {
                            var e = new o.
                        default({},
                            (0, l.createDefaultConfig)()),
                            t = e.loaderType;
                            return e.destroy(),
                            t
                        }
                    },
                    {
                        key: "supportNativeMediaPlayback",
                        value: function(e) {
                            null == h.videoElement && (h.videoElement = window.document.createElement("video"));
                            var t = h.videoElement.canPlayType(e);
                            return "probably" === t || "maybe" == t
                        }
                    },
                    {
                        key: "getFeatureList",
                        value: function() {
                            var e = {
                                mseH264Playback: !1,
                                mseLiveH264Playback: !1,
                                mseLiveFlvPlayback: !1,
                                networkStreamIO: !1,
                                networkLoaderName: "",
                                nativeMP4H264Playback: !1,
                                nativeWebmVP8Playback: !1,
                                nativeWebmVP9Playback: !1
                            };
                            return e.mseH264Playback = !!h.supportMSEH264Playback(),
                            e.networkStreamIO = !!h.supportNetworkStreamIO(),
                            e.networkLoaderName = h.getNetworkLoaderTypeName(),
                            e.mseLiveFlvPlayback = e.mseFlvPlayback && e.supportNetworkStreamIOFlv(),
                            e.mseLiveH264Playback = e.mseH264Playback && e.networkStreamIO,
                            e.nativeMP4H264Playback = h.supportNativeMediaPlayback('video/mp4; codecs="avc1.42001E, mp4a.40.2"'),
                            e.nativeWebmVP8Playback = h.supportNativeMediaPlayback('video/webm; codecs="vp8.0, vorbis"'),
                            e.nativeWebmVP9Playback = h.supportNativeMediaPlayback('video/webm; codecs="vp9"'),
                            e
                        }
                    }]), h);
                    function h() { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, h)
                    }
                    t.
                default = u
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    d(i(346));
                    var s = i(333),
                    a = d(i(347)),
                    o = d(i(417)),
                    l = d(i(418)),
                    u = d(i(356)),
                    h = d(i(349));
                    function d(e) {
                        return e && e.__esModule ? e: {
                        default:
                            e
                        }
                    }
                    var c = (r(f, [{
                        key: "destroy",
                        value: function() {
                            this.unload(),
                            null != this._pcmPlayer && (this._pcmPlayer.destroy(), this._pcmPlayer = null),
                            null != this._audioCapture && (this._audioCapture.destroy(), this._audioCapture = null)
                        }
                    },
                    {
                        key: "on",
                        value: function(e, t) {
                            this._emitter.addListener(e, t)
                        }
                    },
                    {
                        key: "off",
                        value: function(e, t) {
                            this._emitter.removeListener(e, t)
                        }
                    },
                    {
                        key: "load",
                        value: function() {
                            var i = this;
                            if (this._h5msClient) {
                                var e = this._mediaDataSource.channelInfo;
                                this._h5msClient.startTalkback(e,
                                function(e) {
                                    if (console.log(e), e && 0 === e.param.error && e.msg && e.msg.playUrl && e.msg.streamId) {
                                        i._mediaDataSource.h5msClient = null;
                                        var t = i._mediaDataSource;
                                        t.url = e.msg.playUrl,
                                        t.streamId = e.msg.streamId,
                                        t.mediaType = "h5msflv",
                                        i._mediaType = "h5msflv",
                                        i._pushUrl = e.msg.pushUrl,
                                        i._internalLoad()
                                    }
                                    i._onSuccecss && i._onSuccecss(e.param.error),
                                    e && -1 === e.param.error && (e.param.error = -105e3, console.error(e)),
                                    e.param.h5ms = !0,
                                    i._onStartTalkback(e)
                                })
                            } else this._mediaDataSource.mediaType = "fmp4",
                            this._mediaType = "fmp4",
                            this._internalLoad()
                        }
                    },
                    {
                        key: "_onStartTalkback",
                        value: function(e) {}
                    },
                    {
                        key: "_internalLoad",
                        value: function() {
                            var r = this;
                            this._flvPlayer || (this._flvPlayer = new u.
                        default(this._mediaDataSource, {
                                enableaudio: !0
                            }), this._flvPlayer.on(h.
                        default.ERROR,
                            function(e, t, i) {
                                console.log("audio_player", e, t, i),
                                r._emitter.emit(h.
                            default.STARTSTREAM, i.error || -1)
                            }), this._flvPlayer.on(h.
                        default.STARTSTREAM,
                            function(e) {
                                r._emitter.emit(h.
                            default.STARTSTREAM, e)
                            }), this._flvPlayer.on(h.
                        default.ESSCRIPTDATA_ARRIVED, this._onEsScriptDataArrived.bind(this)), this._flvPlayer.on(h.
                        default.ESDATA_FRAME, this._onEsDataFrame.bind(this)), this._flvPlayer.attachMediaElement(this._mediaElement), this._flvPlayer.load(), this._enableTalk && this._h5msClient && (this._audioCapture = new l.
                        default, this._audioCapture.start(this._onAudioCaptureData.bind(this), this._onAudioCaptureError.bind(this))))
                        }
                    },
                    {
                        key: "_onEsScriptDataArrived",
                        value: function(e) {
                            if ("string" == typeof e && (e = JSON.parse(e)), e && "encodeType" == e.type && "pcm_se" == e.name) {
                                var t = "16bitInt";
                                8 == e.depth ? t = "8bitInt": 32 == e.depth && (t = "32bitInt"),
                                this._config = Object.assign({},
                                {
                                    channels: e.channel || 1,
                                    sampleRate: e.samplerate || 8e3,
                                    encoding: t
                                },
                                this._config),
                                console.log("_onEsScriptDataArrived", this._config)
                            }
                            this._enableListen && (this._pcmPlayer = new o.
                        default(this._config))
                        }
                    },
                    {
                        key: "_onEsDataFrame",
                        value: function(e, t) {
                            if ("audio" == e) {
                                if (this._enableListen && !this._pcmPlayer) {
                                    var i = "16bitInt";
                                    16 == t.depth ? i = "16bitInt": 8 == t.depth ? i = "8bitInt": 32 == t.depth && (i = "32bitInt"),
                                    this._config = Object.assign({},
                                    {
                                        channels: t.channel,
                                        sampleRate: 8e3,
                                        encoding: i
                                    },
                                    this._config),
                                    this._pcmPlayer = new o.
                                default(this._config)
                                }
                                this._pcmPlayer && this._pcmPlayer.play(t.data)
                            }
                        }
                    },
                    {
                        key: "_onAudioCaptureData",
                        value: function(e, t, i, r) {
                            this._h5msClient && this._h5msClient.InputAudioData(this._pushUrl, e.buffer,
                            function(e) {
                                0 != e.param.error && console.log("InputAudioData", e)
                            })
                        }
                    },
                    {
                        key: "_onAudioCaptureError",
                        value: function(e) {
                            console.log("_onAudioCaptureError: ", new Date, e)
                        }
                    },
                    {
                        key: "unload",
                        value: function() {
                            this._flvPlayer && (this._flvPlayer.destroy(), this._flvPlayer = null)
                        }
                    },
                    {
                        key: "uuid",
                        get: function() {
                            return this._uuid
                        }
                    },
                    {
                        key: "volume",
                        get: function() {
                            if (null != this._pcmPlayer) return this._pcmPlayer.volume
                        },
                        set: function(e) {
                            null != this._pcmPlayer && (this._pcmPlayer.volume = e)
                        }
                    },
                    {
                        key: "muted",
                        get: function() {
                            if (null != this._player) return this._player.muted
                        },
                        set: function(e) {
                            null != this._player && (this._player.muted = e)
                        }
                    },
                    {
                        key: "mediaInfo",
                        get: function() {}
                    },
                    {
                        key: "statisticsInfo",
                        get: function() {
                            return {}
                        }
                    }]), f);
                    function f(e, t) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, f),
                        this.TAG = "audioplayer",
                        this._pcmPlayer = null,
                        this._audioCapture = null,
                        this._config = {},
                        Object.assign(this._config, t),
                        this._h5msClient = e.h5msClient;
                        var i = e.channelInfo;
                        i.command = "StartTalkback",
                        i._enableAudio = !0,
                        i.streamtype = "live",
                        3 == i.mode ? (this._enableListen = !0, this._enableTalk = !0) : 2 == i.mode ? (this._enableListen = !1, this._enableTalk = !0) : (i.mode = 1, this._enableListen = !0, this._enableTalk = !1),
                        this._emitter = new a.
                    default,
                        this._uuid = s.Toolkit.getUuid(),
                        this._mediaDataSource = e,
                        this._flvPlayer = null,
                        this._mediaType = "",
                        this._mediaElement = document.createElement("audio")
                    }
                    t.
                default = c
                },
                function(e, t, i) {
                    "use strict";
                    function r(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var n = (function(e, t, i) {
                        return t && r(e.prototype, t),
                        i && r(e, i),
                        e
                    } (s, [{
                        key: "getMaxValue",
                        value: function() {
                            var e = {
                                "8bitInt": 128,
                                "16bitInt": 32768,
                                "32bitInt": 2147483648,
                                "32bitFloat": 1
                            };
                            return e[this.option.encoding] ? e[this.option.encoding] : e["16bitInt"]
                        }
                    },
                    {
                        key: "getTypedArray",
                        value: function() {
                            var e = {
                                "8bitInt": Int8Array,
                                "16bitInt": Int16Array,
                                "32bitInt": Int32Array,
                                "32bitFloat": Float32Array
                            };
                            return e[this.option.encoding] ? e[this.option.encoding] : e["16bitInt"]
                        }
                    },
                    {
                        key: "createContext",
                        value: function() {
                            this.audioCtx = new(window.AudioContext || window.webkitAudioContext),
                            this.gainNode = this.audioCtx.createGain(),
                            this.gainNode.gain.value = 10,
                            this.gainNode.connect(this.audioCtx.destination),
                            this.startTime = this.audioCtx.currentTime
                        }
                    },
                    {
                        key: "isTypedArray",
                        value: function(e) {
                            return e.byteLength && e.constructor == ArrayBuffer || e.byteLength && e.buffer && e.buffer.constructor == ArrayBuffer
                        }
                    },
                    {
                        key: "feed",
                        value: function(e) {
                            if (this.isTypedArray(e)) {
                                e = this.getFormatedValue(e);
                                var t = new Float32Array(this.samples.length + e.length);
                                t.set(this.samples, 0),
                                t.set(e, this.samples.length),
                                this.samples = t
                            }
                        }
                    },
                    {
                        key: "getFormatedValue",
                        value: function(e) {
                            e = new this.typedArray(e.buffer || e);
                            var t, i = new Float32Array(e.length);
                            for (t = 0; t < e.length; t++) i[t] = e[t] / this.maxValue;
                            return i
                        }
                    },
                    {
                        key: "destroy",
                        value: function() {
                            this.interval && clearInterval(this.interval),
                            this.samples = null,
                            this.audioCtx.close(),
                            this.audioCtx = null
                        }
                    },
                    {
                        key: "flush",
                        value: function() {
                            if (this.samples.length) {
                                var e, t, i, r, n = this.audioCtx.createBufferSource(),
                                s = this.samples.length / this.option.channels,
                                a = this.audioCtx.createBuffer(this.option.channels, s, this.option.sampleRate);
                                for (t = 0; t < this.option.channels; t++) for (e = a.getChannelData(t), i = t, r = 0; r < s; r++) e[r] = this.samples[i],
                                i += this.option.channels;
                                this.startTime < this.audioCtx.currentTime && (this.startTime = this.audioCtx.currentTime),
                                n.buffer = a,
                                n.connect(this.gainNode),
                                n.start(this.startTime),
                                this.startTime += a.duration,
                                this.samples = new Float32Array
                            }
                        }
                    },
                    {
                        key: "getTimestamp",
                        value: function() {
                            return this.audioCtx ? this.audioCtx.currentTime: 0
                        }
                    },
                    {
                        key: "play",
                        value: function(e) {
                            if (this.isTypedArray(e) && (e = this.getFormatedValue(e)).length) {
                                var t, i, r, n, s = this.audioCtx.createBufferSource(),
                                a = e.length / this.option.channels,
                                o = this.audioCtx.createBuffer(this.option.channels, a, this.option.sampleRate);
                                for (i = 0; i < this.option.channels; i++) for (t = o.getChannelData(i), r = i, n = 0; n < a; n++) t[n] = e[r],
                                r += this.option.channels;
                                this.startTime < this.audioCtx.currentTime && (this.startTime = this.audioCtx.currentTime),
                                s.buffer = o,
                                s.connect(this.gainNode),
                                s.start(this.startTime),
                                this.startTime += o.duration,
                                this.duration += o.duration
                            }
                        }
                    },
                    {
                        key: "pause",
                        value: function() {
                            "running" === this.audioCtx.state && this.audioCtx.suspend()
                        }
                    },
                    {
                        key: "resume",
                        value: function() {
                            "suspended" === this.audioCtx.state && this.audioCtx.resume()
                        }
                    },
                    {
                        key: "volume",
                        set: function(e) {
                            this.gainNode.gain.value = e
                        },
                        get: function() {
                            return this.gainNode.gain.value
                        }
                    }]), s);
                    function s(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, s),
                        a.call(this),
                        this.init(e)
                    }
                    var a = function() {
                        this.init = function(e) {
                            this.option = Object.assign({},
                            {
                                encoding: "16bitInt",
                                channels: 1,
                                sampleRate: 8e3,
                                flushingTime: 1e3
                            },
                            e),
                            this.duration = 0,
                            this.samples = new Float32Array,
                            this.flush = this.flush.bind(this),
                            this.interval = setInterval(this.flush, this.option.flushingTime),
                            this.maxValue = this.getMaxValue(),
                            this.typedArray = this.getTypedArray(),
                            this.createContext()
                        }
                    };
                    t.
                default = n
                },
                function(e, t, i) {
                    "use strict";
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                    var r = function(e, t, i) {
                        return t && n(e.prototype, t),
                        i && n(e, i),
                        e
                    };
                    function n(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var s, a = i(419),
                    o = (s = a) && s.__esModule ? s: {
                    default:
                        s
                    };
                    var l = (r(u, [{
                        key: "start",
                        value: function(e, t) {
                            this._ondata = e,
                            this._onerror = t,
                            this._context && this.destroy(),
                            void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}),
                            void 0 === navigator.mediaDevices.getUserMedia && (navigator.mediaDevices.getUserMedia = function(i) {
                                var r = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
                                return r ? new Promise(function(e, t) {
                                    r.call(navigator, i, e, t)
                                }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"))
                            }),
                            navigator.mediaDevices.getUserMedia ? navigator.mediaDevices.getUserMedia({
                                audio: !0
                            }).then(this._onMediaStream.bind(this)).
                            catch(this._onGetMediaError.bind(this)) : t && t("当前浏览器不支持音频采集功能2")
                        }
                    },
                    {
                        key: "destroy",
                        value: function() {
                            var e = this._microphone,
                            t = this._processor,
                            i = this._context;
                            t && e && (e.disconnect(), t.disconnect(), console.log("结束采集音频")),
                            i && (i.close(), this._context = null)
                        }
                    },
                    {
                        key: "_onGetMediaError",
                        value: function(e) {
                            var t;
                            switch (console.log(e), e.code || e.name) {
                            case "PERMISSION_DENIED":
                            case "PermissionDeniedError":
                                t = "用户拒绝访问麦客风";
                                break;
                            case "NOT_SUPPORTED_ERROR":
                            case "NotSupportedError":
                                t = "浏览器不支持麦客风";
                                break;
                            case "MANDATORY_UNSATISFIED_ERROR":
                            case "MandatoryUnsatisfiedError":
                                t = "找不到麦客风设备";
                                break;
                            default:
                                t = "无法打开麦克风，异常信息:" + (e.code || e.name)
                            }
                            this._onerror(t)
                        }
                    },
                    {
                        key: "_onMediaStream",
                        value: function(e) {
                            var i = this._ondata,
                            r = this._config,
                            t = this._context = new(window.AudioContext || window.webkitAudioContext),
                            n = this._microphone = t.createMediaStreamSource(e),
                            s = this._processor = t.createScriptProcessor(16384, r.channelCount, r.channelCount),
                            a = this._resampler = new o.
                        default(t.sampleRate, r.sampleRate, r.channelCount, 16384);
                            s && n && (n.connect(s), s.connect(t.destination), console.log("开始采集音频 param: ", t.sampleRate, r.channelCount), s.onaudioprocess = function(e) {
                                var t = a.resample(e.inputBuffer.getChannelData(0));
                                16 == r.sampleSize && (t = function(e) {
                                    for (var t = e.length,
                                    i = new Int16Array(t); t--;) {
                                        var r = Math.max( - 1, Math.min(1, e[t]));
                                        i[t] = r < 0 ? 32768 * r: 32767 * r
                                    }
                                    return i
                                } (t)),
                                i && i(t, r.sampleRate, r.channelCount, r.sampleSize)
                            })
                        }
                    }]), u);
                    function u(e) { !
                        function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, u),
                        this._config = Object.assign({},
                        e, {
                            sampleRate: 8e3,
                            channelCount: 1,
                            sampleSize: 16
                        }),
                        this._config.channelCount = 1,
                        this._context = null,
                        this._microphone = null,
                        this._processor = null,
                        this._ondata = null,
                        this._onerror = null,
                        this._resampler = null
                    }
                    t.
                default = l
                },
                function(e, t, i) {
                    "use strict";
                    function r(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            r.enumerable = r.enumerable || !1,
                            r.configurable = !0,
                            "value" in r && (r.writable = !0),
                            Object.defineProperty(e, r.key, r)
                        }
                    }
                    var n = (function(e, t, i) {
                        return t && r(e.prototype, t),
                        i && r(e, i),
                        e
                    } (s, [{
                        key: "initialize",
                        value: function() {
                            this.fromSampleRate == this.toSampleRate ? (this.resampler = function(e) {
                                return e
                            },
                            this.ratioWeight = 1) : (this.fromSampleRate < this.toSampleRate ? (this.linearInterpolation(), this.lastWeight = 1) : (this.multiTap(), this.tailExists = !1, this.lastWeight = 0), this.initializeBuffers(), this.ratioWeight = this.fromSampleRate / this.toSampleRate)
                        }
                    },
                    {
                        key: "bufferSlice",
                        value: function(t) {
                            try {
                                return this.outputBuffer.subarray(0, t)
                            } catch(e) {
                                try {
                                    return this.outputBuffer.length = t,
                                    this.outputBuffer
                                } catch(e) {
                                    return this.outputBuffer.slice(0, t)
                                }
                            }
                        }
                    },
                    {
                        key: "initializeBuffers",
                        value: function() {
                            this.outputBufferSize = Math.ceil(this.inputBufferSize * this.toSampleRate / this.fromSampleRate / this.channels * 1.0000004768371582) + this.channels + this.channels;
                            try {
                                this.outputBuffer = new Float32Array(this.outputBufferSize),
                                this.lastOutput = new Float32Array(this.channels)
                            } catch(e) {
                                this.outputBuffer = [],
                                this.lastOutput = []
                            }
                        }
                    },
                    {
                        key: "linearInterpolation",
                        value: function() {
                            var c = this;
                            this.resampler = function(e) {
                                var t, i, r = e.length,
                                n = c.channels,
                                s = void 0,
                                a = void 0,
                                o = void 0,
                                l = void 0,
                                u = void 0,
                                h = void 0,
                                d = void 0;
                                if (r % n != 0) throw new Error("Buffer was of incorrect sample length.");
                                if (r <= 0) return [];
                                for (t = c.outputBufferSize, i = c.ratioWeight, s = c.lastWeight, u = l = o = a = 0, h = c.outputBuffer; s < 1; s += i) for (a = 1 - (o = s % 1), c.lastWeight = s % 1, d = 0; d < c.channels; ++d) h[u++] = c.lastOutput[d] * a + e[d] * o;
                                for (s -= 1, r -= n, l = Math.floor(s) * n; u < t && l < r;) {
                                    for (a = 1 - (o = s % 1), d = 0; d < c.channels; ++d) h[u++] = e[l + (0 < d ? d: 0)] * a + e[l + (n + d)] * o;
                                    s += i,
                                    l = Math.floor(s) * n
                                }
                                for (d = 0; d < n; ++d) c.lastOutput[d] = e[l++];
                                return c.bufferSlice(u)
                            }
                        }
                    },
                    {
                        key: "multiTap",
                        value: function() {
                            var p = this;
                            this.resampler = function(e) {
                                var t, i, r = e.length,
                                n = void 0,
                                s = p.channels,
                                a = void 0,
                                o = void 0,
                                l = void 0,
                                u = void 0,
                                h = void 0,
                                d = void 0,
                                c = void 0,
                                f = void 0;
                                if (r % s != 0) throw new Error("Buffer was of incorrect sample length.");
                                if (r <= 0) return [];
                                for (t = p.outputBufferSize, n = [], i = p.ratioWeight, u = l = a = 0, h = !p.tailExists, p.tailExists = !1, d = p.outputBuffer, o = f = c = 0; o < s; ++o) n[o] = 0;
                                do {
                                    if (h) for (a = i, o = 0; o < s; ++o) n[o] = 0;
                                    else {
                                        for (a = p.lastWeight, o = 0; o < s; ++o) n[o] = p.lastOutput[o];
                                        h = !0
                                    }
                                    for (; 0 < a && l < r;) {
                                        if (! ((u = 1 + l - f) <= a)) {
                                            for (o = 0; o < s; ++o) n[o] += e[l + (0 < o ? o: 0)] * a;
                                            f += a,
                                            a = 0;
                                            break
                                        }
                                        for (o = 0; o < s; ++o) n[o] += e[l++] * u;
                                        f = l,
                                        a -= u
                                    }
                                    if (0 !== a) {
                                        for (p.lastWeight = a, o = 0; o < s; ++o) p.lastOutput[o] = n[o];
                                        p.tailExists = !0;
                                        break
                                    }
                                    for (o = 0; o < s; ++o) d[c++] = n[o] / i
                                } while ( l < r && c < t );
                                return p.bufferSlice(c)
                            }
                        }
                    },
                    {
                        key: "resample",
                        value: function(e) {
                            return this.fromSampleRate == this.toSampleRate ? this.ratioWeight = 1 : (this.fromSampleRate < this.toSampleRate ? this.lastWeight = 1 : (this.tailExists = !1, this.lastWeight = 0), this.initializeBuffers(), this.ratioWeight = this.fromSampleRate / this.toSampleRate),
                            this.resampler(e)
                        }
                    }]), s);
                    function s(e, t, i, r) {
                        if (function(e, t) {
                            if (! (e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        } (this, s), !e || !t || !i) throw new Error("Invalid settings specified for the resampler.");
                        this.resampler = null,
                        this.fromSampleRate = e,
                        this.toSampleRate = t,
                        this.channels = i || 0,
                        this.inputBufferSize = r,
                        this.initialize()
                    }
                    e.exports = n
                },
                function(e, t) {}]);